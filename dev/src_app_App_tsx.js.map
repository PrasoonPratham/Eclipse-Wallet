{"version":3,"file":"src_app_App_tsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAKA;AACA;AAKA;AAEA;AAEA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;;;;;;;AAEA;;;;;;;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AACA;;;;;;;;AAOA;AA9BA;AAAA;AAgCA;;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;;;;;;;;AAIA;AATA;;AACA;;;AAUA;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;AAIA;;;;;;;;AAGA;AAhBA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AAEA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AAAA;AAAA;;;;;;;AACA;AAGA;AATA;;AACA;AACA;;;AAFA","sources":["webpack://@coral-xyz/app-extension/./src/app/App.tsx","webpack://@coral-xyz/app-extension/./src/app/ErrorBoundary.tsx"],"sourcesContent":["import { lazy, Suspense, useMemo } from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport {\n  createApolloClient,\n  EXTENSION_HEIGHT,\n  EXTENSION_WIDTH,\n} from \"@coral-xyz/common\";\nimport { NotificationsProvider, useKeyringStoreState } from \"@coral-xyz/recoil\";\nimport {\n  BACKGROUND_BACKDROP_COLOR,\n  LIGHT_BACKGROUND_BACKDROP_COLOR,\n  useCustomTheme,\n} from \"@coral-xyz/themes\";\nimport { RecoilRoot } from \"recoil\";\n\nimport \"@fontsource/inter\";\n\nimport { WithTheme } from \"../components/common/WithTheme\";\n\nimport { ErrorBoundary } from \"./ErrorBoundary\";\n\nconst Router = lazy(() => import(\"./Router\"));\n\nimport \"@fontsource/inter/500.css\";\nimport \"@fontsource/inter/600.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nconst BACKDROP_STYLE = {\n  height: \"100vh\",\n  minHeight: `${EXTENSION_HEIGHT}px`,\n  minWidth: `${EXTENSION_WIDTH}px`,\n  background: \"red\",\n};\n\nexport default function App() {\n  //\n  // We use an extra copy of preferences in the local storage backend to avoid\n  // hitting the service worker for a slightly faster load time.\n  //\n  const pStr = window.localStorage.getItem(\"preferences\");\n  const preferences = pStr ? JSON.parse(pStr) : {};\n\n  const apolloClient = useMemo(() => createApolloClient(), []);\n\n  return (\n    <div\n      style={{\n        ...BACKDROP_STYLE,\n        background: preferences?.darkMode\n          ? BACKGROUND_BACKDROP_COLOR\n          : LIGHT_BACKGROUND_BACKDROP_COLOR,\n      }}\n    >\n      <HashRouter>\n        <RecoilRoot>\n          <ApolloProvider client={apolloClient}>\n            <WithTheme>\n              <_App />\n            </WithTheme>\n          </ApolloProvider>\n        </RecoilRoot>\n      </HashRouter>\n    </div>\n  );\n}\n\nfunction _App() {\n  useKeyringStoreState();\n  return (\n    <NotificationsProvider>\n      <ErrorBoundary>\n        <_Router />\n      </ErrorBoundary>\n    </NotificationsProvider>\n  );\n}\n\nfunction _Router() {\n  const theme = useCustomTheme();\n  return (\n    <Suspense\n      fallback={\n        <div\n          style={{\n            ...BACKDROP_STYLE,\n            background: theme.custom.colors.backgroundBackdrop,\n          }}\n        />\n      }\n    >\n      <Router />\n    </Suspense>\n  );\n}\n","import React from \"react\";\nimport type { BackgroundClient } from \"@coral-xyz/common\";\nimport { UI_RPC_METHOD_NAVIGATION_TO_DEFAULT } from \"@coral-xyz/common\";\nimport { EmptyState } from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { styles } from \"@coral-xyz/themes\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\n\ninterface State {\n  err: boolean;\n}\n\ninterface Props {\n  children?: React.ReactNode;\n  background: BackgroundClient;\n  classes: any;\n}\n\nconst useStyles = styles((theme) => {\n  return {\n    appContainer: {\n      background: theme.custom.colors.backgroundBackdrop,\n      height: \"100vh\",\n      width: \"100vw\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n    },\n  };\n});\n\nclass ErrorBoundaryWithHooks extends React.Component<Props, State> {\n  state = { err: false };\n\n  static getDerivedStateFromError() {\n    return { err: true };\n  }\n\n  componentDidCatch(error: Error, info: any) {\n    //TODO: Post to aggregation service\n    console.error(\"Global error caught\", error, info);\n  }\n\n  render(): React.ReactNode {\n    if (this.state.err) {\n      return (\n        <div className={this.props.classes.appContainer}>\n          <EmptyState\n            icon={(props: any) => <ErrorOutlineIcon {...props} />}\n            title=\"There was an error\"\n            subtitle=\"Hang tight while we work to fix it!\"\n            buttonText=\"Go back\"\n            onClick={async () => {\n              await this.props.background.request({\n                method: UI_RPC_METHOD_NAVIGATION_TO_DEFAULT,\n                params: [],\n              });\n              window.location.hash = \"#/balances\";\n              window.location.reload();\n            }}\n          />\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport function ErrorBoundary(props: { children: React.ReactNode }) {\n  const background = useBackgroundClient();\n  const classes = useStyles();\n  return (\n    //@ts-ignore\n    <ErrorBoundaryWithHooks classes={classes} background={background}>\n      {props.children}\n    </ErrorBoundaryWithHooks>\n  );\n}\n"],"names":[],"sourceRoot":""}