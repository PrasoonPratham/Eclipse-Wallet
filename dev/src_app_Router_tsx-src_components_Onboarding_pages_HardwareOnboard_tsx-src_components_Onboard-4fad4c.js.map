{"version":3,"file":"src_app_Router_tsx-src_components_Onboarding_pages_HardwareOnboard_tsx-src_components_Onboard-4fad4c.js","mappings":";;;;;;;;;;;;;;;;;;;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA;AAEA;AAaA;AACA;AAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AAEA;;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;;AAIA;AAhBA;;AACA;AACA;;;AAFA;AAkBA;AACA;AACA;AACA;AACA;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;;;;;AAAA;AACA;AAdA;;AAEA;;;AAcA;;AACA;AACA;AACA;;;;;;;AACA;;;;;;;;AAGA;AAPA;;AACA;;;AADA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AACA;AA5BA;AA8BA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAvBA;;AAEA;AAGA;;;AALA;AAyBA;;AACA;AACA;AACA;AACA;;;;;;;AAAA;;;;;;;AAAA;AACA;AALA;;AAEA;;;AAFA;AAOA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAjCA;;AAEA;AAMA;;;AARA;AAmCA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AA1DA;;AAEA;;;AAFA;AA4DA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AA7BA;;AAEA;;;AAFA;AA+BA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AA7BA;;AAEA;;;AAFA;AA+BA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;;;;;AAEA;;;;;;;;AAGA;AAlBA;;AAEA;;;AAFA;AAoBA;;AAOA;AACA;AACA;AAMA;AACA;AACA;;;;;;;AAEA;AAGA;AAtBA;;AAOA;;;AAPA;AAwBA;;AACA;AACA;AAEA;AAGA;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AACA;;;;;;;AAGA;;;;;;;AAEA;;;;;;;AAAA;AAOA;AAvBA;;AACA;;;AADA;AAyBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAnBA;AAqBA;;AACA;AACA;AAAA;;;;;;;;AACA;AAHA;;AACA;;;AADA;AAKA;AACA;AAAA;;;;;;;AAAA;AACA;AAFA;AAIA;;AACA;AACA;AAAA;;;;;;;;AACA;AAHA;;AACA;;;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/cA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAOA;AApEA;;AACA;;;AADA;AAsEA;;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AAvFA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzGA;AACA;AAIA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;AAGA;AAxBA;;AACA;AACA;AACA;AACA;;;AAJA;AA0BA;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAtBA;;AACA;AACA;;;AAFA;AAwBA;;AAWA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAIA;AAjDA;;AAWA;AACA;;;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AAKA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAOA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;AAAA;;;;;;;;AAIA;AAlDA;;AACA;AAGA;AACA;;;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AAEA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;;;;;;;;AACA;AAPA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;;;;;;;AAMA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AAAA;;;;;;;AACA;;;;;;;;AAIA;AAhJA;;AACA;AACA;AACA;;;AAHA;AAkJA;;AASA;AACA;AACA;;;;;;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAtEA;;AASA;;;AATA;AAwEA;AACA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAMA;AAhBA;AAkBA;;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AA9CA;;AASA;AACA;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnQA;AACA;AACA;AACA;;AAEA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;AAWA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;AACA;AArFA;;AAWA;;;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;AAWA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;AACA;AAlEA;;AAWA;;;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AAMA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAqBA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AArJA;AAuJA;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AApDA;;AAmBA;AACA;AACA;;;AArBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/KA;AACA;;AAEA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAMA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAIA;AA9EA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AAaA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAEA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAOA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AApGA;;AAeA;;;AAfA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AA5DA;;AAOA;AACA;AACA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAEA;AACA;AAKA;AACA;AACA;AACA;AAQA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAAA;AACA;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;;AAMA;AAlEA;;AAMA;AACA;;;AAPA;AAoEA;;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAAA;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AACA;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AACA;AAMA;AAvBA;;AACA;;;AADA;AAyBA;;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAMA;AAjBA;AAAA;AAmBA;;AAOA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AAhDA;;AAOA;AACA;;;AARA;AAkDA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAdA;;AACA;;;AADA;AAgBA;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AARA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrPA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAgBA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;AACA;AAEA;AACA;AAAA;;;;;;;;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAAA;AAIA;AACA;AACA;AAAA;AAAA;;;;;;;AAGA;AAGA;AAvEA;;AAgBA;AACA;AACA;AAGA;;;AArBA;AAyEA;AAOA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAlCA;AAoCA;;AAaA;AACA;AACA;AAIA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAAA;AAIA;AACA;AACA;AAAA;AAAA;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAAA;AAIA;AACA;AACA;AAAA;AAAA;;;;;;;AAGA;AAIA;AACA;;;;;;;AAEA;AAIA;AA3IA;;AAaA;AACA;AACA;AAIA;;;AAnBA;AA6IA;AAIA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AASA;AACA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxVA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAmBA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AAIA;AAxCA;AA0CA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;;AAKA;AAvCA;AAyCA;;AASA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA7BA;;AASA;AACA;AACA;AACA;;;AAZA;AA+BA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAtBA;AAwBA;;AAaA;AACA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;;;;;;;AAAA;AACA;;;;;;;AAAA;AAGA;AAxCA;;AAaA;;;AAbA;AA0CA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzOA;AACA;AAiBA;AAKA;AASA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AA5FA;;AACA;AACA;AAGA;;;AALA;AA8FA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAtCA;AAwCA;;AAcA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAAA;AAQA;AA/DA;;AAeA;AACA;AACA;;;AAjBA;AAiEA;AACA;AACA;AACA;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;AAEA;AAGA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;AAIA;AAGA;AApLA;;AAmBA;AACA;AACA;AACA;AACA;AACA;AAOA;;;AA/BA;AAsLA;;AAaA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAEA;AACA;AAAA;;;;;;;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAnEA;;AAaA;AACA;;;AAdA;AAqEA;AACA;AACA;AAAA;AAAA;;;;;;;AACA;;;;;;;;AAGA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/hBA;AAEA;AACA;AACA;AAWA;AACA;AACA;AAEA;AACA;AAEA;;AAOA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAGA;AAlBA;;AAOA;;;AAPA;AAoBA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AACA;AAEA;AAEA;AACA;AAEA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AA1CA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAbA;AA4CA;;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AAZA;;AAOA;;;AAPA;AAcA;AAOA;AAEA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AAnBA;AAqBA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAIA;AAAA;;;;;;;AACA;AAKA;AArGA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHA;AAEA;AAKA;AAQA;AAEA;AAIA;;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAtFA;;AAQA;AAEA;AACA;AACA;AAGA;;;AAfA;AAwFA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1KA;AAEA;AAGA;AAEA;AAEA;AACA;;AAOA;AACA;AACA;AAAA;AAAA;;;;;;;;AAEA;AAXA;;AAOA;;;AAPA;AAaA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAKA;AASA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AACA;AAFA;AAIA;;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAAA;AAAA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;;AAIA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AAGA;AAAA;AAAA;;;;;;;;AACA;AAGA;AAtFA;;AACA;AACA;AACA;AAIA;AACA;;;AARA;AAwFA;;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AAjCA;;AAKA;AACA;AACA;;;AAPA;AAmCA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;;AAGA;AAGA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAGA;AAQA;AAxEA;;AASA;AACA;AACA;AACA;;;AA8DA;;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAhBA;;AACA;;;AADA;AAkBA;AACA;AACA;AAAA;AAAA;;;;;;;;AAEA;AAJA;AAMA;;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;;;;;;;AAAA;AAGA;AA7CA;;AAWA;;;AAXA;AA+CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AApCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnVA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;;;;;;;AAGA;AAIA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AAAA;AAAA;;;;;;;AAGA;AAOA;AACA;AAMA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AAAA;AAAA;;;;;;;AAGA;AAQA;AAAA;AAAA;;;;;;;;AAKA;AAjHA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxkBA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAjBA;;AAOA;;;AAPA;AAmBA;;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAzFA;;AAaA;AACA;AAGA;;;AA0EA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AAIA;AAfA;;AACA;AACA;;;AAFA;AAiBA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAlBA;AAoBA;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAZA;;AACA;;;AAYA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxZA;AACA;AACA;AAEA;AAKA;AACA;AASA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAOA;AAhDA;;AACA;AAEA;;;AAHA;AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAUA;AAIA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAYA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAKA;AAEA;;;;;;;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAKA;AAGA;AA3GA;;AACA;AACA;AACA;AAKA;AAEA;;;AAVA;AA6GA;AAQA;AACA;;;;;;;AACA;AAAA;;;;;;;;AAGA;AAbA;AAeA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAIA;AArBA;AAuBA;;AAUA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AASA;AAAA;;;;;;;AACA;AACA;AAtDA;;AAUA;;;AAVA;AAwDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAWA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAEA;;;;;;;AACA;AAAA;;;;;;;AACA;AAEA;;;;;;;AACA;;;;;;;AAKA;AAAA;;;;;;;AACA;AAMA;AA7FA;;AAWA;AACA;;;AAZA;AA+FA;;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;;;;;;;;AACA;AA1DA;;AACA;AACA;AACA;AACA;;;AAJA;AA4DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAEA;;;;;;;AACA;AAGA;;;;;;;AAAA;AACA;;;;;;;;AAMA;AAjFA;;AAaA;AACA;AACA;AAGA;AACA;;;AAnBA;AAmFA;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;AAGA;AAVA;;AACA;;;AADA;AAYA;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAzBA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrsBA;AACA;AACA;AACA;AACA;AAKA;AASA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AAGA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;AAEA;AACA;AACA;;;;;;;;AAOA;AA/BA;;AACA;;;AADA;AAiCA;;AACA;AAEA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAIA;AACA;;;;;;;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAGA;AAnCA;;AACA;AAIA;AAGA;;;AARA;AAqCA;AAeA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA3BA;AA6BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAIA;AArBA;AAuBA;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAMA;AAAA;;;;;;;AACA;AACA;AA3DA;;AAeA;AACA;;;AA6CA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAEA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;;;;;;;AAIA;AADA;AAEA;AAWA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AArFA;;AACA;AACA;AACA;AACA;;;AAJA;AAuFA;;AACA;AACA;AACA;;;;;;;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAGA;AAXA;;AACA;;;AADA;AAaA;;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAzBA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7WA;AACA;AASA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpNA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AAQA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAMA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AAEA;;;;;;;AACA;AAIA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AAzFA;;AAOA;AACA;AACA;AACA;AAGA;;;AAbA;AA2FA;AACA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;;;;;;;;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;AAGA;AAEA;AACA;AAEA;AACA;AAAA;;;;;;;;AACA;AAEA;AACA;AACA;AACA;;;;;;;;AACA;AAEA;AACA;AAEA;AACA;AAAA;;;;;;;;AACA;AAEA;AACA;AACA;;;;;;;;AACA;AACA;AACA;AACA;;;;;;;;AACA;AAEA;;;;;;;;AACA;AAEA;;;;;;;;AAMA;;;;;;;;AACA;AAxEA;;AASA;;;AATA;AA0EA;AACA;;AASA;AACA;AAEA;AACA;AACA;AAAA;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAGA;;;;;;;AAAA;AAGA;;;;;;;AAAA;AAIA;AAEA;AACA;AAIA;AACA;;;;;;;AACA;AAGA;AAEA;AACA;AACA;;;;;;;;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAAA;AAOA;AACA;AACA;;;;;;;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAAA;AAOA;AACA;AACA;;;;;;;AAAA;AAWA;AACA;AAEA;AACA;;;;;;;;AACA;AA5GA;;AASA;AACA;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5OA;AACA;AACA;AACA;AAEA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAzBA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAGA;;AAeA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AAEA;AACA;AAGA;AAEA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AAGA;;;;;;;AACA;AACA;AAzGA;;AAeA;AAGA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AAMA;AACA;AAOA;AACA;AAUA;AAEA;AAEA;AACA;AACA;AACA;AAKA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AAIA;AAAA;AAAA;AAEA;AACA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;;;;;;;;;AASA;AAhHA;;AAWA;AACA;AACA;AACA;AACA;;;AAfA;AAkHA;AACA;AACA;;AAWA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AACA;AACA;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAKA;AAEA;AACA;AAEA;AAIA;AACA;AAEA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAMA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAUA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AAAA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;;;;;;;AACA;AAYA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AAMA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAEA;AArLA;;AAWA;AACA;AACA;;;AAbA;AAuLA;;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAEA;;;;;;;AACA;AAMA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AACA;;;;;;;AACA;AAOA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AACA;;;;;;;AAAA;AAKA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AACA;;;;;;;AACA;AASA;;;;;;;AACA;AACA;AACA;AACA;AAQA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AACA;;;;;;;AACA;AAKA;AACA;AACA;AACA;;;;;;;AAMA;AAIA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAEA;;;;;;;AACA;AAUA;AAAA;;;;;;;AACA;AAIA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AACA;;;;;;;AACA;AAIA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAEA;;;;;;;AAAA;AAEA;;;;;;;AAAA;AAMA;AACA;AACA;AAGA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAGA;AACA;AAAA;AAAA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AAnKA;;AASA;AACA;AACA;AACA;AACA;;;AAbA;AAqKA;;AAOA;AACA;AACA;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AACA;;;;;;;AAAA;AAKA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AACA;;;;;;;AACA;AAOA;AA/BA;;AAOA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACroBA;AAKA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAQA;AAEA;AACA;AACA;AAGA;AAAA;AAIA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAIA;AAOA;AAMA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAMA;AACA;AAIA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AAKA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxYA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;;;;;;;AAUA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;AACA;AAEA;;;;;;;AACA;AAAA;;;;;;;AAAA;;;;;;;AAGA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AAEA;AACA;;;;;;;AACA;;;;;;;AAAA;AAIA;AAnEA;;AAOA;AAIA;;;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AAEA;AACA;AACA;AACA;AAQA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAGA;AAMA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAjBA;AAmBA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AApCA;;AAWA;AAEA;AACA;;;AAdA;AAsCA;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAfA;;AACA;;;AADA;AAiBA;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAfA;;AACA;;;AADA;AAiBA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;;;;;;;AAEA;AACA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAGA;AAAA;;;;;;;AACA;AACA;AAAA;;;;;;;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAxFA;;AASA;AACA;AAEA;AACA;AAEA;;;AAfA;AA0FA;;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AA/DA;;AAOA;AACA;AACA;;;AATA;AAiEA;;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AA1DA;;AAKA;AAEA;;;AAPA;AA4DA;;AAOA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AAEA;AACA;AAQA;AACA;AACA;;;;;;;AAMA;AAGA;AAlDA;;AAOA;AACA;;;AARA;AAoDA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;AAIA;AAzCA;;AAOA;AACA;AACA;AACA;AACA;;;AAXA;AA2CA;;AAWA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAxCA;;AAWA;;;AAXA;AA0CA;;AAgBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;AAKA;AA3EA;;AAgBA;AACA;AACA;;;AAlBA;AA6EA;;AAWA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA/EA;;AAWA;AACA;;;AAZA;AAiFA;AAOA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;;;;;;;AAIA;AAGA;AAnCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACprBA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AAEA;AACA;AAAA;;;;;;;;AACA;AACA;AAAA;;;;;;;;AACA;AAZA;;AACA;;;AADA;AAcA;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;;AAGA;AA7BA;;AACA;AACA;;;AAFA;AA+BA;;AASA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AACA;AAYA;AAnPA;;AASA;;;AATA;AAqPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAGA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;;;;;;AAMA;;;;;;;AACA;AAAA;;;;;;;AACA;AAUA;AAvGA;;AAOA;AACA;AAEA;;;AA+FA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAGA;AAxBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3cA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAwBA;AACA;AACA;AAGA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAhJA;;AAwBA;;;AAxBA;AAkJA;;AAoBA;AACA;AAIA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAEA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAGA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAKA;;;;;;;;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;;;;;;;;AAIA;AApHA;;AAoBA;AACA;AAIA;AACA;;;AA1BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3KA;AACA;AACA;AACA;AAQA;AACA;AAGA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;AAIA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;AAMA;AA5EA;;AAOA;AAEA;AACA;;;AAVA;AA8EA;;AAWA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;;;;;;;;AAMA;AAjCA;;AAYA;;;AAZA;AAmCA;;AACA;AACA;AACA;AACA;;;;;;;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAKA;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAEA;;;;;;;AACA;AACA;;;;;;;AAAA;AAMA;AA/BA;;AAEA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjOA;AACA;AACA;AASA;AAaA;AAcA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AArCA;;AAWA;AAGA;;;AAdA;AAuCA;;AASA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAAA;;;;;;;;AACA;AAzBA;;AAWA;AAGA;;;AAdA;AA2BA;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAWA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;;;;;;;;AAKA;AAnOA;;AAeA;AACA;AACA;AACA;AACA;AACA;AAOA;AAcA;;;AAzCA;AAqOA;;AAYA;AACA;AAEA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAIA;;;;;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAGA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;;;;;;;AAAA;AAGA;AA1EA;;AAYA;;;AAZA;AA4EA;AACA;AAAA;;;;;;;AAAA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AASA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;;;;;;;AAIA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAGA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAEA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAMA;AAGA;AAzJA;;AASA;AACA;AACA;;;AAXA;AA2JA;;AAiBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AA/FA;;AAiBA;AACA;AACA;AACA;;;AApBA;AAiGA;;AAWA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AAEA;AAAA;;;;;;;;AAGA;AA/EA;;AAWA;AACA;AACA;;;AAbA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACptBA;AACA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAvEA;;AAyBA;;;AAzBA;AAyEA;;AAoBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAjEA;;AAoBA;;;AApBA;AAmEA;;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAEA;;;;;;;;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAGA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAMA;;;;;;;;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAEA;AAAA;AAAA;;;;;;;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AA1EA;;AAIA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtKA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AAIA;AAxCA;;AAKA;;;AALA;AA0CA;;AAKA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AAOA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AAAA;AAGA;;;;;;;AAAA;AAIA;;;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;;;;;;;;AAKA;AA3DA;;AAKA;AACA;;;AANA;AA6DA;;AAMA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;AACA;AAGA;;;;;;;AAAA;AAGA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AAEA;AAEA;AACA;AACA;;;;;;;;AAQA;AArCA;;AAMA;;;AANA;AAuCA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5MA;AAEA;;AAeA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAlCA;;AAeA;;;AAfA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AAKA;AACA;AAKA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;;AAaA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;;;;;;;AACA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;;;;;;;AACA;AAGA;AAzCA;;AAaA;;;AAbA;AA2CA;;;AAOA;AAEA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;;;;;;;AAIA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAxBA;;AAGA;;;AAuBA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;;AAIA;AAnEA;;AAOA;;;AAPA;AAqEA;;AASA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA/DA;;AASA;;;AATA;AAiEA;;AAOA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAlCA;;AAOA;;;AAPA;AAoCA;;AAOA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AArDA;;AAOA;;;AAPA;AAuDA;;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AApDA;;AAWA;;;AAXA;AAsDA;;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AArBA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClWA;AAQA;AAEA;AAEA;AACA;AAIA;;AACA;AACA;AAIA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA/CA;;AACA;AAEA;;;AAHA;AAgDA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAMA;AAEA;;;;;;;AACA;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;AAOA;;;;;;;AACA;AAMA;AAnLA;;AAOA;AACA;AACA;AAOA;AACA;AACA;;;AAlBA;AAqLA;;AAOA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAIA;AAjDA;;AAOA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAGA;AArBA;;AACA;AACA;AACA;;;AAHA;AAuBA;;AASA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;;;;;;;;AAKA;AAjEA;;AASA;AACA;AACA;;;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAEA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAMA;AAhJA;;AACA;AAGA;AACA;AACA;AAIA;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;AACA;;;;;;;;AAIA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAMA;AAxDA;;AAGA;;;AAHA;AA0DA;AACA;AAEA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;;AAGA;AATA;AAWA;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AAnDA;;AAOA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AAEA;AACA;AAMA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;;;;;;;AACA;AAEA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAEA;AAEA;AACA;AAAA;;AAEA;AAKA;AAKA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAGA;AAGA;AA1FA;;AAOA;AAGA;;;AAVA;AA4FA;;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAMA;AACA;;;;;;;AAEA;AAMA;AApCA;;AAKA;AACA;;;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;AACA;AAEA;AACA;;;;;;;AAGA;;;;;;;AACA;;;;;;;AACA;;;;;;;;AAGA;AATA;AAWA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AApCA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdpHA;AACA;AACA;AAKA;AACA;AAEA;AAEA;AACA;AAEA;AASA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AAnBA;AAqBA;;AASA;AACA;AACA;AACA;AAGA;AACA;AAOA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;;;;;;;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AA3HA;;AASA;AACA;AAEA;AAWA;;;AAsGA;;AASA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;AArBA;;AASA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChKA;AAIA;AACA;AAMA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;;;;;;;AAEA;AAQA;AA9LA;;AACA;AACA;AACA;AACA;AACA;AAWA;;;AAhBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAnFA;;AAOA;AACA;AACA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AAKA;AACA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;;AAGA;AAVA;AAYA;;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAhBA;;AACA;AACA;AACA;;;AAHA;AAkBA;;AACA;AACA;AACA;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAGA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAGA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;AASA;AAhDA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AAEA;AAeA;AACA;AAKA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAKA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;;AACA;AACA;AACA;AACA;;;AAmCA;;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;AAAA;AAAA;;;;;;;AAAA;AACA;;;;;;;AACA;AACA;;;;;;;AACA;AAGA;AAnGA;;AASA;AACA;AAGA;AAEA;AAIA;;;AAnBA;AAqGA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA9BA;AAgCA;;AAOA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAOA;AAtFA;;AAOA;AACA;AACA;;;AATA;AAwFA;;AACA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AA/BA;;AACA;;;AADA;AAiCA;;AACA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAIA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAKA;AApEA;;AACA;;;AADA;AAsEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAGA;;;;;;;AAAA;;;;;;;AAGA;AACA;AAAA;AAAA;AACA;;;;;;;AACA;AAMA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAIA;AAzIA;;AACA;AACA;AACA;AACA;AAGA;AAwBA;AAQA;AACA;;;AAxCA;AA2IA;;AAOA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AA9FA;;AAYA;;;AAZA;AAgGA;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAKA;AAAA;AAAA;;;;;;;;AAIA;AAjDA;;AACA;;;AADA;AAmDA;AAKA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzuBA;AAEA;AAIA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAYA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AApGA;;AAYA;AACA;AACA;AACA;AACA;AAOA;AAGA;AAEA;;;AA5BA;AAsGA;;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAQA;AAnFA;;AASA;AACA;;;AAVA;AAqFA;;AAkBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AACA;AACA;AACA;;;;;;;;AAIA;AAzEA;;AAkBA;;;AAlBA;AA2EA;AAaA;AAEA;;;;;;;AAAA;AAGA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAIA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AAvCA;AAyCA;;AAWA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;;;;;;;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AACA;AACA;AACA;;;;;;;AACA;AAOA;AAtEA;;AAYA;;;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5WA;AACA;AACA;AAEA;AACA;AAQA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAoBA;;AAOA;AAKA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAEA;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AACA;AAQA;AAAA;;;;;;;AAAA;AACA;AAIA;AAGA;AAlGA;AAAA;AAoGA;;AAaA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA7BA;;AAcA;;;AAdA;AA+BA;AACA;AAAA;AAAA;;;;;;;;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAIA;AAvCA;AAyCA;;AAWA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAGA;AAIA;AAnEA;;AAaA;AAKA;;;AAlBA;AAqEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AA3BA;AA8BA;;AASA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAvCA;;AASA;AACA;AAGA;;;AAbA;AAyCA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnfA;AACA;AAKA;AAMA;AAMA;AACA;AAEA;AACA;AACA;AAKA;AAMA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AACA;AAGA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;AAGA;AACA;AACA;AAAA;;;;;;;;;AAOA;AArCA;AAAA;AAuCA;;AACA;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAhBA;;AACA;;;AADA;AAkBA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;;;;;;;AAIA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AACA;AAAA;AAAA;;;;;;;AAEA;AAAA;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;;AAEA;AAIA;AAnKA;;AACA;AACA;AACA;AACA;AACA;AAIA;AAMA;;;AAfA;AAqKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA1BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrQA;AACA;AACA;AAOA;AACA;AAEA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAGA;AAEA;AAAA;AAAA;;;;;;;;;AAIA;AAAA;AAAA;AAAA;AAEA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAKA;AArFA;;AACA;AACA;AACA;AACA;AACA;;;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AAMA;AACA;AAMA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;;;;;;;AAMA;;;;;;;AAAA;AAMA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAMA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;AAMA;AAnIA;;AACA;AACA;AACA;AAOA;;;AAVA;AAqIA;;AASA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAhDA;;AASA;AACA;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5JA;AACA;AAQA;AAOA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AAAA;AAAA;AAAA;;;;;;;AAEA;;;;;;;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAIA;AA9JA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAKA;AAEA;AAEA;AAOA;AACA;AAAA;;;;;;;;AAAA;AAAA;AACA;AACA;;;;;;;;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAIA;AA5CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAKA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAMA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAGA;AAAA;AAAA;;;;;;;;AAIA;AAnCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;;;;;;;;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAMA;AAAA;AAAA;;;;;;;;AAIA;AAtHA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAIA;AA9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AAOA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAEA;AAEA;;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAAA;AAOA;;;;;;;;AAGA;AA5DA;;AAOA;;;AAPA;AA8DA;;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAjHA;;AAOA;AACA;AACA;AACA;AACA;;;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AAEA;AACA;AAQA;AAKA;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAKA;;;;;;;;AAGA;AAzEA;;AACA;AACA;AACA;AACA;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AAMA;AAQA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AArDA;;AACA;AACA;AAEA;;;AAJA;AAuDA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;AAAA;AAAA;;;;;;;;AAGA;AAtCA;;AACA;;;AADA;AAwCA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAEA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAvMA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAnBA;AAyMA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AAKA;AAlCA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9UA;AAEA;AAKA;AAKA;AAEA;AACA;AAIA;AAEA;AAEA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAnGA;;AAOA;AACA;AACA;AACA;AAEA;AACA;;;AAbA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AASA;AAaA;AAUA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AA3FA;;AACA;AACA;AACA;AACA;AACA;;;AALA;AA6FA;;AAOA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AAAA;;;;;;;;AACA;AACA;AAvBA;;AAOA;;;AAPA;AAyBA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAKA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAlJA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAVA;AAoJA;;AAOA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAIA;;;;;;;;AAGA;AA3DA;;AAOA;AACA;;;AARA;AA6DA;;AAMA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAGA;AA/DA;;AAMA;AACA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrXA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAGA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;AAQA;AA/DA;;AACA;AACA;AAEA;;;AAJA;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGA;AAEA;AAKA;AAQA;AAaA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAKA;AAKA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;AAAA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;AAGA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;AAKA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AApNA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAbA;AAsNA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;;AA7CA;AAGA;AACA;;;AAlBA;AA6DA;;AAaA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AAIA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAjDA;;AAaA;;;AAbA;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5aA;AACA;AAMA;AACA;AAMA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;AACA;AACA;;;;;;;;AAIA;AAhFA;;AAOA;AACA;AAEA;AAEA;;;AAZA;AAkFA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;;AAGA;AAzBA;;AACA;;;AADA;AA2BA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAXA;AAaA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AA/BA;AAiCA;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;AAGA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AAtDA;;AACA;AACA;AACA;AACA;;;AAJA;AAwDA;;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAOA;AA7DA;;AACA;AACA;;;AAFA;AA+DA;;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AA7BA;;AACA;AACA;;;AAFA;AA+BA;;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAIA;AAtEA;;AACA;AACA;AACA;;;AAHA;AAwEA;;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AA7BA;;AACA;AACA;;;AAFA;AAmCA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAXA;AAaA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9cA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAKA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAKA;AAhJA;;AACA;AACA;AACA;AACA;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;;;;;;;AAGA;;;;;;;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;AAlDA;;AACA;AACA;AACA;AACA;;;AAJA;AAoDA;;AACA;AACA;AAEA;AACA;AACA;;;;;;;;AAGA;AATA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AAzEA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAIA;AACA;AAEA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;;;;;;;;AACA;AAbA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AAGA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;;;;;;;;AACA;AAlCA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;AAAA;AACA;AACA;AACA;AAEA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;;;;;;;AAGA;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;AACA;AArDA;;AACA;AACA;AACA;;;AAHA;AAuDA;;AACA;AACA;AAEA;AACA;AACA;;;;;;;;AAGA;AATA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AA1EA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAIA;AAEA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAIA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAAA;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAAA;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;AACA;AArDA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;;;;;;;;AACA;AAnBA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAMA;AA7CA;;AACA;AACA;AACA;;;AAHA;AA+CA;;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAvBA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AAQA;AAOA;AACA;AAEA;AAKA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;AAGA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;;AAGA;AA3JA;;AACA;AACA;AACA;AACA;AACA;;;AALA;AA6JA;AAOA;AAAA;AAAA;;;;;;;;AACA;AARA;AAUA;;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAvBA;;AASA;;;AATA;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpPA;AAIA;AACA;AAIA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAIA;AACA;AACA;;;;;;;AAIA;AACA;AACA;;;;;;;AAIA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAIA;AACA;AACA;;;;;;;AAIA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAIA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAMA;AAnMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AAWA;AAQA;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAMA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;AAGA;AACA;AACA;AACA;;;;;;;AAIA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAMA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;;;;;;;AAEA;AAAA;;;;;;;;AAIA;AApOA;;AACA;AAEA;AAIA;AACA;AACA;;;AATA;AAsOA;;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;AACA;AACA;AAAA;;;;;;;AACA;AACA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAnEA;;AACA;;;AADA;AAqEA;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AAAA;;;;;;;;AAGA;AAtCA;;AAOA;;;AAPA;AAwCA;;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAtEA;;AAOA;AACA;AACA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3XA;AACA;AACA;AAMA;AAKA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAhFA;;AACA;AAEA;AACA;AAEA;;;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AAlIA;;AACA;AACA;AACA;AACA;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AAKA;AAMA;AACA;AACA;AAEA;AACA;AAEA;;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AA2BA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;;;;;;;;AAQA;AA/LA;;AAKA;AACA;AACA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAEA;;AAIA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;;AAIA;AA3EA;;AAKA;AACA;AACA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AAEA;AAMA;AAMA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;AAGA;AACA;AAEA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AAEA;AAAA;;;;;;;AAEA;AAAA;;;;;;;AAAA;AAEA;;;;;;;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAKA;AAnNA;;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;;;AAfA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAmBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAGA;AA9EA;;AAmBA;AACA;;;AApBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAQA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;;;;;;;;AAKA;AAlHA;;AACA;AACA;AACA;;;AAHA;AAoHA;;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAIA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAEA;AAAA;AAAA;;AAGA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAvEA;;AACA;AACA;AACA;AACA;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5NA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAQA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;;;;;;;;AAKA;AAnHA;;AACA;AACA;AACA;;;AAHA;AAqHA;;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAIA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAEA;AAAA;AAAA;;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAIA;AAlDA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxKA;AACA;AAEA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;;;;;;;;AACA;AAzBA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAIA;AAOA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;;;;;;;AACA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;;AAGA;AAVA;AAYA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA5BA;;AACA;;;AADA;AA8BA;;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;;AACA;;;;;;;;AAGA;AAZA;;AACA;;;AADA;AAcA;AACA;;;;;;;AAEA;;;;;;;AACA;;;;;;;;AAGA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAIA;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAIA;AAvOA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AAMA;AAeA;AAMA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;;;;;;;;AACA;AAhBA;;AACA;AACA;;;AAFA;AAkBA;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;;;;;;;AACA;AAEA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;;;;;;;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;;;;;;;AAKA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAKA;AApEA;;AACA;AACA;AACA;AAEA;;;AAiEA;;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAEA;AACA;;;;;;;AACA;AAEA;AAAA;;;;;;;AACA;AAEA;AAAA;;;;;;;AACA;AAEA;AAAA;;;;;;;AACA;AAGA;AAjCA;;AAIA;;;AAJA;AAmCA;;AACA;AACA;AAQA;AAGA;AACA;AAEA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAlCA;;AACA;AAOA;;;AARA;AAoCA;;AACA;AACA;AACA;AACA;AAEA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAvCA;;AACA;AACA;AACA;;;AAHA;AAyCA;AACA;AAAA;AAAA;;;;;;;;AACA;AAFA;AAIA;AACA;AAAA;AAAA;;;;;;;;AACA;AAFA;AAIA;AACA;AAAA;AAAA;;;;;;;;AACA;AAFA;AAIA;AACA;AAAA;AAAA;;;;;;;;AACA;AAFA;AAIA;;AACA;AAWA;AAEA;AACA;AAGA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;;AACA;AAtCA;;AAWA;AACA;;;AAZA;AAwCA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;;AAIA;AAlBA;;AACA;;;AADA;AAoBA;AACA;AACA;AACA;AACA;;AAOA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;;;;;;;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAGA;AAGA;AAxEA;;AAOA;;;AAPA;AA0EA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;;AAIA;AApBA;;AACA;;;AADA;AAsBA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAZA;;AACA;;;AADA;AAcA;;AACA;AAYA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAGA;AACA;AAGA;AAGA;AAOA;AAGA;AACA;;;;;;;;AAIA;AA1FA;;AAWA;;;AAXA;AAkGA;;AAiBA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AACA;;;;;;;AACA;AAEA;;;;;;;AACA;AAAA;;;;;;;AACA;AAEA;;;;;;;AACA;;;;;;;AAOA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;;;;;;;;AAIA;AAxEA;;AAiBA;AACA;;;AAlBA;AA0EA;;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAEA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAEA;AAGA;;;;;;;AAAA;AAGA;AAtBA;;AACA;;;AADA;AAwBA;;AAOA;AAEA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;;AAIA;AArBA;;AAOA;;;AAPA;AAuBA;;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;AACA;AAHA;;AACA;;;AADA;AAKA;;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AAEA;AALA;;AACA;;;AADA;AAOA;;AASA;AACA;AAEA;AACA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AACA;AAEA;;;;;;;;AAIA;AA1CA;;AASA;AACA;;;AAVA;AA4CA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;AAGA;AAtCA;;AASA;AACA;AACA;AACA;;;AAZA;AAwCA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC17BA;AAMA;AAQA;AASA;AACA;AAEA;;AACA;AAEA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAIA;AAGA;AACA;AAEA;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAGA;AAvNA;;AAEA;AACA;AACA;AACA;AACA;AAkBA;;;AAxBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AAIA;AACA;AAEA;AAEA;;;;AAIA;;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;;;;;;;AACA;;;;;;;;AAIA;AA/BA;AAAA;AAiCA;AACA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAfA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AAKA;AAIA;AACA;AAEA;;AASA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAMA;AAEA;AAAA;;;;;;;;AAGA;AA/DA;;AASA;AACA;AACA;;;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAIA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AAhEA;;AAOA;AACA;AACA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AAIA;AACA;AAEA;;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AA3DA;;AASA;AACA;AACA;;;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AAEA;;;;;;;AAEA;;;;;;;AACA;;;;;;;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;;;;;;;AACA;;;;;;;;AAMA;AAvBA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AAgBA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAEA;AAMA;AAEA;AAEA;;AAiBA;AACA;AAEA;AACA;AAIA;AACA;AAGA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAMA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAIA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;;;;;;;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAeA;;;;;;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAKA;AAxfA;;AAiBA;AACA;AAEA;;;AApBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AAIA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAMA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAEA;AACA;;;;;;;AAEA;AAUA;AACA;AAEA;AAAA;AAAA;;AAGA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AAEA;AAAA;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AAKA;AAnLA;;AAaA;AACA;AACA;;;AAfA;AAqLA;;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AAvDA;;AASA;AACA;;;AAVA;AAyDA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAjCA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/SA;AAEA;AAKA;AACA;AACA;AAEA;AAEA;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAKA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAcA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAKA;AAlLA;;AAuBA;AAEA;;;AAzBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAzDA;;AAKA;AACA;;;AANA;AA2DA;;AAOA;AACA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;;AAIA;AAnBA;;AAOA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AAEA;AAEA;AAEA;;;AAGA;;AAOA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AA1BA;;AAMA;;;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAhBA;AAkBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAhBA;AAkBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAfA;AAiBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AAlCA;AAoCA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAtBA;AAwBA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AA7BA;AA+BA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAtBA;AAwBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AArBA;AAuBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAfA;AAiBA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;;AAIA;AAhBA;AAkBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;;AAIA;AAhBA;AAkBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAhBA;AAkBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;;AAKA;AAxCA;AA0CA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AArDA;AAuDA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAvBA;AAyBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAfA;AAiBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;;AAIA;AAjBA;AAmBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AA5BA;AA8BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAhBA;AAkBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAhBA;AAkBA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;;AAIA;AATA;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAjBA;AAmBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAfA;AAiBA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;;AAIA;AATA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAXA;AAaA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AA3CA;AA6CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAlBA;AAoBA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAtBA;AAwBA;AACA;AAAA;;;;;;;;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA1BA;AA4BA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAnBA;AAqBA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AA/CA;AAiDA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AA5QA;AA8QA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AA1BA;AA4BA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AA7CA;AA+CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AA5BA;AA8BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AAlEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxmCA;AACA;AAEA;AAEA;;AAiBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;;;;;;;AAEA;AAQA;AAtFA;;AAiBA;;;AAjBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAEA;;AAaA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AA7EA;;AAaA;;;AAbA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAQA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAQA;AACA;AAEA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AArCA;;AAQA;;;AARA;AAuCA;;AACA;AACA;AAUA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAxCA;;AACA;;;AADA;AA0CA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;;AAIA;AA3BA;;AACA;;;AADA;AA6BA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAGA;AACA;AACA;;;;;;;AACA;AAOA;AAjCA;;AAEA;;;AAFA;AAmCA;AASA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;AAEA;AAGA;AA5CA;AAiDA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;AAEA;AAGA;AAXA;AAaA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChRA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAyBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAIA;AA5CA;AA8CA;AAmBA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAKA;AA7CA;AA+CA;AAOA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAAA;AAGA;AAtBA;AAwBA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;;AAIA;AAxBA;;AACA;AACA;;;AAFA;AA0BA;AASA;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;AACA;AACA;;;;;;;AAAA;;;;;;;AAGA;AAAA;;;;;;;AAAA;AAKA;AAzBA;AA2BA;;AAaA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAMA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AA/FA;;AAkBA;;;AAlBA;AAiGA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAKA;AAAA;;;;;;;AACA;AACA;;;;;;;AAAA;AAGA;AAAA;;;;;;;AACA;AAGA;AAxBA;;AACA;;;AADA;AA0BA;;AACA;AACA;AAAA;;;;;;;;AACA;AAHA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChVA;AACA;AAEA;AAEA;AAEA;AAEA;;;AAGA;AAcA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAGA;AAzBA;AA2BA;;AAOA;AASA;AAIA;;;;;;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAKA;AA9CA;;AAeA;;;AAfA;AAgDA;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAlEA;AAAA;AAuGA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAEA;AAEA;AAKA;AACA;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzMA;AAEA;AAEA;;AAWA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;;;;;;;AAIA;AAIA;AApDA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAQA;AAIA;AAOA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAEA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AAEA;AAKA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AAIA;AAnCA;;AACA;AACA;;;AAFA;AAqCA;AACA;AAAA;;;;;;;;AACA;AAFA;AAIA;AACA;AAAA;;;;;;;;AACA;AAFA;AAIA;;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AAHA;;AACA;;;AADA;AAKA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AANA;;AACA;;;AADA;AAQA;AACA;AAAA;;;;;;;;AACA;AAFA;AAIA;AACA;AAAA;AAAA;;;;;;;;AACA;AAFA;AAIA;;AACA;AACA;AAAA;;;;;;;;AACA;AAHA;;AACA;;;AADA;AAKA;;AACA;AACA;AAAA;;;;;;;;AACA;AAHA;;AACA;;;AADA;AAKA;;AACA;AACA;AAEA;;;;;;;;AAIA;AARA;;AACA;;;AADA;AAUA;;AACA;AACA;AAEA;;;;;;;;AAIA;AARA;;AACA;;;AADA;AAUA;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AACA;AAEA;;;;;;;;AACA;AAdA;;AACA;AACA;;;AAFA;AAgBA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;AAKA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;;;AAGA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;;AAEA;AAEA;AACA;;;;;;;;AACA;AAEA;AAAA;AAAA;;;;;;;;AACA;AA/CA;;AACA;AAEA;AACA;AACA;;;AALA;AAiDA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;;AAIA;AArCA;;AACA;;;AADA;AAuCA;AACA;AAAA;;;;;;;;AACA;AAFA;AAIA;;AACA;AACA;AAAA;;;;;;;;AACA;AAHA;;AACA;;;AADA;AAKA;;AAcA;AAEA;AAUA;AAGA;;;;;;;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAhEA;;AAcA;AAUA;;;AAxBA;AAkEA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAvCA;AAyCA;;AACA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;AACA;AAGA;AAVA;;AACA;AACA;;;AAFA;AAYA;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;AAAA;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAgBA;AACA;AACA;AACA;;;;;;;;AACA;AACA;;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAQA;AAGA;AACA;AACA;AAhGA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAWA;AACA;AAOA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AASA;AAGA;AA7BA;;AACA;AACA;;;AAFA;AA+BA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAKA;AACA;AACA;AACA;;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;;;;;;;;AAIA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAKA;AACA;AACA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAIA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAIA;;;;;;;;AAKA;AAIA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAIA;AAjMA;;AACA;AACA;AACA;AACA;AACA;;;AALA;AAmMA;;AACA;AACA;AACA;AAEA;AAIA;AAIA;AACA;AACA;AACA;AAIA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAIA;;;;;;;AAGA;AAGA;AAtDA;;AACA;AACA;AACA;AAEA;;;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5TA;AACA;AAGA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAGA;AA7BA;;AACA;AACA;AACA;AAEA;;;AALA;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AAAA;;;;;;;;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AAAA;;;;;;;;AAGA;AAjBA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAIA;AACA;AAEA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAvBA;;AAIA;AACA;;;AALA;AA6BA;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAjBA;;AAGA;;;AAHA;AAmBA;;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAGA;AAtBA;;AAKA;;;AALA;AAwBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AAEA;;AAwBA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAKA;AAGA;AAtFA;;AAwBA;;;AAxBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;AAUA;AAEA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAIA;AAAA;AAAA;;;;;;;;AAGA;AApEA;;AAUA;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAEA;AAIA;;AAMA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AApEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AAEA;AAEA;AAMA;AACA;AAEA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAIA;AA7BA;;AAOA;;;AAPA;AA+BA;;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAhCA;;AASA;;;AATA;AAkCA;;AAYA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AAlCA;;AAYA;;;AAZA;AAoCA;;AAaA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAGA;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;;;;;;;AAGA;;;;;;;AAEA;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;;;;;;;AAEA;AAGA;AAMA;AACA;AACA;;;;;;;AAMA;AAIA;AA9GA;;AAcA;AACA;;;AAfA;AAgHA;;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AAMA;AAnCA;;AACA;;;AADA;AAqCA;AACA;AACA;AACA;AACA;AASA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;AAGA;AAlBA;AAoBA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA1BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClUA;AACA;AACA;AACA;AAKA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AASA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAWA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AA5LA;;AASA;AACA;AAYA;;;AAtBA;AA8LA;;AASA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;;;;;;;AACA;AAEA;AAAA;AAAA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;;;;;;;;AAQA;AApWA;;AASA;AACA;AACA;;;AAXA;AAsWA;AACA;AACA;;AAWA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;;;;;;;AAEA;AAGA;AA5BA;;AAWA;;;AAXA;AA8BA;;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAAA;AACA;AAAA;AAAA;;;;;;;AACA;AAIA;AA1BA;;AASA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpqBA;AAEA;AACA;AAKA;AAOA;AAQA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AAKA;AAIA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAlBA;;AAOA;;;AAPA;AAoBA;;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAMA;AA7DA;;AASA;AACA;;;AAVA;AA+DA;;AAaA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;;;;;;;;AAKA;AA3CA;;AAaA;;;AAbA;AA6CA;AASA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AAAA;;;;;;;;AAGA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAGA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AA/EA;AAiFA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;AAGA;AAjCA;;AACA;AACA;AACA;AAOA;;;AAVA;AAmCA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAIA;AAvBA;;AACA;AACA;;;AAFA;AAyBA;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AAhCA;;AACA;;;AADA;AAkCA;;AASA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AAGA;AA/JA;;AASA;AACA;AACA;;;AAsJA;AAwBA;AACA;AAAA;;;;;;;AACA;AAWA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAIA;AA3DA;AA6DA;;AA0BA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAOA;AAlKA;;AA0BA;AAIA;AACA;;;AA/BA;AAoKA;;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAGA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAtCA;;AAWA;;;AAXA;AAwCA;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AArBA;AAAA;AAuBA;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;;AAIA;AA3BA;;AAOA;;;AAPA;AA6BA;AAOA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAlBA;AAoBA;;AAeA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAGA;AACA;;;;;;;AAEA;AAMA;AArFA;;AAeA;;;AAfA;AAuFA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AACA;AACA;AAZA;AAcA;;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AA5BA;;AACA;;;AADA;AA8BA;AAOA;AACA;AAAA;AAAA;;;;;;;;AACA;AATA;AAgBA;AAIA;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;;;;;;;;AAIA;AAfA;AAAA;AAiBA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5hCA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAjCA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAGA;AAAA;AAAA;;;;;;;AAAA;AAMA;AAnBA;;AACA;;;AADA;AAqBA;AAMA;AACA;AACA;AAQA;AACA;AACA;AAKA;AAIA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAzCA;AA2CA;;AASA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;AAEA;AAGA;AAnBA;;AASA;;;AATA;AAqBA;;AAOA;AACA;AACA;AAAA;;;;;;;AACA;AAGA;AAbA;;AAOA;;;AAPA;AAeA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AApBA;AAsBA;;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAvBA;;AAQA;AACA;;;AATA;AAyBA;;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAAA;AAIA;AA7CA;;AASA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvMA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AASA;AACA;AACA;AAKA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AArCA;;AASA;AACA;;;AAVA;AAuCA;;AAiBA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAtEA;;AAiBA;AACA;;;AAlBA;AAwEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAVA;AAYA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAnBA;;AACA;;;AAoBA;;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;;AAEA;AAEA;AAAA;AAAA;AACA;AACA;;AAGA;AACA;AAAA;;AAEA;AAEA;AAAA;AAAA;AACA;AACA;;AAGA;AAAA;AAAA;;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;;AAEA;;;AAGA;;AAEA;AAIA;AA5CA;;AACA;;;AADA;AA8CA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAlBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxQA;AACA;AAIA;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;;AAIA;AAvBA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AAEA;AAEA;;AAOA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AA9BA;;AAOA;AACA;;;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AAGA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAMA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAMA;AACA;;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAOA;AACA;;;;;;;;AAIA;AACA;AAKA;AACA;AACA;;;;;;;AAEA;AACA;AAgBA;AACA;;;;;;;;AAIA;AACA;AAMA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAMA;AA/JA;;AAWA;AACA;AACA;AACA;AACA;AACA;;;AAhBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAQA;AASA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAtFA;;AACA;AACA;;;AAFA;AAwFA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AAEA;AAKA;AAKA;AAMA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;AAGA;AA1LA;;AAQA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;;;AAxBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjIA;AACA;AAEA;AAEA;;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AA9BA;;AASA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAGA;AACA;AAEA;AAaA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;;;;;;;;AAKA;AA1BA;AA4BA;AAaA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAhCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAGA;AACA;AAEA;AAaA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;;;;;;;;AAKA;AA1BA;AA4BA;;AASA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAvCA;;AASA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AAMA;AACA;AAEA;AASA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;;;;;;;;AAKA;AAtBA;AAwBA;;AASA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAzCA;;AASA;AACA;AACA;;;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AAKA;AACA;AAEA;AACA;AAEA;AASA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;;;;;;;;AAKA;AAtBA;AAwBA;;AASA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAxCA;;AASA;AACA;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AAEA;AACA;AAEA;AASA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;;;;;;;;AAKA;AAtBA;AAwBA;;AASA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AA/BA;;AASA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHA;AACA;AAEA;;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AAbA;;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;;AACA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAXA;;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AACA;AACA;AACA;AACA;AAzBA;;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AAMA;;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AA3BA;;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAKA;AAEA;;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAvBA;;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAIA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAKA;AACA;AAEA;AAEA;AAKA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChjBA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AAEA;AACA;AAEA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;;;;;;;;;;AAWA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAQA;AAGA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjGA;AAMA;AAEA;AACA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpJA;AAEA;AAEA;AAeA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AAaA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AAEA;AAEA;AAGA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxNA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AAEA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AACA;AAEA;AACA;;;;;;;AAAA;AAEA;AAXA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AAMA;AAWA;AAOA;AAGA;AACA;AAEA;AAIA;AACA;AAEA;;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;;;;;;;AAEA;AAEA;;;;;;;AACA;AAGA;AA1BA;;AAKA;AACA;;;AANA;AA4BA;AACA;;;;;;;AAEA;AAAA;;;;;;;;AAGA;AANA;AAQA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;;;;;;;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAOA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAKA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA1JA;;AACA;AACA;AACA;AACA;AAGA;AAIA;;;AAXA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AAEA;AACA;AAEA;AACA;AAEA;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;AAKA;AA5DA;;AAOA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AAYA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;AAGA;AAEA;AACA;AACA;AAAA;;;;;;;;AAEA;AAEA;AACA;;;;;;;;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;;AACA;AAEA;;;;;;;AAEA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;;;AAEA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAIA;AAGA;AAxGA;;AAYA;AACA;;;AAbA;AA0GA;;AAaA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AAEA;AAEA;AACA;AAIA;AACA;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;AAEA;AAMA;AApDA;;AAaA;AACA;;;AAdA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClHA;AACA;AACA;AAEA;AAEA;AAEA;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;;;;;AAEA;AACA;;;;;;;AAAA;AAIA;AAlCA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AA8EA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AA9CA;AAgDA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChIA;AAMA;AACA;AACA;AACA;AAMA;AAEA;AACA;AAGA;AACA;AAuCA;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAKA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAMA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAGA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;;;;;;;;AAKA;AApUA;;AAsBA;AASA;;;AA/BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAOA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;AAKA;AApEA;;AAOA;AAEA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AAEA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAMA;AArBA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAQA;AAiBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAAA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AAAA;;;;;;;AAIA;;;;;;;AAAA;;;;;;;AACA;;;;;;;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAnQA;;AAwBA;AAEA;AAKA;;;AA/BA;AAqQA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAGA;AAAA;AAAA;;;;;;;AAAA;AAMA;AA7CA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AAlHA;;AAOA;AAQA;;;AAfA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;;;;;;;;AAIA;AAfA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAOA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AAxIA;;AAQA;AACA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AAQA;AAKA;AAUA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AASA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAlCA;AAAA;AAoCA;;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;;;;;;;;AAEA;AAEA;AACA;AAAA;;;;;;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAEA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;;;;;;;AACA;;;;;;;AAKA;AAEA;AAAA;AAAA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;;;;;;AAEA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAKA;AACA;AAAA;AAAA;AACA;;;;;;;AAEA;AAEA;AACA;;;;;;;AACA;AAYA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAAA;;;;;;;AAGA;AAIA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AAGA;AACA;AAAA;AAAA;;;;;;;AAEA;;;;;;;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;AAGA;;;;;;;AAEA;AAAA;;;;;;;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AAEA;AACA;AACA;;;;;;;AAGA;AAAA;;;;;;;AAGA;AAAA;;;;;;;AACA;AAOA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAEA;AAAA;AAAA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;;;;;;;AAEA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;;;;;;;AAKA;AACA;AAAA;AAAA;AACA;;;;;;;AAEA;AAEA;AACA;;;;;;;AACA;AAOA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAQA;AA/YA;;AACA;AACA;AAKA;AAKA;AAGA;AACA;;;AAhBA;AAiZA;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AAGA;;;;;;;AAAA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AAGA;;;;;;;AAAA;AAGA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;;;;;;;AAIA;AAMA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;AAQA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;;;;AAOA;;;;;;;AAAA;AACA;AAAA;AAAA;;;;;;;AAIA;AAGA;AApTA;;AAmBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAwBA;;;AAlDA;AAsTA;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAGA;AAIA;;;;;;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;;;;;;;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;;;;AAGA;AAGA;AAhFA;;AACA;AACA;;;AAFA;AAkFA;;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;;;;;AAEA;AACA;AAAA;;;;;;;AAEA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAEA;AAIA;AAzDA;;AACA;AAEA;AACA;;;AAJA;AA2DA;;AACA;AACA;AACA;AACA;AAEA;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;;;;;;;AAEA;AACA;AAAA;;;;;;;AAEA;AAOA;AAnEA;;AACA;AACA;AACA;;;AAHA;AAqEA;;AAOA;AACA;AACA;AAEA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AA9BA;;AAOA;AACA;AACA;;;AATA;AAgCA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAAA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AA1BA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/nCA;AACA;AAEA;;AACA;AAEA;;;;;;;AAGA;;;;;;;AACA;;;;;;;AACA;;;;;;;;AAGA;AAXA;;AACA;;;AADA;AAaA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AArCA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AAEA;;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;;AAKA;AA1CA;;AASA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAUA;AA7GA;;AASA;AACA;AACA;AACA;;;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAMA;AACA;AACA;AAGA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;;;;;;;AAkBA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;;;;AAEA;AAGA;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AACA;AACA;AAGA;AAtFA;;AACA;AAEA;AACA;AACA;AACA;;;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAQA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAEA;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AAGA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;AAEA;AAAA;;;;;;;;AAKA;AAlDA;;AAQA;AACA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AAEA;;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AAEA;AAAA;AAAA;AACA;AACA;;AAGA;AACA;AAAA;;AAEA;AAEA;AAAA;AAAA;AACA;AACA;;AAGA;AAAA;AAAA;;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;;AAEA;;;AAGA;;AAEA;AAIA;AAlDA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;;;;;;;;AAOA;AArCA;;AAOA;;;AAPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAqBA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;;;;;;;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAIA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAIA;AAAA;AAAA;;;;;;;AAAA;AAUA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAGA;AAAA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAKA;AACA;AACA;AACA;;;;;;;AAEA;AAMA;AA/RA;;AAqBA;AACA;AAGA;AAEA;AACA;AAYA;AAEA;;;AA1CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;;AACA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AASA;AACA;AACA;;;;;;;AAGA;AACA;AAAA;;;;;;;AAIA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAKA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;;;;;;;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAOA;AAxHA;;AASA;AAEA;AACA;AAGA;;;AAfA;AA0HA;AACA;AACA;;;;;;;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAVA;AAYA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AA1CA;;AACA;;;AADA;AA4CA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAEA;AAKA;AAxCA;;AACA;AAIA;AACA;;;AANA;AA0CA;;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAAA;AAGA;AAAA;AAAA;AAAA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AACA;AAKA;AAnCA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtQA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAMA;AAtCA;;AACA;AACA;;;AAFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;;;;;;;AAAA;AAKA;AA5CA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAYA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAGA;AAZA;AAcA;;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;AAGA;AAAA;;;;;;;AAAA;AAGA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;AAGA;AAAA;;;;;;;AAAA;AAKA;AAxCA;;AACA;AACA;AACA;AAEA;;;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;;;;;;;AAEA;;;;;;;AACA;AAIA;AAAA;AAAA;;;;;;;;AAIA;AAvCA;;AAEA;;;AAFA;AAyCA;;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAIA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AASA;AA7GA;;AAUA;;;AAVA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AAEA;AAEA;;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AApDA;;AAOA;AACA;AACA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;;;;;;;AAEA;;;;;;;AAMA;AACA;AACA;;;;;;;AAGA;AAGA;AACA;;;;;;;AAEA;AASA;AAzGA;;AACA;AAGA;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAIA;AAhBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AAEA;AACA;AASA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAOA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAEA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAMA;AArJA;;AAOA;AAKA;AAEA;;;AAdA;AAuJA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;;;;;;;AACA;;;;;;;AACA;;;;;;;;AAGA;AAlBA;;AACA;;;AADA;AAoBA;;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AAxBA;;AAOA;;;AAPA;AA0BA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AAEA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;AASA;AA5FA;;AACA;AACA;AAgBA;;;AAlBA;AA8FA;;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;;;;;;;;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAAA;AAMA;AAIA;AACA;;;;;;;;AAKA;AAhDA;;AACA;AACA;AAQA;;;AAVA;AAkDA;;AASA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AAjGA;;AASA;AACA;;;AAVA;AAmGA;;AAWA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;AAKA;AA9CA;;AAWA;AACA;;;AAZA;AAgDA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACngBA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;;AASA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAEA;AAEA;;;;;;;AACA;AAIA;AAAA;AAAA;;;;;;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;;;;;;;AAGA;AAGA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AAEA;AAIA;AA9GA;;AASA;AAEA;AACA;;;AAZA;AAgHA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;;AAGA;AAPA;AASA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;;AAMA;AAjCA;;AACA;AACA;;;AAFA;AAmCA;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AAAA;;;;;;;;AAIA;AApBA;;AACA;;;AADA;AAsBA;;AAWA;AAEA;AACA;AAAA;AAAA;;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAvBA;;AAWA;;;AAXA;AAyBA;;AAWA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;AAGA;AAhCA;;AAWA;AACA;;;AAZA;AAkCA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;;;;;;;AAEA;AAAA;AAAA;;;;;;;;AAKA;AAZA;AAcA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AACA;AAKA;AA/CA;;AACA;AAIA;AACA;;;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChRA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AA5DA;;AASA;AACA;AACA;;;AAXA;AA8DA;;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AAAA;;;;;;;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;;;;;;;AAAA;AAKA;AAhFA;;AACA;AAOA;;;AARA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;AACA;AACA;AAEA;AACA;AAKA;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;;;;;;;AACA;AAGA;AA3FA;;AASA;AACA;AACA;AACA;;;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAIA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAMA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AAvEA;;AAEA;AACA;AACA;;;AAJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvRA;AAMA;AACA;AAEA;AAMA;AAGA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AAIA;AAMA;AACA;AACA;AAAA;AAGA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAEA;AAQA;AACA;AAMA;AACA;AAAA;AAGA;AAOA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAMA;AACA;AAEA;AASA;AACA;AACA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AAGA;AAOA;AACA;AAEA;AAGA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1OA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAMA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AAEA;;AAWA;AAAA;AAAA;AACA;AAEA;AACA;AACA;;;;;;;;AACA;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;AAIA;AAjFA;;AAWA;AACA;;;AAZA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AAEA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAIA;AAvBA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAMA;AACA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;;;;;AACA;AAFA;AAIA;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAWA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;;;;;;;AAAA;AAYA;;;;;;;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;;;;;;;AAIA;AAGA;;;;;;;AACA;AACA;AACA;;;;;;;AAGA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;;;;;;;AAGA;AAGA;AAvJA;;AACA;AACA;AAEA;AACA;AACA;;;AANA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AAMA;AAQA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;AAYA;AAEA;AAcA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AAKA;AAKA;AAKA;AAKA;AAKA;AAKA;AACA;AACA;;;;;;;;AAYA;AA5FA;;AAYA;;;AAZA;AA8FA;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAGA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;AAEA;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGA;;;;;;;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;;;;;;;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;AAEA;AAMA;AA/LA;;AAyBA;AACA;AACA;AAEA;AACA;;;AA9BA;AAiMA;;AASA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AAKA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;;;;;;;AACA;AAGA;;;;;;;AACA;AASA;AAjGA;;AASA;AACA;;;AAVA;AAmGA;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;AAGA;AAVA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChaA;AACA;AACA;AAEA;;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;;;;;;;;AAIA;AApBA;;AACA;;;AADA;AAsBA;;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AA1CA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AAMA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAKA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;AACA;;;;;;;;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;;;;;;;AAIA;;;;;;;AAEA;AAAA;;;;;;;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAIA;;;;;;;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAKA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AAMA;AAEA;AAAA;AAAA;AAAA;;AACA;AACA;;;;;;;AAEA;AAGA;AAAA;AAAA;AAAA;;AACA;AACA;;;;;;;AAEA;AAGA;AAAA;AAAA;AAAA;;AACA;AACA;;;;;;;AAEA;;;;;;;AAGA;AAEA;AACA;;;;;;;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;AAGA;AAIA;AA3MA;;AAYA;AACA;AACA;AACA;;;AAfA;AA6MA;;AASA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAEA;AACA;AAAA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;;;;;;;;AAKA;AAvDA;;AASA;;;AATA;AAyDA;;AASA;AACA;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;;;;;;;AACA;AAIA;AAAA;AAAA;AAAA;;;;;;;AACA;AAAA;;;;;;;AAAA;AAEA;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AAKA;AA/BA;;AASA;;;AATA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxSA;AACA;AAEA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA;AAKA;AACA;AACA;AACA;AACA;;;;;;;AACA;;;;;;;AACA;AAGA;AAhCA;;AACA;AACA;AACA;;;AAHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAQA;AACA;AAMA;AAKA;AACA;AAEA;AAEA;AAEA;;AAWA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAnCA;;AAWA;;;AAXA;AAqCA;;AAanRA;;AAaA;AACA;AACA;AACA;AACA;;;AAjBA;AAqRA;;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;;;AAGA;AAVA;;AACA;;;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvVA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AAWA;AACA;AACA;AAKA;;AACA;AACA;AACA;AACA;AAAA;;;;;;;AACA;AAAA;;;;;;;;AAEA;AACA;AACA;AATA;;AACA;;;AADA;AAUA;;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAZA;AAAA;AAaA;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;AAAA;AAAA;;;;;;;;AACA;AAhHA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAVA;AAiHA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;;AACA;;;AADA;AAQA;;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;;AAAA;;;AAqBA;;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAdA;;AAAA;;;AAeA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtNA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGA;AASA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AACA;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA;;AAIA;AACA;AAUA;;;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AAKA;AACA;AACA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA7CA;;AACA;AACA;;;AA4CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA5BA;;AAGA;AAEA;AACA;;;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA","sources":["webpack://@coral-xyz/app-extension/./src/api/preferences.ts","webpack://@coral-xyz/app-extension/./src/app/Router.tsx","webpack://@coral-xyz/app-extension/./src/components/Locked/LockedMenu.tsx","webpack://@coral-xyz/app-extension/./src/components/Locked/Reset/ResetWarning.tsx","webpack://@coral-xyz/app-extension/./src/components/Locked/Reset/ResetWelcome.tsx","webpack://@coral-xyz/app-extension/./src/components/Locked/Reset/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Locked/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Onboarding/pages/HardwareDefaultWallet.tsx","webpack://@coral-xyz/app-extension/./src/components/Onboarding/pages/HardwareDeriveWallet.tsx","webpack://@coral-xyz/app-extension/./src/components/Onboarding/pages/HardwareOnboard.tsx","webpack://@coral-xyz/app-extension/./src/components/Onboarding/pages/HardwareSearchWallet.tsx","webpack://@coral-xyz/app-extension/./src/components/Onboarding/pages/HardwareSign.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Approvals/ApproveMessage.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Approvals/ApproveOrigin.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Approvals/ApproveTransaction.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Approvals/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/ApproveTransactionRequest.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Apps/Plugin.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Apps/Renderer.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Apps/Simulator.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Apps/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/BalanceSummaryWidget.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/Balances.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/Notifications.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/RecentActivity.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/RecentSolanaActivity/Icons.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/RecentSolanaActivity/ListItem.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/RecentSolanaActivity/NoRecentActivity.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/RecentSolanaActivity/RecentSolanaActivityList.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/RecentSolanaActivity/TransactionDetail.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/RecentSolanaActivity/detail-parser.ts","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/StripeRamp.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/TokensWidget/AddressSelector.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/TokensWidget/Deposit.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/TokensWidget/Ethereum/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/TokensWidget/Ramp.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/TokensWidget/Send.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/TokensWidget/Solana/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/TokensWidget/Token.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/TokensWidget/TokenBadge.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/TransferWidget.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Balances/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Messages/ChatDrawer.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Messages/Contacts.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Messages/MessageOptions.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Messages/Requests.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Messages/SearchUsers.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Messages/UserListSkeleton.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Messages/styles.ts","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Nfts/Collection.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Nfts/CollectionEntry.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Nfts/EntryONE.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Nfts/Experience.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Nfts/NftDetail.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Nfts/NftEntry.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Nfts/NftTable.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Nfts/SendDrawer.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Nfts/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/PrimaryPubkeySelector.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AboutBackpack/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AddConnectWallet/ConnectHardware/ConnectHardwareApp.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AddConnectWallet/ConnectHardware/ConnectHardwareFailure.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AddConnectWallet/ConnectHardware/ConnectHardwareSearching.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AddConnectWallet/ConnectHardware/ConnectHardwareWelcome.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AddConnectWallet/CreateMnemonic.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AddConnectWallet/ImportMenu.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AddConnectWallet/ImportMnemonic.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AddConnectWallet/ImportSecretKey.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AddConnectWallet/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AvatarHeader/AvatarHeader.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AvatarHeader/UpdateProfilePicture.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/AvatarPopover.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/AutoLock.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/Ethereum/Connection.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/Ethereum/CustomRpcUrl.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/Ethereum/common.ts","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/Ethereum/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/Solana/Commitment.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/Solana/ConnectionSwitch.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/Solana/CustomRpcUrl.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/Solana/Explorer.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/Solana/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/TrustedSites.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Preferences/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/SettingsNavStackDrawer.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Xnfts/Detail.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/Xnfts/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/YourAccount/ChangePassword.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/YourAccount/EditWallets/RemoveWallet.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/YourAccount/EditWallets/RenameWallet.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/YourAccount/EditWallets/WalletDetail.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/YourAccount/EditWallets/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/YourAccount/ShowPrivateKey.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/YourAccount/ShowRecoveryPhrase.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/YourAccount/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Settings/index.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/Swap.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/WithAuth.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/WithVersion.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/XnftPopovers/ErrorTransaction.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/XnftPopovers/Sending.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/XnftPopovers/Success.tsx","webpack://@coral-xyz/app-extension/./src/components/Unlocked/index.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Account/ImportWallets.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Account/MnemonicInput.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Account/PrivateKeyInput.tsx","webpack://@coral-xyz/app-extension/./src/components/common/ApproveTransactionDrawer.tsx","webpack://@coral-xyz/app-extension/./src/components/common/CopyablePublicKey.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Icon/index.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/ActionCard.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/BottomCard.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/Drawer.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/Nav.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/NavStack.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/RightClickMenu.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/Router.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/Scrollbar.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/Tab.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Layout/XnftAppStack.tsx","webpack://@coral-xyz/app-extension/./src/components/common/NotificationIconWithBadge.tsx","webpack://@coral-xyz/app-extension/./src/components/common/PopoverMenu.tsx","webpack://@coral-xyz/app-extension/./src/components/common/Settings/List.tsx","webpack://@coral-xyz/app-extension/./src/components/common/TokenAmountHeader.tsx","webpack://@coral-xyz/app-extension/./src/components/common/TokenInput.tsx","webpack://@coral-xyz/app-extension/./src/components/common/TokenTable.tsx","webpack://@coral-xyz/app-extension/./src/components/common/TransactionData.tsx","webpack://@coral-xyz/app-extension/./src/components/common/WalletList.tsx","webpack://@coral-xyz/app-extension/./src/components/common/WithCopyTooltip.tsx","webpack://@coral-xyz/app-extension/./src/components/common/index.tsx","webpack://@coral-xyz/app-extension/./src/gates/FEATURES.ts","webpack://@coral-xyz/app-extension/./src/hooks/useSteps.tsx","webpack://@coral-xyz/app-extension/./src/permissions/utils.ts","webpack://@coral-xyz/app-extension/./src/plugin/Component.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/GroupIdentifier.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/SearchBar.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/SearchBody.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/Spotlight.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/SpotlightCell.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/SpotlightContacts.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/SpotlightGroups.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/SpotlightNfts.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/SpotlightTokens.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/SpotlightXnfts.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/colors.ts","webpack://@coral-xyz/app-extension/./src/spotlight/styles.ts","webpack://@coral-xyz/app-extension/./src/spotlight/useSearchedContacts.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/useSearchedGroups.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/useSearchedNfts.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/useSearchedTokens.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/useSearchedXnfts.tsx","webpack://@coral-xyz/app-extension/./src/spotlight/utils.ts","webpack://@coral-xyz/app-extension/./src/utils/solana.ts","webpack://@coral-xyz/app-extension/../background/src/backend/keyring/crypto.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/db.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/feature-gates.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/index.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/isCold.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/keyname.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/keyring.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/migrations/index.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/migrations/migrate_0_2_0_2408.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/migrations/migrate_0_2_0_510.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/navigation.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/preferences.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/usernames.ts","webpack://@coral-xyz/app-extension/../background/src/backend/store/xnft-preferences.ts","webpack://@coral-xyz/app-extension/../blockchains/common/dist/esm/index.js","webpack://@coral-xyz/app-extension/../blockchains/evm/dist/esm/index.js","webpack://@coral-xyz/app-extension/../blockchains/evm/dist/esm/keyring/index.js","webpack://@coral-xyz/app-extension/../blockchains/evm/dist/esm/util.js","webpack://@coral-xyz/app-extension/../blockchains/keyring/dist/esm/blockchain.js","webpack://@coral-xyz/app-extension/../blockchains/keyring/dist/esm/index.js","webpack://@coral-xyz/app-extension/../blockchains/keyring/dist/esm/ledger.js","webpack://@coral-xyz/app-extension/../blockchains/keyring/dist/esm/types.js","webpack://@coral-xyz/app-extension/../blockchains/solana/dist/esm/index.js","webpack://@coral-xyz/app-extension/../blockchains/solana/dist/esm/keyring/index.js","webpack://@coral-xyz/app-extension/../blockchains/solana/dist/esm/util.js","webpack://@coral-xyz/app-extension/../chat-sdk/src/MessagePluginRenderer.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/AboveMessagePluginRenderer.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/Attachment.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/Banner.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/Barter.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/ChatContext.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/ChatRoom.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/EmojiPicker.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/EmptyChat.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/FullScreenChat.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/GifPicker.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/Icons.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/MediaContent.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/Message.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/MessagesSkeleton.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/NftSticker.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/NftStickerRender.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/ParsedMessage.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/ReplyContainer.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/ScrollbarImpl.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/SecureTransfer.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/SendMessage.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/SimpleTransaction.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/AbsolutelyNothingCard.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/AddAssetsCard.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/BarterContext.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/BarterHeader.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/BarterModal.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/BarterPoke.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/BarterUi.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/CheckMark.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/SelectPage.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/barter/SwapPage.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/messageInput/MessageInput.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/messageInput/MessageInputProvider.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/plugins/NftStickerPlugin.tsx","webpack://@coral-xyz/app-extension/../chat-sdk/src/components/styles.ts","webpack://@coral-xyz/app-extension/../chat-sdk/src/index.ts","webpack://@coral-xyz/app-extension/../chat-sdk/src/utils/constants.ts","webpack://@coral-xyz/app-extension/../chat-sdk/src/utils/imageUploadUtils.ts","webpack://@coral-xyz/app-extension/../chat-sdk/src/utils/secure-transfer/IDL.ts","webpack://@coral-xyz/app-extension/../chat-sdk/src/utils/secure-transfer/secureTransfer.ts","webpack://@coral-xyz/app-extension/../message-sdk/src/ParentCommunicationManager.ts","webpack://@coral-xyz/app-extension/../message-sdk/src/components/ChatScreen.tsx","webpack://@coral-xyz/app-extension/../message-sdk/src/components/EmptyRequests.tsx","webpack://@coral-xyz/app-extension/../message-sdk/src/components/Inbox.tsx","webpack://@coral-xyz/app-extension/../message-sdk/src/components/MessageList.tsx","webpack://@coral-xyz/app-extension/../message-sdk/src/components/MessagesSkeleton.tsx","webpack://@coral-xyz/app-extension/../message-sdk/src/components/ProfileScreen.tsx","webpack://@coral-xyz/app-extension/../message-sdk/src/components/RequestsScreen.tsx","webpack://@coral-xyz/app-extension/../message-sdk/src/components/UserList.tsx","webpack://@coral-xyz/app-extension/../message-sdk/src/components/index.ts","webpack://@coral-xyz/app-extension/../message-sdk/src/components/styles.tsx","webpack://@coral-xyz/app-extension/../message-sdk/src/config.ts","webpack://@coral-xyz/app-extension/../message-sdk/src/index.ts","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/AuthenticatedSync.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/BackgroundChatsSync.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/Signaling.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/SignalingManager.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/fetchMoreChatsFor.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/getAuthHeader.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/getSanitizedTitle.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/refreshChatsFor.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/refreshGroupsAndFriendships.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/refreshIndividualChatsFor.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/chat/refreshUpdatesFor.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/hooks/chat/useChatsWithMetadata.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/hooks/chat/useUserMetadata.js","webpack://@coral-xyz/app-extension/../tamagui-core/dist/esm/hooks/chat/useUsersMetadata.js","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/asn1.js/node_modules/bn.js/lib|buffer","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/brorand|crypto","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/create-ecdh/node_modules/bn.js/lib|buffer","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/diffie-hellman/node_modules/bn.js/lib|buffer","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/elliptic/node_modules/bn.js/lib|buffer","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/miller-rabin/node_modules/bn.js/lib|buffer","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/object-inspect|./util.inspect","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/public-encrypt/node_modules/bn.js/lib|buffer","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/readable-stream/lib/internal/streams|util","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/readable-stream/lib|util","webpack://@coral-xyz/app-extension/ignored|/Users/pratham/Documents/GitHub/backpack/node_modules/tiny-secp256k1/node_modules/bn.js/lib|buffer"],"sourcesContent":["import type { ChannelAppUiClient } from \"@coral-xyz/common\";\nimport {\n  BACKEND_API_URL,\n  UI_RPC_METHOD_SET_XNFT_PREFERENCES,\n} from \"@coral-xyz/common\";\n\nexport const refreshXnftPreferences = async (\n  background: ChannelAppUiClient\n) => {\n  try {\n    const res = await fetch(`${BACKEND_API_URL}/preferences`);\n    const json = await res.json();\n    if (!json.xnftPreferences) throw new Error(json.message);\n    json.xnftPreferences.map(async (xnftPreference: any) => {\n      await background.request({\n        method: UI_RPC_METHOD_SET_XNFT_PREFERENCES,\n        params: [\n          xnftPreference.xnftId,\n          {\n            notifications: xnftPreference.notifications || false,\n          },\n        ],\n      });\n    });\n  } catch (e) {\n    console.warn(`Error while refreshing xnft preferences ${e}`);\n  }\n};\n\nexport const updateRemotePreference = (\n  xnftId: string,\n  username: string,\n  preferences: { notifications: boolean }\n) => {\n  return fetch(`${BACKEND_API_URL}/preferences`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username,\n      xnftId: xnftId,\n      preferences,\n    }),\n  });\n};\n","import React, { Suspense, useEffect } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport type { Blockchain, FeeConfig } from \"@coral-xyz/common\";\nimport {\n  EXTENSION_HEIGHT,\n  EXTENSION_WIDTH,\n  getLogger,\n  openOnboarding,\n  QUERY_APPROVAL,\n  QUERY_APPROVE_ALL_TRANSACTIONS,\n  QUERY_APPROVE_MESSAGE,\n  QUERY_APPROVE_TRANSACTION,\n  QUERY_LOCKED,\n  QUERY_LOCKED_APPROVAL,\n  toTitleCase,\n} from \"@coral-xyz/common\";\nimport { EmptyState } from \"@coral-xyz/react-common\";\nimport {\n  KeyringStoreStateEnum,\n  useApprovedOrigins,\n  useBackgroundClient,\n  useBackgroundResponder,\n  useBootstrapFast,\n  useDarkMode,\n  useEnabledBlockchains,\n  useKeyringStoreState,\n} from \"@coral-xyz/recoil\";\nimport { AuthenticatedSync } from \"@coral-xyz/tamagui\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Block as BlockIcon } from \"@mui/icons-material\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n\nimport { refreshXnftPreferences } from \"../api/preferences\";\nimport { Locked } from \"../components/Locked\";\nimport { Unlocked } from \"../components/Unlocked\";\nimport { ApproveMessage } from \"../components/Unlocked/Approvals/ApproveMessage\";\nimport { ApproveOrigin } from \"../components/Unlocked/Approvals/ApproveOrigin\";\nimport {\n  ApproveAllTransactions,\n  ApproveTransaction,\n} from \"../components/Unlocked/Approvals/ApproveTransaction\";\nimport { WithAuth } from \"../components/Unlocked/WithAuth\";\nimport { refreshFeatureGates } from \"../gates/FEATURES\";\nimport { sanitizeTransactionWithFeeConfig } from \"../utils/solana\";\n\nimport \"./App.css\";\n\nconst logger = getLogger(\"router\");\n\nexport default function Router() {\n  const theme = useCustomTheme();\n  const isDarkMode = useDarkMode();\n  return (\n    <WithSuspense>\n      <>\n        <ToastContainer\n          toastStyle={{\n            backgroundColor: theme.custom.colors.switchTokensButton,\n          }}\n          theme={isDarkMode ? \"dark\" : \"light\"}\n        />\n        <_Router />\n      </>\n    </WithSuspense>\n  );\n}\n\n// Hack: we use this lock variable to ensure that the onboarding flow\n//       can only open once per second. This is to avoid multiple\n//       windows opening up at once.\nlet lock = 0;\nfunction _Router() {\n  const needsOnboarding =\n    useKeyringStoreState() === KeyringStoreStateEnum.NeedsOnboarding;\n\n  useEffect(() => {\n    const current = Date.now();\n    // if the user needs onboarding then open the expanded view\n    if (needsOnboarding && current - lock > 1000) {\n      lock = current;\n      openOnboarding();\n    }\n  }, [needsOnboarding]);\n\n  return needsOnboarding ? null : <PopupView />;\n}\n\nfunction PopupView() {\n  const classes = useStyles();\n  return (\n    <div className={classes.appContainer}>\n      <PopupRouter />\n    </div>\n  );\n}\n\n//\n// Router for components that display in the extension popup--distinct from\n// the expanded full app view.\n//\n// Query paramaters determines the app flow. There are four cases.\n//\n// 1) There is no query parameter. In this case, the extension is being\n//    opened from the browser toolbar. This is the normal path and we simply\n//    show the normal app.\n// 2) There is a \"locked\" query parameter. This means an app is trying to\n//    connect, and has been previously been approved. But the wallet is locked\n//    so we provide the ability to unlock and nothing more.\n// 3) There is a \"approval\" parameter. This means the app is trying to\n//    connect, and the wallet is unlocked. But has not been previously approved.\n//    So we provide the ability to approve the app and nothing more.\n// 4) There is a \"locked-approval\" query parameter. This combines 2) and 3).\n//    First we provide the ability to unlock the wallet, and then approve.\n//\nfunction PopupRouter() {\n  logger.debug(\"app router search\", window.location.search);\n  //\n  // Extract the url query parameters for routing dispatch.\n  //\n  const search =\n    window.location.search.length > 0\n      ? window.location.search.substring(1)\n      : \"\";\n  const query = search.split(\"&\")[0];\n\n  // Render the app flows described above.\n  switch (query) {\n    case QUERY_LOCKED:\n      return <QueryLocked />;\n    case QUERY_LOCKED_APPROVAL:\n      return <QueryLockedApproval />;\n    case QUERY_APPROVAL:\n      return <QueryApproval />;\n    case QUERY_APPROVE_TRANSACTION:\n      return <QueryApproveTransaction />;\n    case QUERY_APPROVE_ALL_TRANSACTIONS:\n      return <QueryApproveAllTransactions />;\n    case QUERY_APPROVE_MESSAGE:\n      return <QueryApproveMessage />;\n    default:\n      return <FullApp />;\n  }\n}\n\nfunction QueryLocked() {\n  logger.debug(\"query locked\");\n  const background = useBackgroundResponder();\n  const url = new URL(window.location.href);\n  const requestId = url.searchParams.get(\"requestId\")!;\n  const keyringStoreState = useKeyringStoreState();\n  const isLocked = keyringStoreState === KeyringStoreStateEnum.Locked;\n\n  // Wallet is unlocked so close the window. We're done.\n  if (!isLocked) {\n    return null;\n  }\n\n  return (\n    <LockedBootstrap\n      onUnlock={async () => {\n        await background.response({\n          id: requestId,\n          result: true,\n        });\n      }}\n    />\n  );\n}\n\nfunction QueryLockedApproval() {\n  logger.debug(\"query locked approval\");\n  const keyringStoreState = useKeyringStoreState();\n  const isLocked = keyringStoreState === KeyringStoreStateEnum.Locked;\n  return isLocked ? <LockedBootstrap /> : <QueryApproval />;\n}\n\nfunction QueryApproval() {\n  logger.debug(\"query approval\");\n  const background = useBackgroundResponder();\n  const url = new URL(window.location.href);\n  const origin = url.searchParams.get(\"origin\");\n  const title = url.searchParams.get(\"title\");\n  const requestId = url.searchParams.get(\"requestId\")!;\n  const blockchain = url.searchParams.get(\"blockchain\")! as Blockchain;\n  const approvedOrigins = useApprovedOrigins();\n  const found = approvedOrigins.find((ao) => ao === origin);\n\n  // Origin is found so close the window. We're done.\n  if (found) {\n    window.close();\n  }\n\n  return (\n    <WithEnabledBlockchain blockchain={blockchain!}>\n      <WithUnlock>\n        <ApproveOrigin\n          origin={origin}\n          title={title}\n          blockchain={blockchain}\n          onCompletion={async (result: { didApprove: boolean }) => {\n            await background.response({\n              id: requestId,\n              result,\n            });\n          }}\n        />\n      </WithUnlock>\n    </WithEnabledBlockchain>\n  );\n}\n\nfunction QueryApproveTransaction() {\n  logger.debug(\"query approve transaction\");\n  const background = useBackgroundResponder();\n  const url = new URL(window.location.href);\n  const origin = url.searchParams.get(\"origin\");\n  const title = url.searchParams.get(\"title\");\n  const requestId = url.searchParams.get(\"requestId\")!;\n  const tx = url.searchParams.get(\"tx\");\n  const wallet = url.searchParams.get(\"wallet\")!;\n  const blockchain = url.searchParams.get(\"blockchain\")! as Blockchain;\n\n  return (\n    <WithUnlock>\n      <WithEnabledBlockchain blockchain={blockchain}>\n        <ApproveTransaction\n          origin={origin!}\n          title={title!}\n          tx={tx}\n          wallet={wallet}\n          onCompletion={async (\n            txStr: any,\n            feeConfig?: { config: FeeConfig; disabled: boolean }\n          ) => {\n            if (!txStr) {\n              await background.response({\n                id: requestId,\n                result: {\n                  didApprove: false,\n                },\n              });\n              return;\n            }\n            const sanitizedTxStr = sanitizeTransactionWithFeeConfig(\n              txStr,\n              blockchain,\n              feeConfig\n            );\n            await background.response({\n              id: requestId,\n              result: {\n                didApprove: true,\n                transaction: sanitizedTxStr,\n                feeConfig: !feeConfig\n                  ? undefined\n                  : {\n                      ...feeConfig,\n                      config: {\n                        ...feeConfig.config,\n                        priorityFee: feeConfig.config.priorityFee.toString(),\n                      },\n                    },\n              },\n            });\n          }}\n        />\n      </WithEnabledBlockchain>\n    </WithUnlock>\n  );\n}\n\nfunction QueryApproveAllTransactions() {\n  logger.debug(\"query approve all transactions\");\n  const background = useBackgroundResponder();\n  const url = new URL(window.location.href);\n  const origin = url.searchParams.get(\"origin\")!;\n  const title = url.searchParams.get(\"title\")!;\n  const requestId = url.searchParams.get(\"requestId\")!;\n  const txs = JSON.parse(url.searchParams.get(\"txs\")!);\n  const wallet = url.searchParams.get(\"wallet\")!;\n  const blockchain = url.searchParams.get(\"blockchain\")! as Blockchain;\n\n  return (\n    <WithUnlock>\n      <WithEnabledBlockchain blockchain={blockchain}>\n        <ApproveAllTransactions\n          origin={origin!}\n          title={title!}\n          txs={txs}\n          wallet={wallet}\n          onCompletion={async (didApprove: boolean) => {\n            await background.response({\n              id: requestId,\n              result: didApprove,\n            });\n          }}\n        />\n      </WithEnabledBlockchain>\n    </WithUnlock>\n  );\n}\n\nfunction QueryApproveMessage() {\n  logger.debug(\"query approve message\");\n  const bg = useBackgroundResponder();\n  const url = new URL(window.location.href);\n  const origin = url.searchParams.get(\"origin\");\n  const title = url.searchParams.get(\"title\");\n  const message = url.searchParams.get(\"message\");\n  const requestId = url.searchParams.get(\"requestId\")!;\n  const wallet = url.searchParams.get(\"wallet\")!;\n  const blockchain = url.searchParams.get(\"blockchain\")! as Blockchain;\n\n  return (\n    <WithUnlock>\n      <WithEnabledBlockchain blockchain={blockchain}>\n        <ApproveMessage\n          origin={origin}\n          title={title}\n          message={message}\n          wallet={wallet}\n          onCompletion={async (didApprove: boolean) => {\n            await bg.response({\n              id: requestId,\n              result: didApprove,\n            });\n          }}\n        />\n      </WithEnabledBlockchain>\n    </WithUnlock>\n  );\n}\n\nfunction FullApp() {\n  logger.debug(\"full app\");\n  const background = useBackgroundClient();\n\n  useEffect(() => {\n    (async () => {\n      await Promise.all([\n        refreshFeatureGates(background),\n        refreshXnftPreferences(background),\n      ]);\n    })();\n  }, [background]);\n\n  return (\n    <WithUnlock>\n      <Unlocked />\n    </WithUnlock>\n  );\n}\n\nfunction WithEnabledBlockchain({\n  blockchain,\n  children,\n}: {\n  blockchain: Blockchain;\n  children: React.ReactNode;\n}) {\n  const enabledBlockchains = useEnabledBlockchains();\n  const isEnabled = enabledBlockchains.includes(blockchain);\n  return (\n    <>\n      {isEnabled ? (\n        children\n      ) : (\n        <EmptyState\n          icon={(props: any) => <BlockIcon {...props} />}\n          title={`${toTitleCase(blockchain)} is disabled`}\n          subtitle={`Add a ${toTitleCase(blockchain)} wallet in Backpack`}\n        />\n      )}\n    </>\n  );\n}\n\nfunction WithUnlock({ children }: { children: React.ReactElement }) {\n  const keyringStoreState = useKeyringStoreState();\n  const needsOnboarding =\n    keyringStoreState === KeyringStoreStateEnum.NeedsOnboarding;\n  const isLocked =\n    !needsOnboarding && keyringStoreState === KeyringStoreStateEnum.Locked;\n\n  return (\n    <AnimatePresence initial={false}>\n      <WithLockMotion id={isLocked ? \"locked\" : \"unlocked\"}>\n        <Suspense fallback={<div style={{ display: \"none\" }} />}>\n          {isLocked ? (\n            <Locked />\n          ) : (\n            <>\n              <AuthenticatedSync />\n              <WithAuth>{children}</WithAuth>\n            </>\n          )}\n        </Suspense>\n      </WithLockMotion>\n    </AnimatePresence>\n  );\n}\n\nfunction WithLockMotion({ children, id }: any) {\n  return (\n    <motion.div\n      style={{\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      }}\n      key={id}\n      variants={MOTION_VARIANTS}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n    >\n      {children}\n    </motion.div>\n  );\n}\n\nfunction LockedBootstrap({ onUnlock }: any) {\n  useBootstrapFast();\n  return <Locked onUnlock={onUnlock} />;\n}\n\nexport function WithSuspense(props: any) {\n  return <Suspense fallback={<BlankApp />}>{props.children}</Suspense>;\n}\n\nexport function BlankApp() {\n  const classes = useStyles();\n  return <div className={classes.appContainer} />;\n}\n\nconst useStyles = styles((theme) => {\n  return {\n    appContainer: {\n      minWidth: `${EXTENSION_WIDTH}px`,\n      minHeight: `${EXTENSION_HEIGHT}px`,\n      height: \"100%\",\n      background: theme.custom.colors.backgroundBackdrop,\n      display: \"flex\",\n      flexDirection: \"column\",\n      overflow: \"hidden\",\n      position: \"relative\",\n    },\n  };\n});\n\nexport const MOTION_VARIANTS = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n    transition: { delay: 0.09 },\n  },\n  exit: {\n    transition: { delay: 0.09, duration: 0.1 },\n    opacity: 0,\n  },\n};\n","import { useEffect,useState } from \"react\";\nimport {\n  BACKPACK_LINK,\n  DISCORD_INVITE_LINK,\n  TWITTER_LINK,\n} from \"@coral-xyz/common\";\nimport { DiscordIcon, List, ListItem } from \"@coral-xyz/react-common\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport CallMadeIcon from \"@mui/icons-material/CallMade\";\nimport ChevronRightIcon from \"@mui/icons-material/ChevronRight\";\nimport LockIcon from \"@mui/icons-material/Lock\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport { Box, IconButton, ListItemText, Toolbar } from \"@mui/material\";\n\nimport { CloseButton, WithMiniDrawer } from \"../common/Layout/Drawer\";\nimport { NAV_BAR_HEIGHT } from \"../common/Layout/Nav\";\nimport {\n  NavStackEphemeral,\n  NavStackScreen,\n  useNavigation,\n} from \"../common/Layout/NavStack\";\n\nimport { ResetWarning } from \"./Reset/ResetWarning\";\nimport { Reset } from \"./Reset\";\n\nconst useStyles = styles((theme) => ({\n  listItemRoot: {\n    height: \"44px\",\n    display: \"flex\",\n    backgroundColor: `${theme.custom.colors.nav} !important`,\n  },\n}));\n\nexport function LockedMenu({ menuOpen, setMenuOpen }: any) {\n  const theme = useCustomTheme() as any;\n  return (\n    <Toolbar\n      sx={{\n        zIndex: 2,\n        display: \"flex\",\n        flexDirection: \"row-reverse\",\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        height: NAV_BAR_HEIGHT,\n      }}\n    >\n      <IconButton\n        disableRipple\n        color=\"inherit\"\n        onClick={() => setMenuOpen(true)}\n        sx={{\n          padding: 0,\n          \"&:hover\": {\n            background: \"transparent !important\",\n            backgroundColor: \"transparent !important\",\n          },\n        }}\n      >\n        <MenuIcon sx={{ color: theme.custom.colors.icon }} />\n      </IconButton>\n      <WithMiniDrawer\n        openDrawer={menuOpen}\n        setOpenDrawer={setMenuOpen}\n        backdropProps={{\n          style: {\n            opacity: 0.8,\n            background: \"#18181b\",\n          },\n        }}\n        paperProps={{\n          sx: {\n            background: theme.custom.colors.backgroundBackdrop,\n            height: \"90%\",\n          },\n        }}\n      >\n        <div style={{ height: \"100%\" }}>\n          <NavStackEphemeral\n            initialRoute={{ name: \"root\" }}\n            options={() => ({ title: \"\" })}\n            navButtonLeft={<CloseButton onClick={() => setMenuOpen(false)} />}\n          >\n            <NavStackScreen\n              name=\"root\"\n              component={(props: any) => <LockedMenuList {...props} />}\n            />\n            <NavStackScreen\n              name=\"reset\"\n              component={(props: any) => <Reset {...props} />}\n            />\n            <NavStackScreen\n              name=\"reset-warning\"\n              component={(props: any) => <ResetWarning {...props} />}\n            />\n          </NavStackEphemeral>\n        </div>\n      </WithMiniDrawer>\n    </Toolbar>\n  );\n}\n\nexport function LockedMenuList() {\n  const theme = useCustomTheme();\n  const nav = useNavigation();\n  const classes = useStyles();\n\n  const options = [\n    {\n      icon: <AccountCircleIcon style={{ color: theme.custom.colors.icon }} />,\n      text: \"Reset Backpack\",\n      onClick: () => nav.push(\"reset\"),\n      suffix: (\n        <ChevronRightIcon\n          style={{\n            flexShrink: 1,\n            alignSelf: \"center\",\n            color: theme.custom.colors.icon,\n          }}\n        />\n      ),\n    },\n    {\n      icon: <LockIcon style={{ color: theme.custom.colors.icon }} />,\n      text: \"Backpack.app\",\n      onClick: () => window.open(BACKPACK_LINK, \"_blank\"),\n    },\n    {\n      icon: <TwitterIcon style={{ color: theme.custom.colors.icon }} />,\n      text: \"Twitter\",\n      onClick: () => window.open(TWITTER_LINK, \"_blank\"),\n    },\n    {\n      icon: <DiscordIcon fill={theme.custom.colors.icon} />,\n      text: \"Need help? Hop into Discord\",\n      onClick: () => window.open(DISCORD_INVITE_LINK, \"_blank\"),\n    },\n  ];\n\n  return (\n    <Box sx={{ color: theme.custom.colors.fontColor }}>\n      <List\n        style={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          border: theme.custom.colors.borderFull,\n        }}\n      >\n        {options.map((o, idx) => (\n          <ListItem\n            onClick={o.onClick}\n            key={o.text}\n            isFirst={idx === 0}\n            isLast={idx === options.length - 1}\n            borderColor={theme.custom.colors.nav}\n            classes={{ root: classes.listItemRoot }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n              }}\n            >\n              {o.icon}\n            </div>\n            <ListItemText\n              sx={{\n                marginLeft: \"8px\",\n                fontSize: \"16px\",\n                lineHeight: \"24px\",\n                fontWeight: 500,\n              }}\n              primary={o.text}\n            />\n            {o.suffix ?? (\n              <CallMadeIcon\n                style={{\n                  flexShrink: 1,\n                  alignSelf: \"center\",\n                  color: theme.custom.colors.icon,\n                }}\n              />\n            )}\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n","import { useEffect } from \"react\";\nimport {\n  UI_RPC_METHOD_KEYRING_RESET,\n  UI_RPC_METHOD_USER_ACCOUNT_LOGOUT,\n} from \"@coral-xyz/common\";\nimport {\n  DangerButton,\n  SecondaryButton,\n  WarningIcon,\n} from \"@coral-xyz/react-common\";\nimport { useBackgroundClient, useUser } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, HeaderIcon, SubtextParagraph } from \"../../common\";\nimport { useDrawerContext } from \"../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../common/Layout/NavStack\";\n\nexport function Logout() {\n  const { close } = useDrawerContext();\n  const nav = useNavigation();\n  const user = useUser();\n  const background = useBackgroundClient();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: `Remove ${user.username}` });\n  }, []);\n\n  return (\n    <Warning\n      buttonTitle=\"Remove\"\n      title=\"Remove User\"\n      subtext=\"This will remove all the wallets you have created or imported. Make sure you have your existing secret recovery phrase and private keys saved.\"\n      onNext={async () => {\n        await background.request({\n          method: UI_RPC_METHOD_USER_ACCOUNT_LOGOUT,\n          params: [user.uuid],\n        });\n        setTimeout(close, 250);\n      }}\n    />\n  );\n}\n\nexport function ResetWarning() {\n  const background = useBackgroundClient();\n  const nav = useNavigation();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Reset Backpack\" });\n  }, []);\n\n  return (\n    <Warning\n      buttonTitle=\"Reset\"\n      title=\"Reset Backpack\"\n      subtext=\"This will remove all the user accounts you have created or imported. Make sure you have your existing secret recovery phrase and private keys saved.\"\n      onNext={async () => {\n        await background.request({\n          method: UI_RPC_METHOD_KEYRING_RESET,\n          params: [],\n        });\n        window.close();\n      }}\n    />\n  );\n}\n\nfunction Warning({\n  title,\n  buttonTitle,\n  subtext,\n  onNext,\n}: {\n  title: string;\n  buttonTitle: string;\n  subtext: string;\n  onNext: () => void;\n}) {\n  const theme = useCustomTheme();\n  const { close } = useDrawerContext();\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"0 24px\" }}>\n        <HeaderIcon icon={<WarningIcon />} />\n        <Header text={title} />\n        <SubtextParagraph>{subtext}</SubtextParagraph>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <SecondaryButton\n          label=\"Cancel\"\n          onClick={close}\n          style={{\n            marginRight: \"8px\",\n            border: `${theme.custom.colors.borderFull}`,\n          }}\n        />\n        <DangerButton label={buttonTitle} onClick={onNext} />\n      </Box>\n    </Box>\n  );\n}\n","import {\n  DangerButton,\n  QuestionIcon,\n  SecondaryButton,\n} from \"@coral-xyz/react-common\";\nimport { KeyringStoreStateEnum, useKeyringStoreState } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, HeaderIcon, SubtextParagraph } from \"../../common\";\nimport { useNavigation } from \"../../common/Layout/NavStack\";\n\nexport function ResetWelcome({ onClose }: { onClose: () => void }) {\n  const keyringStoreState = useKeyringStoreState();\n  const isLocked = keyringStoreState === KeyringStoreStateEnum.Locked;\n\n  const theme = useCustomTheme();\n  const nav = useNavigation();\n  const onNext = () => {\n    nav.push(\"reset-warning\");\n  };\n  const onPop = () => {\n    nav.pop();\n  };\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"0 24px\" }}>\n        <HeaderIcon icon={<QuestionIcon />} />\n        <Header text=\"Forgot your password?\" />\n        <SubtextParagraph>\n          We can’t recover your password as it is only stored on your computer.\n          You can try more passwords or reset your wallet with the secret\n          recovery phrase.\n        </SubtextParagraph>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n        }}\n      >\n        <Box sx={{ mb: \"16px\" }}>\n          <SecondaryButton\n            label=\"Try More Passwords\"\n            onClick={isLocked ? onClose : onPop}\n            style={{\n              border: theme.custom.colors.borderButton,\n            }}\n          />\n        </Box>\n        <DangerButton label=\"Reset Backpack\" onClick={onNext} />\n      </Box>\n    </Box>\n  );\n}\n","import { useEffect } from \"react\";\n\nimport { useDrawerContext } from \"../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../common/Layout/NavStack\";\n\nimport { ResetWelcome } from \"./ResetWelcome\";\n\nexport function Reset() {\n  const { close } = useDrawerContext();\n  const nav = useNavigation();\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"\" });\n  }, []);\n  return <ResetWelcome onClose={close} />;\n}\n","import { useState } from \"react\";\nimport { UI_RPC_METHOD_KEYRING_STORE_UNLOCK } from \"@coral-xyz/common\";\nimport {\n  Backpack,\n  EmptyState,\n  LocalImage,\n  PrimaryButton,\n  ProxyImage,\n  RedBackpack,\n  TextInput,\n} from \"@coral-xyz/react-common\";\nimport { useAvatarUrl, useBackgroundClient, useUser } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Error, Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { Box, IconButton, InputAdornment, Typography } from \"@mui/material\";\n\nimport { WithDrawer } from \"../common/Layout/Drawer\";\nimport { lockScreenKey, lockScreenKeyImage } from \"../Unlocked/Nfts/NftDetail\";\n\nimport { LockedMenu } from \"./LockedMenu\";\n\nexport const NAV_BAR_HEIGHT = 56;\n\nexport function Locked({ onUnlock }: { onUnlock?: () => Promise<void> }) {\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n  const user = useUser();\n\n  const [migrationFailed, setMigrationFailed] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState<boolean>(false);\n\n  const { uuid, nft } = (() => {\n    try {\n      return JSON.parse(\n        window.localStorage.getItem(lockScreenKey(user.uuid)) ??\n          JSON.stringify({ uuid: undefined, nft: undefined })\n      );\n    } catch {\n      return { uuid: undefined, nft: undefined };\n    }\n  })();\n\n  // TODO: uncomment this when ready to release the full screen feature.\n  const isFullScreen = false; //uuid === user.uuid && nft !== undefined;\n\n  const _onUnlock = async (e: any) => {\n    e.preventDefault();\n    try {\n      await background.request({\n        method: UI_RPC_METHOD_KEYRING_STORE_UNLOCK,\n        params: [password, user.uuid],\n      });\n\n      if (onUnlock) {\n        await onUnlock();\n      }\n    } catch (err) {\n      console.error(err);\n      // @ts-ignore\n      if (err.toString().includes(\"migration failed:\")) {\n        setMigrationFailed(true);\n        return;\n      }\n      setError(true);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n    >\n      <Box\n        sx={{\n          backgroundColor: theme.custom.colors.backgroundBackdrop,\n          textAlign: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n          height: \"100%\",\n        }}\n      >\n        <Box>\n          <LockedMenu menuOpen={menuOpen} setMenuOpen={setMenuOpen} />\n          <div style={{ marginTop: \"24px\" }}>\n            <BackpackHeader forceWhite={isFullScreen} style={{ zIndex: 2 }} />\n            <div\n              style={{\n                position: \"relative\",\n              }}\n            >\n              <LockScreenAvatar\n                isFullScreen={isFullScreen}\n                nft={nft}\n                user={user}\n              />\n            </div>\n          </div>\n        </Box>\n\n        <Box style={{ zIndex: 1, marginBottom: 74 }}>\n          <form onSubmit={_onUnlock} noValidate>\n            <Box sx={{ margin: \"0 12px 12px 12px\" }}>\n              <TextInput\n                autoFocus\n                error={error}\n                placeholder=\"Password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={password}\n                setValue={(e) => {\n                  setPassword(e.target.value);\n                  setError(false);\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disableRipple\n                      sx={{ color: theme.custom.colors.icon }}\n                      onClick={() => setShowPassword(!showPassword)}\n                      onMouseDown={() => setShowPassword(!showPassword)}\n                      tabIndex={-1}\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </Box>\n            <Box sx={{ mx: \"12px\" }}>\n              <PrimaryButton label=\"Unlock\" type=\"submit\" />\n            </Box>\n          </form>\n          <Box\n            sx={{\n              position: \"absolute\",\n              width: \"100%\",\n              display: error ? \"block\" : \"none\",\n              marginTop: \"24px\",\n            }}\n          >\n            <Typography\n              sx={{\n                color: isFullScreen ? \"white\" : theme.custom.colors.secondary,\n                fontSize: \"16px\",\n                textAlign: \"center\",\n                cursor: \"pointer\",\n                lineHeight: \"24px\",\n                fontWeight: 500,\n              }}\n              onClick={() => setMenuOpen(true)}\n            >\n              Forgot Password?\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      <WithDrawer openDrawer={migrationFailed} setOpenDrawer={() => {}}>\n        <MigrationFailed />\n      </WithDrawer>\n    </Box>\n  );\n}\n\nfunction LockScreenAvatar({\n  isFullScreen,\n  nft,\n  user,\n}: {\n  isFullScreen: boolean;\n  nft: any;\n  user: any;\n}) {\n  const avatarUrl = useAvatarUrl(120, user.username);\n  return (\n    <div style={{}}>\n      {isFullScreen ? (\n        <>\n          <div\n            style={{\n              position: \"fixed\",\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0,\n              background: \"black\",\n              opacity: 0.2,\n              zIndex: 1,\n            }}\n          />\n          <div\n            style={{\n              position: \"fixed\",\n              inset: 0,\n            }}\n          >\n            <ProxyImage\n              src={avatarUrl}\n              style={{\n                height: \"100vh\",\n                position: \"absolute\",\n                top: 0,\n                transform: \"translate(-50%, 0%)\",\n                transformOrigin: undefined,\n              }}\n              loadingStyles={{\n                position: \"fixed\",\n                left: 0,\n                right: 0,\n                top: 0,\n                bottom: 0,\n                transform: \"inherit\",\n              }}\n            />\n          </div>\n        </>\n      ) : (\n        <ProxyImage\n          size={120}\n          src={avatarUrl}\n          style={{\n            height: \"120px\",\n            width: \"120px\",\n            borderRadius: \"60px\",\n            position: \"absolute\",\n            bottom: -152,\n            transform: \"translate(-50%, 0%)\",\n            transformOrigin: undefined,\n            display: \"inline\",\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction MigrationFailed() {\n  return (\n    <div\n      style={{\n        height: \"100%\",\n      }}\n    >\n      <EmptyState\n        icon={(props: any) => <Error {...props} />}\n        title=\"Unable to migrate\"\n        subtitle={\n          \"Thank you for participating in the Backpack Beta! We weren't able to migrate your account. Please reinstall Backpack to continue. Don't worry, this is normal.\"\n        }\n      />\n    </div>\n  );\n}\n\nexport function BackpackHeader({\n  disableUsername,\n  forceWhite,\n  style,\n}: {\n  disableUsername?: boolean;\n  forceWhite?: boolean;\n  style?: React.CSSProperties;\n}) {\n  const theme = useCustomTheme();\n  const user = useUser();\n  return (\n    <Box\n      sx={{\n        marginTop: \"16px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        display: \"block\",\n        position: \"relative\",\n        ...style,\n      }}\n    >\n      <div style={{ display: \"flex\" }}>\n        <RedBackpack\n          style={{\n            marginBottom: \"32px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      </div>\n      <Backpack fill={forceWhite ? \"white\" : theme.custom.colors.fontColor} />\n      <Typography\n        sx={{\n          textAlign: \"center\",\n          lineHeight: \"24px\",\n          fontSize: \"16px\",\n          fontWeight: \"500\",\n          color: forceWhite ? \"white\" : theme.custom.colors.secondary,\n          marginTop: \"8px\",\n        }}\n      >\n        gm {disableUsername ? \"\" : `@${user.username}`}\n      </Typography>\n    </Box>\n  );\n}\n","// Find an unused account index and return the root derivation path\n// This is the same logic that is contained in the backend function\n// findWalletDescriptor done via a frontend component because the background\n// script can't communicate with a hardware device.\n\nimport { useEffect, useState } from \"react\";\nimport type { WalletDescriptor } from \"@coral-xyz/common\";\nimport {\n  Blockchain,\n  getAccountRecoveryPaths,\n  UI_RPC_METHOD_FIND_SERVER_PUBLIC_KEY_CONFLICTS,\n} from \"@coral-xyz/common\";\nimport { Loading } from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport Ethereum from \"@ledgerhq/hw-app-eth\";\nimport Solana from \"@ledgerhq/hw-app-solana\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport { ethers } from \"ethers\";\n\nconst { base58 } = ethers.utils;\n\nexport const HardwareDefaultWallet = ({\n  blockchain,\n  transport,\n  onNext,\n  onError,\n}: {\n  blockchain: Blockchain;\n  transport: Transport;\n  onNext: (walletDescriptor: WalletDescriptor) => void;\n  onError?: (error: Error) => void;\n}) => {\n  const background = useBackgroundClient();\n  const [ledgerWallet, setLedgerWallet] = useState<Ethereum | Solana | null>(\n    null\n  );\n  const [accountIndex, setAccountIndex] = useState(0);\n\n  useEffect(() => {\n    (async () => {\n      const ledgerWallet = {\n        [Blockchain.SOLANA]: new Solana(transport),\n        [Blockchain.ETHEREUM]: new Ethereum(transport),\n      }[blockchain];\n      setLedgerWallet(ledgerWallet);\n    })();\n  }, [blockchain, transport]);\n\n  // This is effectively the same as UI_RPC_METHOD_FIND_WALLET_DESCRIPTOR\n  useEffect(() => {\n    (async () => {\n      if (ledgerWallet === null) return;\n\n      const recoveryPaths = getAccountRecoveryPaths(blockchain, accountIndex);\n\n      let publicKeys: Array<string> = [];\n      try {\n        // Get the public keys for all of the recovery paths for the current account index\n        for (const path of recoveryPaths) {\n          const ledgerAddress = (\n            await ledgerWallet.getAddress(path.replace(\"m/\", \"\"))\n          ).address;\n          const publicKey =\n            blockchain === Blockchain.SOLANA\n              ? base58.encode(ledgerAddress as Buffer)\n              : ledgerAddress.toString();\n          publicKeys.push(publicKey);\n        }\n      } catch (error) {\n        if (onError) {\n          console.debug(\"hardware default wallet transport error\", error);\n          onError(error as Error);\n          return;\n        } else {\n          throw error;\n        }\n      }\n\n      const users = await background.request({\n        method: UI_RPC_METHOD_FIND_SERVER_PUBLIC_KEY_CONFLICTS,\n        params: [\n          publicKeys.map((publicKey) => ({\n            publicKey,\n            blockchain,\n          })),\n        ],\n      });\n\n      if (users.length === 0) {\n        // No users for any of the passed public keys, good to go\n        // Take the root for the public key path\n        const publicKey = publicKeys[0];\n        const derivationPath = recoveryPaths[0];\n        onNext({\n          blockchain,\n          derivationPath,\n          publicKey,\n        });\n      } else {\n        // Iterate account index and query again in the case of a conflict\n        setAccountIndex(accountIndex + 1);\n      }\n    })();\n  }, [accountIndex, background, blockchain, ledgerWallet, onError, onNext]);\n\n  return <Loading />;\n};\n","import { useEffect, useState } from \"react\";\nimport type { WalletDescriptor } from \"@coral-xyz/common\";\nimport {\n  Blockchain,\n  UI_RPC_METHOD_KEYRING_READ_NEXT_DERIVATION_PATH,\n} from \"@coral-xyz/common\";\nimport { Loading } from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport Ethereum from \"@ledgerhq/hw-app-eth\";\nimport Solana from \"@ledgerhq/hw-app-solana\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport { ethers } from \"ethers\";\n\nconst { base58 } = ethers.utils;\n\nexport const HardwareDeriveWallet = ({\n  blockchain,\n  transport,\n  onNext,\n  onError,\n}: {\n  blockchain: Blockchain;\n  transport: Transport;\n  onNext: (walletDescriptor: WalletDescriptor) => void;\n  onError?: (error: Error) => void;\n}) => {\n  const background = useBackgroundClient();\n  const [ledgerWallet, setLedgerWallet] = useState<Ethereum | Solana | null>(\n    null\n  );\n\n  useEffect(() => {\n    (async () => {\n      const ledgerWallet = {\n        [Blockchain.SOLANA]: new Solana(transport),\n        [Blockchain.ETHEREUM]: new Ethereum(transport),\n      }[blockchain];\n      setLedgerWallet(ledgerWallet);\n    })();\n  }, [blockchain, transport]);\n\n  useEffect(() => {\n    (async () => {\n      if (ledgerWallet === null) return;\n\n      const { derivationPath } = await background.request({\n        method: UI_RPC_METHOD_KEYRING_READ_NEXT_DERIVATION_PATH,\n        params: [blockchain, \"ledger\"],\n      });\n\n      let publicKey: string;\n      try {\n        const ledgerAddress = (\n          await ledgerWallet.getAddress(derivationPath.replace(\"m/\", \"\"))\n        ).address;\n        publicKey =\n          blockchain === Blockchain.SOLANA\n            ? base58.encode(ledgerAddress)\n            : ledgerAddress.toString();\n      } catch (error) {\n        if (onError) {\n          console.debug(\"hardware derive wallet transport error\", error);\n          onError(error as Error);\n          return;\n        } else {\n          throw error;\n        }\n      }\n\n      // TODO check for conflicts using Backpack API and move to next derivation\n      // path if unusable\n\n      onNext({\n        blockchain,\n        derivationPath,\n        publicKey,\n      });\n    })();\n  }, [background, blockchain, ledgerWallet, onError, onNext]);\n\n  return <Loading />;\n};\n","import { useState } from \"react\";\nimport type {\n  Blockchain,\n  SignedWalletDescriptor,\n  WalletDescriptor,\n} from \"@coral-xyz/common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport type Transport from \"@ledgerhq/hw-transport\";\n\nimport { useSteps } from \"../../../hooks/useSteps\";\nimport { ImportWallets } from \"../../common/Account/ImportWallets\";\nimport { CloseButton } from \"../../common/Layout/Drawer\";\nimport { NavBackButton, WithNav } from \"../../common/Layout/Nav\";\nimport { ConnectHardwareSearching } from \"../../Unlocked/Settings/AddConnectWallet/ConnectHardware/ConnectHardwareSearching\";\nimport { ConnectHardwareWelcome } from \"../../Unlocked/Settings/AddConnectWallet/ConnectHardware/ConnectHardwareWelcome\";\n\nimport { HardwareDefaultWallet } from \"./HardwareDefaultWallet\";\nimport { HardwareDeriveWallet } from \"./HardwareDeriveWallet\";\nimport { HardwareSearchWallet } from \"./HardwareSearchWallet\";\nimport { HardwareSign } from \"./HardwareSign\";\n\n// We are using a hook here to generate the steps for the hardware onboard\n// component to allow these steps to be used in the middle of the RecoverAccount\n// component steps\nexport function useHardwareOnboardSteps({\n  blockchain,\n  action,\n  searchPublicKey,\n  signMessage,\n  signText,\n  successComponent,\n  onComplete,\n  nextStep,\n  prevStep,\n}: {\n  blockchain: Blockchain;\n  action: \"create\" | \"derive\" | \"search\" | \"import\";\n  searchPublicKey?: string;\n  signMessage: string | ((publicKey: string) => string);\n  signText: string;\n  successComponent?: React.ReactElement;\n  onComplete: (signedWalletDescriptor: SignedWalletDescriptor) => void;\n  nextStep: () => void;\n  prevStep: () => void;\n}) {\n  const [transport, setTransport] = useState<Transport | null>(null);\n  const [transportError, setTransportError] = useState(false);\n  const [walletDescriptor, setWalletDescriptor] =\n    useState<WalletDescriptor | null>(null);\n\n  //\n  // Flow for onboarding a hardware wallet.\n  //\n  const steps = [\n    <ConnectHardwareWelcome key=\"ConnectHardwareWelcome\" onNext={nextStep} />,\n    <ConnectHardwareSearching\n      key=\"ConnectHardwareSearching\"\n      blockchain={blockchain}\n      onNext={(transport) => {\n        setTransport(transport);\n        nextStep();\n      }}\n      isConnectFailure={!!transportError}\n    />,\n    //\n    // Use a component to get a wallet to proceed with. The create flow uses a\n    // component that gets a default wallet on an unused account index, the search\n    // flow searches a hardware wallet for a given public key, and the import flow\n    // allows the user to select a wallet.\n    //\n    {\n      // The \"create\" flow uses a component that finds an unused account index for\n      // creating a new account. This step automatically proceeds to the next step\n      // and and there is no user input required.\n      create: (\n        <HardwareDefaultWallet\n          blockchain={blockchain}\n          transport={transport!}\n          onNext={(walletDescriptor: WalletDescriptor) => {\n            setWalletDescriptor(walletDescriptor);\n            nextStep();\n          }}\n          onError={() => {\n            setTransportError(true);\n            prevStep();\n          }}\n        />\n      ),\n      derive: (\n        // Derive the next wallet that an account should use.\n        <HardwareDeriveWallet\n          blockchain={blockchain}\n          transport={transport!}\n          onNext={(walletDescriptor: WalletDescriptor) => {\n            setWalletDescriptor(walletDescriptor);\n            nextStep();\n          }}\n          onError={() => {\n            setTransportError(true);\n            prevStep();\n          }}\n        />\n      ),\n      // The search flow searches the wallet for a given public key to proceed\n      // with.\n      search: (\n        <HardwareSearchWallet\n          blockchain={blockchain!}\n          transport={transport!}\n          publicKey={searchPublicKey!}\n          onNext={(walletDescriptor: WalletDescriptor) => {\n            setWalletDescriptor(walletDescriptor);\n            nextStep();\n          }}\n          onError={() => {\n            setTransportError(true);\n            prevStep();\n          }}\n          onRetry={prevStep}\n        />\n      ),\n      // The import flow displays a table and allows the user to select a public\n      // key to proceed with. This component works with either a mnemonic or a\n      // hardware wallet.\n      import: (\n        <ImportWallets\n          blockchain={blockchain}\n          transport={transport!}\n          allowMultiple={false} // Only allow a single wallet to be selected\n          onNext={(walletDescriptors: Array<WalletDescriptor>) => {\n            setWalletDescriptor(walletDescriptors[0]);\n            nextStep();\n          }}\n          onError={() => {\n            setTransportError(true);\n            prevStep();\n          }}\n        />\n      ),\n    }[action],\n    ...(walletDescriptor\n      ? [\n          // Sign the found wallet descriptor for API submit\n        <HardwareSign\n          key=\"HardwareSign\"\n          blockchain={blockchain}\n          walletDescriptor={walletDescriptor}\n          message={\n              typeof signMessage === \"string\"\n                ? signMessage\n                : signMessage(walletDescriptor.publicKey)\n            }\n          text={signText}\n          onNext={(signature: string) => {\n              onComplete({\n                ...walletDescriptor,\n                signature,\n              });\n              if (successComponent) {\n                nextStep();\n              }\n            }}\n          />,\n        ]\n      : []),\n  ];\n\n  // Optional component displayed on success of hardware onboarding\n  if (successComponent) {\n    steps.push(successComponent);\n  }\n\n  return steps;\n}\n\nexport function HardwareOnboard({\n  blockchain,\n  action,\n  searchPublicKey,\n  signMessage,\n  signText,\n  successComponent,\n  onComplete,\n  onClose,\n}: {\n  blockchain: Blockchain;\n  action: \"create\" | \"derive\" | \"search\" | \"import\";\n  searchPublicKey?: string;\n  signMessage: string | ((publicKey: string) => string);\n  signText: string;\n  successComponent?: React.ReactElement;\n  onComplete: (signedWalletDescriptor: SignedWalletDescriptor) => void;\n  onClose?: () => void;\n}) {\n  const theme = useCustomTheme();\n  const { step, nextStep, prevStep } = useSteps();\n  const steps = useHardwareOnboardSteps({\n    blockchain,\n    action,\n    searchPublicKey,\n    signMessage,\n    signText,\n    successComponent,\n    onComplete,\n    nextStep,\n    prevStep,\n  });\n  return (\n    <WithNav\n      navButtonLeft={\n        step > 0 && step < steps.length - 1 ? (\n          <NavBackButton onClick={prevStep} />\n        ) : onClose ? (\n          <CloseButton onClick={onClose} />\n        ) : null\n      }\n      navbarStyle={{\n        backgroundColor: theme.custom.colors.nav,\n      }}\n      navContentStyle={{\n        backgroundColor: theme.custom.colors.nav,\n        height: \"400px\",\n      }}\n    >\n      {steps[step]}\n    </WithNav>\n  );\n}\n","// This component searches a hardware wallet for a public key and displays\n// a loading indicator until it is found (or an error if it not found).\n\nimport { useEffect, useState } from \"react\";\nimport type { WalletDescriptor } from \"@coral-xyz/common\";\nimport {\n  Blockchain,\n  getRecoveryPaths,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport { Loading, PrimaryButton } from \"@coral-xyz/react-common\";\nimport Ethereum from \"@ledgerhq/hw-app-eth\";\nimport Solana from \"@ledgerhq/hw-app-solana\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport { Box } from \"@mui/material\";\nimport { ethers } from \"ethers\";\n\nimport { Header, SubtextParagraph } from \"../../common\";\n\nconst { base58: bs58 } = ethers.utils;\n\nexport const HardwareSearchWallet = ({\n  blockchain,\n  transport,\n  publicKey,\n  onNext,\n  onError,\n  onRetry,\n}: {\n  blockchain: Blockchain;\n  transport: Transport;\n  publicKey: string;\n  onNext: (walletDescriptor: WalletDescriptor) => void;\n  onError?: (error: Error) => void;\n  onRetry: () => void;\n}) => {\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const ledger = {\n        [Blockchain.SOLANA]: new Solana(transport),\n        [Blockchain.ETHEREUM]: new Ethereum(transport),\n      }[blockchain];\n      for (const derivationPath of getRecoveryPaths(blockchain, true)) {\n        let ledgerAddress;\n        try {\n          ledgerAddress = (\n            await ledger.getAddress(derivationPath.replace(\"m/\", \"\"))\n          ).address;\n        } catch (error) {\n          if (onError) {\n            console.debug(\"hardware search transport error\", error);\n            onError(error as Error);\n            return;\n          } else {\n            throw error;\n          }\n        }\n        if (bs58.encode(ledgerAddress) === publicKey) {\n          onNext({ blockchain, derivationPath, publicKey });\n          return;\n        }\n      }\n      setError(true);\n    })();\n  }, [blockchain, publicKey, onError, onNext, transport]);\n\n  if (!error) {\n    return <Loading />;\n  }\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"24px\" }}>\n        <Header text=\"Unable to recover wallet\" />\n        <SubtextParagraph>\n          We couldn't find the public key {walletAddressDisplay(publicKey)}{\" \"}\n          using your hardware wallet.\n        </SubtextParagraph>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n        }}\n      >\n        <PrimaryButton label=\"Retry\" onClick={onRetry} />\n      </Box>\n    </Box>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport type { Blockchain, WalletDescriptor } from \"@coral-xyz/common\";\nimport { toTitleCase } from \"@coral-xyz/common\";\nimport { HardwareWalletIcon, PrimaryButton } from \"@coral-xyz/react-common\";\nimport { useRpcRequests } from \"@coral-xyz/recoil\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, HeaderIcon, SubtextParagraph } from \"../../common\";\n\nexport function HardwareSign({\n  blockchain,\n  walletDescriptor,\n  message,\n  text,\n  onNext,\n}: {\n  blockchain: Blockchain;\n  walletDescriptor: WalletDescriptor;\n  message: string;\n  text: string;\n  onNext: (signature: string) => void;\n}) {\n  const [signature, setSignature] = useState<string | null>(null);\n  const [requiresBlindSign, setRequiresBlindSign] = useState(false);\n  const { signMessageForWallet } = useRpcRequests();\n\n  useEffect(() => {\n    (async () => {\n      if (!requiresBlindSign) {\n        try {\n          const signature = await signMessageForWallet(\n            blockchain,\n            walletDescriptor.publicKey,\n            message,\n            {\n              signedWalletDescriptors: [\n                {\n                  ...walletDescriptor,\n                  signature: \"\",\n                },\n              ],\n            }\n          );\n          setSignature(signature);\n        } catch (error: unknown) {\n          if (String(error).includes(\"enabling blind signature\")) {\n            setRequiresBlindSign(true);\n          }\n          return;\n        }\n      }\n    })();\n  }, [requiresBlindSign]);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"0 24px\" }}>\n        {requiresBlindSign ? (\n          <>\n            <HeaderIcon icon={<HardwareWalletIcon />} />\n            <Header text=\"Enable blind signing\" />\n            <SubtextParagraph>\n              Please enable blind signing in the settings of the{\" \"}\n              {toTitleCase(blockchain)} app on your hardware wallet.\n            </SubtextParagraph>\n          </>\n        ) : (\n          <>\n            <HeaderIcon icon={<HardwareWalletIcon />} />\n            <Header text=\"Sign the message\" />\n            <SubtextParagraph>{text}</SubtextParagraph>\n          </>\n        )}\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {requiresBlindSign ? (\n          <PrimaryButton\n            label=\"Retry\"\n            onClick={() => {\n              setRequiresBlindSign(false);\n            }}\n          />\n        ) : (\n          <PrimaryButton\n            label=\"Next\"\n            onClick={() => {\n              onNext(signature!);\n            }}\n            disabled={!signature}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { isKeyCold } from \"@coral-xyz/recoil\";\nimport { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\nimport * as anchor from \"@project-serum/anchor\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { TextField } from \"../../../plugin/Component\";\n\nimport { Cold } from \"./ApproveTransaction\";\nimport { WithApproval } from \".\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontWeight: 500,\n    fontSize: \"18px\",\n    lineHeight: \"24px\",\n    color: theme.custom.colors.fontColor,\n    marginBottom: \"48px\",\n    marginTop: \"16px\",\n    textAlign: \"center\",\n  },\n  listDescription: {\n    color: theme.custom.colors.secondary,\n    fontSize: \"14px\",\n    marginBottom: \"8px\",\n  },\n  textFieldInput: {\n    marginTop: 0,\n    \"& .MuiOutlinedInput-root\": {\n      padding: 0,\n      fontSize: \"12px\",\n      \"& textarea\": {\n        WebkitTextFillColor: theme.custom.colors.fontColor,\n      },\n    },\n  },\n}));\n\nexport function ApproveMessage({\n  origin,\n  title,\n  message,\n  onCompletion,\n  wallet,\n}: any) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const _isKeyCold = useRecoilValue(isKeyCold(wallet));\n\n  let displayMessage;\n  try {\n    displayMessage = anchor.utils.bytes.utf8.decode(\n      anchor.utils.bytes.bs58.decode(message)\n    );\n  } catch (err) {\n    displayMessage = message;\n  }\n\n  const onConfirm = async () => {\n    await onCompletion(true);\n  };\n\n  const onDeny = async () => {\n    await onCompletion(false);\n  };\n\n  if (_isKeyCold) {\n    return <Cold origin={origin!} />;\n  }\n\n  return (\n    <WithApproval\n      origin={origin}\n      originTitle={title}\n      wallet={wallet}\n      title={<div className={classes.title}>Approve Message</div>}\n      onConfirm={onConfirm}\n      onConfirmLabel=\"Approve\"\n      onDeny={onDeny}\n    >\n      <>\n        <Typography className={classes.listDescription}>Message</Typography>\n        <TextField\n          rootClass={classes.textFieldInput}\n          value={displayMessage}\n          rows={8}\n          disabled\n          inputProps={{\n            style: {\n              background: theme.custom.colors.nav,\n              padding: \"8px\",\n              color: theme.custom.colors.fontColor,\n            },\n          }}\n        />\n      </>\n    </WithApproval>\n  );\n}\n","import { useState } from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport { ProxyImage } from \"@coral-xyz/react-common\";\nimport {\n  useApproveOrigin,\n  useAvatarUrl,\n  useBlockchainActiveWallet,\n} from \"@coral-xyz/recoil\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { ExpandMore, Settings } from \"@mui/icons-material\";\nimport _CheckIcon from \"@mui/icons-material/Check\";\nimport {\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  Typography,\n} from \"@mui/material\";\n\nimport { WalletAddress } from \"../../../components/common\";\nimport { WalletDrawerNavStack } from \"../../common/WalletList\";\n\nimport { displayOriginTitle, OriginConnectable, WithApprovalButtons } from \".\";\n\nconst useStyles = styles((theme) => ({\n  title: {\n    fontWeight: 500,\n    fontSize: \"24px\",\n    lineHeight: \"32px\",\n    color: theme.custom.colors.fontColor,\n    textAlign: \"center\",\n  },\n  listDescription: {\n    color: theme.custom.colors.secondary,\n    fontSize: \"14px\",\n    marginBottom: \"8px\",\n  },\n  listRoot: {\n    color: theme.custom.colors.fontColor,\n    padding: \"0\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\",\n  },\n  listItemRoot: {\n    alignItems: \"start\",\n    borderRadius: \"4px\",\n    padding: \"8px\",\n    marginBottom: \"1px\",\n  },\n  listItemIconRoot: {\n    minWidth: \"inherit\",\n    height: \"20px\",\n    width: \"20px\",\n    marginRight: \"8px\",\n  },\n  warning: {\n    color: theme.custom.colors.secondary,\n    fontSize: \"14px\",\n    marginTop: \"24px\",\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.custom.colors.secondary,\n    textDecoration: \"underline\",\n  },\n}));\n\nexport function ApproveOrigin({\n  origin,\n  title,\n  blockchain,\n  onCompletion,\n}: any) {\n  const classes = useStyles();\n  const approveOrigin = useApproveOrigin();\n\n  const onConfirm = async () => {\n    await approveOrigin(origin);\n    await onCompletion({\n      didApprove: true,\n    });\n  };\n\n  const onDeny = async () => {\n    await onCompletion({\n      didApprove: false,\n    });\n  };\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        flexDirection: \"column\",\n        display: \"flex\",\n      }}\n    >\n      <WalletSelector blockchain={blockchain} />\n      <div style={{ flex: 1 }}>\n        <WithApprovalButtons onConfirm={onConfirm} onDeny={onDeny}>\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              marginLeft: \"32px\",\n              marginRight: \"32px\",\n            }}\n          >\n            <div\n              style={{\n                marginTop: \"24px\",\n                marginBottom: \"16px\",\n              }}\n            >\n              <div className={classes.title}>{displayOriginTitle(title)}</div>\n              <div className={classes.title}>wants to connect</div>\n            </div>\n            <OriginConnectable\n              origin={origin}\n              originTitle={title}\n              style={{\n                marginBottom: \"32px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n              }}\n            />\n            <ApproveOriginTable />\n          </div>\n        </WithApprovalButtons>\n      </div>\n    </div>\n  );\n}\n\nfunction ApproveOriginTable() {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography className={classes.listDescription}>\n        This app would like to\n      </Typography>\n      <List className={classes.listRoot}>\n        <ListItem className={classes.listItemRoot}>\n          <ListItemIcon className={classes.listItemIconRoot}>\n            <CheckIcon />\n          </ListItemIcon>\n          View wallet balance & activity\n        </ListItem>\n        <ListItem className={classes.listItemRoot}>\n          <ListItemIcon className={classes.listItemIconRoot}>\n            <CheckIcon />\n          </ListItemIcon>\n          Request approval for transactions\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n\nfunction WalletSelector({ blockchain }: { blockchain: Blockchain }) {\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <div>\n      <WalletSelectorButton\n        blockchain={blockchain}\n        onClick={() => setOpenDrawer(!openDrawer)}\n      />\n      <WalletDrawerNavStack\n        openDrawer={openDrawer}\n        setOpenDrawer={setOpenDrawer}\n        filter={(w: { blockchain: string; name: string; publicKey: string }) =>\n          w.blockchain === blockchain\n        }\n      />\n    </div>\n  );\n}\n\nfunction WalletSelectorButton({\n  blockchain,\n  onClick,\n}: {\n  blockchain: Blockchain;\n  onClick: () => void;\n}) {\n  const theme = useCustomTheme();\n  const wallet = useBlockchainActiveWallet(blockchain);\n\n  return (\n    <div\n      style={{\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        display: \"flex\",\n      }}\n    >\n      <div style={{ flex: 1 }} />\n      <Button\n        disableRipple\n        style={{\n          padding: 0,\n          textTransform: \"none\",\n          color: theme.custom.colors.fontColor,\n          fontSize: \"18px\",\n        }}\n        onClick={onClick}\n      >\n        <AvatarWithBlockchainImage\n          blockchain={wallet.blockchain as Blockchain}\n        />\n        <WalletAddress\n          publicKey={wallet.publicKey}\n          name={wallet.name}\n          nameStyle={{\n            color: theme.custom.colors.fontColor,\n          }}\n        />\n        <ExpandMore\n          style={{\n            color: theme.custom.colors.icon,\n          }}\n        />\n      </Button>\n      <div style={{ flex: 1 }} />\n    </div>\n  );\n}\n\nfunction AvatarWithBlockchainImage({ blockchain }: { blockchain: Blockchain }) {\n  const avatarUrl = useAvatarUrl(32);\n  // TODO: use this blockchain icon here.\n  return (\n    <ProxyImage\n      src={avatarUrl}\n      style={{\n        width: \"32px\",\n        height: \"32px\",\n        borderRadius: \"16px\",\n        marginRight: \"16px\",\n      }}\n    />\n  );\n}\n\nfunction CheckIcon() {\n  const theme = useCustomTheme();\n  return (\n    <_CheckIcon\n      htmlColor={theme.custom.colors.positive}\n      style={{ height: \"20px\", width: \"20px\" }}\n    />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport type { Blockchain, FeeConfig } from \"@coral-xyz/common\";\nimport { EmptyState, Loading } from \"@coral-xyz/react-common\";\nimport {\n  isKeyCold,\n  type TransactionData as TransactionDataType,\n  useMultipleTransactionsData,\n  useTransactionData,\n  useWalletBlockchain,\n} from \"@coral-xyz/recoil\";\nimport { styles as makeStyles } from \"@coral-xyz/themes\";\nimport { Block as BlockIcon } from \"@mui/icons-material\";\nimport { type ClassNameMap, Typography } from \"@mui/material\";\nimport { BigNumber, ethers } from \"ethers\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { TransactionData } from \"../../common/TransactionData\";\nimport { WithApproval } from \"../../Unlocked/Approvals\";\n\nconst { Zero } = ethers.constants;\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontWeight: 500,\n    fontSize: \"18px\",\n    lineHeight: \"24px\",\n    color: theme.custom.colors.fontColor,\n    marginBottom: \"48px\",\n    marginTop: \"16px\",\n    textAlign: \"center\",\n  },\n  advancedDetailsLabel: {\n    textAlign: \"center\",\n    color: theme.custom.colors.secondary,\n    fontSize: \"12px\",\n    marginTop: \"6px\",\n    marginBottom: \"8px\",\n    cursor: \"pointer\",\n  },\n  listDescription: {\n    color: theme.custom.colors.secondary,\n    fontSize: \"14px\",\n    marginBottom: \"8px\",\n  },\n  // warning: {\n  //   color: theme.custom.colors.negative,\n  //   fontSize: \"14px\",\n  //   textAlign: \"center\",\n  //   marginTop: \"8px\",\n  // },\n  negative: {\n    color: theme.custom.colors.negative,\n  },\n  positive: {\n    color: theme.custom.colors.positive,\n  },\n  txMenuItemRoot: {\n    height: \"36px !important\",\n  },\n}));\n\nexport function ApproveTransaction({\n  origin,\n  title,\n  tx,\n  wallet,\n  onCompletion,\n}: {\n  origin: string;\n  title: string;\n  tx: string | null;\n  wallet: string;\n  onCompletion: (\n    transaction: any,\n    feeConfig?: { config: FeeConfig; disabled: boolean }\n  ) => Promise<void>;\n}) {\n  const classes = useStyles();\n  const blockchain = useWalletBlockchain(wallet);\n  const transactionData = useTransactionData(blockchain as Blockchain, tx);\n  const { loading, balanceChanges, transaction, solanaFeeConfig } =\n    transactionData;\n  const _isKeyCold = useRecoilValue(isKeyCold(wallet));\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (_isKeyCold) {\n    return <Cold origin={origin!} />;\n  }\n\n  const onConfirm = async () => {\n    await onCompletion(transaction, solanaFeeConfig);\n  };\n\n  const onDeny = async () => {\n    await onCompletion(false);\n  };\n\n  return (\n    <WithApproval\n      origin={origin}\n      originTitle={title}\n      wallet={wallet}\n      title={<div className={classes.title}>Approve Transaction</div>}\n      onConfirm={onConfirm}\n      onConfirmLabel=\"Approve\"\n      onDeny={onDeny}\n    >\n      {loading ? (\n        <Loading />\n      ) : (\n        <div\n          style={{\n            marginTop: \"24px\",\n            marginLeft: \"8px\",\n            marginRight: \"8px\",\n          }}\n        >\n          <Typography className={classes.listDescription}>\n            Transaction details\n          </Typography>\n          <TransactionData\n            transactionData={transactionData}\n            menuItems={createTransactionDataMenuItems(transactionData, classes)}\n            menuItemClasses={{ root: classes.txMenuItemRoot }}\n          />\n        </div>\n      )}\n    </WithApproval>\n  );\n}\n\nexport function Cold({\n  origin,\n  style,\n}: {\n  origin: string;\n  style?: React.CSSProperties;\n}) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <EmptyState\n          icon={(props: any) => <BlockIcon {...props} />}\n          title=\"Request Rejected\"\n          subtitle={`WARNING: ${origin} is trying to sign with your cold wallet. This may be dangerous. To enable, see your wallet settings and enable \"App Signing\". Do so with caution!`}\n          buttonText=\"\"\n          onClick={() => {}}\n          style={style}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport function ApproveAllTransactions({\n  origin,\n  title,\n  wallet,\n  txs,\n  onCompletion,\n}: {\n  origin: string;\n  title: string;\n  wallet: string;\n  txs: Array<string>;\n  onCompletion: (confirmed: boolean) => void;\n}) {\n  const classes = useStyles();\n  const blockchain = useWalletBlockchain(wallet);\n  const transactionsData = useMultipleTransactionsData(\n    blockchain as Blockchain,\n    txs\n  );\n  const _isKeyCold = useRecoilValue(isKeyCold(wallet));\n  const [loading, setLoading] = useState(true);\n  const [showAll, setShowAll] = useState(false);\n  const [consolidated, setConsolidated] = useState<TransactionDataType | null>(\n    null\n  );\n\n  useEffect(() => {\n    if (transactionsData.some((t) => t.loading)) {\n      return;\n    }\n\n    const allBalanceChanges: TransactionDataType[\"balanceChanges\"] = {};\n    let allNetworkFees = \"0\";\n\n    for (const tx of transactionsData) {\n      if (tx.balanceChanges) {\n        Object.entries(tx.balanceChanges).forEach(([key, val]) => {\n          allBalanceChanges[key] = {\n            nativeChange: (\n              allBalanceChanges[key]?.nativeChange ?? BigNumber.from(\"0\")\n            ).add(val.nativeChange),\n            decimals: val.decimals,\n          };\n        });\n      }\n\n      allNetworkFees = (\n        parseFloat(allNetworkFees) + parseFloat(tx.networkFee)\n      ).toPrecision(2);\n    }\n\n    setConsolidated({\n      ...transactionsData[0],\n      balanceChanges: allBalanceChanges,\n      networkFee: allNetworkFees,\n    });\n    setLoading(false);\n  }, [transactionsData]);\n\n  const onConfirm = async () => {\n    onCompletion(true);\n  };\n\n  const onDeny = async () => {\n    onCompletion(false);\n  };\n\n  const onToggleAdvanced = () => {\n    setShowAll((val) => !val);\n  };\n\n  if (_isKeyCold) {\n    return <Cold origin={origin!} />;\n  }\n\n  return (\n    <WithApproval\n      origin={origin}\n      originTitle={title}\n      title={<div className={classes.title}>Approve Transactions</div>}\n      wallet={wallet}\n      onConfirm={onConfirm}\n      onConfirmLabel=\"Approve\"\n      onDeny={onDeny}\n    >\n      {loading || !consolidated ? (\n        <Loading />\n      ) : (\n        <div\n          style={{\n            marginTop: \"24px\",\n            ...(showAll ? { height: \"250px\", overflowY: \"scroll\" } : {}),\n          }}\n        >\n          <div\n            key={0}\n            style={{\n              marginLeft: \"8px\",\n              marginRight: \"8px\",\n            }}\n          >\n            <Typography className={classes.listDescription}>\n              Transaction Aggregate Details ({transactionsData.length})\n            </Typography>\n            <TransactionData\n              transactionData={consolidated}\n              menuItems={createTransactionDataMenuItems(consolidated, classes)}\n              menuItemClasses={{ root: classes.txMenuItemRoot }}\n            />\n          </div>\n          {showAll ? transactionsData.map((tx, i) => (\n            <div\n              key={i + 1}\n              style={{\n                  marginTop: \"10px\",\n                  marginLeft: \"8px\",\n                  marginRight: \"8px\",\n                }}\n              >\n              <Typography className={classes.listDescription}>\n                [{i + 1}] Transaction details\n              </Typography>\n              <TransactionData\n                transactionData={tx}\n                menuItems={createTransactionDataMenuItems(tx, classes)}\n                menuItemClasses={{ root: classes.txMenuItemRoot }}\n                />\n            </div>\n            )) : null}\n        </div>\n      )}\n      <Typography\n        className={classes.advancedDetailsLabel}\n        onClick={onToggleAdvanced}\n      >\n        {showAll ? \"Hide Advanced Details\" : \"View Advanced Details\"}\n      </Typography>\n    </WithApproval>\n  );\n}\n\nfunction createTransactionDataMenuItems(\n  tx: TransactionDataType,\n  classes: ClassNameMap<string>\n): any {\n  return tx.balanceChanges\n    ? Object.fromEntries(\n        Object.entries(tx.balanceChanges).map(\n          ([symbol, { nativeChange, decimals }]) => {\n            const className = nativeChange.gte(Zero)\n              ? classes.positive\n              : classes.negative;\n            return [\n              symbol,\n              {\n                onClick: () => {},\n                detail: (\n                  <Typography className={className}>\n                    {ethers.utils.commify(\n                      ethers.utils.formatUnits(\n                        nativeChange,\n                        BigNumber.from(decimals)\n                      )\n                    )}{\" \"}\n                    {symbol}\n                  </Typography>\n                ),\n                button: false,\n              },\n            ];\n          }\n        )\n      )\n    : {};\n}\n","import {\n  PrimaryButton,\n  ProxyImage,\n  SecondaryButton,\n} from \"@coral-xyz/react-common\";\nimport { useAvatarUrl, useUser, useWalletName } from \"@coral-xyz/recoil\";\nimport { styles } from \"@coral-xyz/themes\";\n\nimport { walletAddressDisplay } from \"../../../components/common\";\nimport { UNKNOWN_ICON_SRC } from \"../../common/Icon\";\n\nconst useStyles = styles((theme) => ({\n  connectablesContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: \"32px\",\n  },\n  connectable: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"50%\",\n  },\n  connectableTitle: {\n    color: theme.custom.colors.fontColor,\n  },\n  connectableDescription: {\n    color: theme.custom.colors.secondary,\n    fontSize: \"14px\",\n    textAlign: \"center\",\n  },\n}));\n\nexport function WithApproval({\n  origin,\n  originTitle,\n  title,\n  wallet,\n  onConfirm,\n  onConfirmLabel = \"Connect\",\n  onDeny,\n  children,\n}: {\n  origin: string;\n  originTitle: string;\n  title?: React.ReactNode;\n  wallet: string;\n  onConfirm: () => void;\n  onConfirmLabel?: string;\n  onDeny: () => void;\n  children: React.ReactNode;\n}) {\n  return (\n    <WithApprovalButtons\n      onConfirm={onConfirm}\n      onConfirmLabel={onConfirmLabel}\n      onDeny={onDeny}\n    >\n      <div\n        style={{\n          margin: \"0 16px\",\n        }}\n      >\n        {title}\n        <OriginWalletConnectIcons\n          wallet={wallet}\n          origin={origin}\n          originTitle={originTitle}\n        />\n        {children}\n      </div>\n    </WithApprovalButtons>\n  );\n}\n\nexport function WithApprovalButtons({\n  onConfirm,\n  onConfirmLabel = \"Connect\",\n  onDeny,\n  children,\n}: {\n  onConfirm: () => void;\n  onConfirmLabel?: string;\n  onDeny: () => void;\n  children: React.ReactNode;\n}) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      {children}\n      <div\n        style={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div style={{ width: \"167.5px\" }}>\n          <SecondaryButton label=\"Deny\" onClick={onDeny} />\n        </div>\n        <div style={{ width: \"167.5px\" }}>\n          <PrimaryButton label={onConfirmLabel} onClick={() => onConfirm()} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function OriginWalletConnectIcons({\n  origin,\n  originTitle,\n  wallet,\n}: {\n  origin: string;\n  originTitle: string;\n  wallet: string;\n}) {\n  const classes = useStyles();\n  const walletName = useWalletName(wallet);\n  const avatarUrl = useAvatarUrl(56);\n  const { username } = useUser();\n\n  return (\n    <div className={classes.connectablesContainer}>\n      <OriginConnectable\n        kind=\"medium\"\n        origin={origin}\n        originTitle={originTitle}\n      />\n      <Connectable\n        kind=\"medium\"\n        title={username}\n        description={`${walletName} (${walletAddressDisplay(wallet)})`}\n        icon={avatarUrl}\n      />\n    </div>\n  );\n}\n\nexport function OriginConnectable({\n  originTitle,\n  origin,\n  style,\n  kind = \"small\",\n}: {\n  origin: string;\n  originTitle: string;\n  kind?: \"small\" | \"medium\";\n  style?: React.CSSProperties;\n}) {\n  // This uses a Google API for favicon retrieval, do we want to parse the page ourselves?\n  const siteIcon = `https://www.google.com/s2/favicons?domain=${origin}&sz=180`;\n  return (\n    <Connectable\n      kind={kind}\n      style={style}\n      title={displayOriginTitle(originTitle)}\n      description={new URL(origin).host}\n      icon={origin.startsWith(\"http://localhost\") ? UNKNOWN_ICON_SRC : siteIcon}\n    />\n  );\n}\n\nexport function Connectable({\n  title,\n  description,\n  icon,\n  style,\n  kind = \"small\",\n}: {\n  title: string;\n  description: string;\n  icon: string;\n  kind?: \"small\" | \"medium\";\n  style?: React.CSSProperties;\n}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.connectable} style={style}>\n      <div\n        className={classes.connectableIcon}\n        style={{\n          width: kind === \"small\" ? \"56px\" : \"80px\",\n          height: kind === \"small\" ? \"56px\" : \"80px\",\n          borderRadius: \"50%\",\n          marginBottom: kind === \"small\" ? \"4px\" : \"8px\",\n        }}\n      >\n        <ProxyImage\n          style={{\n            width: kind === \"small\" ? \"56px\" : \"80px\",\n            height: kind === \"small\" ? \"56px\" : \"80px\",\n            borderRadius: \"50%\",\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n          }}\n          src={icon}\n        />\n      </div>\n      <div className={classes.connectableTitle}>{title}</div>\n      <div className={classes.connectableDescription}>{description}</div>\n    </div>\n  );\n}\n\nexport function displayOriginTitle(title: string) {\n  // TODO this is a naive approach to generating the site title and is prone to abuse,\n  // we should replace it with a whitelist or a public repository similar to\n  // spl-token-registry\n\n  // Truncate title if above length\n  const titleTruncateLength = 15;\n\n  let truncatedTitle;\n  if (title && title.length > titleTruncateLength) {\n    truncatedTitle = title.substring(0, titleTruncateLength).trim() + \"...\";\n  } else if (title) {\n    truncatedTitle = title;\n  } else {\n    // Default title if no title is provided\n    truncatedTitle = \"Website\";\n  }\n\n  return truncatedTitle;\n}\n","import { Suspense, useEffect, useState } from \"react\";\nimport {\n  Blockchain,\n  PLUGIN_REQUEST_ETHEREUM_SIGN_AND_SEND_TRANSACTION,\n  PLUGIN_REQUEST_ETHEREUM_SIGN_MESSAGE,\n  PLUGIN_REQUEST_ETHEREUM_SIGN_TRANSACTION,\n  PLUGIN_REQUEST_SOLANA_SIGN_ALL_TRANSACTIONS,\n  PLUGIN_REQUEST_SOLANA_SIGN_AND_SEND_TRANSACTION,\n  PLUGIN_REQUEST_SOLANA_SIGN_MESSAGE,\n  PLUGIN_REQUEST_SOLANA_SIGN_TRANSACTION,\n  UI_RPC_METHOD_ETHEREUM_SIGN_AND_SEND_TRANSACTION,\n  UI_RPC_METHOD_ETHEREUM_SIGN_MESSAGE,\n  UI_RPC_METHOD_ETHEREUM_SIGN_TRANSACTION,\n  UI_RPC_METHOD_SOLANA_SIGN_ALL_TRANSACTIONS,\n  UI_RPC_METHOD_SOLANA_SIGN_AND_SEND_TRANSACTION,\n  UI_RPC_METHOD_SOLANA_SIGN_MESSAGE,\n  UI_RPC_METHOD_SOLANA_SIGN_TRANSACTION,\n} from \"@coral-xyz/common\";\nimport {\n  Loading,\n  PrimaryButton,\n  SecondaryButton,\n} from \"@coral-xyz/react-common\";\nimport {\n  isKeyCold,\n  useActiveWallet,\n  useBackgroundClient,\n  usePluginUrl,\n  useSolanaCtx,\n  useTransactionData,\n  useTransactionRequest,\n} from \"@coral-xyz/recoil\";\nimport { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\nimport * as anchor from \"@project-serum/anchor\";\nimport type { ConfirmOptions, SendOptions } from \"@solana/web3.js\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { sanitizeTransactionWithFeeConfig } from \"../../utils/solana\";\nimport { walletAddressDisplay } from \"../common\";\nimport { ApproveTransactionDrawer } from \"../common/ApproveTransactionDrawer\";\nimport { Scrollbar } from \"../common/Layout/Scrollbar\";\nimport { TransactionData } from \"../common/TransactionData\";\nimport { Cold } from \"../Unlocked/Approvals/ApproveTransaction\";\n\nimport { ErrorTransaction } from \"./XnftPopovers/ErrorTransaction\";\nimport { Sending } from \"./XnftPopovers/Sending\";\nimport { Success } from \"./XnftPopovers/Success\";\n\nconst useStyles = makeStyles((theme) => ({\n  approveTableRoot: {\n    backgroundColor: `${theme.custom.colors.approveTransactionTableBackground} !important`,\n    \"&:hover\": {\n      opacity: 1,\n      cursor: \"default\",\n    },\n  },\n  warning: {\n    color: theme.custom.colors.negative,\n    fontSize: \"14px\",\n    textAlign: \"center\",\n    marginTop: \"8px\",\n  },\n}));\n\nconst pluginUiRpcMap = {\n  [PLUGIN_REQUEST_ETHEREUM_SIGN_MESSAGE]: UI_RPC_METHOD_ETHEREUM_SIGN_MESSAGE,\n  [PLUGIN_REQUEST_ETHEREUM_SIGN_TRANSACTION]:\n    UI_RPC_METHOD_ETHEREUM_SIGN_TRANSACTION,\n  [PLUGIN_REQUEST_ETHEREUM_SIGN_AND_SEND_TRANSACTION]:\n    UI_RPC_METHOD_ETHEREUM_SIGN_AND_SEND_TRANSACTION,\n  [PLUGIN_REQUEST_SOLANA_SIGN_MESSAGE]: UI_RPC_METHOD_SOLANA_SIGN_MESSAGE,\n  [PLUGIN_REQUEST_SOLANA_SIGN_TRANSACTION]:\n    UI_RPC_METHOD_SOLANA_SIGN_TRANSACTION,\n  [PLUGIN_REQUEST_SOLANA_SIGN_ALL_TRANSACTIONS]:\n    UI_RPC_METHOD_SOLANA_SIGN_ALL_TRANSACTIONS,\n  [PLUGIN_REQUEST_SOLANA_SIGN_AND_SEND_TRANSACTION]:\n    UI_RPC_METHOD_SOLANA_SIGN_AND_SEND_TRANSACTION,\n};\n\nconst pluginRpcBlockchainMap = {\n  [PLUGIN_REQUEST_ETHEREUM_SIGN_MESSAGE]: Blockchain.ETHEREUM,\n  [PLUGIN_REQUEST_ETHEREUM_SIGN_TRANSACTION]: Blockchain.ETHEREUM,\n  [PLUGIN_REQUEST_ETHEREUM_SIGN_AND_SEND_TRANSACTION]: Blockchain.ETHEREUM,\n  [PLUGIN_REQUEST_SOLANA_SIGN_MESSAGE]: Blockchain.SOLANA,\n  [PLUGIN_REQUEST_SOLANA_SIGN_TRANSACTION]: Blockchain.SOLANA,\n  [PLUGIN_REQUEST_SOLANA_SIGN_ALL_TRANSACTIONS]: Blockchain.SOLANA,\n  [PLUGIN_REQUEST_SOLANA_SIGN_AND_SEND_TRANSACTION]: Blockchain.SOLANA,\n};\n\nexport function ApproveTransactionRequest() {\n  const [request, setRequest] = useTransactionRequest();\n  const { publicKey } = useActiveWallet();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [signature, setSignature] = useState<string | null>(null);\n  const _isKeyCold = useRecoilValue(isKeyCold(publicKey));\n\n  useEffect(() => {\n    setOpenDrawer(request !== undefined);\n  }, [request, signature]);\n\n  if (!request) {\n    return null;\n  }\n\n  const rpcMethod = pluginUiRpcMap[request!.kind];\n  const blockchain = pluginRpcBlockchainMap[request!.kind];\n\n  const onResolve = (signature: string) => {\n    request!.resolve(signature);\n    if (!request.confirmTransaction) {\n      setRequest(undefined);\n    } else {\n      setSignature(signature);\n    }\n  };\n\n  const onReject = (\n    e: Error = new Error(\"user rejected signature request\")\n  ) => {\n    setRequest(undefined);\n    request!.reject(e);\n  };\n\n  const isMessageSign = [\n    PLUGIN_REQUEST_ETHEREUM_SIGN_MESSAGE,\n    PLUGIN_REQUEST_SOLANA_SIGN_MESSAGE,\n  ].includes(request!.kind);\n\n  return (\n    <ApproveTransactionDrawer\n      openDrawer={openDrawer}\n      setOpenDrawer={(b) => {\n        if (b === false && !signature) onReject();\n        if (b === false && signature) {\n          setRequest(undefined);\n          setSignature(null);\n        }\n        setOpenDrawer(b);\n      }}\n    >\n      <Suspense fallback={<DisabledRequestPrompt />}>\n        {_isKeyCold ? (\n          <Cold\n            origin=\"This xNFT\"\n            style={{\n              padding: 0,\n              width: \"100%\",\n            }}\n          />\n        ) : isMessageSign ? (\n          <SignMessageRequest\n            publicKey={publicKey}\n            message={request!.data as string}\n            uiRpcMethod={rpcMethod}\n            onResolve={onResolve}\n            onReject={onReject}\n          />\n        ) : request.kind! === PLUGIN_REQUEST_SOLANA_SIGN_ALL_TRANSACTIONS ? (\n          <SignAllTransactionsRequest\n            publicKey={publicKey}\n            uiRpcMethod={rpcMethod}\n            blockchain={blockchain}\n            transactions={request!.data as string[]}\n            onResolve={onResolve}\n            onReject={onReject}\n          />\n        ) : (\n          <SendTransactionRequest\n            publicKey={publicKey}\n            uiRpcMethod={rpcMethod}\n            blockchain={blockchain}\n            transaction={request!.data as string}\n            onResolve={onResolve}\n            onReject={onReject}\n            confirmTransaction={request.confirmTransaction}\n            options={request.options}\n          />\n        )}\n      </Suspense>\n    </ApproveTransactionDrawer>\n  );\n}\n\nfunction Request({ onConfirm, onReject, buttonsDisabled, children }: any) {\n  return (\n    <div\n      style={{\n        height: \"402px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div style={{ padding: \"24px\", flex: 1 }}>\n        <Scrollbar>{children}</Scrollbar>\n      </div>\n      <div\n        style={{\n          marginLeft: \"16px\",\n          marginBottom: \"16px\",\n          marginRight: \"16px\",\n          display: \"flex\",\n        }}\n      >\n        <SecondaryButton\n          disabled={buttonsDisabled}\n          onClick={onReject}\n          label=\"Cancel\"\n          style={{\n            marginRight: \"8px\",\n          }}\n        />\n        <PrimaryButton\n          disabled={buttonsDisabled}\n          onClick={() => onConfirm()}\n          label=\"Approve\"\n          type=\"submit\"\n          data-testid=\"Send\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction SignAllTransactionsRequest({\n  publicKey,\n  transactions,\n  uiRpcMethod,\n  onResolve,\n  onReject,\n}: {\n  publicKey: string;\n  transactions: Array<string>;\n  uiRpcMethod: string;\n  blockchain: Blockchain;\n  onResolve: (signature: string) => void;\n  onReject: () => void;\n}) {\n  const loading = false;\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n\n  const onConfirm = async () => {\n    background\n      .request({\n        method: uiRpcMethod,\n        params: [transactions, publicKey],\n      })\n      .then(onResolve)\n      .catch(onReject);\n  };\n\n  return (\n    <Request\n      onConfirm={onConfirm}\n      onReject={onReject}\n      buttonsDisabled={loading}\n    >\n      {loading ? (\n        <Loading />\n      ) : (\n        <Scrollbar>\n          <Typography\n            style={{\n              color: theme.custom.colors.fontColor,\n              fontWeight: 500,\n              fontSize: \"18px\",\n              lineHeight: \"24px\",\n              textAlign: \"center\",\n            }}\n          >\n            Approve Transaction\n          </Typography>\n          <div\n            style={{\n              marginTop: \"18px\",\n            }}\n          >\n            <div className={classes.warning}>\n              Approving multiple transactions\n            </div>\n          </div>\n        </Scrollbar>\n      )}\n    </Request>\n  );\n}\n\n//\n//\n//\nfunction SendTransactionRequest({\n  publicKey,\n  transaction,\n  uiRpcMethod,\n  blockchain,\n  onResolve,\n  onReject,\n  confirmTransaction,\n  options,\n}: {\n  publicKey: string;\n  transaction: string;\n  uiRpcMethod: string;\n  blockchain: Blockchain;\n  onResolve: (signature: string) => void;\n  onReject: () => void;\n  confirmTransaction?: boolean;\n  options?: SendOptions | ConfirmOptions;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const [request] = useTransactionRequest();\n  const background = useBackgroundClient();\n  const pluginUrl = usePluginUrl(request?.xnftAddress);\n  const transactionData = useTransactionData(blockchain, transaction);\n  const {\n    loading,\n    transaction: transactionToSend,\n    from,\n    solanaFeeConfig,\n  } = transactionData;\n  const solanaCtx = useSolanaCtx();\n  const [signature, setSignature] = useState(\"\");\n  const [txState, setTxState] = useState<\n    \"approve\" | \"confirming\" | \"succeeded\" | \"failed\"\n  >(\"approve\");\n\n  //\n  // Executes when the modal clicks \"Approve\" in the drawer popup\n  // Note the transactionToSend argument is not the original transaction passed\n  // into this component because it can be modified by the user to set\n  // transaction specific settings (i.e. Etheruem gas).\n  //\n  const onConfirm = () => {\n    const feeConfig = solanaFeeConfig;\n    const sanitizedTx = sanitizeTransactionWithFeeConfig(\n      transactionToSend,\n      blockchain,\n      feeConfig\n    );\n    background\n      .request({\n        method: uiRpcMethod,\n        params: [sanitizedTx, publicKey],\n      })\n      .then(async (signature) => {\n        setSignature(signature);\n        if (confirmTransaction) {\n          setTxState(\"confirming\");\n          const { blockhash, lastValidBlockHeight } =\n            await solanaCtx.connection.getLatestBlockhash(\n              options?.preflightCommitment\n            );\n          const resp = await solanaCtx.connection.confirmTransaction(\n            {\n              signature,\n              blockhash,\n              lastValidBlockHeight,\n            },\n            // @ts-ignore\n            options?.commitment\n          );\n          if (resp?.value.err) {\n            onReject();\n            setTxState(\"failed\");\n          } else {\n            onResolve(signature);\n            setTxState(\"succeeded\");\n          }\n        } else {\n          onResolve(signature);\n        }\n      })\n      .catch(() => {\n        onReject();\n      });\n  };\n\n  //\n  // Transaction data\n  //\n  const menuItems = {\n    xNFT: {\n      onClick: () => {},\n      detail: (\n        <Typography\n          style={{\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            maxWidth: \"200px\",\n            fontSize: \"14px\",\n          }}\n        >\n          {pluginUrl}\n        </Typography>\n      ),\n      classes: { root: classes.approveTableRoot },\n    },\n    From: {\n      onClick: () => {},\n      detail: (\n        <Typography\n          style={{\n            fontSize: \"14px\",\n          }}\n        >\n          {walletAddressDisplay(from)}\n        </Typography>\n      ),\n      classes: { root: classes.approveTableRoot },\n    },\n  };\n\n  if (txState === \"confirming\") {\n    return <Sending blockchain={blockchain} signature={signature} />;\n  }\n\n  if (txState === \"succeeded\") {\n    return <Success blockchain={blockchain} signature={signature} />;\n  }\n\n  if (txState === \"failed\") {\n    return (\n      <ErrorTransaction\n        blockchain={blockchain}\n        signature={signature}\n        onRetry={() => {\n          onConfirm();\n        }}\n      />\n    );\n  }\n\n  return (\n    <Request\n      onConfirm={onConfirm}\n      onReject={onReject}\n      buttonsDisabled={loading}\n    >\n      {loading ? (\n        <Loading />\n      ) : (\n        <Scrollbar>\n          <Typography\n            style={{\n              color: theme.custom.colors.fontColor,\n              fontWeight: 500,\n              fontSize: \"18px\",\n              lineHeight: \"24px\",\n              textAlign: \"center\",\n            }}\n          >\n            Approve Transaction\n          </Typography>\n          <div\n            style={{\n              marginTop: \"18px\",\n            }}\n          >\n            <TransactionData\n              menuItems={menuItems}\n              menuItemClasses={{ root: classes.approveTableRoot }}\n              transactionData={transactionData}\n            />\n          </div>\n        </Scrollbar>\n      )}\n    </Request>\n  );\n}\n\nfunction SignMessageRequest({\n  publicKey,\n  message,\n  uiRpcMethod,\n  onResolve,\n  onReject,\n}: {\n  publicKey: string;\n  message: string;\n  uiRpcMethod: string;\n  onResolve: (signature: string) => void;\n  onReject: () => void;\n}) {\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n\n  let displayMessage;\n  try {\n    displayMessage = anchor.utils.bytes.utf8.decode(\n      anchor.utils.bytes.bs58.decode(message)\n    );\n  } catch (err) {\n    displayMessage = message;\n  }\n\n  //\n  // Executes when the modal clicks \"Approve\" in the drawer popup\n  //\n  const onConfirm = () => {\n    background\n      .request({\n        method: uiRpcMethod,\n        params: [message, publicKey],\n      })\n      .then(onResolve)\n      .catch(onReject);\n  };\n\n  return (\n    <Request onConfirm={onConfirm} onReject={onReject}>\n      <Scrollbar>\n        <Typography\n          style={{\n            color: theme.custom.colors.fontColor,\n            fontWeight: 500,\n            fontSize: \"18px\",\n            lineHeight: \"24px\",\n            textAlign: \"center\",\n          }}\n        >\n          Sign Message\n        </Typography>\n        <div\n          style={{\n            marginTop: \"18px\",\n            backgroundColor: theme.custom.colors.nav,\n            padding: \"8px\",\n            borderRadius: \"8px\",\n            color: theme.custom.colors.fontColor,\n            border: theme.custom.colors.borderFull,\n          }}\n        >\n          {displayMessage}\n        </div>\n      </Scrollbar>\n    </Request>\n  );\n}\n\nfunction DisabledRequestPrompt() {\n  return (\n    <Request onConfirm={() => {}} onReject={() => {}} buttonsDisabled>\n      <Loading />\n    </Request>\n  );\n}\n","import { Suspense, useEffect, useState } from \"react\";\nimport type { Plugin } from \"@coral-xyz/common\";\nimport { DEFAULT_PUBKEY_STR } from \"@coral-xyz/common\";\nimport { Loading, MoreIcon, PowerIcon } from \"@coral-xyz/react-common\";\nimport {\n  transactionRequest,\n  useActiveSolanaWallet,\n  useBackgroundClient,\n  useClosePlugin,\n  useConnectionBackgroundClient,\n  useFreshPlugin,\n  useNavigationSegue,\n  useOpenPlugin,\n  usePlugins,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Button, CircularProgress, Divider } from \"@mui/material\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\n\nimport { PluginRenderer } from \"./Renderer\";\nimport { Simulator } from \"./Simulator\";\n\nexport function PluginApp({\n  xnftAddress,\n  deepXnftPath,\n}: {\n  xnftAddress: string | undefined;\n  deepXnftPath: string;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        backgroundColor: theme.custom.colors.background,\n      }}\n    >\n      <LoadPlugin xnftAddress={xnftAddress} deepXnftPath={deepXnftPath} />\n    </div>\n  );\n}\n\nexport function LoadPlugin({\n  xnftAddress,\n  deepXnftPath,\n}: {\n  xnftAddress: string | undefined;\n  deepXnftPath: string;\n}) {\n  const { publicKey } = useActiveSolanaWallet(); // TODO: aggregate wallet considerations.\n  const plugins = usePlugins(publicKey);\n  const segue = useNavigationSegue();\n  const setTransactionRequest = useSetRecoilState(transactionRequest);\n  const backgroundClient = useBackgroundClient();\n  const connectionBackgroundClient = useConnectionBackgroundClient();\n  const openPlugin = useOpenPlugin();\n\n  if (!xnftAddress) {\n    return <Loading />;\n  }\n\n  const plugin = plugins?.find((p) => p.xnftAddress.toString() === xnftAddress);\n\n  if (!plugin) {\n    return (\n      <DisplayFreshPlugin\n        xnftAddress={xnftAddress}\n        deepXnftPath={deepXnftPath}\n      />\n    );\n  }\n  plugin.setHostApi({\n    push: segue.push,\n    pop: segue.pop,\n    request: setTransactionRequest,\n    backgroundClient,\n    connectionBackgroundClient,\n    openPlugin,\n  });\n\n  if (xnftAddress === DEFAULT_PUBKEY_STR) {\n    return <Simulator plugin={plugin} deepXnftPath={deepXnftPath} />;\n  }\n  return <PluginDisplay plugin={plugin} deepXnftPath={deepXnftPath} />;\n}\n\nfunction DisplayFreshPlugin({\n  xnftAddress,\n  deepXnftPath,\n}: {\n  xnftAddress: string;\n  deepXnftPath: string;\n}) {\n  const p = useFreshPlugin(xnftAddress);\n  if (!p.result) {\n    return null;\n  }\n  return <PluginDisplay plugin={p.result} deepXnftPath={deepXnftPath} />;\n}\n\nexport function PluginDisplay({\n  plugin,\n  deepXnftPath,\n}: {\n  plugin?: Plugin;\n  deepXnftPath: string;\n}) {\n  return (\n    <>\n      <PluginControl plugin={plugin} />\n      <Suspense fallback={<Loading />}>\n        {plugin ? <PluginRenderer\n          key={plugin?.iframeRootUrl}\n          plugin={plugin}\n          deepXnftPath={deepXnftPath}\n          /> : null}\n      </Suspense>\n    </>\n  );\n}\n\nexport function PluginControl({ plugin }: { plugin: any | null }) {\n  const closePlugin = useClosePlugin();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    plugin?.didFinishSetup!.then(() => {\n      setIsLoading(false);\n    });\n  });\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        height: \"36px\",\n        right: 16,\n        top: 10,\n        zIndex: 2000,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div\n        style={{\n          //          width: \"87px\",\n          width: \"60px\",\n          height: \"32px\",\n          borderRadius: \"18.5px\",\n          display: \"flex\",\n          background: \"#fff\",\n        }}\n      >\n        {/*\n        <Button\n          disableRipple\n          onClick={() => {}}\n          sx={{\n\t\t\t\t\t\tborderTopLeftRadius: '18.5px',\n\t\t\t\t\t\tborderBottomLeftRadius: '18.5px',\n            flex: 1,\n            height: \"32px\",\n            padding: 0,\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"41.67px\",\n          }}\n        >\n          <MoreIcon fill={\"#000000\"} />\n        </Button>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Divider\n            orientation=\"vertical\"\n            style={{\n              width: \"0.5px\",\n              height: \"20px\",\n              backgroundColor: \"#E9E9E9\",\n            }}\n          />\n        </div>\n\t\t\t\t*/}\n        <Button\n          disableRipple\n          onClick={() => closePlugin()}\n          sx={{\n            position: \"relative\",\n            borderRadius: \"18.5px\",\n            flex: 1,\n            height: \"32px\",\n            padding: 0,\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            minWidth: \"41.67px\",\n          }}\n        >\n          {isLoading ? (\n            <div\n              style={{ position: \"relative\", height: \"20px\", width: \"20px\" }}\n            >\n              <Loading\n                size=\"small\"\n                color=\"secondary\"\n                style={{ display: \"block\" }}\n              />\n            </div>\n          ) : (\n            <PowerIcon fill=\"#000000\" />\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport type { Plugin, XnftPreference } from \"@coral-xyz/common\";\nimport {\n  BACKPACK_CONFIG_GITHUB_RUN_NUMBER,\n  BACKPACK_FEATURE_FORCE_LATEST_VERSION,\n} from \"@coral-xyz/common\";\nimport { Loading } from \"@coral-xyz/react-common\";\nimport {\n  useAvatarUrl,\n  useDarkMode,\n  useUser,\n  useXnftJwt,\n  xnftPreference as xnftPreferenceAtom,\n} from \"@coral-xyz/recoil\";\nimport { off } from \"process\";\nimport { useRecoilValue } from \"recoil\";\n\nconst buildNumber = BACKPACK_FEATURE_FORCE_LATEST_VERSION\n  ? parseInt(BACKPACK_CONFIG_GITHUB_RUN_NUMBER)\n  : -1;\n\nexport function PluginRenderer({\n  plugin,\n  deepXnftPath,\n}: {\n  plugin: Plugin;\n  deepXnftPath: string;\n}) {\n  const ref = useRef<HTMLDivElement>(null);\n  const { username, uuid } = useUser();\n  const [splash, setSplash] = useState<string | null>(null);\n  const isDarkMode = useDarkMode();\n  const avatarUrl = useAvatarUrl(100);\n  const xnftPreference = useRecoilValue(\n    xnftPreferenceAtom(plugin?.xnftInstallAddress?.toString())\n  );\n  const jwt = useXnftJwt(plugin.xnftAddress.toString());\n  useEffect(() => {\n    if (plugin && ref && ref.current) {\n      plugin.mount(xnftPreference, deepXnftPath);\n      plugin.didFinishSetup!.then(() => {\n        plugin.pushAppUiMetadata({\n          isDarkMode,\n          username,\n          userId: uuid,\n          avatarUrl,\n          jwt,\n          version: buildNumber,\n        });\n\n        // timeout hides iframe loading flicker.\n        setTimeout(() => {\n          plugin.iframeRoot!.style.display = \"\";\n        }, 200);\n      });\n      plugin.iframeRoot!.style.display = \"none\";\n      ref.current.appendChild(plugin.iframeRoot!);\n      return () => {\n        plugin.unmount();\n      };\n    }\n    return () => {};\n  }, [plugin, ref]);\n\n  useLayoutEffect(() => {\n    const resizeHandler = () => {\n      if (ref.current) {\n        const width = ref.current.clientWidth;\n        const height = ref.current.clientHeight;\n\n        setSplash(selectSplash(plugin?.splashUrls, width, height));\n      }\n    };\n    if (ref.current) {\n      window.addEventListener(\"resize\", resizeHandler);\n      resizeHandler();\n    }\n    return () => {\n      window.removeEventListener(\"resize\", resizeHandler);\n    };\n  }, [ref.current]);\n  useEffect(() => {\n    plugin.pushAppUiMetadata({\n      isDarkMode,\n      username,\n      userId: uuid,\n      avatarUrl,\n      version: buildNumber,\n    });\n  }, [username, isDarkMode, avatarUrl]);\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        position: \"absolute\",\n        overflow: \"hidden\",\n        top: \"0px\",\n        left: \"0px\",\n        bottom: \"0px\",\n        right: \"0px\",\n        backgroundImage: splash ? `url(${splash})` : \"none\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\",\n      }}\n     />\n  );\n}\n\nfunction selectSplash(\n  splashUrls: { src: string; height: number; width: number }[] | undefined,\n  width: number,\n  height: number\n): string {\n  if (!Array.isArray(splashUrls)) {\n    splashUrls = [\n      { src: \"assets/defaultSplash600.svg\", height: 600, width: 600 },\n      { src: \"assets/defaultSplash1000.svg\", height: 1000, width: 1000 },\n      { src: \"assets/defaultSplash2000.svg\", height: 2000, width: 2000 },\n    ];\n  }\n\n  let bestFitHeight = 0;\n  let bestFitWidth = 0;\n\n  splashUrls.forEach((splash, i) => {\n    const currentBestHeight = splashUrls![bestFitHeight].height;\n    if (\n      height <= splash.height &&\n      (splash.height < currentBestHeight || height > currentBestHeight)\n    ) {\n      bestFitHeight = i;\n    }\n\n    const currentBestWidth = splashUrls![bestFitWidth].width;\n    if (\n      width <= splash.width &&\n      (splash.width < currentBestWidth || width > currentBestWidth)\n    ) {\n      bestFitWidth = i;\n    }\n  });\n\n  const heightSplash = splashUrls[bestFitHeight];\n  const widthSplash = splashUrls[bestFitWidth];\n\n  // if both are valid options -> return smaller one\n  if (heightSplash.width > width && widthSplash.height > height) {\n    if (\n      heightSplash.height * heightSplash.width >\n      widthSplash.height * widthSplash.width\n    ) {\n      return widthSplash.src;\n    } else {\n      return heightSplash.src;\n    }\n  }\n\n  // only height valid\n  if (heightSplash.width > width) {\n    return heightSplash.src;\n  }\n\n  // only width valid\n  if (widthSplash.height > height) {\n    return widthSplash.src;\n  }\n\n  // if none are valid -> go for height.\n  return heightSplash.src;\n}\n","import { useEffect, useState } from \"react\";\nimport type { Plugin } from \"@coral-xyz/common\";\nimport { SIMULATOR_URL } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nimport { PluginDisplay } from \"./Plugin\";\n\nconst removeTimestamps = /[0-9]{13}/g;\n\n// The refresh code is a big hack. :)\nexport function Simulator({\n  plugin,\n  deepXnftPath,\n}: {\n  plugin: Plugin;\n  deepXnftPath: string;\n}) {\n  const refresh = useJavaScriptRefresh(SIMULATOR_URL);\n  return (\n    <PluginDisplay key={refresh} plugin={plugin} deepXnftPath={deepXnftPath} />\n  );\n}\n\nfunction useJavaScriptRefresh(url: string): number {\n  const [refresh, setRefresh] = useState(0);\n\n  useEffect(() => {\n    let previous: any = null;\n    const i = setInterval(() => {\n      (async () => {\n        const js = await (await fetch(url)).text();\n        const noTSjs = js?.replaceAll(removeTimestamps, \"\"); // remove cachebusting timestamps next.js\n        if (previous !== null && previous !== noTSjs) {\n          setRefresh((r) => r + 1);\n        }\n        previous = noTSjs;\n      })();\n    }, 1000);\n    return () => clearInterval(i);\n  }, []);\n\n  return refresh;\n}\n","import type { CSSProperties } from \"react\";\nimport { Blockchain, XNFT_GG_LINK } from \"@coral-xyz/common\";\nimport {\n  EmptyState,\n  ProxyImage,\n  useBreakpoints,\n} from \"@coral-xyz/react-common\";\nimport {\n  filteredPlugins,\n  isAggregateWallets,\n  useActiveWallet,\n  useAllWalletsDisplayed,\n  useLoader,\n  useOpenPlugin,\n  useSolanaConnectionUrl,\n} from \"@coral-xyz/recoil\";\nimport { HOVER_OPACITY, styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Block as BlockIcon } from \"@mui/icons-material\";\nimport { Button, Grid, Skeleton, Typography } from \"@mui/material\";\nimport { getSvgPath } from \"figma-squircle\";\nimport { useRecoilValue, waitForAll } from \"recoil\";\n\nimport {\n  _BalancesTableHead,\n  BalancesTableHead,\n  BalancesTableProvider,\n  useBalancesContext,\n} from \"../Balances/Balances\";\n\nconst ICON_WIDTH = 64;\n\nconst squircleIconPath = getSvgPath({\n  width: ICON_WIDTH,\n  height: ICON_WIDTH,\n  cornerRadius: 15,\n  cornerSmoothing: 0.8,\n});\n\nconst useStyles = styles((theme) => ({\n  pluginIconRoot: {\n    minWidth: ICON_WIDTH,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  pluginIconButton: {\n    width: ICON_WIDTH,\n    height: ICON_WIDTH,\n    overflow: \"hidden\",\n    clipPath: `path('${squircleIconPath}')`,\n    padding: 0,\n    backgroundColor: theme.custom.colors.nav,\n    \"&:hover\": {\n      opacity: HOVER_OPACITY,\n    },\n  },\n  pluginTitle: {\n    fontWeight: 500,\n    color: theme.custom.colors.fontColor,\n    fontSize: \"12px\",\n    lineHeight: \"16px\",\n    textAlign: \"center\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n  },\n}));\n\nexport function Apps() {\n  return <PluginGrid />;\n}\n\nfunction PluginGrid() {\n  const _isAggregateWallets = useRecoilValue(isAggregateWallets);\n  const activeWallet = useActiveWallet();\n  const wallets = useAllWalletsDisplayed();\n  const solanaWallets = wallets.filter(\n    (wallet) => wallet.blockchain === Blockchain.SOLANA\n  );\n  const connectionUrl = useSolanaConnectionUrl();\n  const [pluginsForAllWallets, , isLoading] = useLoader(\n    waitForAll(\n      solanaWallets.map((wallet) =>\n        filteredPlugins({ publicKey: wallet.publicKey, connectionUrl })\n      )\n    ),\n    [],\n    [connectionUrl]\n  );\n\n  //\n  // If the only displayed wallet is an Ethereum wallet, tell the user it's not supported.\n  //\n  if (wallets.length === 1) {\n    const wallet = wallets[0];\n    if (wallet.blockchain === Blockchain.ETHEREUM) {\n      return (\n        <EmptyState\n          icon={(props: any) => <BlockIcon {...props} />}\n          title=\"Ethereum xNFTs not yet supported\"\n          subtitle=\"Switch to Solana to use xNFTs\"\n          buttonText=\"\"\n          onClick={() => {}}\n          header={\n            // Only show the wallet switcher if we are in single wallet mode.\n            !_isAggregateWallets ? (\n              <_BalancesTableHead\n                blockchain={wallet.blockchain}\n                wallet={wallet}\n                showContent\n                setShowContent={() => {}}\n              />\n            ) : null\n          }\n        />\n      );\n    }\n  }\n\n  //\n  // Direct the user to xNFT.gg if there are no plugins available.\n  //\n  const pluginCount = pluginsForAllWallets.reduce(\n    (acc, walletPlugins) => walletPlugins.length + acc,\n    0\n  );\n  if (!isLoading && pluginCount === 0) {\n    return (\n      <EmptyState\n        icon={(props: any) => <BlockIcon {...props} />}\n        title=\"No xNFTs\"\n        subtitle=\"Get started with your first xNFT\"\n        buttonText=\"Browse xNFTs\"\n        onClick={() => window.open(XNFT_GG_LINK)}\n        header={\n          !_isAggregateWallets ? (\n            <_BalancesTableHead\n              blockchain={activeWallet.blockchain}\n              wallet={activeWallet}\n              showContent\n              setShowContent={() => {}}\n            />\n          ) : null\n        }\n      />\n    );\n  }\n\n  //\n  // Render all the Solana wallet xNFTs.\n  //\n  return (\n    <>\n      {solanaWallets.map((wallet: any) => {\n        return <WalletXnftGrid key={wallet.publicKey} wallet={wallet} />;\n      })}\n    </>\n  );\n}\n\nfunction WalletXnftGrid({\n  wallet,\n}: {\n  wallet: { publicKey: string; name: string; blockchain: Blockchain };\n}) {\n  const theme = useCustomTheme();\n  const connectionUrl = useSolanaConnectionUrl(); // TODO\n  const [plugins, , isLoading] = useLoader(\n    filteredPlugins({ publicKey: wallet.publicKey, connectionUrl }),\n    [],\n    [wallet]\n  );\n\n  return !isLoading && plugins.length === 0 ? null : (\n    <div\n      style={{\n        marginLeft: \"12px\",\n        marginRight: \"12px\",\n        marginBottom: \"12px\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        border: `${theme.custom.colors.borderFull}`,\n      }}\n    >\n      <BalancesTableProvider>\n        <_WalletXnftGrid\n          isLoading={isLoading}\n          plugins={plugins}\n          wallet={wallet}\n        />\n      </BalancesTableProvider>\n    </div>\n  );\n}\n\nfunction _WalletXnftGrid({\n  wallet,\n  isLoading,\n  plugins,\n}: {\n  wallet: { publicKey: string; name: string; blockchain: Blockchain };\n  isLoading: boolean;\n  plugins: Array<any>;\n}) {\n  const theme = useCustomTheme();\n  const { isXs } = useBreakpoints();\n  const openPlugin = useOpenPlugin();\n  const { showContent } = useBalancesContext();\n  const onClickPlugin = (p: any) => {\n    openPlugin(p.install.account.xnft.toString());\n  };\n  const iconsPerRow = isXs ? 4 : 6;\n  return (\n    <>\n      <BalancesTableHead wallet={wallet} />\n      {showContent ? (\n        <div\n          style={{\n            paddingTop: \"8px\",\n            paddingBottom: \"18px\",\n            paddingLeft: \"10px\",\n            paddingRight: \"10px\",\n            background: theme.custom.colors.nav,\n            borderBottomLeftRadius: \"10px\",\n            borderBottomRightRadius: \"10px\",\n          }}\n        >\n          <Grid container>\n            {isLoading ? (\n              Array.from(Array(iconsPerRow).keys()).map((_, idx) => {\n                return (\n                  <Grid\n                    item\n                    key={idx}\n                    xs={isXs ? 3 : 2}\n                    style={{\n                      marginTop: idx >= iconsPerRow ? \"24px\" : 0,\n                    }}\n                  >\n                    <SkeletonAppIcon />\n                  </Grid>\n                );\n              })\n            ) : (\n              <>\n                <LibraryLink isXs={isXs} />\n                {plugins.map((p: any, idx: number) => {\n                  return (\n                    <Grid\n                      item\n                      key={p.url}\n                      xs={isXs ? 3 : 2}\n                      style={{\n                        marginTop: idx + 1 >= iconsPerRow ? \"24px\" : 0,\n                      }}\n                    >\n                      <PluginIcon plugin={p} onClick={() => onClickPlugin(p)} />\n                    </Grid>\n                  );\n                })}\n              </>\n            )}\n          </Grid>\n        </div>\n      ) : null}\n    </>\n  );\n}\n\nfunction LibraryLink({ isXs }: { isXs: boolean }) {\n  const theme = useCustomTheme();\n\n  return (\n    <Grid item key=\"xnft-library\" xs={isXs ? 3 : 2}>\n      <AppIcon\n        title={\"xNFT.gg \\u2197\"}\n        iconStyle={{\n          padding: 14,\n          background: theme.custom.colorsInverted.nav,\n        }}\n        iconUrl={`${XNFT_GG_LINK}/logo.svg`}\n        onClick={() => window.open(XNFT_GG_LINK, \"_blank\")}\n      />\n    </Grid>\n  );\n}\n\nfunction PluginIcon({ plugin, onClick }: any) {\n  return (\n    <AppIcon title={plugin.title} iconUrl={plugin.iconUrl} onClick={onClick} />\n  );\n}\n\nfunction AppIcon({\n  title,\n  iconStyle,\n  iconUrl,\n  onClick,\n}: {\n  title: string;\n  iconStyle?: CSSProperties;\n  iconUrl: string;\n  onClick: () => void;\n}) {\n  const classes = useStyles();\n  return (\n    <div\n      style={{\n        width: \"72px\",\n        height: \"88px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n      }}\n    >\n      <Button\n        variant=\"contained\"\n        disableElevation\n        className={classes.pluginIconButton}\n        onClick={() => onClick()}\n        classes={{\n          root: classes.pluginIconRoot,\n        }}\n      >\n        <ProxyImage\n          src={iconUrl}\n          style={{\n            width: ICON_WIDTH,\n            height: ICON_WIDTH,\n            ...(iconStyle ?? {}),\n          }}\n        />\n      </Button>\n      <Typography className={classes.pluginTitle}>{title}</Typography>\n    </div>\n  );\n}\n\nfunction SkeletonAppIcon() {\n  return (\n    <div\n      style={{\n        width: \"72px\",\n        height: \"88px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n      }}\n    >\n      <Skeleton\n        height={ICON_WIDTH}\n        width={ICON_WIDTH}\n        sx={{\n          transform: \"none\",\n          clipPath: `path('${squircleIconPath}')`,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          background: \"rgba(0,0,0,0.15)\",\n        }}\n      />\n      <Skeleton\n        height={12}\n        width={48}\n        sx={{\n          transform: \"none\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          background: \"rgba(0,0,0,0.15)\",\n        }}\n      />\n    </div>\n  );\n}\n","import { formatUSD } from \"@coral-xyz/common\";\nimport {\n  totalBalance as totalBalanceSelector,\n  useLoader,\n} from \"@coral-xyz/recoil\";\nimport { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Skeleton, Typography } from \"@mui/material\";\n\nconst useStyles = makeStyles(() => ({\n  balancesHeaderContainer: {\n    paddingLeft: \"24px\",\n    paddingRight: \"24px\",\n    marginTop: \"24px\",\n    width: \"100%\",\n    borderRadius: \"12px\",\n  },\n  totalBalance: {\n    fontWeight: 600,\n    fontSize: \"40px\",\n    lineHeight: \"36px\",\n    color: \"inherit\",\n  },\n}));\n\nexport function BalanceSummaryWidget() {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const [{ totalBalance, totalChange, percentChange }, , isLoading] = useLoader(\n    totalBalanceSelector,\n    {\n      totalBalance: 0,\n      totalChange: 0,\n      percentChange: 0,\n    }\n  );\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div\n        className={classes.balancesHeaderContainer}\n        style={{\n          textAlign: \"center\",\n          marginLeft: \"12px\",\n          marginRight: \"12px\",\n          borderRadius: \"12px\",\n        }}\n      >\n        <Typography\n          className={classes.totalBalance}\n          style={{\n            color: theme.custom.colors.fontColor,\n          }}\n        >\n          {isLoading ? (\n            <Skeleton\n              sx={{ backgroundColor: theme.custom.colors.balanceSkeleton }}\n            />\n          ) : (\n            formatUSD(totalBalance)\n          )}\n        </Typography>\n        <div\n          style={{\n            display: \"flex\",\n            marginTop: \"16px\",\n          }}\n        >\n          <div style={{ flex: 1 }} />\n          <Typography\n            style={{\n              color:\n                totalChange === 0\n                  ? theme.custom.colors.neutral\n                  : totalChange < 0\n                  ? theme.custom.colors.negative\n                  : theme.custom.colors.positive,\n              paddingLeft: \"0px\",\n              paddingRight: \"0px\",\n              paddingTop: \"2px\",\n              paddingBottom: \"2px\",\n              marginRight: \"12px\",\n              lineHeight: \"24px\",\n            }}\n          >\n            {isLoading ? (\n              <Skeleton\n                width=\"100px\"\n                sx={{ backgroundColor: theme.custom.colors.balanceSkeleton }}\n              />\n            ) : (\n              <>\n                {totalChange > 0 ? \"+\" : \"\"}\n                {formatUSD(totalChange)}\n              </>\n            )}\n          </Typography>\n          <Typography\n            style={{\n              color:\n                totalChange === 0\n                  ? theme.custom.colors.neutral\n                  : totalChange < 0\n                  ? theme.custom.colors.negative\n                  : theme.custom.colors.positive,\n              paddingLeft: \"8px\",\n              paddingRight: \"8px\",\n              paddingTop: \"2px\",\n              paddingBottom: \"2px\",\n              backgroundColor: isLoading\n                ? undefined\n                : totalChange === 0\n                ? theme.custom.colors.balanceChangeNeutral\n                : totalChange < 0\n                ? theme.custom.colors.balanceChangeNegative\n                : theme.custom.colors.balanceChangePositive,\n              borderRadius: \"28px\",\n              lineHeight: \"24px\",\n            }}\n          >\n            {isLoading ? (\n              <Skeleton\n                width=\"100px\"\n                sx={{ backgroundColor: theme.custom.colors.balanceSkeleton }}\n              />\n            ) : (\n              <>\n                {totalChange > 0 ? \"+\" : \"\"}\n                {Number.isFinite(percentChange)\n                  ? `${percentChange?.toFixed(2)}%`\n                  : \"0.00%\"}\n              </>\n            )}\n          </Typography>\n          <div style={{ flex: 1 }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport { formatUSD, proxyImageUrl, toTitleCase } from \"@coral-xyz/common\";\nimport { getBlockchainLogo, isAggregateWallets } from \"@coral-xyz/recoil\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport {\n  Button as MuiButton,\n  Card,\n  CardContent,\n  CardHeader,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  Typography,\n} from \"@mui/material\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { UNKNOWN_ICON_SRC } from \"../../common/Icon\";\nimport { WalletDrawerButton } from \"../../common/WalletList\";\n\nconst useStyles = styles((theme) => ({\n  blockchainLogo: {\n    width: \"12px\",\n    borderRadius: \"2px\",\n    color: theme.custom.colors.secondary,\n  },\n  blockchainCard: {\n    backgroundColor: \"inherit\",\n    marginBottom: \"12px\",\n    marginLeft: \"12px\",\n    marginRight: \"12px\",\n    borderRadius: \"12px\",\n    border: theme.custom.colors.borderFull,\n  },\n  cardHeaderAvatar: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  cardHeaderRoot: {\n    padding: \"6px\",\n    paddingLeft: \"16px\",\n    paddingRight: \"16px\",\n    height: \"36px\",\n    width: \"100%\",\n  },\n  cardHeaderTitle: {\n    fontWeight: 500,\n    fontSize: \"14px\",\n  },\n  cardHeaderContent: {\n    color: theme.custom.colors.fontColor,\n  },\n  cardContentRoot: {\n    padding: \"0 !important\",\n  },\n  cardListRoot: {\n    padding: \"0 !important\",\n    height: \"100%\",\n  },\n  tokenListItem: {\n    borderTop: `solid 1pt ${theme.custom.colors.border}`,\n    backgroundColor: `${theme.custom.colors.nav} !important`,\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    padding: 0,\n    height: \"68px\",\n  },\n  balancesTableCellContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n  },\n  tokenListItemContent: {\n    color: theme.custom.colors.fontColor,\n    flex: 1,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n  },\n  tokenListItemRow: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  logoIcon: {\n    borderRadius: \"22px\",\n    width: \"44px\",\n    height: \"44px\",\n  },\n  tokenListItemIcon: {\n    paddingTop: \"12px\",\n    paddingBottom: \"12px\",\n    marginRight: \"12px\",\n  },\n  tokenName: {\n    height: \"24px\",\n    fontWeight: 500,\n    fontSize: \"16px\",\n    maxWidth: \"200px\",\n    overflow: \"hidden\",\n    color: theme.custom.colors.fontColor,\n    lineHeight: \"24px\",\n  },\n  tokenAmount: {\n    fontWeight: 500,\n    fontSize: \"14px\",\n    color: theme.custom.colors.secondary,\n    lineHeight: \"20px\",\n  },\n  tokenBalance: {\n    fontWeight: 500,\n    fontSize: \"16px\",\n    color: theme.custom.colors.fontColor,\n    lineHeight: \"24px\",\n  },\n  tokenBalanceChangeNeutral: {\n    fontWeight: 500,\n    fontSize: \"14px\",\n    color: theme.custom.colors.secondary,\n    float: \"right\",\n    lineHeight: \"20px\",\n  },\n  tokenBalanceChangePositive: {\n    fontWeight: 500,\n    fontSize: \"14px\",\n    color: theme.custom.colors.positive,\n    float: \"right\",\n    lineHeight: \"20px\",\n  },\n  tokenBalanceChangeNegative: {\n    fontWeight: 500,\n    fontSize: \"14px\",\n    color: theme.custom.colors.negative,\n    float: \"right\",\n    lineHeight: \"20px\",\n  },\n  tokenListItemIconRoot: {\n    minWidth: \"44px\",\n  },\n  expand: {\n    width: \"18px\",\n    color: theme.custom.colors.secondary,\n  },\n}));\n\nexport function BalancesTableCell({ props }: any) {\n  const { icon, title, subtitle, usdValue, balanceChange } = props;\n  const classes = useStyles();\n\n  // Determine the balance change polarity with a 100th rounding margin of 0.00\n  const polarity =\n    (balanceChange ?? 0) > 0.004\n      ? \"positive\"\n      : (balanceChange ?? 0) < -0.004\n      ? \"negative\"\n      : \"neutral\";\n\n  const changeLabel =\n    polarity === \"positive\" ? (\n      <Typography className={classes.tokenBalanceChangePositive}>\n        +{formatUSD(balanceChange.toLocaleString())}\n      </Typography>\n    ) : polarity === \"negative\" ? (\n      <Typography className={classes.tokenBalanceChangeNegative}>\n        {formatUSD(balanceChange.toLocaleString())}\n      </Typography>\n    ) : null;\n\n  return (\n    <div className={classes.balancesTableCellContainer}>\n      {icon ? (\n        <ListItemIcon\n          className={classes.tokenListItemIcon}\n          classes={{ root: classes.tokenListItemIconRoot }}\n        >\n          <ProxyImage\n            src=\"https://i.imgur.com/mfB2ugS.png\"\n            className={classes.logoIcon}\n            onError={(event: any) => {\n              event.currentTarget.src = UNKNOWN_ICON_SRC;\n            }}\n          />\n        </ListItemIcon>\n      ) : null}\n      <div className={classes.tokenListItemContent}>\n        <div className={classes.tokenListItemRow}>\n          <Typography className={classes.tokenName}>{title}</Typography>\n          <Typography className={classes.tokenBalance}>\n            {usdValue ? formatUSD(usdValue) : \"-\"}\n          </Typography>\n        </div>\n        <div className={classes.tokenListItemRow}>\n          {subtitle ? (\n            <Typography className={classes.tokenAmount}>{subtitle}</Typography>\n          ) : null}\n          {changeLabel}\n          {!usdValue ? (\n            <Typography className={classes.tokenBalanceChangeNeutral}>\n              -\n            </Typography>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function BalancesTable({ style, children }: any) {\n  const classes = useStyles();\n  return (\n    <BalancesTableProvider>\n      <Card className={classes.blockchainCard} elevation={0} style={style}>\n        {children}\n      </Card>\n    </BalancesTableProvider>\n  );\n}\n\nexport function BalancesTableProvider(props: any) {\n  const [showContent, setShowContent] = useState(true);\n  return (\n    <_BalancesTableContext.Provider\n      value={{\n        showContent,\n        setShowContent,\n      }}\n    >\n      {props.children}\n    </_BalancesTableContext.Provider>\n  );\n}\n\ntype BalancesContext = {\n  showContent: boolean;\n  setShowContent: (b: boolean) => void;\n};\nconst _BalancesTableContext = React.createContext<BalancesContext | null>(null);\n\nexport function useBalancesContext() {\n  const ctx = React.useContext(_BalancesTableContext);\n  if (ctx === null) {\n    throw new Error(\"Context not available\");\n  }\n  return ctx;\n}\n\nexport function BalancesTableHead({\n  disableToggle,\n  wallet,\n}: {\n  wallet: { name: string; publicKey: string; blockchain: Blockchain };\n  disableToggle?: boolean;\n}) {\n  const { showContent, setShowContent } = useBalancesContext();\n  return (\n    <_BalancesTableHead\n      blockchain={wallet.blockchain}\n      disableToggle={disableToggle}\n      wallet={wallet}\n      showContent={showContent}\n      setShowContent={setShowContent}\n    />\n  );\n}\n\nexport function _BalancesTableHead({\n  blockchain,\n  disableToggle,\n  wallet,\n  showContent,\n  setShowContent,\n}: {\n  blockchain: Blockchain;\n  wallet: { name: string; publicKey: string };\n  disableToggle?: boolean;\n  showContent: boolean;\n  setShowContent: (b: boolean) => void;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const title = toTitleCase(blockchain === \"solana\" ? \"Eclipse\" : blockchain);\n  const iconUrl = getBlockchainLogo(blockchain);\n  const _isAggregateWallets = useRecoilValue(isAggregateWallets);\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        borderRadius: 0,\n        padding: 0,\n        backgroundColor: theme.custom.colors.nav,\n      }}\n    >\n      <CardHeader\n        avatar={\n          iconUrl ? (\n            <ProxyImage className={classes.blockchainLogo} src={iconUrl} />\n          ) : undefined\n        }\n        title={\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n              }}\n            >\n              <Typography\n                style={{\n                  fontWeight: 500,\n                  lineHeight: \"24px\",\n                  fontSize: \"14px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                {title}\n              </Typography>\n              <WalletDrawerButton wallet={wallet} />\n            </div>\n            {_isAggregateWallets ? (\n              <MuiButton\n                disableRipple\n                style={{\n                  width: \"18px\",\n                  minWidth: \"18px\",\n                  marginLeft: \"8px\",\n                  padding: 0,\n                }}\n                onClick={() => !disableToggle && setShowContent(!showContent)}\n              >\n                {showContent ? (\n                  <ExpandLess className={classes.expand} />\n                ) : (\n                  <ExpandMore className={classes.expand} />\n                )}\n              </MuiButton>\n            ) : null}\n          </div>\n        }\n        classes={{\n          root: `${classes.cardHeaderRoot}`,\n          content: classes.cardHeaderContent,\n          title: classes.cardHeaderTitle,\n          avatar: classes.cardHeaderAvatar,\n        }}\n      />\n    </div>\n  );\n}\n\nexport function BalancesTableContent({ style, children }: any) {\n  const classes = useStyles();\n  const { showContent } = useBalancesContext();\n  return (\n    <CardContent classes={{ root: classes.cardContentRoot }} style={style}>\n      <List\n        style={{\n          display: !showContent ? \"none\" : undefined,\n        }}\n        classes={{ root: classes.cardListRoot }}\n      >\n        {children}\n      </List>\n    </CardContent>\n  );\n}\n\nexport function BalancesTableRow({\n  id,\n  props,\n  style,\n  children,\n  childrenRenderer,\n  onClick,\n}: any) {\n  return (\n    <__BalancesTableRow\n      id={id}\n      props={props}\n      style={style}\n      children={children}\n      childrenRenderer={childrenRenderer}\n      onClick={onClick}\n    />\n  );\n}\n\nfunction __BalancesTableRow({ style, children, onClick }: any) {\n  const classes = useStyles();\n  return (\n    <ListItemButton\n      disableRipple\n      className={classes.tokenListItem}\n      onClick={onClick}\n      style={style}\n    >\n      {children}\n    </ListItemButton>\n  );\n}\nfunction ProxyImage(props: any) {\n  return (\n    <img\n      {...props}\n      onError={({ currentTarget }) => {\n        currentTarget.onerror = props.onError || null;\n        currentTarget.src = props.src;\n      }}\n      src={proxyImageUrl(props.src)}\n    />\n  );\n}\n\n\n","// TODO: remove the line below\n/* eslint-disable react-hooks/rules-of-hooks */\nimport { Suspense, useEffect, useState } from \"react\";\nimport type { EnrichedNotification } from \"@coral-xyz/common\";\nimport {\n  BACKEND_API_URL,\n  sendFriendRequest,\n  XNFT_GG_LINK,\n} from \"@coral-xyz/common\";\nimport { updateFriendshipIfExists } from \"@coral-xyz/db\";\nimport {\n  BubbleTopLabel,\n  EmptyState,\n  isFirstLastListItemStyle,\n  Loading,\n  ProxyImage,\n  useBreakpoints,\n  UserAction,\n} from \"@coral-xyz/react-common\";\nimport {\n  unreadCount,\n  useAuthenticatedUser,\n  useFriendship,\n  useRecentNotifications,\n  useUpdateFriendships,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { useUserMetadata } from \"@coral-xyz/tamagui\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport { IconButton, List, ListItem, Typography } from \"@mui/material\";\nimport { useRecoilState } from \"recoil\";\n\nimport { CloseButton, WithDrawer } from \"../../common/Layout/Drawer\";\nimport {\n  NavStackEphemeral,\n  NavStackScreen,\n  useNavigation,\n} from \"../../common/Layout/NavStack\";\nimport { NotificationIconWithBadge } from \"../../common/NotificationIconWithBadge\";\nimport { ContactRequests, Contacts } from \"../Messages/Contacts\";\n\nconst useStyles = styles((theme) => ({\n  recentActivityLabel: {\n    color: theme.custom.colors.fontColor,\n    fontWeight: 500,\n    fontSize: \"14px\",\n    lineHeight: \"24px\",\n  },\n  customBadge: {\n    backgroundColor: \"#E33E3F\",\n  },\n  allWalletsLabel: {\n    fontWeight: 500,\n    fontSize: \"12px\",\n    color: theme.custom.colors.secondary,\n  },\n  noRecentActivityLabel: {\n    fontWeight: 500,\n    fontSize: \"16px\",\n    padding: \"16px\",\n    textAlign: \"center\",\n    color: theme.custom.colors.secondary,\n  },\n  recentActivityListItemIcon: {\n    width: \"44px\",\n    height: \"44px\",\n    borderRadius: \"22px\",\n    marginRight: \"12px\",\n    color: theme.custom.colors.positive,\n  },\n  recentActivityListItemIconNegative: {\n    color: theme.custom.colors.negative,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  txSig: {\n    color: theme.custom.colors.fontColor,\n    fontSize: \"16px\",\n    fontWeight: 500,\n    lineHeight: \"24px\",\n  },\n  txBody: {\n    color: theme.custom.colors.smallTextColor,\n    fontSize: \"14px\",\n    fontWeight: 500,\n    lineHeight: \"24px\",\n  },\n  time: {\n    color: theme.custom.colors.smallTextColor,\n    fontSize: \"14px\",\n    fontWeight: 500,\n    lineHeight: \"24px\",\n  },\n  networkSettingsButtonContainer: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    width: \"38px\",\n  },\n  networkSettingsButton: {\n    padding: 0,\n    width: \"24px\",\n    \"&:hover\": {\n      background: \"transparent\",\n    },\n  },\n}));\n\nexport function NotificationButton() {\n  const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const theme = useCustomTheme();\n  return (\n    <div className={classes.networkSettingsButtonContainer}>\n      <IconButton\n        disableRipple\n        className={classes.networkSettingsButton}\n        onClick={() => setOpenDrawer(true)}\n        size=\"large\"\n      >\n        <NotificationIconWithBadge\n          style={{\n            color: theme.custom.colors.icon,\n            backgroundColor: \"transparent\",\n            borderRadius: \"12px\",\n          }}\n        />\n      </IconButton>\n      <WithDrawer openDrawer={openDrawer} setOpenDrawer={setOpenDrawer}>\n        <div style={{ height: \"100%\" }}>\n          <NavStackEphemeral\n            initialRoute={{ name: \"root\" }}\n            options={() => ({ title: \"Notifications\" })}\n            navButtonLeft={<CloseButton onClick={() => setOpenDrawer(false)} />}\n          >\n            <NavStackScreen\n              name=\"root\"\n              component={(props: any) => <Notifications {...props} />}\n            />\n            <NavStackScreen\n              name=\"contacts\"\n              component={(props: any) => <Contacts {...props} />}\n            />\n            <NavStackScreen\n              name=\"contact-requests\"\n              component={(props: any) => <ContactRequests {...props} />}\n            />\n            <NavStackScreen\n              name=\"contact-requests-sent\"\n              component={(props: any) => <ContactRequests {...props} />}\n            />\n          </NavStackEphemeral>\n        </div>\n      </WithDrawer>\n    </div>\n  );\n}\n\nconst formatDate = (date: Date) => {\n  const months = [\n    \"Jan\",\n    \"Feb\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"Aug\",\n    \"Sept\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  const mm = months[date.getMonth()];\n  const dd = date.getDate();\n  const yyyy = date.getFullYear();\n  return `${dd} ${mm} ${yyyy}`;\n};\n\nconst getGroupedNotifications = (notifications: EnrichedNotification[]) => {\n  const groupedNotifications: {\n    date: string;\n    notifications: EnrichedNotification[];\n  }[] = [];\n\n  const uniqueNotifications = notifications\n    .slice()\n    .sort((a, b) =>\n      new Date(a.timestamp).getTime() < new Date(b.timestamp).getTime() ? 1 : -1\n    )\n    .filter(\n      (x, index) =>\n        x.xnft_id !== \"friend_requests\" ||\n        notifications.map((y) => y.body).indexOf(x.body) === index\n    );\n  const sortedNotifications = uniqueNotifications.sort((a, b) =>\n    new Date(a.timestamp).getTime() < new Date(b.timestamp).getTime() ? 1 : -1\n  );\n\n  for (let i = 0; i < sortedNotifications.length; i++) {\n    const date = formatDate(new Date(sortedNotifications[i].timestamp));\n    if (\n      groupedNotifications.length === 0 ||\n      groupedNotifications[groupedNotifications.length - 1].date !== date\n    ) {\n      groupedNotifications.push({\n        date,\n        notifications: [sortedNotifications[i]],\n      });\n    } else {\n      groupedNotifications[groupedNotifications.length - 1].notifications.push(\n        sortedNotifications[i]\n      );\n    }\n  }\n\n  return groupedNotifications;\n};\n\nexport function Notifications() {\n  const { isXs } = useBreakpoints();\n  const nav = isXs ? useNavigation() : null;\n  const authenticatedUser = useAuthenticatedUser();\n  const [openDrawer, setOpenDrawer] = isXs\n    ? [false, () => {}]\n    : useState(false);\n\n  const [, setUnreadCount] = useRecoilState(unreadCount);\n\n  const notifications: EnrichedNotification[] = useRecentNotifications({\n    limit: 50,\n    offset: 0,\n    uuid: authenticatedUser?.uuid ?? \"\",\n  });\n\n  useEffect(() => {\n    if (isXs) {\n      nav!.setOptions({\n        headerTitle: \"Notifications\",\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    const allNotifications = notifications.slice();\n    const uniqueNotifications = allNotifications\n      .sort((a, b) =>\n        new Date(a.timestamp).getTime() < new Date(b.timestamp).getTime()\n          ? 1\n          : -1\n      )\n      .filter(\n        (x, index) =>\n          x.xnft_id !== \"friend_requests\" ||\n          allNotifications.map((y) => y.body).indexOf(x.body) === index\n      );\n\n    const sortedNotifications = uniqueNotifications.sort((a, b) =>\n      new Date(a.timestamp).getTime() < new Date(b.timestamp).getTime() ? 1 : -1\n    );\n\n    const latestNotification = sortedNotifications[0];\n    if (latestNotification && latestNotification.id) {\n      fetch(`${BACKEND_API_URL}/notifications/cursor`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          lastNotificationId: latestNotification.id,\n        }),\n      });\n    }\n\n    fetch(`${BACKEND_API_URL}/notifications/seen`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        notificationIds: notifications\n          .filter((x) => !x.viewed)\n          .map(({ id }) => id),\n      }),\n    });\n\n    setUnreadCount(0);\n  }, [notifications, setUnreadCount]);\n\n  const groupedNotifications: {\n    date: string;\n    notifications: EnrichedNotification[];\n  }[] = getGroupedNotifications(notifications);\n\n  return (\n    <>\n      <Suspense fallback={<NotificationsLoader />}>\n        <NotificationList\n          onOpenDrawer={() => setOpenDrawer(true)}\n          groupedNotifications={groupedNotifications}\n        />\n      </Suspense>\n      {!isXs ? (\n        <WithDrawer openDrawer={openDrawer} setOpenDrawer={setOpenDrawer}>\n          <div style={{ height: \"100%\" }}>\n            <NavStackEphemeral\n              initialRoute={{ name: \"root\" }}\n              options={() => ({ title: \"Notifications\" })}\n              navButtonLeft={\n                <CloseButton onClick={() => setOpenDrawer(false)} />\n              }\n            >\n              <NavStackScreen\n                name=\"root\"\n                component={(props: any) => <Contacts {...props} />}\n              />\n              <NavStackScreen\n                name=\"contact-requests\"\n                component={(props: any) => <ContactRequests {...props} />}\n              />\n              <NavStackScreen\n                name=\"contact-requests-sent\"\n                component={(props: any) => <ContactRequests {...props} />}\n              />\n            </NavStackEphemeral>\n          </div>\n        </WithDrawer>\n      ) : null}\n    </>\n  );\n}\n\nexport function RecentActivityList({\n  groupedNotifications,\n}: {\n  groupedNotifications: {\n    date: string;\n    notifications: EnrichedNotification[];\n  }[];\n}) {\n  return (\n    <Suspense fallback={<NotificationsLoader />}>\n      <NotificationList groupedNotifications={groupedNotifications} />\n    </Suspense>\n  );\n}\n\nfunction NotificationsLoader() {\n  return (\n    <div\n      style={{\n        height: \"68px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"block\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n        }}\n      >\n        <Loading iconStyle={{ width: \"35px\", height: \"35px\" }} />\n      </div>\n    </div>\n  );\n}\n\nexport function NotificationList({\n  groupedNotifications,\n  onOpenDrawer,\n}: {\n  groupedNotifications: {\n    date: string;\n    notifications: EnrichedNotification[];\n  }[];\n  onOpenDrawer?: () => void;\n}) {\n  const theme = useCustomTheme();\n\n  return groupedNotifications.length > 0 ? (\n    <div\n      style={{\n        paddingBottom: \"16px\",\n      }}\n    >\n      {groupedNotifications.map(({ date, notifications }) => (\n        <div\n          key={date}\n          style={{\n            marginLeft: \"16px\",\n            marginRight: \"16px\",\n            marginTop: \"16px\",\n          }}\n        >\n          <BubbleTopLabel text={date} />\n          <List\n            style={{\n              paddingTop: 0,\n              paddingBottom: 0,\n              borderRadius: \"12px\",\n              border: `${theme.custom.colors.borderFull}`,\n            }}\n          >\n            <div>\n              {notifications.map((notification: any, idx: number) => (\n                <NotificationListItem\n                  key={idx}\n                  notification={notification}\n                  isFirst={idx === 0}\n                  isLast={idx === notifications.length - 1}\n                  onOpenDrawer={onOpenDrawer}\n                />\n              ))}\n            </div>\n          </List>\n        </div>\n      ))}\n    </div>\n  ) : (\n    <NoNotificationsLabel minimize={false} />\n  );\n}\n\nconst getTimeStr = (timestamp: number) => {\n  const elapsedTimeSeconds = (new Date().getTime() - timestamp) / 1000;\n  if (elapsedTimeSeconds < 60) {\n    return \"now\";\n  }\n  if (elapsedTimeSeconds / 60 < 60) {\n    const min = Math.floor(elapsedTimeSeconds / 60);\n    if (min === 1) {\n      return \"1 min\";\n    } else {\n      return `${min} mins`;\n    }\n  }\n\n  if (elapsedTimeSeconds / 3600 < 24) {\n    const hours = Math.floor(elapsedTimeSeconds / 3600);\n    if (hours === 1) {\n      return \"1 hour\";\n    } else {\n      return `${hours} hours`;\n    }\n  }\n  const days = Math.floor(elapsedTimeSeconds / 3600 / 24);\n  if (days === 1) {\n    return `1 day`;\n  }\n  return `${days} days`;\n};\n\nfunction NotificationListItem({\n  notification,\n  isFirst,\n  isLast,\n  onOpenDrawer,\n}: {\n  notification: EnrichedNotification;\n  isFirst: boolean;\n  isLast: boolean;\n  onOpenDrawer?: () => void;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n\n  if (notification.xnft_id === \"friend_requests\") {\n    return (\n      <FriendRequestListItem\n        title=\"Friend request\"\n        notification={notification}\n        isFirst={isFirst}\n        isLast={isLast}\n        onOpenDrawer={onOpenDrawer}\n      />\n    );\n  }\n\n  if (notification.xnft_id === \"friend_requests_accept\") {\n    return (\n      <FriendRequestListItem\n        title=\"Friend request accepted\"\n        notification={notification}\n        isFirst={isFirst}\n        isLast={isLast}\n        onOpenDrawer={onOpenDrawer}\n      />\n    );\n  }\n\n  return (\n    <ListItem\n      button\n      disableRipple\n      onClick={() => {}}\n      style={{\n        paddingLeft: \"12px\",\n        paddingRight: \"12px\",\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        display: \"flex\",\n        height: \"68px\",\n        backgroundColor: !notification.viewed\n          ? theme.custom.colors.unreadBackground\n          : theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div style={{ flex: 1, display: \"flex\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <NotificationListItemIcon image={notification.xnftImage} />\n          </div>\n          <div>\n            <Typography className={classes.txSig}>\n              {notification.xnftTitle}\n            </Typography>\n            <Typography className={classes.txBody}>\n              {notification.body}\n            </Typography>\n          </div>\n        </div>\n        <div>\n          <div className={classes.time}>\n            {getTimeStr(notification.timestamp)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n}\n\nfunction AcceptRejectRequest({ userId }: { userId: string }) {\n  const friendshipValue = useFriendship({ userId });\n  const { uuid } = useUser();\n  const setFriendshipValue = useUpdateFriendships();\n  const theme = useCustomTheme();\n  const [inProgress, setInProgress] = useState(false);\n\n  if (friendshipValue?.remoteRequested && !friendshipValue?.areFriends) {\n    return (\n      <div style={{ display: \"flex\", marginTop: 5 }}>\n        <UserAction\n          style={{ color: theme.custom.colors.blue, marginRight: 10 }}\n          text=\"Accept\"\n          onClick={async (e: any) => {\n            e.stopPropagation();\n            setInProgress(true);\n            await sendFriendRequest({ to: userId, sendRequest: true });\n            await updateFriendshipIfExists(uuid, userId, {\n              requested: 0,\n              areFriends: 1,\n            });\n            await setFriendshipValue({\n              userId: userId,\n              friendshipValue: {\n                requested: false,\n                areFriends: true,\n                remoteRequested: false,\n              },\n            });\n            setInProgress(false);\n          }}\n        />\n        <UserAction\n          text=\"Decline\"\n          onClick={async (e: any) => {\n            e.stopPropagation();\n            setInProgress(true);\n            await sendFriendRequest({ to: userId, sendRequest: false });\n            await updateFriendshipIfExists(uuid, userId, {\n              requested: 0,\n              areFriends: 0,\n              remoteRequested: 0,\n            });\n            await setFriendshipValue({\n              userId: userId,\n              friendshipValue: {\n                requested: false,\n                areFriends: false,\n                remoteRequested: false,\n              },\n            });\n            setInProgress(false);\n          }}\n        />\n      </div>\n    );\n  }\n  return <div />;\n}\n\nfunction parseJson(body: string) {\n  try {\n    return JSON.parse(body);\n  } catch (ex) {\n    return {};\n  }\n}\n\nfunction FriendRequestListItem({\n  notification,\n  isFirst,\n  isLast,\n  onOpenDrawer,\n  title,\n}: {\n  notification: EnrichedNotification;\n  isFirst: boolean;\n  isLast: boolean;\n  onOpenDrawer?: () => void;\n  title: string;\n}) {\n  const { isXs } = useBreakpoints();\n  const nav = isXs ? useNavigation() : undefined;\n  const user = useUserMetadata({\n    remoteUserId: parseJson(notification.body).from,\n  });\n  const classes = useStyles();\n  const theme = useCustomTheme();\n\n  return (\n    <ListItem\n      button\n      disableRipple\n      onClick={() => (isXs ? nav!.push(\"contacts\") : onOpenDrawer!())}\n      style={{\n        paddingLeft: \"12px\",\n        paddingRight: \"12px\",\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        display: \"flex\",\n        backgroundColor: !notification.viewed\n          ? theme.custom.colors.unreadBackground\n          : theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border1}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ flex: 1, display: \"flex\", alignItems: \"flex-start\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <NotificationListItemIcon image={user?.image} />\n          </div>\n          <div style={{ width: \"100%\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                width: \"100%\",\n              }}\n            >\n              <div>\n                <Typography className={classes.txSig}>{title}</Typography>\n              </div>\n              <div className={classes.time}>\n                {getTimeStr(notification.timestamp)}\n              </div>\n            </div>\n            <Typography className={classes.txBody}>@{user.username}</Typography>\n            <AcceptRejectRequest userId={parseJson(notification.body).from} />\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n}\n\nfunction NotificationListItemIcon({ image }: any) {\n  const classes = useStyles();\n  return (\n    <ProxyImage\n      size={44}\n      loadingStyles={{ marginRight: \"12px\", height: \"44px\", width: \"44px\" }}\n      src={image}\n      className={classes.recentActivityListItemIcon}\n    />\n  );\n}\n\nfunction NoNotificationsLabel({ minimize }: { minimize: boolean }) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        display: minimize ? \"none\" : undefined,\n      }}\n    >\n      <EmptyState\n        icon={(props: any) => <NotificationsIcon {...props} />}\n        title=\"No Notifications\"\n        subtitle={\"You don't have any notifications yet.\"}\n        buttonText=\"Browse the xNFT Library\"\n        onClick={() => window.open(XNFT_GG_LINK)}\n        innerStyle={{\n          marginBottom: minimize !== true ? \"64px\" : 0, // Tab height offset.\n        }}\n        contentStyle={{\n          color: minimize ? theme.custom.colors.secondary : \"inherit\",\n        }}\n        minimize={minimize}\n      />\n    </div>\n  );\n}\n","// TODO: remove the line below\n/* eslint-disable react-hooks/rules-of-hooks */\nimport { Suspense, useState } from \"react\";\nimport { Blockchain, explorerUrl, XNFT_GG_LINK } from \"@coral-xyz/common\";\nimport {\n  EmptyState,\n  isFirstLastListItemStyle,\n  Loading,\n} from \"@coral-xyz/react-common\";\nimport {\n  getBlockchainLogo,\n  useActiveWallet,\n  useBlockchainConnectionUrl,\n  useBlockchainExplorer,\n  useRecentEthereumTransactions,\n  useRecentSolanaTransactions,\n  useRecentTransactions,\n} from \"@coral-xyz/recoil\";\nimport { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { CallMade, Check, Clear } from \"@mui/icons-material\";\nimport FormatListBulletedRoundedIcon from \"@mui/icons-material/FormatListBulletedRounded\";\nimport { IconButton, List, ListItem, Typography } from \"@mui/material\";\n\nimport { CloseButton, WithDrawer } from \"../../common/Layout/Drawer\";\nimport {\n  NavStackEphemeral,\n  NavStackScreen,\n} from \"../../common/Layout/NavStack\";\n\nimport { _RecentSolanaActivityList } from \"./RecentSolanaActivity/RecentSolanaActivityList\";\n\nconst useStyles = makeStyles((theme) => ({\n  recentActivityListItemIconContainer: {\n    width: \"44px\",\n    height: \"44px\",\n    borderRadius: \"22px\",\n    marginRight: \"12px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  recentActivityListItemIcon: {\n    color: theme.custom.colors.positive,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  recentActivityListItemIconNegative: {\n    color: theme.custom.colors.negative,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  txSig: {\n    color: theme.custom.colors.fontColor,\n    fontSize: \"16px\",\n    fontWeight: 500,\n    lineHeight: \"24px\",\n  },\n  txDate: {\n    color: theme.custom.colors.secondary,\n    fontSize: \"12px\",\n    fontWeight: 500,\n    lineHeight: \"24px\",\n  },\n  networkSettingsButtonContainer: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\",\n    width: \"38px\",\n  },\n  networkSettingsButton: {\n    padding: 0,\n    width: \"24px\",\n    \"&:hover\": {\n      background: \"transparent\",\n    },\n  },\n  networkSettingsIcon: {\n    color: theme.custom.colors.icon,\n    backgroundColor: \"transparent\",\n    borderRadius: \"12px\",\n  },\n}));\n\nexport function RecentActivityButton() {\n  const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  return (\n    <div className={classes.networkSettingsButtonContainer}>\n      <IconButton\n        disableRipple\n        className={classes.networkSettingsButton}\n        onClick={() => setOpenDrawer(true)}\n        size=\"large\"\n      >\n        <FormatListBulletedRoundedIcon\n          className={classes.networkSettingsIcon}\n        />\n      </IconButton>\n      <WithDrawer openDrawer={openDrawer} setOpenDrawer={setOpenDrawer}>\n        <div style={{ height: \"100%\" }}>\n          <NavStackEphemeral\n            initialRoute={{ name: \"root\" }}\n            options={() => ({ title: \"Transactions\" })}\n            navButtonLeft={<CloseButton onClick={() => setOpenDrawer(false)} />}\n          >\n            <NavStackScreen\n              name=\"root\"\n              component={(props: any) => <RecentActivity {...props} />}\n            />\n          </NavStackEphemeral>\n        </div>\n      </WithDrawer>\n    </div>\n  );\n}\n\nexport function RecentActivity() {\n  const activeWallet = useActiveWallet();\n\n  const recentTransactions =\n    (activeWallet.blockchain === Blockchain.SOLANA\n      ? useRecentSolanaTransactions({\n          address: activeWallet.publicKey,\n        })\n      : useRecentEthereumTransactions({\n          address: activeWallet.publicKey,\n        })) ?? [];\n\n  // Used since Solana transactions have a timestamp and Ethereum transactions have a date.\n  const extractTime = (tx: any) => {\n    if (tx?.timestamp) {\n      return tx.timestamp;\n    } else if (tx?.date) {\n      return tx.date.getTime();\n    }\n    return 0;\n  };\n\n  const mergedTransactions = [...recentTransactions].sort((a, b) =>\n    extractTime(a) > extractTime(b) ? -1 : 1\n  );\n\n  return (\n    <Suspense fallback={<RecentActivityLoading />}>\n      {activeWallet.blockchain === Blockchain.SOLANA ? (\n        <_RecentSolanaActivityList transactions={mergedTransactions} />\n      ) : (\n        <_RecentActivityList transactions={mergedTransactions} />\n      )}\n    </Suspense>\n  );\n}\n\nexport function RecentActivityList({\n  blockchain,\n  address,\n  contractAddresses,\n  transactions,\n  style,\n  minimize = false,\n}: {\n  blockchain?: Blockchain;\n  address?: string;\n  contractAddresses?: Array<string>;\n  transactions?: Array<any>;\n  style?: any;\n  minimize?: boolean;\n}) {\n  return (\n    <Suspense fallback={<RecentActivityLoading />}>\n      <_RecentActivityList\n        blockchain={blockchain}\n        address={address}\n        contractAddresses={contractAddresses}\n        transactions={transactions}\n        style={style}\n        minimize={minimize}\n      />\n    </Suspense>\n  );\n}\n\nfunction RecentActivityLoading() {\n  return (\n    <div\n      style={{\n        height: \"68px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"block\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n        }}\n      >\n        <Loading iconStyle={{ width: \"35px\", height: \"35px\" }} />\n      </div>\n    </div>\n  );\n}\n\nexport function _RecentActivityList({\n  blockchain,\n  address,\n  contractAddresses,\n  transactions: _transactions,\n  style,\n  minimize,\n}: {\n  blockchain?: Blockchain;\n  address?: string;\n  contractAddresses?: Array<string>;\n  transactions?: Array<any>;\n  style?: any;\n  minimize?: boolean;\n}) {\n  const theme = useCustomTheme();\n  const transactions = useRecentTransactions({\n    blockchain: blockchain!,\n    address: address!,\n    contractAddresses: contractAddresses!,\n    transactions: _transactions,\n  });\n\n  if (!style) {\n    style = {};\n  }\n\n  return transactions.length > 0 ? (\n    <div\n      style={{\n        paddingBottom: \"16px\",\n      }}\n    >\n      <List\n        style={{\n          marginTop: \"16px\",\n          paddingTop: 0,\n          paddingBottom: 0,\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          borderRadius: \"14px\",\n          border: `${theme.custom.colors.borderFull}`,\n          ...style,\n        }}\n      >\n        {transactions.map((tx: any, idx: number) => (\n          <RecentActivityListItem\n            // eslint-disable-next-line react/no-array-index-key\n            key={idx}\n            transaction={tx}\n            isFirst={idx === 0}\n            isLast={idx === transactions.length - 1}\n          />\n        ))}\n      </List>\n    </div>\n  ) : (\n    <NoRecentActivityLabel minimize={!!minimize} />\n  );\n}\n\nfunction RecentActivityListItem({ transaction, isFirst, isLast }: any) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const explorer = useBlockchainExplorer(transaction.blockchain);\n  const connectionUrl = useBlockchainConnectionUrl(transaction.blockchain);\n  const blockchainLogo = getBlockchainLogo(transaction.blockchain);\n  const onClick = () => {\n    window.open(explorerUrl(explorer!, transaction.signature, connectionUrl!));\n  };\n  return (\n    <ListItem\n      button\n      disableRipple\n      onClick={onClick}\n      style={{\n        paddingLeft: \"12px\",\n        paddingRight: \"12px\",\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        display: \"flex\",\n        height: \"68px\",\n        backgroundColor: theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div style={{ flex: 1, display: \"flex\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <RecentActivityListItemIcon transaction={transaction} />\n          </div>\n          <div>\n            <Typography className={classes.txSig}>\n              <img\n                style={{\n                  width: \"12px\",\n                  borderRadius: \"2px\",\n                  marginRight: \"10px\",\n                }}\n                src={blockchainLogo}\n              />\n              {transaction.signature.slice(0, 4)}...\n              {transaction.signature.slice(transaction.signature.length - 5)}\n            </Typography>\n            <Typography className={classes.txDate}>\n              {\n                // TODO: Standardize the parsed ethereum and solana transactions\n                //       so that `transaction.date` can be used for both of them\n                (\n                  (transaction.date\n                    ? // ethereum transactions provide a date\n                      transaction.date\n                    : // solana transactions provide a timestamp in seconds\n                      new Date(transaction.timestamp * 1000)) as Date\n                ).toLocaleString()\n              }\n            </Typography>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <CallMade style={{ color: theme.custom.colors.icon }} />\n        </div>\n      </div>\n    </ListItem>\n  );\n}\n\nfunction RecentActivityListItemIcon({ transaction }: any) {\n  const classes = useStyles();\n  return (\n    <div className={classes.recentActivityListItemIconContainer}>\n      {transaction.didError ? (\n        <Clear className={classes.recentActivityListItemIconNegative} />\n      ) : (\n        <Check className={classes.recentActivityListItemIcon} />\n      )}\n    </div>\n  );\n}\n\nfunction NoRecentActivityLabel({ minimize }: { minimize: boolean }) {\n  const theme = useCustomTheme();\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        display: minimize ? \"none\" : undefined,\n      }}\n    >\n      <EmptyState\n        icon={(props: any) => <FormatListBulletedRoundedIcon {...props} />}\n        title=\"No Recent Activity\"\n        subtitle=\"Your transactions and app activity will show up here when you start using Backpack!\"\n        onClick={() => window.open(XNFT_GG_LINK)}\n        contentStyle={{\n          color: minimize ? theme.custom.colors.secondary : \"inherit\",\n        }}\n        innerStyle={{\n          marginBottom: minimize !== true ? \"64px\" : 0, // Tab height offset.\n        }}\n        minimize={minimize}\n      />\n    </div>\n  );\n}\n","import { SOL_LOGO_URI } from \"@coral-xyz/recoil\";\nimport {\n  ArrowDownwardRounded,\n  Check,\n  ClearRounded,\n  Image,\n  SendRounded,\n  WhatshotRounded,\n} from \"@mui/icons-material\";\n\n// TODO: move reused styles into classes\nexport const ListItemIcons = {\n  Swap: ({\n    tokenLogoOne,\n    tokenLogoTwo,\n  }: {\n    tokenLogoOne?: string;\n    tokenLogoTwo?: string;\n  }) => {\n    return (\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <img\n          style={{\n            borderRadius: \"50%\",\n            width: \"24px\",\n            height: \"24px\",\n            marginRight: \"10px\",\n            marginBottom: \"15px\",\n            zIndex: \"10\",\n          }}\n          src={tokenLogoOne}\n        />\n        <img\n          style={{\n            borderRadius: \"50%\",\n            width: \"24px\",\n            height: \"24px\",\n            marginRight: \"15px\",\n            marginLeft: \"-15px\",\n          }}\n          src={tokenLogoTwo}\n        />\n      </div>\n    );\n  },\n  Transfer: ({ tokenLogo }: { tokenLogo?: string }) => {\n    return (\n      <img\n        style={{\n          borderRadius: \"50%\",\n          width: \"44px\",\n          height: \"44px\",\n          marginRight: \"15px\",\n        }}\n        src={tokenLogo}\n      />\n    );\n  },\n  Sol: () => {\n    return (\n      <img\n        style={{\n          borderRadius: \"50%\",\n          width: \"44px\",\n          height: \"44px\",\n          marginRight: \"15px\",\n        }}\n        src={SOL_LOGO_URI}\n      />\n    );\n  },\n  Nft: ({ nftUrl }: { nftUrl?: string }) => {\n    return (\n      <img\n        style={{\n          borderRadius: \"4px\",\n          width: \"44px\",\n          height: \"44px\",\n          marginRight: \"15px\",\n        }}\n        src={nftUrl}\n      />\n    );\n  },\n  Sent: () => {\n    return (\n      <div\n        style={{\n          width: \"44px\",\n          height: \"44px\",\n          borderRadius: \"22px\",\n          marginRight: \"12px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <SendRounded\n          style={{\n            color: \"#8F929E\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      </div>\n    );\n  },\n  Received: () => {\n    return (\n      <div\n        style={{\n          width: \"44px\",\n          height: \"44px\",\n          borderRadius: \"22px\",\n          marginRight: \"12px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <ArrowDownwardRounded\n          style={{\n            color: \"#8F929E\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      </div>\n    );\n  },\n  NftDefault: () => {\n    return (\n      <Image\n        style={{\n          borderRadius: \"4px\",\n          width: \"44px\",\n          height: \"44px\",\n          marginRight: \"15px\",\n          fill: \"#99A4B4\",\n        }}\n      />\n    );\n  },\n  Error: () => {\n    return (\n      <div\n        style={{\n          width: \"44px\",\n          height: \"44px\",\n          borderRadius: \"22px\",\n          marginRight: \"12px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <ClearRounded\n          style={{\n            color: \"#E95050\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      </div>\n    );\n  },\n  Burn: () => {\n    return (\n      <div\n        style={{\n          width: \"44px\",\n          height: \"44px\",\n          borderRadius: \"22px\",\n          marginRight: \"12px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <WhatshotRounded\n          style={{\n            color: \"#E95050\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      </div>\n    );\n  },\n  Default: () => {\n    return (\n      <div\n        style={{\n          width: \"44px\",\n          height: \"44px\",\n          borderRadius: \"22px\",\n          marginRight: \"12px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Check\n          style={{\n            color: \"#35A63A\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      </div>\n    );\n  },\n};\n","import { reverseScientificNotation } from \"@coral-xyz/common\";\nimport { isFirstLastListItemStyle } from \"@coral-xyz/react-common\";\nimport {\n  metadataForRecentSolanaTransaction,\n  useActiveWallet,\n  useJupiterTokenMap,\n} from \"@coral-xyz/recoil\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { ListItem, Skeleton, Typography } from \"@mui/material\";\nimport type { TokenInfo } from \"@solana/spl-token-registry\";\nimport { Source, TransactionType } from \"helius-sdk/dist/types\";\nimport { useRecoilValueLoadable } from \"recoil\";\n\nimport {\n  getTokenData,\n  getTransactionCaption,\n  getTransactionTitle,\n  isNFTTransaction,\n  isUserTxnSender,\n  parseSwapTransaction,\n} from \"./detail-parser\";\nimport { ListItemIcons } from \"./Icons\";\nimport type { HeliusParsedTransaction } from \"./types\";\n\n// TODO: clean this up. lot of duplicate styling, more efficient way to write this.\nconst useStyles = styles((theme) => ({\n  title: {\n    color: theme.custom.colors.fontColor,\n    fontSize: \"16px\",\n    fontWeight: 500,\n    lineHeight: \"24px\",\n  },\n  caption: {\n    color: theme.custom.colors.secondary,\n    fontSize: \"12px\",\n    fontWeight: 500,\n    lineHeight: \"24px\",\n    whiteSpace: \"nowrap\",\n    overflow: \"hidden\",\n  },\n  textReceived: {\n    fontSize: \"16px\",\n    color: theme.custom.colors.positive,\n    lineHeight: \"24px\",\n    textAlign: \"end\",\n  },\n  textSent: {\n    fontSize: \"16px\",\n    color: theme.custom.colors.negative,\n    lineHeight: \"24px\",\n    textAlign: \"end\",\n  },\n  textSecondary: {\n    fontSize: \"16px\",\n    color: theme.custom.colors.negative,\n    lineHeight: \"24px\",\n    textAlign: \"end\",\n  },\n  lineDataWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n}));\n\nexport function SolanaTransactionListItem({\n  transaction,\n  isFirst,\n  isLast,\n  setMetadata,\n  setTransactionDetail,\n}: any) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const registry = useJupiterTokenMap();\n  const { contents, state } = useRecoilValueLoadable(\n    metadataForRecentSolanaTransaction({ transaction })\n  );\n  const activeWallet = useActiveWallet();\n  const tokenData = getTokenData(registry, transaction);\n  const metadata = (state === \"hasValue\" && contents) || undefined;\n\n  const onClick = () => {\n    setMetadata(metadata);\n    setTransactionDetail(transaction);\n  };\n\n  const transactionTitle = getTransactionTitle(\n    activeWallet,\n    transaction,\n    metadata\n  );\n\n  const transactionCaption = getTransactionCaption(\n    activeWallet,\n    transaction,\n    tokenData,\n    metadata\n  );\n\n  return (\n    <ListItem\n      button\n      disableRipple\n      onClick={onClick}\n      style={{\n        paddingLeft: \"12px\",\n        paddingRight: \"12px\",\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        display: \"flex\",\n        backgroundColor: theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border1}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n        borderBottomLeftRadius: isLast ? \"12px\" : 0,\n        borderBottomRightRadius: isLast ? \"12px\" : 0,\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div style={{ flex: 1, display: \"flex\" }}>\n          <div className={classes.lineDataWrapper}>\n            <RecentActivityListItemIcon\n              loading={state === \"loading\"}\n              transaction={transaction}\n              tokenData={tokenData}\n            />\n          </div>\n          <div>\n            <Typography className={classes.title}>\n              {transactionTitle}\n            </Typography>\n            <Typography className={classes.caption}>\n              {transactionCaption}\n            </Typography>\n          </div>\n        </div>\n        <div className={classes.lineDataWrapper}>\n          <RecentActivityListItemData\n            transaction={transaction}\n            tokenData={tokenData}\n            metadata={metadata}\n          />\n        </div>\n      </div>\n    </ListItem>\n  );\n}\n\n// Controls left icon on 'Transactions' list. Created in a way\n//  that may be easily extended to further/future Helius types\n// To add a new ruleset for helius parsed TXN type or source\n// 1.) add desired icon to ListItemIcons in \"./Icons\";\n// 2.) map txn to icon below\nfunction RecentActivityListItemIcon({\n  loading,\n  transaction,\n  tokenData,\n}: {\n  loading: boolean;\n  transaction: HeliusParsedTransaction;\n  tokenData: (TokenInfo | undefined)[];\n}) {\n  const activeWallet = useActiveWallet();\n  if (loading) {\n    return (\n      <Skeleton\n        sx={{ mr: \"15px\" }}\n        variant=\"rounded\"\n        height=\"44px\"\n        width=\"44px\"\n      />\n    );\n  }\n\n  if (transaction?.transactionError) return <ListItemIcons.Error />;\n\n  if (transaction.type === TransactionType.SWAP) {\n    const [input, output] = parseSwapTransaction(transaction, tokenData);\n    return (\n      <ListItemIcons.Swap\n        tokenLogoOne={input.tokenIcon}\n        tokenLogoTwo={output.tokenIcon}\n      />\n    );\n  }\n\n  // if NFT url available, display it. Check on-chain data first\n  const nftImage = undefined; // FIXME: metadata?.onChainMetadata?.metadata?.data?.uri;\n\n  if (isNFTTransaction(transaction) && nftImage) {\n    return <ListItemIcons.Nft nftUrl={nftImage} />;\n  }\n\n  if (transaction.type === TransactionType.TRANSFER) {\n    //SOL transfer\n    if (transaction.source === Source.SYSTEM_PROGRAM) {\n      return <ListItemIcons.Sol />;\n    }\n\n    // other SPL token Transfer. Check tokenRegistry first, then Helius metadata\n    const transferIcon = tokenData[0]?.logoURI; // FIXME: metadata offchain image\n\n    if (transferIcon) {\n      return <ListItemIcons.Transfer tokenLogo={transferIcon} />;\n    }\n\n    // if it is an NFT transfer and no NFT image was found above, show default Icon\n    if (transaction?.tokenTransfers?.[0]?.tokenStandard === \"NonFungible\") {\n      return <ListItemIcons.NftDefault />;\n    }\n    // default\n    if (isUserTxnSender(transaction, activeWallet)) {\n      return <ListItemIcons.Sent />;\n    }\n\n    return <ListItemIcons.Received />;\n  }\n\n  if (\n    transaction?.type === TransactionType.BURN ||\n    transaction?.type === TransactionType.BURN_NFT\n  )\n    return <ListItemIcons.Burn />;\n\n  return <ListItemIcons.Default />;\n}\n\n// Controls data displayed on right side of 'Transactions' list\nfunction RecentActivityListItemData({\n  transaction,\n  tokenData,\n  metadata,\n}: {\n  transaction: HeliusParsedTransaction;\n  tokenData: (TokenInfo | undefined)[];\n  metadata?: any;\n}) {\n  const activeWallet = useActiveWallet();\n  const classes = useStyles();\n\n  // FAILURE\n  if (transaction?.transactionError) {\n    return <div className={classes.caption}>Failed</div>;\n  }\n\n  if (transaction.type === TransactionType.SWAP) {\n    const [input, output] = parseSwapTransaction(transaction, tokenData);\n    return (\n      <>\n        {output?.amountWithSymbol ? (\n          <div className={classes.textReceived}>+{output.amountWithSymbol}</div>\n        ) : null}\n        {input?.amountWithSymbol ? (\n          <div className={classes.textSecondary}>-{input.amountWithSymbol}</div>\n        ) : null}\n      </>\n    );\n  }\n\n  // BURN\n  if (\n    transaction?.type === TransactionType.BURN ||\n    transaction?.type === TransactionType.BURN_NFT\n  ) {\n    return (\n      <div className={classes.textSecondary}>\n        {transaction?.tokenTransfers[0]?.tokenAmount}\n      </div>\n    );\n  }\n\n  // finish\n  if (isNFTTransaction(transaction)) {\n    return <div />;\n  }\n\n  if (\n    transaction.type === TransactionType.TRANSFER\n    // || transaction.type === TransactionType.UNKNOWN\n  ) {\n    // USER === SENDER\n    if (isUserTxnSender(transaction, activeWallet)) {\n      // SOL Transfer\n      if (transaction.source === Source.SYSTEM_PROGRAM) {\n        return (\n          <div className={classes.textSent}>\n            -\n            {reverseScientificNotation(\n              transaction?.nativeTransfers[0]?.amount / 10 ** 9\n            ) + \" SOL\"}\n          </div>\n        );\n      }\n      return (\n        <div className={classes.textSent}>\n          -\n          {new Number(\n            transaction?.tokenTransfers?.[0]?.tokenAmount.toFixed(5)\n          ) +\n            \" \" +\n            (tokenData[0]?.symbol ||\n              metadata?.onChainMetadata?.metadata?.data?.symbol ||\n              \"\")}\n        </div>\n      );\n\n      // USER === RECEIVER\n    } else if (isUserTxnSender(transaction, activeWallet) === false) {\n      // SOL Transfer\n      if (transaction.source === Source.SYSTEM_PROGRAM) {\n        return (\n          <div className={classes.textReceived}>\n            +\n            {reverseScientificNotation(\n              transaction?.nativeTransfers[0]?.amount / 10 ** 9\n            ) + \" SOL\"}\n          </div>\n        );\n      }\n      return (\n        <div className={classes.textReceived}>\n          +\n          {new Number(\n            transaction?.tokenTransfers?.[0]?.tokenAmount.toFixed(5)\n          ) +\n            \" \" +\n            (tokenData[0]?.symbol ||\n              metadata?.onChainMetadata?.metadata?.data?.symbol ||\n              \"\")}\n        </div>\n      );\n    }\n  }\n\n  // default\n  return <div />;\n}\n","import { XNFT_GG_LINK } from \"@coral-xyz/common\";\nimport { EmptyState } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Bolt } from \"@mui/icons-material\";\n\n// User has no transactions\nexport function NoRecentActivityLabel({ minimize }: { minimize: boolean }) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        display: minimize ? \"none\" : undefined,\n      }}\n    >\n      <EmptyState\n        icon={(props: any) => <Bolt {...props} />}\n        title=\"No Recent Activity\"\n        subtitle=\"Get started by adding your first xNFT\"\n        onClick={() => window.open(XNFT_GG_LINK)}\n        buttonText=\"Browse the xNFT Library\"\n        contentStyle={{\n          color: minimize ? theme.custom.colors.secondary : \"inherit\",\n        }}\n        innerStyle={{\n          marginBottom: minimize !== true ? \"64px\" : 0, // Tab height offset.\n        }}\n        minimize={minimize}\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { Blockchain, explorerUrl } from \"@coral-xyz/common\";\nimport { BubbleTopLabel } from \"@coral-xyz/react-common\";\nimport {\n  useBlockchainConnectionUrl,\n  useBlockchainExplorer,\n  useRecentTransactions,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { List } from \"@mui/material\";\n\nimport { formatTimestampListView, groupTxnsByDate } from \"./detail-parser\";\nimport { SolanaTransactionListItem } from \"./ListItem\";\nimport { NoRecentActivityLabel } from \"./NoRecentActivity\";\nimport { TransactionDetail } from \"./TransactionDetail\";\nimport type { HeliusParsedTransaction } from \"./types\";\n\nexport function _RecentSolanaActivityList({\n  blockchain,\n  address,\n  contractAddresses,\n  transactions: _transactions,\n  style,\n  minimize,\n}: {\n  blockchain?: Blockchain;\n  address?: string;\n  contractAddresses?: Array<string>;\n  transactions?: Array<any>;\n  style?: any;\n  minimize?: boolean;\n}) {\n  const theme = useCustomTheme();\n  const [transactionDetail, setTransactionDetail] = useState(null);\n  const [metadata, setMetadata] = useState(null);\n  const explorer = useBlockchainExplorer(Blockchain.SOLANA);\n  const connectionUrl = useBlockchainConnectionUrl(Blockchain.SOLANA);\n\n  // Load transactions if not passed in as a prop\n  const transactions = _transactions\n    ? _transactions\n    : // eslint-disable-next-line react-hooks/rules-of-hooks\n      useRecentTransactions({\n        blockchain: blockchain!,\n        address: address!,\n        contractAddresses: contractAddresses!,\n      });\n\n  if (transactionDetail) {\n    return (\n      <TransactionDetail\n        metadata={metadata}\n        transaction={transactionDetail}\n        setMetadata={setMetadata}\n        setTransactionDetail={setTransactionDetail}\n      />\n    );\n  }\n\n  const txnsGroupedByDate = groupTxnsByDate(transactions);\n\n  return transactions?.length > 0 ? (\n    <div\n      style={{\n        paddingBottom: \"16px\",\n      }}\n    >\n      {txnsGroupedByDate.map((group: HeliusParsedTransaction[], i: number) => {\n        return (\n          <div\n            key={i}\n            style={{\n              marginLeft: \"16px\",\n              marginTop: \"16px\",\n              marginRight: \"16px\",\n            }}\n          >\n            <BubbleTopLabel\n              text={formatTimestampListView(group[0].timestamp)}\n            />\n            <List\n              style={{\n                marginTop: \"5px\",\n                paddingTop: 0,\n                paddingBottom: 0,\n                borderRadius: \"14px\",\n                border: `${theme.custom.colors.borderFull}`,\n                ...style,\n              }}\n            >\n              {group.map((tx: HeliusParsedTransaction, idx: number) => (\n                <ErrorBoundary\n                  key={tx.signature}\n                  fallback={\n                    <div\n                      onClick={() => {\n                        window.open(\n                          explorerUrl(explorer, tx.signature, connectionUrl)\n                        );\n                      }}\n                    >\n                      {tx.signature}\n                    </div>\n                  }\n                >\n                  <SolanaTransactionListItem\n                    transaction={tx}\n                    isFirst={idx === 0}\n                    isLast={idx === group.length - 1}\n                    setMetadata={setMetadata}\n                    setTransactionDetail={setTransactionDetail}\n                  />\n                </ErrorBoundary>\n              ))}\n            </List>\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <NoRecentActivityLabel minimize={!!minimize} />\n  );\n}\n","import type { Dispatch, SetStateAction } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Blockchain,\n  exploreAddressUrl,\n  explorerUrl,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport { PrimaryButton, ProxyImage } from \"@coral-xyz/react-common\";\nimport {\n  SOL_LOGO_URI,\n  useActiveWallet,\n  useBlockchainConnectionUrl,\n  useBlockchainExplorer,\n  useJupiterTokenMap,\n} from \"@coral-xyz/recoil\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport {\n  ArrowDownwardRounded,\n  ArrowRightAltRounded,\n  CallMade,\n  CancelTwoTone,\n  CheckCircleTwoTone,\n  Image,\n  SendRounded,\n  WhatshotRounded,\n} from \"@mui/icons-material\";\nimport { Card, List } from \"@mui/material\";\nimport type { TokenInfo } from \"@solana/spl-token-registry\";\nimport { Source, TransactionType } from \"helius-sdk/dist/types\";\n\nimport { UNKNOWN_ICON_SRC } from \"../../../common/Icon\";\nimport { WithDrawer } from \"../../../common/Layout/Drawer\";\nimport { NavBackButton } from \"../../../common/Layout/Nav\";\nimport {\n  NavStackEphemeral,\n  NavStackScreen,\n} from \"../../../common/Layout/NavStack\";\n\nimport {\n  formatTimestamp,\n  getTokenData,\n  getTransactionDetailTitle,\n  isNFTTransaction,\n  isUserTxnSender,\n  parseSwapTransaction,\n  snakeToTitleCase,\n} from \"./detail-parser\";\nimport type { HeliusParsedTransaction } from \"./types\";\n\nconst useStyles = styles((theme) => ({\n  transactionCard: {\n    display: \"flex\",\n    padding: \"16px\",\n    paddingTop: \"24px\",\n    flexDirection: \"column\",\n    height: \"100%\",\n    alignItems: \"center\",\n    backgroundColor: theme.custom.colors.background,\n    overflowY: \"scroll\",\n  },\n  nft: {\n    borderRadius: \"10px\",\n    width: \"168px\",\n    height: \"168px\",\n    objectFit: \"cover\",\n  },\n  ctaButton: {\n    margin: \"16px\",\n    width: \"100%\",\n    color: theme.custom.colors.fontColor,\n    backgrounColor: theme.custom.colors.secondaryButton,\n  },\n  detailList: {\n    marginTop: \"16px\",\n    paddingTop: 0,\n    paddingBottom: 0,\n    marginLeft: \"16px\",\n    marginRight: \"16px\",\n    borderRadius: \"14px\",\n    width: \"100%\",\n    fontSize: \"14px\",\n    border: theme.custom.colors.tableCellBorder,\n  },\n  firstRow: {\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    display: \"flex\",\n    borderBottom: theme.custom.colors.tableCellBorder,\n    borderTopLeftRadius: \"12px\",\n    borderTopRightRadius: \"12px\",\n    backgroundColor: theme.custom.colors.nav,\n  },\n  middleRow: {\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    display: \"flex\",\n    borderBottom: theme.custom.colors.tableCellBorder,\n    backgroundColor: theme.custom.colors.nav,\n  },\n  lastRow: {\n    paddingLeft: \"12px\",\n    paddingRight: \"12px\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    display: \"flex\",\n    borderBottomLeftRadius: \"12px\",\n    borderBottomRightRadius: \"12px\",\n    backgroundColor: theme.custom.colors.nav,\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  cell: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  cellValue: {\n    display: \"flex\",\n    alignItems: \"center\",\n    fontWeight: 500,\n    color: theme.custom.colors.fontColor,\n  },\n  confirmedStatus: {\n    color: \"#35A63A\",\n  },\n  failedStatus: {\n    color: \"#E95050\",\n  },\n  label: {\n    color: theme.custom.colors.secondary,\n    textTransform: \"capitalize\",\n  },\n  transferAmount: {\n    fontSize: \"30px\",\n    color: theme.custom.colors.fontColor,\n    fontWeight: 600,\n    marginTop: \"8px\",\n  },\n  tokenLogo: {\n    borderRadius: \"50%\",\n    width: \"56px\",\n    height: \"56px\",\n  },\n  addressExplorerRow: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  detailCardHeaderSwapContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: \"40px\",\n    marginBottom: \"40px\",\n  },\n  detailCardHeaderSwapArrow: {\n    color: theme.custom.colors.alpha,\n    width: \"80px\",\n    fontSize: \"35px\",\n  },\n  detailCardHeaderSwapColumn: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  detailCardHeaderSwapText: {\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    color: theme.custom.colors.fontColor,\n    marginTop: \"5px\",\n    textAlign: \"center\",\n    minHeight: \"24px\", // keep alignment in case there's no text\n  },\n}));\n\nexport function TransactionDetail({\n  metadata,\n  transaction,\n  setMetadata,\n  setTransactionDetail,\n}: {\n  metadata: any;\n  transaction: HeliusParsedTransaction;\n  setMetadata: Dispatch<SetStateAction<any>>;\n  setTransactionDetail: Dispatch<SetStateAction<any>>;\n}) {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const registry = useJupiterTokenMap();\n  const activeWallet = useActiveWallet();\n  const navigate = useNavigate();\n  const [openDrawer, setOpenDrawer] = useState(true);\n  const [offChainMetadata, setOffChainMetadata] = useState<any | undefined>(\n    undefined\n  );\n\n  // TODO - this is duplicated in ListItem.tsx, better to pass in setTransactionDetail state\n  const tokenData = getTokenData(registry, transaction);\n\n  useEffect(() => {\n    if (\n      !metadata ||\n      !metadata.onChainMetadata ||\n      !metadata.onChainMetadata.metadata\n    ) {\n      return;\n    }\n\n    fetch(metadata.onChainMetadata.metadata.data.uri)\n      .then((res) => res.json())\n      .then(setOffChainMetadata)\n      .catch(console.error);\n  }, [metadata]);\n\n  return (\n    <WithDrawer openDrawer={openDrawer} setOpenDrawer={setOpenDrawer}>\n      <div\n        style={{ height: \"100%\", background: theme.custom.colors.background }}\n      >\n        <NavStackEphemeral\n          initialRoute={{ name: \"transactionDetails\" }}\n          options={() => {\n            return {\n              title: getTransactionDetailTitle(\n                activeWallet,\n                transaction,\n                activeWallet?.publicKey\n              ),\n            };\n          }}\n          navButtonLeft={\n            <NavBackButton\n              onClick={() => {\n                setTransactionDetail(null);\n                setMetadata(null);\n                setOpenDrawer(false);\n              }}\n            />\n          }\n        >\n          <NavStackScreen\n            name=\"transactionDetails\"\n            component={(props: any) => (\n              <Card {...props} className={classes.transactionCard}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    paddingBottom: \"6px\",\n                  }}\n                >\n                  <DetailCardHeader\n                    transaction={transaction}\n                    tokenData={tokenData}\n                    metadata={metadata}\n                    offChainMetadata={offChainMetadata}\n                  />\n                </div>\n\n                {/* TODO - Default to check/error */}\n\n                {/* TODO - add other functionality for this CTA button. Will need to\n                create mappings for 'verified' sites to determine correct URL*/}\n                {transaction?.type === TransactionType.NFT_SALE &&\n                transaction?.events?.nft?.buyer === activeWallet.publicKey ? (\n                  <PrimaryButton\n                    className={classes.ctaButton}\n                    label=\"View in your gallery\"\n                    onClick={() => {\n                      navigate(\"/nfts\");\n                    }}\n                  />\n                ) : null}\n\n                <DetailTable\n                  transaction={transaction}\n                  tokenData={tokenData}\n                  offChainMetadata={offChainMetadata}\n                />\n              </Card>\n            )}\n          />\n        </NavStackEphemeral>\n      </div>\n    </WithDrawer>\n  );\n}\n\n// similar to RecentActivityListItemIcon in ListItem.tsx. Controls graphic displayed in\n// top-half of detail card. May be best to further abstract to icon Object map (like in RecentSolanaActivity/Icons.tsx)\nfunction DetailCardHeader({\n  transaction,\n  tokenData,\n  metadata,\n  offChainMetadata,\n}: {\n  transaction: HeliusParsedTransaction;\n  tokenData: (TokenInfo | undefined)[];\n  metadata?: any;\n  offChainMetadata?: any;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const activeWallet = useActiveWallet();\n  if (transaction?.transactionError)\n    return (\n      <CancelTwoTone sx={{ height: 100, width: 100 }} htmlColor=\"#F13236\" />\n    );\n\n  if (transaction.type === TransactionType.SWAP) {\n    const [input, output] = parseSwapTransaction(transaction, tokenData);\n    return (\n      <div className={classes.detailCardHeaderSwapContainer}>\n        <div className={classes.detailCardHeaderSwapColumn}>\n          <ProxyImage className={classes.tokenLogo} src={input.tokenIcon} />\n          <div className={classes.detailCardHeaderSwapText}>\n            {input.amountWithSymbol}\n          </div>\n        </div>\n        <ArrowRightAltRounded className={classes.detailCardHeaderSwapArrow} />\n        <div className={classes.detailCardHeaderSwapColumn}>\n          <ProxyImage className={classes.tokenLogo} src={output.tokenIcon} />\n          <div className={classes.detailCardHeaderSwapText}>\n            {output.amountWithSymbol}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // if NFT url available, display it. Check on-chain data first\n  const nftImage = offChainMetadata?.image;\n\n  const nftPrice = transaction?.events?.nft?.amount\n    ? transaction?.events?.nft?.amount / 10 ** 9\n    : null;\n\n  if (isNFTTransaction(transaction) && nftImage) {\n    return (\n      <>\n        <ProxyImage className={classes.nft} src={nftImage} />\n        {nftPrice ? (\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              paddingTop: \"16px\",\n            }}\n          >\n            <ProxyImage\n              style={{\n                borderRadius: \"50%\",\n                width: \"16px\",\n                height: \"16px\",\n                marginRight: \"5px\",\n              }}\n              src={SOL_LOGO_URI}\n            />\n            <div\n              style={{\n                fontSize: \"16px\",\n                color: theme.custom.colors.fontColor,\n              }}\n            >\n              {nftPrice + \" SOL\"}\n            </div>\n          </div>\n        ) : null}\n      </>\n    );\n  }\n\n  if (transaction.type === TransactionType.TRANSFER) {\n    //SOL transfer\n    if (transaction.source === Source.SYSTEM_PROGRAM) {\n      return (\n        <>\n          <ProxyImage className={classes.tokenLogo} src={SOL_LOGO_URI} />\n          <div className={classes.transferAmount}>\n            {isUserTxnSender(transaction, activeWallet)\n              ? \"- \" +\n                transaction?.nativeTransfers?.[0]?.amount / 10 ** 9 +\n                \" SOL\"\n              : \"+ \" +\n                transaction?.nativeTransfers?.[0]?.amount / 10 ** 9 +\n                \" SOL\"}\n          </div>\n        </>\n      );\n    }\n    // other SPL token Transfer. Check tokenRegistry first, then Helius metadata\n    const transferIcon = tokenData[0]?.logoURI || UNKNOWN_ICON_SRC; // FIXME: || metadata?.onChainMetadata?.metadata?.data?.uri;\n\n    const transferSymbol =\n      tokenData[0]?.symbol || metadata?.onChainMetadata?.metadata?.data?.symbol;\n\n    if (transferIcon) {\n      return (\n        <>\n          {transferIcon === UNKNOWN_ICON_SRC ? (\n            <img className={classes.tokenLogo} src={transferIcon} />\n          ) : (\n            <ProxyImage className={classes.tokenLogo} src={transferIcon} />\n          )}\n          <div className={classes.transferAmount}>\n            {isUserTxnSender(transaction, activeWallet)\n              ? \"- \" +\n                transaction?.tokenTransfers?.[0]?.tokenAmount +\n                \" \" +\n                (transferSymbol && transferSymbol)\n              : \"+ \" +\n                transaction?.tokenTransfers?.[0]?.tokenAmount +\n                \" \" +\n                (transferSymbol && transferSymbol)}\n          </div>\n        </>\n      );\n    }\n\n    // if it is an NFT transfer and no NFT image was found above, show default Icon\n    if (transaction?.tokenTransfers?.[0]?.tokenStandard === \"NonFungible\") {\n      return (\n        <Image\n          style={{\n            borderRadius: \"2px\",\n            width: \"168px\",\n            height: \"168px\",\n            fill: \"#99A4B4\",\n          }}\n        />\n      );\n    }\n    // default\n    if (isUserTxnSender(transaction, activeWallet))\n      return (\n        <SendRounded\n          style={{\n            color: \"#8F929E\",\n            width: \"56px\",\n            height: \"56px\",\n          }}\n        />\n      );\n    return (\n      <ArrowDownwardRounded\n        style={{\n          color: \"#8F929E\",\n          width: \"56px\",\n          height: \"56px\",\n        }}\n      />\n    );\n  }\n\n  if (\n    transaction?.type === TransactionType.BURN ||\n    transaction?.type === TransactionType.BURN\n  )\n    return (\n      <WhatshotRounded\n        style={{\n          color: \"#E95050\",\n          width: \"56px\",\n          height: \"56px\",\n        }}\n      />\n    );\n\n  return (\n    <CheckCircleTwoTone sx={{ height: 100, width: 100 }} htmlColor=\"#35A63A\" />\n  );\n}\n\nfunction DetailTable({\n  transaction,\n  tokenData,\n  offChainMetadata,\n}: {\n  transaction: HeliusParsedTransaction;\n  tokenData: (TokenInfo | undefined)[];\n  offChainMetadata?: any;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const explorer = useBlockchainExplorer(Blockchain.SOLANA);\n  const connectionUrl = useBlockchainConnectionUrl(Blockchain.SOLANA);\n  const activeWallet = useActiveWallet();\n\n  return (\n    <List className={classes.detailList}>\n      <div className={classes.firstRow}>\n        <div className={classes.cell}>\n          <div className={classes.label}>Date</div>\n\n          <div className={classes.cellValue}>\n            {formatTimestamp(transaction?.timestamp)}\n          </div>\n        </div>\n      </div>\n\n      {transaction.type ? (\n        <div className={classes.middleRow}>\n          <div className={classes.cell}>\n            <div className={classes.label}>Type</div>\n            <div className={classes.cellValue}>\n              {snakeToTitleCase(transaction.type)}\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {offChainMetadata ? (\n        <div className={classes.middleRow}>\n          <div className={classes.cell}>\n            <div className={classes.label}>Item</div>\n            <div className={classes.cellValue}>{offChainMetadata.name}</div>\n          </div>\n        </div>\n      ) : null}\n      {transaction.source ? (\n        <div className={classes.middleRow}>\n          <div className={classes.cell}>\n            <div className={classes.label}>Source</div>\n            <div className={classes.cellValue}>\n              {snakeToTitleCase(transaction.source)}\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {(transaction?.type === TransactionType.UNKNOWN ||\n        transaction.type === TransactionType.TRANSFER) &&\n      isUserTxnSender(transaction, activeWallet) ? (\n        <div className={classes.addressExplorerRow}>\n          <div\n            className={classes.middleRow}\n            onClick={() => {\n              window.open(\n                exploreAddressUrl(\n                  explorer!,\n                  transaction?.tokenTransfers?.[0]?.toUserAccount ||\n                    transaction?.nativeTransfers?.[0]?.toUserAccount,\n                  connectionUrl!\n                )\n              );\n            }}\n          >\n            <div className={classes.cell}>\n              <div className={classes.label}>To</div>\n              <div className={classes.cellValue}>\n                {walletAddressDisplay(\n                  transaction?.tokenTransfers?.[0]?.toUserAccount ||\n                    transaction?.nativeTransfers?.[0]?.toUserAccount\n                )}\n                <CallMade\n                  style={{\n                    color: theme.custom.colors.icon,\n                    paddingLeft: \"2px\",\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {(transaction?.type === TransactionType.UNKNOWN ||\n        transaction.type === TransactionType.TRANSFER) &&\n      isUserTxnSender(transaction, activeWallet) === false ? (\n        <div className={classes.middleRow}>\n          <div className={classes.cell}>\n            <div className={classes.label}>From</div>\n\n            <div className={classes.cellValue}>\n              {walletAddressDisplay(\n                transaction?.tokenTransfers?.[0]?.fromUserAccount ||\n                  transaction?.nativeTransfers?.[0]?.fromUserAccount\n              )}\n            </div>\n          </div>\n        </div>\n      ) : null}\n\n      {transaction?.type === TransactionType.SWAP ? (\n        <SwapTransaction transaction={transaction} tokenData={tokenData} />\n      ) : null}\n\n      {/* ALL txn types have  first row (Date) rest of data\n      rows below (Network Fee, Status, Signature)*/}\n      <div className={classes.middleRow}>\n        <div className={classes.cell}>\n          <div className={classes.label}>Network Fee</div>\n          <div className={classes.cellValue}>\n            {transaction?.fee / 10 ** 9} SOL\n          </div>\n        </div>\n      </div>\n      <div className={classes.middleRow}>\n        <div className={classes.cell}>\n          <div className={classes.label}>Status</div>\n          {transaction?.transactionError ? (\n            <div className={classes.failedStatus}>Failed</div>\n          ) : (\n            <div className={classes.confirmedStatus}>Confirmed</div>\n          )}\n        </div>\n      </div>\n\n      <div\n        className={classes.lastRow}\n        onClick={() => {\n          window.open(\n            explorerUrl(explorer!, transaction.signature, connectionUrl!)\n          );\n        }}\n      >\n        <div className={classes.cell}>\n          <div className={classes.label}>Signature</div>\n\n          <div\n            className={classes.cellValue}\n            style={{ color: theme.custom.colors.blue }}\n          >\n            {walletAddressDisplay(transaction?.signature)}\n            <CallMade\n              fontSize=\"small\"\n              style={{\n                fontSize: \"16px\",\n                color: theme.custom.colors.blue,\n                paddingLeft: \"2px\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </List>\n  );\n}\n\nconst SwapTransaction = ({\n  transaction,\n  tokenData,\n}: {\n  transaction: HeliusParsedTransaction;\n  tokenData: ReturnType<typeof getTokenData>;\n}) => {\n  const classes = useStyles();\n  const [input, output] = parseSwapTransaction(transaction, tokenData);\n  return (\n    <>\n      {input?.amountWithSymbol ? (\n        <div className={classes.middleRow}>\n          <div className={classes.cell}>\n            <div className={classes.label}>You paid</div>\n            <div className={classes.cellValue}>{input.amountWithSymbol}</div>\n          </div>\n        </div>\n      ) : null}\n      {output?.amountWithSymbol ? (\n        <div className={classes.middleRow}>\n          <div className={classes.cell}>\n            <div className={classes.label}>You Received</div>\n            <div className={classes.confirmedStatus}>\n              {output.amountWithSymbol}\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n};\n","import {\n  SOL_NATIVE_MINT,\n  walletAddressDisplay,\n  WSOL_MINT,\n} from \"@coral-xyz/common\";\nimport { SOL_LOGO_URI } from \"@coral-xyz/recoil\";\nimport type { TokenInfo } from \"@solana/spl-token-registry\";\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { NftEventTypes, Source, TransactionType } from \"helius-sdk/dist/types\";\n\nimport { UNKNOWN_ICON_SRC } from \"../../../common/Icon\";\n\nimport type { HeliusParsedTransaction } from \"./types\";\n\nconst unknownTokenInfo = (mint: string): TokenInfo => ({\n  address: mint,\n  chainId: 0,\n  decimals: 0,\n  logoURI: UNKNOWN_ICON_SRC,\n  name: \"Unknown\",\n  symbol: \"UNK\",\n});\n\nexport const isNFTTransaction = (\n  transaction: HeliusParsedTransaction\n): boolean => {\n  return (\n    NftEventTypes.includes(transaction?.type as TransactionType) ||\n    transaction?.tokenTransfers[0]?.tokenStandard === \"NonFungible\"\n  );\n};\n\nexport const formatTimestamp = (timestamp: number): string => {\n  const date = new Date(timestamp * 1000);\n  let hours = date.getHours();\n  let minutes: string | number = date.getMinutes();\n  let ampm = hours >= 12 ? \"pm\" : \"am\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  return (\n    date.getDate() +\n    \" \" +\n    new Intl.DateTimeFormat(\"en-US\", { month: \"long\" }).format(date) +\n    \", at \" +\n    hours +\n    \":\" +\n    minutes +\n    \" \" +\n    ampm\n  );\n};\n\nexport const formatTimestampListView = (timestamp: number): string => {\n  const date = new Date(timestamp * 1000);\n  return (\n    date.getDate() +\n    \" \" +\n    new Intl.DateTimeFormat(\"en-US\", { month: \"long\" }).format(date) +\n    \", \" +\n    date.getFullYear()\n  );\n};\n\nexport const groupTxnsByDate = (\n  arr: HeliusParsedTransaction[]\n): HeliusParsedTransaction[][] => {\n  const result: HeliusParsedTransaction[][] = [];\n  let currentDate = \"\";\n\n  for (const item of arr) {\n    const date = new Date(item?.timestamp * 1000).toDateString();\n    if (date !== currentDate) {\n      currentDate = date;\n      result.push([]);\n    }\n    result[result.length - 1].push(item);\n  }\n  return result;\n};\n\nexport const getSourceOrTypeFormatted = (sourceOrType: string): string => {\n  return sourceOrType\n    .replaceAll(\"_\", \" \")\n    .split(\" \")\n    .map((word) => word.charAt(0) + word.slice(1).toLowerCase())\n    .join(\" \");\n};\n\nexport const isUserTxnSender = (\n  transaction: HeliusParsedTransaction,\n  activeWallet: any\n) => {\n  if (\n    transaction?.tokenTransfers[0]?.fromUserAccount ===\n      activeWallet.publicKey ||\n    transaction?.nativeTransfers[0]?.fromUserAccount === activeWallet.publicKey\n  )\n    return true;\n\n  if (\n    transaction?.tokenTransfers[0]?.toUserAccount === activeWallet.publicKey ||\n    transaction?.nativeTransfers[0]?.toUserAccount === activeWallet.publicKey\n  )\n    return false;\n\n  return null;\n};\n\nexport function getTransactionTitle(\n  activeWallet: any,\n  transaction: HeliusParsedTransaction,\n  metadata?: any\n): string {\n  switch (transaction.type) {\n    case TransactionType.BURN:\n    case TransactionType.BURN_NFT:\n      return \"Burned\";\n    case TransactionType.TRANSFER:\n      // send/receive NFT's are returned as TransactionType.TRANSFER\n      const nftName = metadata?.onChainMetadata?.metadata?.data?.name;\n      if (isNFTTransaction(transaction) && nftName) {\n        return nftName;\n      } else if (isUserTxnSender(transaction, activeWallet)) {\n        return \"Sent\";\n      } else if (isUserTxnSender(transaction, activeWallet) === false) {\n        return \"Received\";\n      } else {\n        return \"App Interaction\";\n      }\n    case TransactionType.SWAP:\n      return \"Token Swap\";\n    case TransactionType.NFT_MINT: {\n      const nftName = metadata?.onChainMetadata?.metadata?.data?.name;\n      return `Minted: ${nftName}`;\n    }\n    default:\n      let title = \"App Interaction\";\n\n      // if (transaction?.source) title = \"App Interaction\";\n      // if transaction is of type NFT and was not caught above under 'TRANSFER' case\n      // TODO: test this case to see if it is necessary\n      const nonTransferNftName =\n        metadata?.onChainMetadata?.metadata?.data?.name;\n\n      if (isNFTTransaction(transaction) && nonTransferNftName) {\n        return nonTransferNftName;\n      }\n\n      // txn has a transactionError\n      if (transaction?.transactionError) {\n        title = \"Failed\";\n      }\n\n      // if we have a type, format it and set it as the title\n      // if (transaction?.type && transaction?.type !== TransactionType.UNKNOWN) {\n      //   title = getSourceOrTypeFormatted(transaction.type);\n      //   return title;\n      // }\n\n      return title;\n  }\n}\n\nexport const getTransactionDetailTitle = (\n  activeWallet: any,\n  transaction: HeliusParsedTransaction,\n  publicKey: string\n) => {\n  switch (transaction.type) {\n    case TransactionType.BURN:\n    case TransactionType.BURN_NFT:\n      return \"Burned\";\n\n    case TransactionType.TRANSFER:\n      if (isUserTxnSender(transaction, activeWallet)) return \"Sent\";\n      else if (isUserTxnSender(transaction, activeWallet) === false)\n        return \"Received\";\n      return \"App Interaction\";\n\n    case TransactionType.SWAP:\n      return \"Swap\";\n\n    case TransactionType.NFT_SALE:\n      return transaction?.events?.nft?.seller === publicKey ? \"Sold\" : \"Bought\";\n\n    case TransactionType.NFT_LISTING:\n      return \"Listed\";\n\n    case TransactionType.NFT_CANCEL_LISTING:\n      return \"Listed Canceled\";\n\n    case TransactionType.NFT_MINT:\n      return \"Minted NFT\";\n\n    default:\n      let title = \"App Interaction\";\n\n      if (transaction?.transactionError) {\n        title = \"Failed\";\n      }\n\n      return title;\n  }\n};\n\n// used to display txn caption in list view\nexport const getTransactionCaption = (\n  activeWallet: any,\n  transaction: HeliusParsedTransaction,\n  tokenData: (TokenInfo | undefined)[],\n  metadata?: any\n): string => {\n  switch (transaction.type) {\n    // case TransactionType.UNKNOWN:\n    case TransactionType.TRANSFER:\n      if (isUserTxnSender(transaction, activeWallet)) {\n        return `To: ${walletAddressDisplay(\n          transaction?.tokenTransfers[0]?.toUserAccount ||\n            transaction?.nativeTransfers[0]?.toUserAccount\n        )}`;\n      } else if (isUserTxnSender(transaction, activeWallet) === false) {\n        return `From: ${walletAddressDisplay(\n          transaction?.tokenTransfers[0]?.fromUserAccount ||\n            transaction?.nativeTransfers[0]?.fromUserAccount\n        )}`;\n      }\n      // if (TransactionType.TRANSFER) return \"Transferred\";\n      return transaction?.source &&\n        transaction?.source !== TransactionType.UNKNOWN\n        ? getSourceOrTypeFormatted(transaction?.source)\n        : \"\";\n\n    case TransactionType.SWAP:\n      const [input, output] = parseSwapTransaction(transaction, tokenData);\n      return input.symbolOrAddress && output.symbolOrAddress\n        ? [input.symbolOrAddress, output.symbolOrAddress].join(\" -> \")\n        : \"\";\n\n    case TransactionType.NFT_LISTING:\n      return `Listed on ${getSourceOrTypeFormatted(transaction.source)}`;\n\n    case TransactionType.NFT_SALE:\n      return `${\n        transaction?.events?.nft?.buyer === activeWallet.publicKey\n          ? \"Bought\"\n          : \"Sold\"\n      } on ${getSourceOrTypeFormatted(transaction.source)}`;\n\n    case TransactionType.NFT_CANCEL_LISTING:\n      return `Canceled listing on ${getSourceOrTypeFormatted(\n        transaction.source\n      )}`;\n\n    // case TransactionType.BURN:\n    //   return transaction?.\n    case TransactionType.NFT_MINT:\n      return walletAddressDisplay(\n        metadata?.onChainMetadata?.metadata?.collection?.key\n      );\n\n    default:\n      if (transaction?.source === Source.CARDINAL_RENT) return \"Rent Paid\";\n\n      // disable additional cases for now. Can uncomment/extend when needed\n      // if (transaction?.description)\n      //   return transaction?.description.split(\" \")?.slice(1).join(\" \");\n\n      // if (\n      //   transaction?.source &&\n      //   transaction?.source !== TransactionType.UNKNOWN\n      // )\n      //   return getSourceOrTypeFormatted(transaction.source);\n      return walletAddressDisplay(transaction?.instructions[0].programId);\n  }\n};\n\nexport const getTokenData = (\n  registry: Map<string, TokenInfo>,\n  transaction: HeliusParsedTransaction\n): (TokenInfo | undefined)[] => {\n  let tokenData: (TokenInfo | undefined)[] = [];\n\n  if (transaction.type === TransactionType.SWAP) {\n    // if token is isNativeInput/isNativeOutput, token swap is to/from SOL\n    const isNativeInput = transaction.events?.swap?.nativeInput;\n    const isNativeOutput = transaction.events?.swap?.nativeOutput;\n\n    const tokenInput = isNativeInput\n      ? WSOL_MINT\n      : transaction.events?.swap?.tokenInputs?.[0]?.mint ||\n        transaction.tokenTransfers?.[0]?.mint;\n\n    const tokenOutput = isNativeOutput\n      ? WSOL_MINT\n      : transaction.events?.swap?.tokenOutputs?.[0]?.mint ||\n        transaction.tokenTransfers?.[1]?.mint;\n\n    if (tokenInput && registry.get(tokenInput)) {\n      tokenData.push(registry.get(tokenInput) ?? unknownTokenInfo(tokenInput));\n    }\n\n    if (tokenOutput && registry.get(tokenOutput)) {\n      tokenData.push(\n        registry.get(tokenOutput) ?? unknownTokenInfo(tokenOutput)\n      );\n    }\n  } else if (transaction.type === TransactionType.TRANSFER) {\n    const transferredToken = transaction.tokenTransfers?.[0]?.mint;\n    if (transferredToken && registry.get(transferredToken)) {\n      tokenData.push(registry.get(transferredToken));\n    }\n  }\n\n  return tokenData;\n};\n\n// NOTE: this function code has been duplicated in recoil\nexport const parseSwapTransaction = (\n  transaction: HeliusParsedTransaction,\n  tokenData: ReturnType<typeof getTokenData>\n) => {\n  // should only be returned if parsing fails\n  const fallbackObject = {\n    tokenIcon: UNKNOWN_ICON_SRC,\n    amountWithSymbol: \"\",\n    symbolOrAddress: \"\",\n  };\n\n  try {\n    const {\n      nativeInput,\n      nativeOutput,\n      tokenInputs: [tokenInput],\n      tokenOutputs: [tokenOutput],\n    } = transaction.events.swap;\n\n    return [\n      [nativeInput, tokenInput],\n      [nativeOutput, tokenOutput],\n    ].map(([n, t]) => {\n      try {\n        const { mint, amount } = n\n          ? {\n              mint: SOL_NATIVE_MINT,\n              amount: (Number(n.amount) / LAMPORTS_PER_SOL).toFixed(5),\n            }\n          : {\n              mint: t.mint,\n              amount: (\n                Number(t.rawTokenAmount.tokenAmount) /\n                10 ** t.rawTokenAmount.decimals\n              ).toFixed(5),\n            };\n\n        const token = tokenData\n          .concat({\n            address: SOL_NATIVE_MINT,\n            symbol: \"SOL\",\n            logoURI: SOL_LOGO_URI,\n          } as any)\n          .find((t) => t?.address === mint);\n\n        const symbolOrAddress = token?.symbol || walletAddressDisplay(mint);\n\n        return {\n          tokenIcon: token?.logoURI || UNKNOWN_ICON_SRC,\n          symbolOrAddress,\n          amountWithSymbol: [amount, symbolOrAddress].join(\" \"),\n        };\n      } catch (err) {\n        console.error(err);\n        return fallbackObject;\n      }\n    });\n  } catch (err) {\n    console.error(err);\n    return [fallbackObject, fallbackObject];\n  }\n};\n\nexport function snakeToTitleCase(input: string): string {\n  const parts = input.split(\"_\").map((t) => t.toLowerCase());\n  const titleCasesParts = parts.map((p) =>\n    p.length === 1 ? p : `${p[0].toUpperCase()}${p.slice(1)}`\n  );\n\n  if (titleCasesParts[0] === \"Nft\") {\n    titleCasesParts[0] = titleCasesParts[0].toUpperCase();\n  }\n\n  return titleCasesParts.join(\" \");\n}\n","import { useEffect, useState } from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport { Loading, PrimaryButton } from \"@coral-xyz/react-common\";\nimport type { CustomTheme } from \"@coral-xyz/themes\";\nimport { styles } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\n\nimport { useDrawerContext } from \"../../common/Layout/Drawer\";\n\nconst STRIP_RAMP_URL = \"https://auth.xnfts.dev\";\n\nconst useStyles = styles((theme: CustomTheme) => ({\n  outerContainer: {\n    height: \"80vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  innerContainer: {\n    justifyContent: \"center\",\n    display: \"flex\",\n    color: theme.custom.colors.secondary,\n  },\n  innerContainerPad: {\n    padding: \"0px 30px\",\n    justifyContent: \"center\",\n    display: \"flex\",\n  },\n}));\n\nexport const StripeRamp = ({\n  blockchain,\n  publicKey,\n}: {\n  blockchain: Blockchain;\n  publicKey: string;\n}) => {\n  const { close } = useDrawerContext();\n  const [, setLoading] = useState(false);\n  const [err, setErr] = useState(\"\");\n  const [, setClientSecret] = useState(false);\n  const classes = useStyles();\n\n  const fetchToken = () => {\n    setLoading(true);\n    setErr(\"\");\n    fetch(\n      `${STRIP_RAMP_URL}/onramp/session?publicKey=${publicKey}&chain=${blockchain}`,\n      {\n        method: \"POST\",\n      }\n    )\n      .then(async (response) => {\n        const json = await response.json();\n        setLoading(false);\n        setClientSecret(json.secret);\n        window.open(\n          `https://doof72pbjabye.cloudfront.net/stripe.html?clientSecret=${json.secret}`,\n          \"blank\",\n          `toolbar=no,\n            location=no,\n            status=no,\n            menubar=no,\n            scrollbars=yes,\n            resizable=no,\n            width=400,\n            height=600`\n        );\n        close();\n      })\n      .catch((e) => {\n        console.error(e);\n        setErr(\"Error while fetching token from Stripe\");\n        setLoading(false);\n      });\n  };\n  useEffect(() => {\n    fetchToken();\n  }, [blockchain, publicKey]);\n\n  return (\n    <div className={classes.outerContainer}>\n      {\" \"}\n      {err ? <>\n        <div className={classes.innerContainer}>\n          <Typography variant=\"subtitle1\">{err}</Typography>\n        </div>\n        <br />\n        <div className={classes.innerContainerPad}>\n          <PrimaryButton label=\"Try again\" onClick={() => fetchToken()} />\n        </div>\n      </> : null}\n      {!err ? <div className={classes.innerContainer}>\n        <Loading />{\" \"}\n      </div> : null}\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport type { RemoteUserData } from \"@coral-xyz/common\";\nimport { BACKEND_API_URL, Blockchain } from \"@coral-xyz/common\";\nimport { useContacts } from \"@coral-xyz/db\";\nimport { ParentCommunicationManager } from \"@coral-xyz/message-sdk\";\nimport {\n  BubbleTopLabel,\n  DangerButton,\n  isFirstLastListItemStyle,\n  PrimaryButton,\n  TextInput,\n  UserIcon,\n} from \"@coral-xyz/react-common\";\nimport {\n  blockchainTokenData,\n  useActiveEthereumWallet,\n  useActiveSolanaWallet,\n  useActiveWallet,\n  useAllWallets,\n  useAnchorContext,\n  useAvatarUrl,\n  useEthereumCtx,\n  useIsValidAddress,\n  useLoader,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport BlockIcon from \"@mui/icons-material/Block\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { List, ListItemButton } from \"@mui/material\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\n\nimport {\n  useNavigation,\n  useNavigation as useNavigationEphemeral,\n} from \"../../../common/Layout/NavStack\";\n\nlet debouncedTimer = 0;\n\nexport interface SendData {\n  address: string;\n  username?: string;\n  image?: string;\n  uuid?: string;\n  walletName?: string;\n}\n\nconst useStyles = makeStyles((theme: any) =>\n  createStyles({\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100%\",\n    },\n    topHalf: {\n      flex: 1,\n    },\n    userText: {\n      fontSize: 16,\n      marginTop: 4,\n      color: theme.custom.colors.fontColor2,\n    },\n    buttonContainer: {\n      display: \"flex\",\n      paddingLeft: \"12px\",\n      paddingRight: \"12px\",\n      paddingBottom: \"24px\",\n      paddingTop: \"25px\",\n      justifyContent: \"space-between\",\n    },\n  })\n);\n\ntype AddressSelectorContext = {\n  blockchain: Blockchain;\n  name: string;\n  onSelect: (sendData: SendData) => void;\n};\n\nconst AddressSelectorContext =\n  React.createContext<AddressSelectorContext | null>(null);\n\nexport function AddressSelectorProvider(props: {\n  blockchain: Blockchain;\n  name: string;\n  onSelect: (sendData: SendData) => void;\n  children: any;\n}) {\n  return (\n    <AddressSelectorContext.Provider\n      value={{\n        blockchain: props.blockchain,\n        name: props.name,\n        onSelect: props.onSelect,\n      }}\n    >\n      {props.children}\n    </AddressSelectorContext.Provider>\n  );\n}\n\nfunction useAddressSelectorContext(): AddressSelectorContext {\n  const ctx = useContext(AddressSelectorContext);\n  if (!ctx) {\n    throw new Error(\"context not found\");\n  }\n  return ctx;\n}\n\nexport const AddressSelectorLoader = ({\n  publicKey,\n  blockchain,\n  address,\n}: {\n  publicKey?: string;\n  blockchain: Blockchain;\n  address: string;\n}) => {\n  // publicKey should only be undefined if the user is in single-wallet mode\n  // (rather than aggregate mode).\n  const activePublicKey = useActiveWallet().publicKey;\n  const publicKeyStr = publicKey ?? activePublicKey;\n  const { push } = useNavigation();\n  const [token] = useLoader(\n    blockchainTokenData({\n      publicKey: publicKeyStr,\n      blockchain,\n      tokenAddress: address,\n    }),\n    null\n  );\n  if (!token) return null;\n  return (\n    <AddressSelector\n      blockchain={blockchain}\n      name={token.ticker}\n      onSelect={(sendData) => {\n        push(\"send\", {\n          blockchain,\n          token,\n          to: sendData,\n        });\n      }}\n    />\n  );\n};\n\nexport const TokenAddressSelector = (props: any) => {\n  const { push } = useNavigation();\n\n  return (\n    <AddressSelector\n      {...props}\n      onSelect={(sendData) => {\n        push(\"send\", {\n          blockchain: props.blockchain,\n          token: props.token,\n          to: sendData,\n        });\n      }}\n    />\n  );\n};\n\nexport const NftAddressSelector = (props: any) => {\n  const { push } = useNavigation();\n\n  return (\n    <AddressSelector\n      {...props}\n      onSelect={(sendData) => {\n        push(\"send\", {\n          blockchain: props.blockchain,\n          token: props.token,\n          to: sendData,\n        });\n      }}\n    />\n  );\n};\n\nexport const AddressSelector = ({\n  blockchain,\n  name,\n  onSelect,\n}: {\n  blockchain: Blockchain;\n  name: string;\n  onSelect: (sendData: SendData) => void;\n}) => {\n  const classes = useStyles();\n  const nav = useNavigationEphemeral();\n  const [inputContent, setInputContent] = useState(\"\");\n  const { provider: solanaProvider } = useAnchorContext();\n  const ethereumCtx = useEthereumCtx();\n  const [searchResults, setSearchResults] = useState<RemoteUserData[]>([]);\n  const { isValidAddress, normalizedAddress } = useIsValidAddress(\n    blockchain,\n    inputContent,\n    solanaProvider.connection,\n    ethereumCtx.provider\n  );\n\n  useEffect(() => {\n    const prev = nav.title;\n    nav.setOptions({ headerTitle: `Send ${name}` });\n    return () => {\n      nav.setOptions({ headerTitle: prev });\n    };\n  }, []);\n\n  return (\n    <AddressSelectorProvider\n      blockchain={blockchain}\n      name={name}\n      onSelect={onSelect}\n    >\n      <div className={classes.container}>\n        <div className={classes.topHalf}>\n          <SearchInput\n            searchResults={searchResults}\n            inputContent={inputContent}\n            setInputContent={setInputContent}\n            setSearchResults={setSearchResults}\n          />\n          {!inputContent ? (\n            <YourAddresses\n              searchFilter={inputContent}\n              blockchain={blockchain}\n            />\n          ) : null}\n          <Contacts searchFilter={inputContent} blockchain={blockchain} />\n          <SearchResults\n            searchResults={searchResults}\n            blockchain={blockchain}\n          />\n          <NotSelected\n            searchResults={searchResults}\n            searchFilter={inputContent}\n          />\n        </div>\n        <div className={classes.buttonContainer}>\n          {!isValidAddress && inputContent.length > 15 ? (\n            <DangerButton label=\"Invalid address\" disabled />\n          ) : (\n            <PrimaryButton\n              onClick={() => {\n                const user = searchResults.find((x) =>\n                  x.public_keys.find(\n                    (result) => result.publicKey === inputContent\n                  )\n                );\n                onSelect({\n                  address: normalizedAddress || inputContent,\n                  username: user?.username,\n                  image: user?.image,\n                  uuid: user?.id,\n                });\n              }}\n              disabled={!isValidAddress}\n              label=\"Next\"\n              type=\"submit\"\n              data-testid=\"Send\"\n            />\n          )}\n        </div>\n      </div>\n    </AddressSelectorProvider>\n  );\n};\n\nfunction NotSelected({\n  searchFilter,\n  searchResults,\n}: {\n  searchFilter: string;\n  searchResults: any[];\n}) {\n  const { uuid } = useUser();\n  const contacts = useContacts(uuid);\n  const theme = useCustomTheme();\n  const filteredContacts = contacts\n    .filter((x) => {\n      if (x.remoteUsername.includes(searchFilter)) {\n        return true;\n      }\n      if (x.public_keys.find((x) => x.publicKey.includes(searchFilter))) {\n        return true;\n      }\n      return false;\n    })\n    .filter((x) => (x.public_keys?.[0] ? false : true));\n  const allResults = [\n    ...filteredContacts,\n    ...searchResults\n      .filter((x) => !x.public_keys?.[0])\n      .map((x) => ({\n        remoteUsername: x.username,\n        remoteUserImage: x.image,\n      })),\n  ];\n\n  if (!allResults.length) {\n    return null;\n  }\n\n  return (\n    <div style={{ padding: 10 }}>\n      <BubbleTopLabel text=\"Users without a primary wallet\" />\n      <ListItemButton\n        disableRipple\n        onClick={() => {}}\n        style={{\n          paddingLeft: \"12px\",\n          paddingRight: \"12px\",\n          paddingTop: \"8px\",\n          paddingBottom: \"8px\",\n          display: \"flex\",\n          height: \"48px\",\n          backgroundColor: theme.custom.colors.nav,\n          ...isFirstLastListItemStyle(true, true, 12),\n        }}\n      >\n        <div style={{ paddingTop: 15 }}>\n          <MembersList\n            members={allResults.map((x) => ({\n              image: x.remoteUserImage,\n              username: x.remoteUsername,\n            }))}\n          />\n        </div>\n      </ListItemButton>\n    </div>\n  );\n}\n\nfunction MembersList({\n  members,\n}: {\n  members: { image: string; username: string }[];\n}) {\n  const theme = useCustomTheme();\n  const MEMBER_THRESHOLD = 3;\n  const classes = useStyles();\n  const renderMembersStr = () => {\n    if (members.length <= MEMBER_THRESHOLD) {\n      return members.map(\n        (member, index) =>\n          member.username + `${index === members.length - 1 ? \"\" : \", \"}`\n      );\n    } else {\n      return `${members\n        .slice(0, 3)\n        .map(\n          (member, index) =>\n            member.username + `${index === members.length - 1 ? \"\" : \", \"}`\n        )} + ${members.length - 3}`;\n    }\n  };\n\n  return (\n    <div\n      style={{\n        justifyContent: \"center\",\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingBottom: 20,\n      }}\n    >\n      {members.slice(0, 3).map((member, idx) => (\n        <img\n          key={idx}\n          src={member.image}\n          style={{\n            border: `solid 2px ${theme.custom.colors.nav}`,\n            borderRadius: \"50%\",\n            height: 30,\n            width: 30,\n            ...(idx > 0 ? { marginLeft: \"-12px\" } : {}),\n          }}\n        />\n      ))}\n      <div\n        style={{\n          color: theme.custom.colors.smallTextColor,\n          paddingLeft: 10,\n          textOverflow: \"ellipsis\",\n        }}\n        className={classes.userText}\n      >\n        {renderMembersStr()}\n      </div>\n    </div>\n  );\n}\n\nconst Contacts = ({\n  blockchain,\n  searchFilter,\n}: {\n  blockchain: Blockchain;\n  searchFilter: string;\n}) => {\n  const { uuid } = useUser();\n  const contacts = useContacts(uuid);\n\n  const filteredContacts = contacts\n    .filter((x) => {\n      if (x.remoteUsername.includes(searchFilter)) {\n        return true;\n      }\n      if (x.public_keys.find((x) => x.publicKey.includes(searchFilter))) {\n        return true;\n      }\n      return false;\n    })\n    .filter((x) => (x.public_keys?.[0] ? true : false));\n\n  return (\n    <div>\n      {filteredContacts.length !== 0 ? (\n        <div style={{ margin: \"12px 12px\" }}>\n          <BubbleTopLabel text=\"Friends\" />\n          <AddressList\n            wallets={filteredContacts\n              .map((c) => ({\n                username: c.remoteUsername,\n                addresses: c.public_keys\n                  .filter(\n                    (x) =>\n                      x.blockchain === blockchain &&\n                      (x.publicKey.includes(searchFilter) ||\n                        c.remoteUsername.includes(searchFilter))\n                  )\n                  .map((x) => x.publicKey),\n                image: c.remoteUserImage,\n                uuid: c.remoteUserId,\n              }))\n              .sort((a: any, b: any) =>\n                a.username[0] < b.username[0] ? -1 : 1\n              )}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst YourAddresses = ({\n  blockchain,\n  searchFilter,\n}: {\n  blockchain: Blockchain;\n  searchFilter: string;\n}) => {\n  const wallets = useAllWallets().filter((x) => x.blockchain === blockchain);\n  const { uuid, username } = useUser();\n  const avatarUrl = useAvatarUrl();\n  const activeSolWallet = useActiveSolanaWallet();\n  const activeEthWallet = useActiveEthereumWallet();\n  if (wallets.length === 1) {\n    // Only one wallet available\n    return null;\n  }\n\n  return (\n    <div style={{ margin: \"12px 12px\" }}>\n      <BubbleTopLabel text=\"Your addresses\" />\n      <AddressList\n        wallets={wallets\n          .filter((x) => x.blockchain === blockchain)\n          .filter(\n            (x) =>\n              x.publicKey !==\n                (blockchain === Blockchain.SOLANA\n                  ? activeSolWallet.publicKey\n                  : activeEthWallet.publicKey) &&\n              x.publicKey.includes(searchFilter)\n          )\n          .map((wallet) => ({\n            username,\n            walletName: wallet.name,\n            image: avatarUrl,\n            uuid: uuid,\n            addresses: [wallet.publicKey],\n          }))}\n      />\n    </div>\n  );\n};\n\nfunction AddressList({\n  wallets,\n}: {\n  wallets: {\n    username: string;\n    walletName?: string;\n    image: string;\n    addresses: string[];\n    uuid: string;\n  }[];\n}) {\n  const theme = useCustomTheme();\n\n  const walletsWithPrimary = wallets.filter((w) => w.addresses?.[0]);\n\n  return (\n    <List\n      style={{\n        paddingTop: 0,\n        paddingBottom: 0,\n        borderRadius: \"14px\",\n        border: `${theme.custom.colors.borderFull}`,\n      }}\n    >\n      {walletsWithPrimary.map((wallet, index) => (\n        <AddressListItem\n          key={[wallet.username, wallet.walletName].join(\":\")}\n          isFirst={index === 0}\n          isLast={index === walletsWithPrimary.length - 1}\n          user={{\n            walletName: wallet.walletName,\n            username: wallet.username,\n            image: wallet.image,\n            uuid: wallet.uuid,\n          }}\n          address={wallet.addresses?.[0]}\n        />\n      ))}\n    </List>\n  );\n}\n\nconst AddressListItem = ({\n  user,\n  address,\n  isFirst,\n  isLast,\n}: {\n  user: {\n    username: string;\n    walletName?: string;\n    image: string;\n    uuid: string;\n  };\n  address?: string;\n  isFirst: boolean;\n  isLast: boolean;\n}) => {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const { onSelect } = useAddressSelectorContext();\n\n  return (\n    <ListItemButton\n      disableRipple\n      onClick={() => {\n        if (!address) {\n          return;\n        }\n        onSelect({\n          address: address,\n          username: user.username,\n          walletName: user.walletName,\n          image: user.image,\n          uuid: user.uuid,\n        });\n      }}\n      style={{\n        paddingLeft: \"12px\",\n        paddingRight: \"12px\",\n        paddingTop: \"8px\",\n        paddingBottom: \"8px\",\n        display: \"flex\",\n        height: \"48px\",\n        backgroundColor: theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <UserIcon size={32} image={user.image} />\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div className={classes.userText}>\n            {user.walletName || user.username}\n          </div>\n          {!address ? (\n            <BlockIcon style={{ color: \"#E33E3F\", marginLeft: 10 }} />\n          ) : null}\n        </div>\n      </div>\n    </ListItemButton>\n  );\n};\n\nconst SearchInput = ({\n  inputContent,\n  setInputContent,\n  setSearchResults,\n  searchResults,\n}: {\n  inputContent: string;\n  setInputContent: any;\n  setSearchResults: any;\n  searchResults: any[];\n}) => {\n  const theme = useCustomTheme();\n  const { blockchain } = useAddressSelectorContext();\n\n  const fetchUserDetails = async (address: string, blockchain: Blockchain) => {\n    try {\n      const response = await ParentCommunicationManager.getInstance().fetch(\n        `${BACKEND_API_URL}/users?usernamePrefix=${address}&blockchain=${blockchain}&limit=6`\n      );\n      const json = await response.json();\n      setSearchResults(\n        json.users.sort((a: any, b: any) =>\n          a.username.length < b.username.length ? -1 : 1\n        ) || []\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const debouncedFetchUserDetails = (\n    prefix: string,\n    blockchain: Blockchain\n  ) => {\n    clearTimeout(debouncedTimer);\n    debouncedTimer = setTimeout(async () => {\n      await fetchUserDetails(prefix, blockchain);\n    }, 250);\n  };\n\n  useEffect(() => {\n    if (inputContent.length >= 2) {\n      debouncedFetchUserDetails(inputContent, blockchain);\n    } else {\n      clearTimeout(debouncedTimer);\n    }\n  }, [inputContent, blockchain]);\n\n  useEffect(() => {\n    if (!inputContent && searchResults.length) {\n      setSearchResults([]);\n    }\n  }, [searchResults, inputContent]);\n\n  return (\n    <div style={{ margin: \"0 12px\" }}>\n      <TextInput\n        placeholder=\"Enter a username or address\"\n        startAdornment={\n          <InputAdornment position=\"start\">\n            <SearchIcon style={{ color: theme.custom.colors.icon }} />\n          </InputAdornment>\n        }\n        value={inputContent}\n        setValue={(e) => setInputContent(e.target.value.trim())}\n        // error={isErrorAddress}\n        inputProps={{\n          name: \"to\",\n          spellCheck: \"false\",\n          style: {\n            height: \"48px\",\n            paddingTop: 0,\n            paddingBottom: 0,\n          },\n        }}\n        margin=\"none\"\n      />\n    </div>\n  );\n};\n\nconst SearchResults = ({\n  searchResults,\n  blockchain,\n}: {\n  searchResults: any[];\n  blockchain: Blockchain;\n}) => {\n  // Don't show any friends because they will show up under contacts\n  // This would be better implemented on the server query because it messes\n  // with the limit, i.e. you could filter all the results from the limit\n  const filteredSearchResults = searchResults.filter(\n    (user) => !user.areFriends\n  );\n\n  return (\n    <div style={{ margin: \"0 12px\" }}>\n      {filteredSearchResults.length !== 0 ? (\n        <div style={{ marginTop: 10 }}>\n          <BubbleTopLabel text=\"Other people\" />\n          <AddressList\n            wallets={filteredSearchResults\n              .map((user) => ({\n                username: user.username,\n                image: user.image,\n                uuid: user.id,\n                addresses: user.public_keys\n                  .filter((x: any) => x.blockchain === blockchain)\n                  ?.map((x: any) => x.publicKey),\n              }))\n              .filter((x) => x.addresses.length !== 0)}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { Blockchain } from \"@coral-xyz/common\";\nimport { SecondaryButton } from \"@coral-xyz/react-common\";\nimport {\n  getBlockchainLogo,\n  useAllWalletsDisplayed,\n  useWalletName,\n} from \"@coral-xyz/recoil\";\nimport { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport QrCodeIcon from \"@mui/icons-material/QrCode\";\nimport { IconButton, Modal, Typography } from \"@mui/material\";\n\nimport { TextField, walletAddressDisplay } from \"../../../common\";\nimport { CloseButton, useDrawerContext } from \"../../../common/Layout/Drawer\";\nimport { WithCopyTooltip } from \"../../../common/WithCopyTooltip\";\n\nexport function Deposit({ ...props }: any) {\n  const activeWallets = useAllWalletsDisplayed();\n\n  if (activeWallets.length === 1) {\n    const { blockchain, publicKey } = activeWallets[0];\n    return <_Deposit blockchain={blockchain} publicKey={publicKey} />;\n  }\n\n  if (props.blockchain && props.publicKey) {\n    return <_Deposit {...props} />;\n  }\n  return <DepositMultiWallet {...props} />;\n}\n\nfunction DepositMultiWallet() {\n  const { close } = useDrawerContext();\n  const activeWallets = useAllWalletsDisplayed();\n\n  return (\n    <div\n      style={{\n        height: activeWallets.length <= 3 ? \"100%\" : undefined, // Hack. We do this to force the close button to the bottom.\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        padding: \"12px\",\n        paddingBottom: \"16px\",\n      }}\n    >\n      <div>\n        {activeWallets.map(({ blockchain, name, publicKey }) => (\n          <BlockchainDepositCard\n            key={blockchain}\n            blockchain={blockchain}\n            name={name}\n            publicKey={publicKey}\n          />\n        ))}\n      </div>\n      <div style={{ flex: 1 }} />\n      <SecondaryButton label=\"Close\" onClick={() => close()} />\n    </div>\n  );\n}\n\nfunction BlockchainDepositCard({\n  blockchain,\n  name,\n  publicKey,\n}: {\n  blockchain: Blockchain;\n  name: string;\n  publicKey: string;\n}) {\n  const theme = useCustomTheme();\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const [tooltipOpenModal, setTooltipOpenModal] = useState(false);\n  const [showQrCode, setShowQrCode] = useState(false);\n  const blockchainLogo = getBlockchainLogo(blockchain);\n  const blockchainDisplay =\n    blockchain.slice(0, 1).toUpperCase() + blockchain.slice(1);\n\n  const onCopy = async () => {\n    setTooltipOpen(true);\n    setTimeout(() => setTooltipOpen(false), 1000);\n    await navigator.clipboard.writeText(publicKey.toString());\n  };\n  const onCopyModal = async () => {\n    setTooltipOpenModal(true);\n    setTimeout(() => setTooltipOpenModal(false), 1000);\n    await navigator.clipboard.writeText(publicKey.toString());\n  };\n  const onQrCode = () => {\n    setShowQrCode(true);\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          marginBottom: \"12px\",\n          borderRadius: \"8px\",\n          padding: \"16px\",\n          background: theme.custom.colors.nav,\n          border: `${theme.custom.colors.borderFull}`,\n        }}\n      >\n        <Typography\n          style={{\n            color: theme.custom.colors.fontColor,\n            fontWeight: 500,\n          }}\n        >\n          Your {blockchainDisplay} address\n        </Typography>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <div>\n            <Typography\n              style={{\n                fontWeight: 500,\n                fontSize: \"14px\",\n                marginTop: \"6px\",\n                marginBottom: \"6px\",\n                color: theme.custom.colors.secondary,\n              }}\n            >\n              {`${name} (${walletAddressDisplay(publicKey)})`}\n            </Typography>\n            <img\n              src={blockchainLogo}\n              style={{\n                width: \"14px\",\n                borderRadius: \"2px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\" }}>\n            <IconButton\n              disableRipple\n              onClick={() => onQrCode()}\n              style={{\n                backgroundColor: theme.custom.colors.bg2,\n                padding: \"10px\",\n                marginRight: \"6px\",\n                width: \"40px\",\n                height: \"40px\",\n              }}\n            >\n              <QrCodeIcon\n                style={{\n                  color: theme.custom.colors.fontColor,\n                  width: \"20px\",\n                  height: \"20px\",\n                }}\n              />\n            </IconButton>\n            <WithCopyTooltip tooltipOpen={tooltipOpen}>\n              <IconButton\n                disableRipple\n                onClick={() => onCopy()}\n                style={{\n                  backgroundColor: theme.custom.colors.bg2,\n                  padding: \"10px\",\n                  width: \"40px\",\n                  height: \"40px\",\n                }}\n              >\n                <ContentCopyIcon\n                  style={{\n                    color: theme.custom.colors.fontColor,\n                    width: \"20px\",\n                    height: \"20px\",\n                  }}\n                />\n              </IconButton>\n            </WithCopyTooltip>\n          </div>\n        </div>\n      </div>\n      <Modal open={showQrCode} onClose={() => setShowQrCode(false)}>\n        <div\n          style={{\n            width: \"300px\",\n            height: \"325px\",\n            top: \"50%\",\n            left: \"50%\",\n            position: \"absolute\",\n            transform: \"translate(-50%, -50%)\",\n            backgroundColor: theme.custom.colors.nav,\n            margin: 0,\n            borderRadius: \"12px\",\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              position: \"relative\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                top: 10,\n                left: 10,\n              }}\n            >\n              <CloseButton\n                buttonStyle={{ position: \"relative\" }}\n                onClick={() => setShowQrCode(false)}\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                flexDirection: \"column\",\n                height: \"100%\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    flexDirection: \"column\",\n                    marginRight: \"8px\",\n                  }}\n                >\n                  <img\n                    src={blockchainLogo}\n                    style={{\n                      width: \"20px\",\n                      height: \"20px\",\n                      borderRadius: \"2px\",\n                    }}\n                  />\n                </div>\n                <Typography\n                  style={{\n                    fontSize: \"22px\",\n                    color: theme.custom.colors.fontColor,\n                  }}\n                >\n                  {blockchainDisplay}\n                </Typography>\n              </div>\n              <div\n                style={{\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  marginTop: \"24px\",\n                  marginBottom: \"16px\",\n                }}\n              >\n                <QrCode data={publicKey.toString()} />\n              </div>\n              <WithCopyTooltip tooltipOpen={tooltipOpenModal}>\n                <div style={{ display: \"relative\" }}>\n                  <IconButton\n                    disableRipple\n                    style={{\n                      padding: 0,\n                      textTransform: \"none\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      marginLeft: \"auto\",\n                      marginRight: \"auto\",\n                    }}\n                    onClick={() => onCopyModal()}\n                  >\n                    <Typography\n                      style={{\n                        textAlign: \"center\",\n                        color: theme.custom.colors.fontColor,\n                        fontSize: \"16px\",\n                      }}\n                    >\n                      {name}\n                    </Typography>\n                    <Typography\n                      style={{\n                        textAlign: \"center\",\n                        color: theme.custom.colors.secondary,\n                      }}\n                    >\n                      ({walletAddressDisplay(publicKey)})\n                    </Typography>\n                  </IconButton>\n                </div>\n              </WithCopyTooltip>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  subtext: {\n    width: \"264px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"16px\",\n    color: theme.custom.colors.secondary,\n    size: \"14px\",\n    fontWeight: 500,\n    fontSize: \"14px\",\n    textAlign: \"center\",\n    lineHeight: \"20px\",\n  },\n  depositTextFieldRoot: {\n    margin: 0,\n    \"& .MuiOutlinedInput-root\": {\n      paddingRight: 0,\n      \"& fieldset\": {\n        border: `${theme.custom.colors.borderFull} !important`,\n        paddingLeft: 0,\n        paddingRight: 0,\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: `${theme.custom.colors.primaryButton} !important`,\n      },\n    },\n    \"& .MuiOutlinedInput-input\": {\n      cursor: \"pointer\",\n      color: theme.custom.colors.secondary,\n    },\n    \"&:hover .MuiOutlinedInput-root\": {\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n  },\n  copyIcon: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  copyContainer: {\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n}));\n\nexport function _Deposit({\n  blockchain,\n  publicKey,\n}: {\n  blockchain: Blockchain;\n  publicKey: string;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const name = useWalletName(publicKey);\n\n  const walletDisplay =\n    publicKey.toString().slice(0, 12) +\n    \"...\" +\n    publicKey.toString().slice(publicKey.toString().length - 12);\n\n  const onCopy = async () => {\n    setTooltipOpen(true);\n    setTimeout(() => setTooltipOpen(false), 1000);\n    await navigator.clipboard.writeText(publicKey.toString());\n  };\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          marginTop: \"64px\",\n          marginBottom: \"80px\",\n          width: \"180px\",\n        }}\n      >\n        <QrCode\n          data={publicKey.toString()}\n          style={{ width: \"180px\", height: \"180px\", padding: \"7.83px\" }}\n        />\n      </div>\n      <div>\n        <Typography\n          style={{\n            fontSize: \"16px\",\n            textAlign: \"center\",\n            marginBottom: \"8px\",\n            color: theme.custom.colors.fontColor,\n          }}\n        >\n          {name}\n        </Typography>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            margin: \"0 12px\",\n          }}\n        >\n          <WithCopyTooltip tooltipOpen={tooltipOpen}>\n            <div\n              onClick={() => onCopy()}\n              style={{ width: \"100%\" }}\n              className={classes.copyContainer}\n            >\n              <TextField\n                value={walletDisplay}\n                rootClass={classes.depositTextFieldRoot}\n                endAdornment={\n                  <ContentCopyIcon\n                    className={classes.copyIcon}\n                    style={{\n                      pointerEvents: \"none\",\n                      color: theme.custom.colors.secondary,\n                      position: \"absolute\",\n                      right: \"17px\",\n                    }}\n                  />\n                }\n                inputProps={{\n                  readOnly: true,\n                }}\n              />\n            </div>\n          </WithCopyTooltip>\n        </div>\n      </div>\n      <div>\n        <Typography className={classes.subtext}>\n          {blockchain === Blockchain.SOLANA ? (\n            <>This address can only receive SOL and SPL tokens on Solana.</>\n          ) : null}\n          {blockchain === Blockchain.ETHEREUM ? (\n            <>This address can only receive ETH and ERC20 tokens on Ethereum.</>\n          ) : null}\n        </Typography>\n      </div>\n    </div>\n  );\n}\n\nexport function QrCode({\n  data,\n  style,\n}: {\n  data: string;\n  style?: React.CSSProperties;\n}) {\n  return (\n    <div\n      style={{\n        backgroundColor: \"#fff\",\n        borderRadius: \"8px\",\n        height: \"148px\",\n        width: \"148px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        padding: \"8px\",\n        ...style,\n      }}\n    >\n      <img src={`https://qr.backpack.workers.dev/qz=0?${data}`} alt={data} />\n    </div>\n  );\n}\n","// TODO: remove the following line\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport { Blockchain, Ethereum, getLogger } from \"@coral-xyz/common\";\nimport { PrimaryButton, UserIcon } from \"@coral-xyz/react-common\";\nimport {\n  useActiveWallet,\n  useAvatarUrl,\n  useEthereumCtx,\n  useTransactionData,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport type { UnsignedTransaction } from \"@ethersproject/transactions\";\nimport { Typography } from \"@mui/material\";\nimport type { BigNumber } from \"ethers\";\nimport { ethers } from \"ethers\";\n\nimport { CopyablePublicKey } from \"../../../../common/CopyablePublicKey\";\nimport { TokenAmountHeader } from \"../../../../common/TokenAmountHeader\";\nimport { TransactionData } from \"../../../../common/TransactionData\";\nimport { Error, Sending } from \"../Send\";\n\nconst logger = getLogger(\"send-ethereum-confirmation-card\");\nconst { base58: bs58 } = ethers.utils;\n\nexport function SendEthereumConfirmationCard({\n  token,\n  destinationAddress,\n  destinationUser,\n  amount,\n  onComplete,\n  onViewBalances,\n}: {\n  token: {\n    address: string;\n    logo: string;\n    decimals: number;\n    // For ERC721 sends\n    tokenId?: string;\n  };\n  destinationUser?: {\n    username: string;\n    image: string;\n  };\n  destinationAddress: string;\n  amount: BigNumber;\n  onComplete?: () => void;\n  onViewBalances?: () => void;\n}) {\n  const ethereumCtx = useEthereumCtx();\n  const [txSignature, setTxSignature] = useState<string | null>(null);\n  const [error] = useState(\n    \"Error 422. Transaction time out. Runtime error. Reticulating splines.\"\n  );\n  const [transaction, setTransaction] = useState<UnsignedTransaction | null>(\n    null\n  );\n  const [cardType, setCardType] = useState<\n    \"confirm\" | \"sending\" | \"complete\" | \"error\"\n  >(\"confirm\");\n\n  // The transaction to be executed when the Send action is confirmed. We pass\n  // the full transaction to the ConfirmSendEtherem component so it can use it\n  // to estimate the gas/network fees required to execute. The\n  // ConfirmSendEthereum component may modify the transaction overrides (i.e.\n  // gas limits, etc) before returning it to this component foe execution in\n  // onConfirm().\n  useEffect(() => {\n    (async () => {\n      let transaction;\n      if (token.address === ethers.constants.AddressZero) {\n        // Zero address token is native ETH\n        transaction = await Ethereum.transferEthTransaction(ethereumCtx, {\n          to: destinationAddress,\n          value: amount.toString(),\n        });\n      } else if (token.tokenId) {\n        // Token has a tokenId, must be an ERC721 token\n        transaction = await Ethereum.transferErc721Transaction(ethereumCtx, {\n          to: destinationAddress,\n          from: ethereumCtx.walletPublicKey,\n          contractAddress: token.address!,\n          tokenId: token.tokenId,\n        });\n      } else {\n        // Otherwise assume it is an ERC20 token\n        transaction = await Ethereum.transferErc20Transaction(ethereumCtx, {\n          to: destinationAddress,\n          contractAddress: token.address!,\n          amount: amount.toString(),\n        });\n      }\n      setTransaction(transaction);\n    })();\n  }, []);\n\n  const onConfirm = async (transactionToSend: UnsignedTransaction) => {\n    setTransaction(transactionToSend);\n    const _txSignature = await Ethereum.signAndSendTransaction(\n      ethereumCtx,\n      transactionToSend\n    );\n    setCardType(\"sending\");\n    setTxSignature(_txSignature);\n    //\n    // Confirm the tx.\n    //\n    try {\n      // Wait for mining\n      await ethereumCtx.provider.waitForTransaction(_txSignature);\n      // Grab the transaction\n      const transaction = await ethereumCtx.provider.getTransaction(\n        _txSignature\n      );\n      // We already waited, but calling .wait will throw if the transaction failed\n      await transaction.wait();\n      setCardType(\"complete\");\n      if (onComplete) onComplete();\n    } catch (err) {\n      logger.error(\"ethereum transaction failed\", err);\n      setCardType(\"error\");\n    }\n  };\n\n  if (!transaction) {\n    // TODO loader\n    return null;\n  }\n\n  const retry = () => onConfirm(transaction);\n\n  return (\n    <div>\n      {cardType === \"confirm\" ? (\n        <ConfirmSendEthereum\n          token={token}\n          destinationAddress={destinationAddress}\n          destinationUser={destinationUser}\n          transaction={transaction}\n          amount={amount}\n          onConfirm={onConfirm}\n        />\n      ) : cardType === \"sending\" ? (\n        <Sending\n          blockchain={Blockchain.ETHEREUM}\n          isComplete={false}\n          amount={amount}\n          token={token}\n          signature={txSignature!}\n        />\n      ) : cardType === \"complete\" ? (\n        <Sending\n          blockchain={Blockchain.ETHEREUM}\n          isComplete\n          amount={amount}\n          token={token}\n          signature={txSignature!}\n          onViewBalances={onViewBalances}\n        />\n      ) : (\n        <Error\n          blockchain={Blockchain.ETHEREUM}\n          signature={txSignature!}\n          onRetry={() => retry()}\n          error={error}\n        />\n      )}\n    </div>\n  );\n}\n\nexport function ConfirmSendEthereum({\n  token,\n  destinationAddress,\n  amount,\n  transaction,\n  onConfirm,\n  destinationUser,\n}: {\n  token: {\n    address?: string;\n    logo?: string;\n    ticker?: string;\n    decimals: number;\n  };\n  destinationAddress: string;\n  destinationUser?: { image: string; username: string };\n  amount: BigNumber;\n  transaction: UnsignedTransaction;\n  onConfirm: (transactionToSend: UnsignedTransaction) => void;\n}) {\n  const theme = useCustomTheme();\n  const transactionData = useTransactionData(\n    Blockchain.ETHEREUM,\n    bs58.encode(ethers.utils.serializeTransaction(transaction))\n  );\n  const avatarUrl = useAvatarUrl();\n  const wallet = useActiveWallet();\n\n  const { from, loading, transaction: transactionToSend } = transactionData;\n\n  const menuItems = {\n    From: {\n      onClick: () => {},\n      detail: (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <UserIcon marginRight={5} image={avatarUrl} size={24} />\n          <Typography variant=\"body2\" style={{ marginRight: 5 }}>\n            {wallet.name}\n          </Typography>\n          <CopyablePublicKey publicKey={from} />\n        </div>\n      ),\n      button: false,\n    },\n    To: {\n      onClick: () => {},\n      detail: (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {destinationUser ? (\n            <>\n              <UserIcon\n                marginRight={5}\n                image={destinationUser.image}\n                size={24}\n              />\n              <Typography variant=\"body2\" style={{ marginRight: 5 }}>\n                @{destinationUser.username}\n              </Typography>\n            </>\n          ) : null}\n          <CopyablePublicKey publicKey={destinationAddress} />\n        </div>\n      ),\n      button: false,\n    },\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"16px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        paddingBottom: \"24px\",\n      }}\n    >\n      <div>\n        <Typography\n          style={{\n            color: theme.custom.colors.fontColor,\n            fontWeight: 500,\n            fontSize: \"18px\",\n            lineHeight: \"24px\",\n            textAlign: \"center\",\n          }}\n        >\n          Review Send\n        </Typography>\n        <TokenAmountHeader\n          style={{\n            marginTop: \"40px\",\n            marginBottom: \"40px\",\n          }}\n          amount={amount}\n          token={token}\n        />\n        <TransactionData\n          transactionData={transactionData}\n          menuItems={menuItems}\n        />\n      </div>\n      <PrimaryButton\n        disabled={loading}\n        style={{ marginTop: \"16px\" }}\n        onClick={() =>\n          onConfirm(\n            ethers.utils.parseTransaction(bs58.decode(transactionToSend))\n          )\n        }\n        label=\"Send\"\n        type=\"submit\"\n        data-testid=\"Send\"\n      />\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { Blockchain, toTitleCase } from \"@coral-xyz/common\";\nimport { ProxyImage } from \"@coral-xyz/react-common\";\nimport {\n  isAggregateWallets,\n  SOL_LOGO_URI,\n  useActiveWallet,\n  useActiveWallets,\n  useAllWalletsDisplayed,\n  useWalletName,\n} from \"@coral-xyz/recoil\";\nimport { styles } from \"@coral-xyz/themes\";\nimport { ListItemIcon, Typography } from \"@mui/material\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { TextField } from \"../../../common\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\nimport {\n  BalancesTable,\n  BalancesTableContent,\n  BalancesTableHead,\n  BalancesTableRow,\n} from \"../Balances\";\n\nconst useStyles = styles((theme) => ({\n  searchField: {\n    marginLeft: \"12px\",\n    marginRight: \"12px\",\n    marginTop: \"16px\",\n    marginBottom: \"16px\",\n    width: \"inherit\",\n    display: \"flex\",\n    \"& .MuiOutlinedInput-root\": {\n      \"& input\": {\n        paddingTop: 0,\n        paddingBottom: 0,\n      },\n    },\n  },\n  logoIcon: {\n    borderRadius: \"22px\",\n    width: \"44px\",\n    height: \"44px\",\n  },\n  tokenListItemRow: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  tokenListItemIcon: {\n    paddingTop: \"12px\",\n    paddingBottom: \"12px\",\n  },\n  tokenAmount: {\n    fontWeight: 500,\n    fontSize: \"14px\",\n    color: theme.custom.colors.secondary,\n    lineHeight: \"20px\",\n  },\n  balancesTableCellContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n  },\n  tokenListItemContent: {\n    color: theme.custom.colors.fontColor,\n    flex: 1,\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n  },\n\n  addressButton: {\n    padding: 0,\n    color: theme.custom.colors.secondary,\n    textTransform: \"none\",\n    fontWeight: 500,\n    lineHeight: \"24px\",\n    fontSize: \"14px\",\n    marginLeft: \"8px\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n      \"& svg\": {\n        visibility: \"visible\",\n      },\n    },\n  },\n  skeleton: {\n    background: \"rgba(0,0,0,0.15)\",\n  },\n  copyIcon: {\n    visibility: \"hidden\",\n    width: \"16px\",\n    marginLeft: \"6px\",\n  },\n}));\n\nconst RAMP_SUPPORTED_TOKENS = {\n  [Blockchain.SOLANA]: [\n    {\n      title: \"SOL\",\n      icon: SOL_LOGO_URI,\n      subtitle: \"Eclipse\",\n    },\n  ],\n  [Blockchain.ETHEREUM]: [\n    {\n      title: \"ETH\",\n      subtitle: \"Ethereum\",\n      icon: \"/ethereum.png\",\n    },\n  ],\n};\n\nexport function Ramp({\n  blockchain,\n  publicKey,\n}: {\n  blockchain?: Blockchain;\n  publicKey?: string;\n}) {\n  const wallets = useAllWalletsDisplayed();\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  const { push } = useNavigation();\n  const classes = useStyles();\n\n  // If prop one is undefined, both must be undefined.\n  if ((blockchain && !publicKey) || (!blockchain && publicKey)) {\n    throw new Error(\"invariant violation\");\n  }\n\n  if (blockchain && publicKey) {\n    return (\n      <>\n        <TextField\n          placeholder=\"Search\"\n          value={searchFilter}\n          setValue={setSearchFilter}\n          rootClass={classes.searchField}\n          inputProps={{\n            style: {\n              height: \"48px\",\n            },\n          }}\n        />\n        <RampCard\n          searchFilter={searchFilter}\n          key={blockchain}\n          blockchain={blockchain}\n          publicKey={publicKey}\n          onStartRamp={({ publicKey, blockchain }: any) => {\n            push(\"stripe\", { publicKey, blockchain });\n          }}\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <TextField\n        placeholder=\"Search\"\n        value={searchFilter}\n        setValue={setSearchFilter}\n        rootClass={classes.searchField}\n        inputProps={{\n          style: {\n            height: \"48px\",\n          },\n        }}\n      />\n      <div\n        style={{\n          flex: 1,\n        }}\n      >\n        {wallets.map(({ blockchain, publicKey }) => (\n          <RampCard\n            searchFilter={searchFilter}\n            key={blockchain}\n            blockchain={blockchain}\n            publicKey={publicKey}\n            onStartRamp={({ publicKey, blockchain }: any) => {\n              push(\"stripe\", { publicKey, blockchain });\n            }}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport function RampCard({\n  blockchain,\n  publicKey,\n  onStartRamp,\n  searchFilter,\n}: {\n  blockchain: Blockchain;\n  publicKey: string;\n  onStartRamp: any;\n  searchFilter: string;\n}) {\n  // This component only works for the main gas tokens at the moment.\n  const name = useWalletName(publicKey);\n  return (\n    <BalancesTable>\n      <BalancesTableHead wallet={{ name, publicKey, blockchain }} />\n      <BalancesTableContent>\n        {RAMP_SUPPORTED_TOKENS[blockchain]\n          .filter(\n            ({ title, subtitle }) =>\n              title.toLowerCase().includes(searchFilter.toLocaleLowerCase()) ||\n              subtitle.toLowerCase().includes(searchFilter.toLowerCase())\n          )\n          .map((token: any) => (\n            <BalancesTableRow\n              onClick={() => onStartRamp({ blockchain, token, publicKey })}\n            >\n              <RampTokenCell token={token} />\n            </BalancesTableRow>\n          ))}\n      </BalancesTableContent>\n    </BalancesTable>\n  );\n}\n\nfunction RampTokenCell({ token }: any) {\n  const { icon, title, subtitle } = token;\n  const classes = useStyles();\n  return (\n    <div className={classes.balancesTableCellContainer}>\n      {icon ? (\n        <ListItemIcon\n          className={classes.tokenListItemIcon}\n          classes={{ root: classes.tokenListItemIconRoot }}\n        >\n          <ProxyImage\n            src={icon}\n            className={classes.logoIcon}\n            onError={(event: any) =>\n              (event.currentTarget.style.display = \"none\")\n            }\n          />\n        </ListItemIcon>\n      ) : null}\n      <div className={classes.tokenListItemContent}>\n        <div className={classes.tokenListItemRow}>\n          <Typography className={classes.tokenName}>{title}</Typography>\n        </div>\n        <div className={classes.tokenListItemRow}>\n          {subtitle ? (\n            <Typography className={classes.tokenAmount}>{subtitle}</Typography>\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { type ChangeEvent, useEffect, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport {\n  Blockchain,\n  ETH_NATIVE_MINT,\n  explorerUrl,\n  NATIVE_ACCOUNT_RENT_EXEMPTION_LAMPORTS,\n  SOL_NATIVE_MINT,\n  toDisplayBalance,\n  toTitleCase,\n} from \"@coral-xyz/common\";\nimport {\n  CheckIcon,\n  CrossIcon,\n  DangerButton,\n  Loading,\n  LocalImage,\n  MaxLabel,\n  PrimaryButton,\n  SecondaryButton,\n  TextFieldLabel,\n  TextInput,\n} from \"@coral-xyz/react-common\";\nimport type { TokenDataWithPrice } from \"@coral-xyz/recoil\";\nimport {\n  blockchainTokenData,\n  useActiveWallet,\n  useAnchorContext,\n  useBlockchainConnectionUrl,\n  useBlockchainExplorer,\n  useBlockchainTokenAccount,\n  useDarkMode,\n  useEthereumCtx,\n  useFriendship,\n  useIsValidAddress,\n  useLoader,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\nimport { BigNumber, ethers } from \"ethers\";\n\nimport { ApproveTransactionDrawer } from \"../../../common/ApproveTransactionDrawer\";\nimport { CopyablePublicKey } from \"../../../common/CopyablePublicKey\";\nimport { useDrawerContext } from \"../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\nimport { TokenAmountHeader } from \"../../../common/TokenAmountHeader\";\nimport { TokenInputField } from \"../../../common/TokenInput\";\n\nimport { SendEthereumConfirmationCard } from \"./Ethereum\";\nimport { SendSolanaConfirmationCard } from \"./Solana\";\nimport { WithHeaderButton } from \"./Token\";\n\nexport const useStyles = makeStyles((theme) => ({\n  topImage: {\n    width: 80,\n  },\n  topImageOuter: {\n    width: 80,\n    height: 80,\n    border: `solid 3px ${theme.custom.colors.avatarIconBackground}`,\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n    overflow: \"hidden\",\n  },\n  horizontalCenter: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  container: {\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  topHalf: {\n    paddingTop: \"24px\",\n    flex: 1,\n  },\n  textRoot: {\n    marginTop: \"0 !important\",\n    marginBottom: \"0 !important\",\n    \"& .MuiOutlinedInput-root\": {\n      backgroundColor: `${theme.custom.colors.nav} !important`,\n    },\n  },\n}));\n\nexport function SendButton({\n  publicKey,\n  blockchain,\n  address,\n}: {\n  blockchain: Blockchain;\n  address: string;\n  publicKey: string;\n}) {\n  // publicKey should only be undefined if the user is in single-wallet mode\n  // (rather than aggregate mode).\n  const activeWallet = useActiveWallet();\n  publicKey = publicKey ?? activeWallet.publicKey;\n\n  const token = useBlockchainTokenAccount({\n    publicKey,\n    blockchain,\n    tokenAddress: address,\n  });\n\n  return (\n    <WithHeaderButton\n      label=\"Send\"\n      routes={[\n        {\n          name: \"send\",\n          component: (props: any) => <SendLoader {...props} />,\n          title: `${token?.ticker || \"\"} / Send`,\n          props: {\n            blockchain,\n            address,\n            publicKey,\n          },\n        },\n      ]}\n    />\n  );\n}\n\nexport function SendLoader({\n  publicKey,\n  blockchain,\n  address,\n}: {\n  publicKey?: string;\n  blockchain: Blockchain;\n  address: string;\n}) {\n  // publicKey should only be undefined if the user is in single-wallet mode\n  // (rather than aggregate mode).\n  const activeWallet = useActiveWallet();\n  const publicKeyStr = publicKey ?? activeWallet.publicKey;\n\n  const [token] = useLoader(\n    blockchainTokenData({\n      publicKey: publicKeyStr,\n      blockchain,\n      tokenAddress: address,\n    }),\n    null\n  );\n\n  if (!token) return null;\n  return <Send blockchain={blockchain} token={token} />;\n}\n\nexport function Send({\n  blockchain,\n  token,\n  to,\n}: {\n  blockchain: Blockchain;\n  token: TokenDataWithPrice;\n  to?: {\n    address: string;\n    username?: string;\n    walletName?: string;\n    image?: string;\n    uuid?: string;\n  };\n}) {\n  const classes = useStyles();\n  const { uuid } = useUser();\n  const drawer = useDrawerContext();\n  const nav = useNavigation();\n  const { provider: solanaProvider } = useAnchorContext();\n  const ethereumCtx = useEthereumCtx();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [address, setAddress] = useState(to?.address || \"\");\n  const [amount, setAmount] = useState<BigNumber | null>(null);\n  const [strAmount, setStrAmount] = useState(\"\");\n  const [feeOffset, setFeeOffset] = useState(BigNumber.from(0));\n  const [message, setMessage] = useState(\"\");\n  const friendship = useFriendship({ userId: to?.uuid || \"\" });\n\n  useEffect(() => {\n    const prev = nav.title;\n    nav.setOptions({ headerTitle: `Send ${token.ticker}` });\n    return () => {\n      nav.setOptions({ headerTitle: prev });\n    };\n  }, []); // eslint-disable-line\n\n  const {\n    isValidAddress,\n    isErrorAddress,\n    normalizedAddress: destinationAddress,\n  } = useIsValidAddress(\n    blockchain,\n    address,\n    solanaProvider.connection,\n    ethereumCtx.provider\n  );\n\n  useEffect(() => {\n    if (!token) return;\n    if (token.mint === SOL_NATIVE_MINT) {\n      // When sending SOL, account for the tx fee and rent exempt minimum.\n      setFeeOffset(\n        BigNumber.from(5000).add(\n          BigNumber.from(NATIVE_ACCOUNT_RENT_EXEMPTION_LAMPORTS)\n        )\n      );\n    } else if (token.address === ETH_NATIVE_MINT) {\n      // 21,000 GWEI for a standard ETH transfer\n      setFeeOffset(\n        BigNumber.from(\"21000\")\n          .mul(ethereumCtx?.feeData.maxFeePerGas!)\n          .add(\n            BigNumber.from(\"21000\").mul(\n              ethereumCtx?.feeData.maxPriorityFeePerGas!\n            )\n          )\n      );\n    }\n  }, [blockchain, token]); // eslint-disable-line\n\n  const amountSubFee = BigNumber.from(token!.nativeBalance).sub(feeOffset);\n  const maxAmount = amountSubFee.gt(0) ? amountSubFee : BigNumber.from(0);\n  const exceedsBalance = amount && amount.gt(maxAmount);\n  const isSendDisabled =\n    !isValidAddress || amount === null || amount.eq(0) || !!exceedsBalance;\n  const isAmountError = amount && exceedsBalance;\n\n  // On click handler.\n  const onNext = () => {\n    if (!amount) {\n      return;\n    }\n    setOpenDrawer(true);\n  };\n\n  let sendButton;\n  if (isErrorAddress) {\n    sendButton = <DangerButton disabled label=\"Invalid Address\" />;\n  } else if (isAmountError) {\n    sendButton = <DangerButton disabled label=\"Insufficient Balance\" />;\n  } else {\n    sendButton = (\n      <PrimaryButton\n        disabled={isSendDisabled}\n        label=\"Review\"\n        type=\"submit\"\n        data-testid=\"Send\"\n      />\n    );\n  }\n\n  const onViewBalances = () => {\n    drawer.close();\n  };\n\n  const SendConfirmComponent = {\n    [Blockchain.SOLANA]: SendSolanaConfirmationCard,\n    [Blockchain.ETHEREUM]: SendEthereumConfirmationCard,\n  }[blockchain];\n\n  return (\n    <form\n      className={classes.container}\n      onSubmit={(e) => {\n        e.preventDefault();\n        onNext();\n      }}\n      noValidate\n    >\n      {!to ? (\n        <SendV1\n          address={address}\n          sendButton={sendButton}\n          amount={amount}\n          token={token}\n          blockchain={blockchain}\n          isAmountError={isAmountError}\n          isErrorAddress={isAmountError}\n          maxAmount={maxAmount}\n          setAddress={setAddress}\n          setAmount={setAmount}\n        />\n      ) : null}\n      {to ? (\n        <SendV2\n          to={to}\n          message={message}\n          setMessage={setMessage}\n          sendButton={sendButton}\n          amount={amount}\n          strAmount={strAmount}\n          token={token}\n          blockchain={blockchain}\n          isAmountError={isAmountError}\n          isErrorAddress={isAmountError}\n          maxAmount={maxAmount}\n          setAddress={setAddress}\n          setAmount={setAmount}\n          setStrAmount={setStrAmount}\n        />\n      ) : null}\n      <ApproveTransactionDrawer\n        openDrawer={openDrawer}\n        setOpenDrawer={(val) => {\n          if (!val) {\n            setAmount(BigNumber.from(0));\n            setStrAmount(\"\");\n          }\n          setOpenDrawer(val);\n        }}\n      >\n        <SendConfirmComponent\n          onComplete={async () => {\n            if (\n              to?.uuid &&\n              to?.uuid !== uuid &&\n              friendship?.id &&\n              to?.uuid !== uuid &&\n              blockchain === Blockchain.SOLANA\n            ) {\n              // const client_generated_uuid = uuidv4();\n              // createEmptyFriendship(uuid, to?.uuid, {\n              //   last_message_sender: uuid,\n              //   last_message_timestamp: new Date().toISOString(),\n              //   last_message: message,\n              //   last_message_client_uuid: client_generated_uuid,\n              // });\n              //\n              // SignalingManager.getInstance().send({\n              //   type: \"CHAT_MESSAGES\",\n              //   payload: {\n              //     room: friendship?.id?.toString(),\n              //     type: \"individual\",\n              //     messages: [\n              //       {\n              //         client_generated_uuid: client_generated_uuid,\n              //         message,\n              //         message_kind: \"transaction\",\n              //         message_metadata: {\n              //           final_tx_signature: txSig,\n              //         },\n              //       },\n              //     ],\n              //   },\n              // });\n              // await navOuter.toRoot();\n              // await background.request({\n              //   method: UI_RPC_METHOD_NAVIGATION_ACTIVE_TAB_UPDATE,\n              //   params: [TAB_MESSAGES],\n              // });\n              // push({\n              //   title: `@${to?.username}`,\n              //   componentId: NAV_COMPONENT_MESSAGE_CHAT,\n              //   componentProps: {\n              //     userId: to?.uuid,\n              //     id: to?.uuid,\n              //     username: to?.username,\n              //   },\n              // });\n            }\n          }}\n          token={token}\n          destinationAddress={destinationAddress}\n          destinationUser={\n            (to && to.uuid && to.username && to.image\n              ? to\n              : undefined) as React.ComponentProps<\n              typeof SendConfirmComponent\n            >[\"destinationUser\"]\n          }\n          amount={amount!}\n          onViewBalances={onViewBalances}\n        />\n      </ApproveTransactionDrawer>\n    </form>\n  );\n}\n\nfunction SendV1({\n  blockchain,\n  address,\n  isErrorAddress,\n  token,\n  maxAmount,\n  setAmount,\n  amount,\n  isAmountError,\n  sendButton,\n  setAddress,\n}: any) {\n  const classes = useStyles();\n  return (\n    <>\n      <div className={classes.topHalf}>\n        <div style={{ marginBottom: \"40px\" }}>\n          <TextFieldLabel\n            leftLabel=\"Send to\"\n            rightLabel=\"\"\n            style={{ marginLeft: \"24px\", marginRight: \"24px\" }}\n          />\n          <div style={{ margin: \"0 12px\" }}>\n            <TextInput\n              placeholder={`${toTitleCase(blockchain)} address`}\n              value={address}\n              setValue={(e) => {\n                setAddress(e.target.value.trim());\n              }}\n              error={isErrorAddress}\n              inputProps={{\n                name: \"to\",\n                spellCheck: \"false\",\n                // readOnly: to ? true : false,\n              }}\n              // startAdornment={\n              //   to?.image ? <UserIcon size={32} image={to?.image} /> : <></>\n              // }\n              margin=\"none\"\n            />\n          </div>\n        </div>\n        <div>\n          <TextFieldLabel\n            leftLabel=\"Amount\"\n            rightLabel={`${token.displayBalance} ${token.ticker}`}\n            rightLabelComponent={\n              <MaxLabel\n                amount={maxAmount}\n                onSetAmount={setAmount}\n                decimals={token.decimals}\n              />\n            }\n            style={{ marginLeft: \"24px\", marginRight: \"24px\" }}\n          />\n          <div style={{ margin: \"0 12px\" }}>\n            <TokenInputField\n              type=\"number\"\n              placeholder=\"0\"\n              rootClass={classes.textRoot}\n              decimals={token.decimals}\n              value={amount}\n              setValue={setAmount}\n              isError={isAmountError}\n              inputProps={{\n                name: \"amount\",\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <ButtonContainer>{sendButton}</ButtonContainer>\n    </>\n  );\n}\n\nfunction ButtonContainer({ children }: { children: React.ReactNode }) {\n  return <View style={buttonContainerStyles.container}>{children}</View>;\n}\n\nconst buttonContainerStyles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    paddingHorizontal: 12,\n    paddingBottom: 16,\n    paddingTop: 25,\n  },\n});\n\nfunction SendV2({\n  token,\n  maxAmount,\n  setAmount,\n  strAmount,\n  setStrAmount,\n  sendButton,\n  to,\n}: any) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const isDarkMode = useDarkMode();\n\n  return (\n    <>\n      <div\n        style={{\n          paddingTop: \"40px\",\n          flex: 1,\n        }}\n      >\n        <div>\n          <div className={classes.horizontalCenter} style={{ marginBottom: 6 }}>\n            <div className={classes.topImageOuter}>\n              <LocalImage\n                size={80}\n                className={classes.topImage}\n                src={\n                  to?.image ||\n                  `https://avatars.backpack.workers.dev/${to?.address}`\n                }\n                style={{ width: 80, height: 80 }}\n              />\n            </div>\n          </div>\n          <div className={classes.horizontalCenter}>\n            {to.walletName || to.username ? (\n              <div\n                style={{\n                  color: theme.custom.colors.fontColor,\n                  fontSize: 16,\n                  fontWeight: 500,\n                }}\n              >\n                {to.walletName ? to.walletName : `@${to.username}`}\n              </div>\n            ) : null}\n          </div>\n          <div className={classes.horizontalCenter} style={{ marginTop: 4 }}>\n            <CopyablePublicKey publicKey={to?.address} />\n          </div>\n        </div>\n        <div>\n          <div\n            style={{ display: \"flex\", justifyContent: \"center\", width: \"100\" }}\n          >\n            <input\n              placeholder=\"0\"\n              autoFocus\n              type=\"text\"\n              style={{\n                marginTop: \"40px\",\n                outline: \"none\",\n                background: \"transparent\",\n                border: \"none\",\n                fontWeight: 600,\n                fontSize: 48,\n                height: 48,\n                color: theme.custom.colors.fontColor,\n                textAlign: \"center\",\n                width: \"100%\",\n                // @ts-ignore\n                fontFamily: theme.typography.fontFamily,\n              }}\n              value={strAmount}\n              onChange={({\n                target: { value },\n              }: ChangeEvent<HTMLInputElement>) => {\n                try {\n                  const parsedVal =\n                    value.length === 1 && value[0] === \".\" ? \"0.\" : value;\n\n                  setStrAmount(parsedVal);\n\n                  const num =\n                    parsedVal === \"\" || parsedVal === \"0.\"\n                      ? 0.0\n                      : parseFloat(parsedVal);\n\n                  if (num >= 0) {\n                    setAmount(\n                      ethers.utils.parseUnits(num.toString(), token.decimals)\n                    );\n                  }\n                } catch (err) {\n                  // Do nothing.\n                }\n              }}\n            />\n          </div>\n          <div\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}\n          >\n            <img\n              src={token.logo}\n              style={{\n                height: 35,\n                borderRadius: \"50%\",\n                marginRight: 5,\n              }}\n            />\n            <div\n              style={{\n                color: theme.custom.colors.smallTextColor,\n                fontSize: 24,\n              }}\n            >\n              {token.ticker}\n            </div>\n          </div>\n          <div\n            style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}\n          >\n            <div\n              style={{\n                display: \"inline-flex\",\n                color: theme.custom.colors.fontColor,\n                cursor: \"pointer\",\n                fontSize: 14,\n                border: `2px solid ${\n                  isDarkMode\n                    ? theme.custom.colors.bg2\n                    : theme.custom.colors.border1\n                }`,\n                padding: \"4px 12px\",\n                borderRadius: 8,\n                marginTop: 5,\n                background: theme.custom.colors.bg3,\n              }}\n              onClick={() => {\n                const a = toDisplayBalance(maxAmount, token.decimals);\n                setStrAmount(a);\n                setAmount(maxAmount);\n              }}\n            >\n              Max: {toDisplayBalance(maxAmount, token.decimals)} {token.ticker}\n            </div>\n          </div>\n        </div>\n      </div>\n      <ButtonContainer>{sendButton}</ButtonContainer>\n    </>\n  );\n}\n\nexport function Sending({\n  blockchain,\n  amount,\n  token,\n  signature,\n  isComplete,\n  titleOverride,\n  onViewBalances,\n}: {\n  blockchain: Blockchain;\n  amount: BigNumber;\n  token: any;\n  signature: string;\n  isComplete: boolean;\n  titleOverride?: string;\n  onViewBalances?: () => void;\n}) {\n  const theme = useCustomTheme();\n  const drawer = useDrawerContext();\n  const explorer = useBlockchainExplorer(blockchain);\n  const connectionUrl = useBlockchainConnectionUrl(blockchain);\n  return (\n    <div\n      style={{\n        height: \"264px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Typography\n        style={{\n          textAlign: \"center\",\n          color: theme.custom.colors.secondary,\n          fontSize: \"14px\",\n          fontWeight: 500,\n          marginTop: \"30px\",\n        }}\n      >\n        {titleOverride ? titleOverride : isComplete ? \"Sent\" : \"Sending...\"}\n      </Typography>\n      <TokenAmountHeader\n        style={{\n          marginTop: \"16px\",\n          marginBottom: \"0px\",\n        }}\n        amount={amount}\n        token={token}\n      />\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {isComplete ? (\n          <div style={{ textAlign: \"center\" }}>\n            <CheckIcon />\n          </div>\n        ) : (\n          <Loading\n            size={48}\n            iconStyle={{\n              color: theme.custom.colors.primaryButton,\n              display: \"flex\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n            }}\n          />\n        )}\n      </div>\n      <div\n        style={{\n          marginBottom: \"16px\",\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n        }}\n      >\n        {explorer && connectionUrl ? (\n          <SecondaryButton\n            onClick={async () => {\n              if (isComplete) {\n                drawer.close();\n                if (onViewBalances) onViewBalances();\n              } else {\n                window.open(explorerUrl(explorer, signature, connectionUrl));\n              }\n            }}\n            label={isComplete ? \"View Balances\" : \"View Explorer\"}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport function Error({\n  blockchain,\n  signature,\n  onRetry,\n  error,\n}: {\n  blockchain: Blockchain;\n  signature: string;\n  error: string;\n  onRetry: () => void;\n}) {\n  const explorer = useBlockchainExplorer(blockchain);\n  const connectionUrl = useBlockchainConnectionUrl(blockchain);\n  const theme = useCustomTheme();\n\n  return (\n    <div\n      style={{\n        height: \"340px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        padding: \"16px\",\n      }}\n    >\n      <div\n        style={{\n          marginTop: \"8px\",\n          textAlign: \"center\",\n        }}\n      >\n        <Typography\n          style={{\n            marginBottom: \"16px\",\n            color: theme.custom.colors.fontColor,\n          }}\n        >\n          Error\n        </Typography>\n        <div\n          style={{\n            height: \"48px\",\n          }}\n        >\n          <CrossIcon />\n        </div>\n        <Typography\n          style={{\n            marginTop: \"16px\",\n            marginBottom: \"16px\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            color: theme.custom.colors.fontColor,\n          }}\n        >\n          {error}\n        </Typography>\n        {explorer && connectionUrl && signature ? (\n          <SecondaryButton\n            style={{\n              height: \"40px\",\n              width: \"147px\",\n            }}\n            buttonLabelStyle={{\n              fontSize: \"14px\",\n            }}\n            label=\"View Explorer\"\n            onClick={() =>\n              window.open(\n                explorerUrl(explorer, signature, connectionUrl),\n                \"_blank\"\n              )\n            }\n          />\n        ) : null}\n      </div>\n      <PrimaryButton label=\"Retry\" onClick={() => onRetry()} />\n    </div>\n  );\n}\n","import { Blockchain } from \"@coral-xyz/common\";\nimport { PrimaryButton, UserIcon } from \"@coral-xyz/react-common\";\nimport {\n  useActiveWallet,\n  useAvatarUrl,\n  useSolanaCtx,\n  useSolanaTransaction,\n} from \"@coral-xyz/recoil\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\nimport type { BigNumber } from \"ethers\";\n\nimport { CopyablePublicKey } from \"../../../../common/CopyablePublicKey\";\nimport { SettingsList } from \"../../../../common/Settings/List\";\nimport { TokenAmountHeader } from \"../../../../common/TokenAmountHeader\";\nimport { Error, Sending } from \"../Send\";\n\nconst useStyles = styles((theme) => ({\n  confirmTableListItem: {\n    backgroundColor: `${theme.custom.colors.approveTransactionTableBackground} !important`,\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n}));\n\nexport function SendSolanaConfirmationCard({\n  token,\n  destinationAddress,\n  destinationUser,\n  amount,\n  onComplete,\n  onViewBalances,\n}: {\n  token: {\n    address: string;\n    logo: string;\n    decimals: number;\n    tokenId?: string;\n    mint?: string;\n  };\n  destinationAddress: string;\n  destinationUser?: {\n    username: string;\n    walletName?: string;\n    image: string;\n  };\n  amount: BigNumber;\n  onComplete?: (txSig?: any) => void;\n  onViewBalances?: () => void;\n}) {\n  const { txSignature, onConfirm, cardType, error } = useSolanaTransaction({\n    token,\n    destinationAddress,\n    amount,\n    onComplete: (txid) => {\n      onComplete?.(txid);\n    },\n  });\n\n  return (\n    <>\n      {cardType === \"confirm\" ? (\n        <ConfirmSendSolana\n          token={token}\n          destinationAddress={destinationAddress}\n          destinationUser={destinationUser}\n          amount={amount}\n          onConfirm={onConfirm}\n        />\n      ) : cardType === \"sending\" ? (\n        <Sending\n          blockchain={Blockchain.SOLANA}\n          isComplete={false}\n          amount={amount}\n          token={token}\n          signature={txSignature!}\n        />\n      ) : cardType === \"complete\" ? (\n        <Sending\n          blockchain={Blockchain.SOLANA}\n          isComplete\n          amount={amount}\n          token={token}\n          signature={txSignature!}\n          onViewBalances={onViewBalances}\n        />\n      ) : (\n        <Error\n          blockchain={Blockchain.SOLANA}\n          signature={txSignature!}\n          onRetry={onConfirm}\n          error={error}\n        />\n      )}\n    </>\n  );\n}\n\nexport function ConfirmSendSolana({\n  token,\n  destinationAddress,\n  amount,\n  onConfirm,\n  destinationUser,\n}: {\n  token: {\n    logo?: string;\n    ticker?: string;\n    decimals: number;\n  };\n  destinationAddress: string;\n  amount: BigNumber;\n  onConfirm: () => void;\n  destinationUser?: {\n    username: string;\n    image: string;\n  };\n}) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        padding: \"16px\",\n        height: \"402px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        paddingBottom: \"24px\",\n      }}\n    >\n      <div>\n        <Typography\n          style={{\n            color: theme.custom.colors.fontColor,\n            fontWeight: 500,\n            fontSize: \"18px\",\n            lineHeight: \"24px\",\n            textAlign: \"center\",\n          }}\n        >\n          Review Send\n        </Typography>\n        <TokenAmountHeader\n          style={{\n            marginTop: \"40px\",\n            marginBottom: \"40px\",\n          }}\n          amount={amount}\n          token={token}\n        />\n        <ConfirmSendSolanaTable\n          destinationUser={destinationUser}\n          destinationAddress={destinationAddress}\n        />\n      </div>\n      <PrimaryButton\n        onClick={() => onConfirm()}\n        label=\"Send\"\n        type=\"submit\"\n        data-testid=\"Send\"\n      />\n    </div>\n  );\n}\n\nconst ConfirmSendSolanaTable: React.FC<{\n  destinationAddress: string;\n  destinationUser?: { username: string; image: string; walletName?: string };\n}> = ({ destinationAddress, destinationUser }) => {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const solanaCtx = useSolanaCtx();\n  const avatarUrl = useAvatarUrl();\n  const wallet = useActiveWallet();\n\n  const menuItems = {\n    From: {\n      onClick: () => {},\n      detail: (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <UserIcon marginRight={5} image={avatarUrl} size={24} />\n          <Typography variant=\"body2\" style={{ marginRight: 5 }}>\n            {wallet.name}\n          </Typography>\n          <CopyablePublicKey publicKey={solanaCtx.walletPublicKey} />\n        </div>\n      ),\n      classes: { root: classes.confirmTableListItem },\n      button: false,\n    },\n    To: {\n      onClick: () => {},\n      detail: (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          {destinationUser ? (\n            <>\n              <UserIcon\n                marginRight={5}\n                image={destinationUser.image}\n                size={24}\n              />\n              <Typography variant=\"body2\" style={{ marginRight: 5 }}>\n                {destinationUser.walletName\n                  ? destinationUser.walletName\n                  : `@${destinationUser.username}`}\n              </Typography>\n            </>\n          ) : null}\n          <CopyablePublicKey publicKey={destinationAddress} />\n        </div>\n      ),\n      classes: { root: classes.confirmTableListItem },\n      button: false,\n    },\n    \"Network fee\": {\n      onClick: () => {},\n      detail: (\n        <Typography>\n          0.000005{\" \"}\n          <span style={{ color: theme.custom.colors.secondary }}>SOL</span>\n        </Typography>\n      ),\n      classes: { root: classes.confirmTableListItem },\n      button: false,\n    },\n  } satisfies React.ComponentProps<typeof SettingsList>[\"menuItems\"];\n\n  return (\n    <SettingsList\n      borderColor={theme.custom.colors.approveTransactionTableBackground}\n      menuItems={menuItems}\n      style={{\n        margin: 0,\n      }}\n      textStyle={{\n        color: theme.custom.colors.secondary,\n      }}\n    />\n  );\n};\n","import { useState } from \"react\";\nimport type { SearchParamsFor } from \"@coral-xyz/common\";\nimport { Blockchain } from \"@coral-xyz/common\";\nimport {\n  blockchainTokenData,\n  useActiveEthereumWallet,\n  useLoader,\n} from \"@coral-xyz/recoil\";\nimport { styles } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\n\nimport { Button } from \"../../../../plugin/Component\";\nimport { CloseButton, WithDrawer } from \"../../../common/Layout/Drawer\";\nimport {\n  NavStackEphemeral,\n  NavStackScreen,\n} from \"../../../common/Layout/NavStack\";\nimport { TokenAmountHeader } from \"../../../common/TokenAmountHeader\";\nimport { RecentActivityList } from \"../RecentActivity\";\nimport { TransferWidget } from \"../TransferWidget\";\n\nconst useStyles = styles((theme) => ({\n  tokenHeaderButtonContainer: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"24px\",\n  },\n  positivePercent: {\n    color: theme.custom.colors.positive,\n  },\n  negativePercent: {\n    color: theme.custom.colors.negative,\n  },\n  usdBalanceLabel: {\n    color: theme.custom.colors.secondary,\n    fontWeight: 500,\n    fontSize: \"14px\",\n    textAlign: \"center\",\n    marginTop: \"4px\",\n    lineHeight: \"24px\",\n  },\n  headerButtonLabel: {\n    color: theme.custom.colors.fontColor,\n    fontSize: \"14px\",\n    lineHeight: \"24px\",\n    fontWeight: 500,\n  },\n}));\n\nexport function Token({\n  blockchain,\n  tokenAddress,\n  publicKey,\n}: SearchParamsFor.Token[\"props\"]) {\n  const ethereumWallet = useActiveEthereumWallet();\n  // Hack: This is hit for some reason due to the framer-motion animation.\n  if (!blockchain || !tokenAddress) {\n    return null;\n  }\n\n  const activityAddress =\n    blockchain === Blockchain.ETHEREUM\n      ? ethereumWallet.publicKey\n      : tokenAddress;\n  const contractAddresses =\n    blockchain === Blockchain.ETHEREUM ? [tokenAddress] : undefined;\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <TokenHeader\n        blockchain={blockchain}\n        tokenAddress={tokenAddress}\n        publicKey={publicKey}\n      />\n      <RecentActivityList\n        blockchain={blockchain}\n        address={activityAddress}\n        contractAddresses={contractAddresses}\n        minimize\n        style={{ marginTop: 0 }}\n      />\n    </div>\n  );\n}\n\nfunction TokenHeader({\n  blockchain,\n  tokenAddress,\n  publicKey,\n}: SearchParamsFor.Token[\"props\"]) {\n  const classes = useStyles();\n  const [token] = useLoader(\n    blockchainTokenData({\n      publicKey,\n      blockchain,\n      tokenAddress,\n    }),\n    null\n  );\n\n  if (!token) return null;\n\n  const percentClass =\n    token.recentPercentChange === undefined\n      ? \"\"\n      : token.recentPercentChange > 0\n      ? classes.positivePercent\n      : classes.negativePercent;\n\n  return (\n    <div\n      style={{\n        paddingTop: \"38px\",\n        marginBottom: \"24px\",\n      }}\n    >\n      <div>\n        <TokenAmountHeader\n          token={token}\n          amount={token.nativeBalance}\n          displayLogo={false}\n        />\n        {token.priceData ? (\n          <Typography className={classes.usdBalanceLabel}>\n            ${parseFloat(token.usdBalance.toFixed(2)).toLocaleString()}\n            &nbsp;&nbsp;&nbsp;\n            <span className={percentClass}>{token.recentPercentChange}%</span>\n          </Typography>\n        ) : null}\n      </div>\n      <div className={classes.tokenHeaderButtonContainer}>\n        <TransferWidget\n          rampEnabled={\n            (blockchain === Blockchain.SOLANA && token.ticker === \"SOL\") ||\n            (blockchain === Blockchain.ETHEREUM && token.ticker === \"ETH\")\n          }\n          blockchain={blockchain}\n          address={tokenAddress}\n          publicKey={publicKey}\n          swapEnabled={blockchain === Blockchain.SOLANA}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport function WithHeaderButton({\n  style,\n  labelComponent,\n  label,\n  routes,\n}: any) {\n  const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const initialRoute = routes[0];\n  return (\n    <>\n      <Button style={style} onClick={() => setOpenDrawer(true)}>\n        {labelComponent ? (\n          labelComponent\n        ) : (\n          <Typography className={classes.headerButtonLabel}>{label}</Typography>\n        )}\n      </Button>\n      <WithDrawer openDrawer={openDrawer} setOpenDrawer={setOpenDrawer}>\n        <div style={{ height: \"100%\" }}>\n          <NavStackEphemeral\n            initialRoute={initialRoute}\n            options={(args) => routeOptions(routes, args)}\n            navButtonLeft={<CloseButton onClick={() => setOpenDrawer(false)} />}\n          >\n            {routes.map((r: any) => (\n              <NavStackScreen\n                key={r.name}\n                name={r.name}\n                component={r.component}\n              />\n            ))}\n          </NavStackEphemeral>\n        </div>\n      </WithDrawer>\n    </>\n  );\n}\n\nfunction routeOptions(\n  routes: Array<{ title: string; name: string }>,\n  { route }: { route: { name: string; props?: any } }\n) {\n  const found = routes.find((r) => r.name === route.name);\n  if (!found) {\n    throw new Error(\"route not found\");\n  }\n  return {\n    title: found.title,\n  };\n}\n","import { useCustomTheme } from \"@coral-xyz/themes\";\n\nexport const TokenBadge = ({\n  onClick,\n  label,\n  overwriteBackground,\n  overwriteColor,\n  fontSize,\n  style,\n}: {\n  onClick: any;\n  label: string;\n  overwriteBackground?: string;\n  overwriteColor?: string;\n  fontSize?: number;\n  style?: any;\n}) => {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        userSelect: \"none\",\n        cursor: \"pointer\",\n        background: overwriteBackground || theme.custom.colors.background,\n        color: overwriteColor || theme.custom.colors.fontColor,\n        padding: \"4px 8px\",\n        borderRadius: 4,\n        display: \"inline-flex\",\n        fontSize,\n        ...style,\n      }}\n      onClick={onClick}\n    >\n      {label}\n    </div>\n  );\n};\n","import React from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport {\n  ETH_NATIVE_MINT,\n  SOL_NATIVE_MINT,\n  STRIPE_ENABLED,\n} from \"@coral-xyz/common\";\nimport { Dollar } from \"@coral-xyz/react-common\";\nimport {\n  SwapProvider,\n  useFeatureGates,\n  useSwapContext,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { ArrowDownward, ArrowUpward, SwapHoriz } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\n\nimport { useNavigation } from \"../../common/Layout/NavStack\";\nimport type { Token } from \"../../common/TokenTable\";\nimport { SearchableTokenTables } from \"../../common/TokenTable\";\nimport { Swap, SwapSelectToken } from \"../../Unlocked/Swap\";\n\nimport {\n  AddressSelectorLoader,\n  TokenAddressSelector,\n} from \"./TokensWidget/AddressSelector\";\nimport { Deposit } from \"./TokensWidget/Deposit\";\nimport { Ramp } from \"./TokensWidget/Ramp\";\nimport { Send } from \"./TokensWidget/Send\";\nimport { WithHeaderButton } from \"./TokensWidget/Token\";\nimport { StripeRamp } from \"./StripeRamp\";\n\nexport function TransferWidget({\n  blockchain,\n  address,\n  publicKey,\n  rampEnabled,\n  swapEnabled,\n}: {\n  blockchain?: Blockchain;\n  address?: string;\n  publicKey?: string;\n  rampEnabled: boolean;\n  swapEnabled: boolean;\n}) {\n  const featureGates = useFeatureGates();\n  const enableOnramp =\n    featureGates && featureGates[STRIPE_ENABLED] && rampEnabled;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        justifyContent: \"center\",\n        gap: \"16px\",\n      }}\n    >\n      {enableOnramp ? (\n        <RampButton blockchain={blockchain} address={address} />\n      ) : null}\n      <ReceiveButton blockchain={blockchain} publicKey={publicKey} />\n      <SendButton\n        blockchain={blockchain}\n        address={address}\n        publicKey={publicKey}\n      />\n      {swapEnabled ? (\n        <SwapButton blockchain={blockchain} address={address} />\n      ) : null}\n    </div>\n  );\n}\n\nfunction SwapButton({\n  blockchain,\n  address,\n}: {\n  blockchain?: Blockchain;\n  address?: string;\n}) {\n  const theme = useCustomTheme();\n\n  const SwapButtonComponent = ({\n    routes = [],\n  }: {\n    routes?: React.ComponentProps<typeof TransferButton>[\"routes\"];\n  }) => (\n    <TransferButton\n      label=\"Swap\"\n      labelComponent={\n        <SwapHoriz\n          style={{\n            color: theme.custom.colors.fontColor,\n            display: \"flex\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      }\n      routes={routes}\n      disabled={routes.length === 0}\n    />\n  );\n\n  const SwapButtonIfTheTokenIsSwappable = () => {\n    // This component loads inside Suspense, so it should not block\n    // rendering as we wait for Jupiter Routes to be downloaded and parsed\n    const { canSwap } = useSwapContext();\n    return canSwap ? (\n      <SwapButtonComponent\n        routes={[\n          {\n            name: \"swap\",\n            component: (props: any) => <Swap {...props} />,\n            title: `Swap`,\n            props: {\n              blockchain,\n            },\n          },\n          {\n            title: `Select Token`,\n            name: \"select-token\",\n            component: (props: any) => <SwapSelectToken {...props} />,\n          },\n        ]}\n      />\n    ) : // There are no Jupiter Routes for this token, so hide the button\n    null;\n  };\n\n  // This displays a semi-transparent Swap button while Jupiter routes are\n  // first downloaded and parsed. After that it will either make the button\n  // fully opaque and clickable or hide it if the token isn't supported\n  return (\n    <React.Suspense fallback={<SwapButtonComponent />}>\n      <SwapProvider tokenAddress={address}>\n        <SwapButtonIfTheTokenIsSwappable />\n      </SwapProvider>\n    </React.Suspense>\n  );\n}\n\nfunction SendButton({\n  blockchain,\n  address,\n  publicKey,\n}: {\n  blockchain?: Blockchain;\n  address?: string;\n  publicKey?: string;\n}) {\n  const theme = useCustomTheme();\n\n  return (\n    <TransferButton\n      label=\"Send\"\n      labelComponent={\n        <ArrowUpward\n          style={{\n            color: theme.custom.colors.fontColor,\n            display: \"flex\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      }\n      routes={\n        blockchain && address\n          ? [\n              {\n                name: \"select-user\",\n                component: (props: any) => <AddressSelectorLoader {...props} />,\n                title: \"\",\n                props: {\n                  blockchain,\n                  address,\n                  publicKey,\n                },\n              },\n              {\n                name: \"send\",\n                component: (props: any) => <Send {...props} />,\n                title: `Send`,\n              },\n            ]\n          : [\n              {\n                name: \"select-token\",\n                component: SendToken,\n                title: \"Select Token\",\n              },\n              {\n                name: \"select-user\",\n                component: (props: any) => <TokenAddressSelector {...props} />,\n                title: \"\",\n              },\n              {\n                name: \"send\",\n                component: (props: any) => <Send {...props} />,\n                title: \"\",\n              },\n            ]\n      }\n    />\n  );\n}\n\nfunction ReceiveButton({\n  blockchain,\n  publicKey,\n}: {\n  blockchain?: Blockchain;\n  publicKey?: string;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <TransferButton\n      label=\"Receive\"\n      labelComponent={\n        <ArrowDownward\n          style={{\n            color: theme.custom.colors.fontColor,\n            display: \"flex\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      }\n      routes={[\n        {\n          component: Deposit,\n          title: \"Deposit\",\n          name: \"deposit\",\n          props: {\n            blockchain,\n            publicKey,\n          },\n        },\n      ]}\n    />\n  );\n}\n\nfunction RampButton({\n  blockchain,\n  address,\n}: {\n  blockchain?: Blockchain;\n  address?: string;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <TransferButton\n      label=\"Buy\"\n      labelComponent={\n        <Dollar\n          fill={theme.custom.colors.fontColor}\n          style={{\n            display: \"flex\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n        />\n      }\n      routes={\n        blockchain && address\n          ? [\n              {\n                name: \"stripe\",\n                component: (props: any) => <StripeRamp {...props} />,\n                title: \"Buy\",\n                props: {\n                  blockchain,\n                  publicKey: address,\n                },\n              },\n            ]\n          : [\n              {\n                component: Ramp,\n                title: \"Buy\",\n                name: \"onramp\",\n                props: {\n                  blockchain,\n                  publicKey: address,\n                },\n              },\n              {\n                component: (props: any) => <StripeRamp {...props} />,\n                title: \"Buy using Link\",\n                name: \"stripe\",\n              },\n            ]\n      }\n    />\n  );\n}\n\nfunction TransferButton({\n  label,\n  labelComponent,\n  routes,\n  disabled = false,\n}: {\n  label: string;\n  labelComponent: any;\n  routes?: Array<{ props?: any; component: any; title: string; name: string }>;\n  disabled?: boolean;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        width: \"52px\",\n        height: \"70px\",\n        // semi-transparent and unclickable when disabled=true\n        opacity: disabled ? 0.5 : 1,\n        pointerEvents: disabled ? \"none\" : \"auto\",\n      }}\n    >\n      <WithHeaderButton\n        style={{\n          padding: 0,\n          width: \"42px\",\n          height: \"42px\",\n          minWidth: \"42px\",\n          borderRadius: \"21px\",\n          boxShadow: \"0px 0px 4px rgba(0, 0, 0, 0.15)\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          display: \"block\",\n          marginBottom: \"8px\",\n        }}\n        label=\"\"\n        labelComponent={labelComponent}\n        routes={routes}\n      />\n      <Typography\n        style={{\n          color: theme.custom.colors.secondary,\n          fontSize: \"14px\",\n          fontWeight: 500,\n          lineHeight: \"20px\",\n          textAlign: \"center\",\n        }}\n      >\n        {label}\n      </Typography>\n    </div>\n  );\n}\n\nfunction SendToken() {\n  const { push } = useNavigation();\n\n  const onClickRow = (blockchain: Blockchain, token: Token) => {\n    push(\"select-user\", { blockchain, token, name: token.ticker });\n  };\n\n  return (\n    <SearchableTokenTables\n      onClickRow={onClickRow}\n      customFilter={(token: Token) => {\n        if (token.mint && token.mint === SOL_NATIVE_MINT) {\n          return true;\n        }\n        if (token.address && token.address === ETH_NATIVE_MINT) {\n          return true;\n        }\n        return !token.nativeBalance.isZero();\n      }}\n    />\n  );\n}\n","import {\n  Blockchain,\n  ETH_NATIVE_MINT,\n  NAV_COMPONENT_TOKEN,\n  SOL_NATIVE_MINT,\n  toTitleCase,\n} from \"@coral-xyz/common\";\nimport type { useBlockchainTokensSorted } from \"@coral-xyz/recoil\";\nimport { useAllWalletsDisplayed, useNavigation } from \"@coral-xyz/recoil\";\n\nimport { TokenTables } from \"../../common/TokenTable\";\n\nimport { BalanceSummaryWidget } from \"./BalanceSummaryWidget\";\nimport { TransferWidget } from \"./TransferWidget\";\n\nexport type Token = ReturnType<typeof useBlockchainTokensSorted>[number];\n\nexport function Balances() {\n  const { push } = useNavigation();\n  const swapEnabled =\n    useAllWalletsDisplayed().find((w) => w.blockchain === Blockchain.SOLANA) !==\n    undefined;\n\n  const onClickTokenRow = (\n    blockchain: Blockchain,\n    token: Token,\n    publicKey: string\n  ) => {\n    push({\n      title: `${toTitleCase(blockchain)} / ${token.ticker}`,\n      componentId: NAV_COMPONENT_TOKEN,\n      componentProps: {\n        blockchain,\n        tokenAddress: token.address,\n        publicKey,\n      },\n    });\n  };\n\n  return (\n    <div>\n      <BalanceSummaryWidget />\n      <div\n        style={{\n          marginTop: \"32px\",\n          marginBottom: \"32px\",\n        }}\n      >\n        <TransferWidget rampEnabled swapEnabled={swapEnabled} />\n      </div>\n      <TokenTables\n        onClickRow={onClickTokenRow}\n        customFilter={(token) => {\n          if (token.mint && token.mint === SOL_NATIVE_MINT) {\n            return true;\n          }\n          if (token.address && token.address === ETH_NATIVE_MINT) {\n            return true;\n          }\n          return !token.nativeBalance.isZero();\n        }}\n      />\n    </div>\n  );\n}\nexport { BalancesTableRow } from \"./Balances\";\nexport { BalancesTableContent } from \"./Balances\";\nexport { BalancesTableHead } from \"./Balances\";\nexport { useBalancesContext } from \"./Balances\";\nexport { BalancesTable } from \"./Balances\";\nexport { BalancesTableCell } from \"./Balances\";\n","import { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport type { RemoteUserData } from \"@coral-xyz/common\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { UserList } from \"@coral-xyz/message-sdk\";\nimport { LocalImage, ProxyImage, SearchBox } from \"@coral-xyz/react-common\";\nimport {\n  useDarkMode,\n  useDecodedSearchParams,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Drawer, Typography } from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\n\nimport { UserListSkeleton } from \"./UserListSkeleton\";\nconst LIMIT = 25;\nlet debouncedTimer = 0;\n\nconst useStyles = makeStyles((theme: any) =>\n  createStyles({\n    container: {\n      padding: 0,\n      color: theme.custom.colors.fontColor2,\n    },\n    horizontalCenter: {\n      justifyContent: \"center\",\n      display: \"flex\",\n    },\n    title: {\n      marginTop: 20,\n      marginBottom: 20,\n      color: theme.custom.colors.fontColor4,\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: 8,\n    },\n    drawerContainer: {\n      padding: 10,\n      height: \"80vh\",\n    },\n  })\n);\n\nexport const ChatDrawer = ({\n  image,\n  setOpenDrawer,\n}: {\n  image?: string;\n  setOpenDrawer: any;\n}) => {\n  const isDark = useDarkMode();\n  const classes = useStyles({ isDark });\n  const { props, title }: any = useDecodedSearchParams();\n  const [members, setMembers] = useState<RemoteUserData[]>([]);\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [staticMembers, setStaticMembers] = useState<RemoteUserData[]>([]);\n  const { username } = useUser();\n  const theme = useCustomTheme();\n  const pathname = useLocation().pathname;\n\n  const debouncedInit = (prefix: string, offset: number) => {\n    clearTimeout(debouncedTimer);\n    debouncedTimer = setTimeout(() => {\n      init(prefix, offset);\n    }, 250);\n  };\n\n  const init = async (prefix = \"\", offset = 0) => {\n    setLoading(true);\n    setOffset(offset);\n    const response = await fetch(\n      `${BACKEND_API_URL}/nft/members?room=${\n        pathname === \"/messages/groupchat\" ? props.id : props.collectionId\n      }&mint=${\n        props.nftMint\n      }&type=collection&limit=${LIMIT}&offset=${offset}&prefix=${prefix}`\n    );\n    const json = await response.json();\n    setMembers(json.members);\n    setCount(json.count);\n    setLoading(false);\n    setStaticMembers((members) => {\n      if (members.length === 0) {\n        return json.members.slice(0, 3);\n      }\n      return members;\n    });\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (\n    <Drawer\n      sx={{\n        \"& .MuiDrawer-paper\": {\n          background: isDark\n            ? theme.custom.colors.background\n            : theme.custom.colors.nav,\n          height: \"90vh\",\n          borderTopLeftRadius: \"15px\",\n          borderTopRightRadius: \"15px\",\n          \"&::-webkit-scrollbar\": {\n            display: \"none\",\n          },\n        },\n      }}\n      anchor=\"bottom\"\n      open\n      onClose={() => setOpenDrawer(false)}\n    >\n      <div className={classes.drawerContainer}>\n        <div className={classes.horizontalCenter}>\n          <Typography variant=\"h5\" className={classes.title}>\n            <ProxyImage\n              src={image}\n              style={{ borderRadius: \"50%\", height: 40, width: 40 }}\n            />{\" \"}\n            {props.title || title}\n          </Typography>\n        </div>\n        {count !== 0 ? (\n          <MembersList\n            count={count}\n            members={[\n              ...staticMembers.map((x) => ({\n                image: x.image,\n              })),\n              {\n                image: `https://swr.xnfts.dev/avatars/${username}`,\n              },\n            ]}\n          />\n        ) : null}\n        <SearchBox\n          searchFilter={searchFilter}\n          setSearchFilter={setSearchFilter}\n          placeholder=\"Search username\"\n          onChange={(prefix: string) => {\n            setSearchFilter(prefix);\n            debouncedInit(prefix, 0);\n          }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            gap: 5,\n            color: theme.custom.colors.smallTextColor,\n          }}\n        >\n          <div\n            style={{\n              padding: 5,\n              cursor: \"pointer\",\n              fontWeight: 600,\n              fontSize: \"14px\",\n              color: theme.custom.colors.blue,\n            }}\n            onClick={() => {\n              debouncedInit(searchFilter, Math.max(offset - 1, 0));\n            }}\n          >\n            {offset !== 0 ? \"Prev\" : \"\"}\n          </div>\n          {/* TODO: clean up this logic */}\n          {members.length === LIMIT ? (\n            <div\n              style={{\n                padding: 5,\n                cursor: \"pointer\",\n                fontWeight: 600,\n                fontSize: \"14px\",\n                color: theme.custom.colors.blue,\n              }}\n              onClick={() => {\n                debouncedInit(searchFilter, offset + 1);\n              }}\n            >\n              Next\n            </div>\n          ) : null}\n        </div>\n\n        {loading ? <UserListSkeleton /> : null}\n        {!loading ? (\n          <div className={classes.container}>\n            {members.filter((x) =>\n              x.username\n                ?.toLocaleLowerCase()\n                .includes(searchFilter?.toLocaleLowerCase())\n            ).length !== 0 ? (\n              <UserList\n                style={{\n                  border: \"none\",\n                }}\n                itemStyle={{\n                  backgroundColor: isDark\n                    ? theme.custom.colors.background\n                    : undefined,\n                  border: \"none\",\n                }}\n                setMembers={setMembers}\n                users={members.filter((x) =>\n                  x.username\n                    ?.toLocaleLowerCase()\n                    .includes(searchFilter?.toLocaleLowerCase())\n                )}\n              />\n            ) : (\n              <div />\n            )}\n          </div>\n        ) : null}\n      </div>\n    </Drawer>\n  );\n};\n\nfunction MembersList({\n  count,\n  members,\n}: {\n  count: number;\n  members: { image: string }[];\n}) {\n  const theme = useCustomTheme();\n  const countText =\n    count >= 1_000_000\n      ? `${(count / 1_000_000).toFixed(2)}m`\n      : count >= 1_000\n      ? `${(count / 1_000).toFixed(2)}k`\n      : count;\n\n  return (\n    <div\n      style={{\n        justifyContent: \"center\",\n        display: \"flex\",\n        alignItems: \"center\",\n        paddingBottom: 20,\n      }}\n    >\n      {members.map((member, idx) => (\n        <LocalImage\n          size={30}\n          key={idx}\n          src={member.image}\n          loadingStyles={{\n            height: 30,\n            width: 30,\n            borderRadius: \"50%\",\n          }}\n          style={{\n            border: `solid 2px ${theme.custom.colors.nav}`,\n            borderRadius: \"50%\",\n            height: 30,\n            ...(idx > 0 ? { marginLeft: \"-12px\" } : {}),\n          }}\n        />\n      ))}\n      <div\n        style={{ color: theme.custom.colors.smallTextColor, paddingLeft: 10 }}\n      >\n        {countText} members\n      </div>\n    </div>\n  );\n}\n","import { type ReactNode, useEffect, useState } from \"react\";\nimport { type RemoteUserData, BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { useContacts } from \"@coral-xyz/db\";\nimport { UserList } from \"@coral-xyz/message-sdk\";\nimport { useUser } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\n\nimport { useNavigation } from \"../../common/Layout/NavStack\";\n\nimport { SearchUsers } from \"./SearchUsers\";\nimport { useStyles } from \"./styles\";\n\nasync function getRequests(): Promise<{\n  received: RemoteUserData[];\n  sent: RemoteUserData[];\n}> {\n  const [received, sent] = await Promise.all([\n    fetch(`${BACKEND_API_URL}/friends/requests`).then((res) => res.json()),\n    fetch(`${BACKEND_API_URL}/friends/sent`).then((res) => res.json()),\n  ]);\n\n  return { received: received.requests, sent: sent.requests };\n}\n\nexport const Contacts = () => {\n  const nav = useNavigation();\n  const { uuid } = useUser();\n  const allChats = useContacts(uuid);\n  const [requests, setRequests] = useState<\n    Record<\"received\" | \"sent\", RemoteUserData[]>\n  >({ received: [], sent: [] });\n\n  useEffect(() => {\n    getRequests().then(setRequests).catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Friends\" });\n  }, [nav]);\n\n  return (\n    <div>\n      <SearchUsers allChats={allChats} requests={requests} />\n    </div>\n  );\n};\n\nexport const ContactRequests = ({\n  description,\n  isSent,\n  requests,\n}: {\n  description: ReactNode;\n  isSent?: boolean;\n  requests: { received: RemoteUserData[]; sent: RemoteUserData[] };\n}) => {\n  const nav = useNavigation();\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const [localSentRequests, setLocalSentRequests] = useState<RemoteUserData[]>(\n    []\n  );\n  const [localReceivedRequests, setLocalReceivedRequests] = useState<\n    RemoteUserData[]\n  >([]);\n\n  useEffect(() => {\n    setLocalReceivedRequests(requests.received);\n    setLocalSentRequests(requests.sent);\n  }, [requests]);\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: `Requests ${isSent ? \"Sent\" : \"Received\"}` });\n  }, [nav]);\n\n  return (\n    <div className={classes.container}>\n      <Typography\n        sx={{ mt: \"24px\", mb: \"16px\", textAlign: \"center\" }}\n        fontSize={14}\n        color={theme.custom.colors.fontColor3}\n      >\n        {description}\n      </Typography>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        {!isSent && requests.sent.length > 0 ? <Typography\n          sx={{ cursor: \"pointer\", alignSelf: \"flex-end\", mb: \"8px\" }}\n          fontSize={14}\n          fontWeight={600}\n          color={theme.custom.colors.fontColor3}\n          onClick={() =>\n              nav.push(\"contact-requests-sent\", {\n                description: (\n                  <>\n                    People you added as friends.\n                    <br /> Click someone to view their profile.\n                  </>\n                ),\n                isSent: true,\n                requests,\n              })\n            }\n          >\n          Sent ({requests.sent.length})\n        </Typography> : null}\n        <UserList\n          setMembers={isSent ? setLocalSentRequests : setLocalReceivedRequests}\n          users={isSent ? localSentRequests : localReceivedRequests}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport {\n  BACKEND_API_URL,\n  sendFriendRequest,\n  unFriend,\n} from \"@coral-xyz/common\";\nimport { toast } from \"@coral-xyz/react-common\";\nimport {\n  useDecodedSearchParams,\n  useFriendship,\n  useUpdateFriendships,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Fade } from \"@mui/material\";\n\nimport PopoverMenu from \"../../common/PopoverMenu\";\n\nimport { useStyles } from \"./styles\";\n\nexport const MessageOptions = () => {\n  const { props }: any = useDecodedSearchParams();\n  const userId = props.userId;\n  const remoteUsername = props.username;\n  const friendshipValue = useFriendship({ userId });\n  const setFriendshipValue = useUpdateFriendships();\n  const theme = useCustomTheme();\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const classes = useStyles();\n  const handleClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const send = async (sendRequest: boolean) => {\n    await sendFriendRequest({ to: userId, sendRequest });\n    setFriendshipValue({\n      userId: userId,\n      friendshipValue: {\n        requested: sendRequest,\n      },\n    });\n    handleClose();\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <MoreHorizIcon\n        onClick={handleClick}\n        style={{ cursor: \"pointer\", color: theme.custom.colors.icon }}\n      />\n      <PopoverMenu.Root\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        onClose={handleClose}\n        TransitionComponent={Fade}\n      >\n        <PopoverMenu.Group>\n          <PopoverMenu.Item\n            disabled={friendshipValue?.blocked}\n            onClick={async () => {\n              if (friendshipValue?.areFriends) {\n                await unFriend({ to: userId });\n                setFriendshipValue({\n                  userId: userId,\n                  friendshipValue: {\n                    areFriends: false,\n                  },\n                });\n                toast.success(\n                  \"Friend removed\",\n                  `We've removed @${remoteUsername} from your friends.`\n                );\n              } else {\n                if (friendshipValue?.requested) {\n                  send(false);\n                } else {\n                  send(true);\n                  toast.success(\n                    friendshipValue?.remoteRequested ? \"\" : \"\",\n                    friendshipValue?.remoteRequested\n                      ? `You and ${remoteUsername} are now connected`\n                      : `We'll let ${remoteUsername} know you want to connect.`\n                  );\n                }\n              }\n              handleClose();\n            }}\n          >\n            {friendshipValue?.areFriends\n              ? \"Remove from Friends\"\n              : friendshipValue?.requested\n              ? \"Cancel Pending Request\"\n              : friendshipValue?.remoteRequested\n              ? \"Accept Friend Request\"\n              : \"Add to Friends\"}\n          </PopoverMenu.Item>\n        </PopoverMenu.Group>\n        <PopoverMenu.Group>\n          <PopoverMenu.Item\n            disabled={friendshipValue?.spam}\n            onClick={async () => {\n              const updatedValue = !friendshipValue?.blocked;\n              setFriendshipValue({\n                userId: userId,\n                friendshipValue: {\n                  blocked: updatedValue,\n                  requested: updatedValue ? false : friendshipValue.requested,\n                },\n              });\n              await fetch(`${BACKEND_API_URL}/friends/block`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ to: userId, block: updatedValue }),\n              });\n              if (updatedValue) {\n                toast.success(\n                  \"Blocked\",\n                  `@${remoteUsername} shouldn't be showing up in your DMs from now on.`\n                );\n              }\n              handleClose();\n            }}\n          >\n            {friendshipValue?.blocked ? \"Unblock\" : \"Block\"}\n          </PopoverMenu.Item>\n          <PopoverMenu.Item\n            onClick={async () => {\n              const updatedValue = !friendshipValue?.spam;\n              await fetch(`${BACKEND_API_URL}/friends/spam`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ to: userId, spam: updatedValue }),\n              });\n              setFriendshipValue({\n                userId: userId,\n                friendshipValue: {\n                  spam: updatedValue,\n                },\n              });\n              handleClose();\n            }}\n          >\n            {friendshipValue?.spam ? `Remove spam` : `Mark as spam`}\n          </PopoverMenu.Item>\n        </PopoverMenu.Group>\n      </PopoverMenu.Root>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport type { RemoteUserData } from \"@coral-xyz/common\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { UserList } from \"@coral-xyz/message-sdk\";\nimport { isFirstLastListItemStyle } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Skeleton } from \"@mui/material\";\n\nexport const Requests = ({ searchFilter }: { searchFilter: string }) => {\n  const [requests, setRequests] = useState<RemoteUserData[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const theme = useCustomTheme();\n\n  const filteredRequests = requests\n    .filter((x) => x.username.includes(searchFilter))\n    .map((x: RemoteUserData) => ({\n      image: x.image,\n      //@ts-ignore -- remove uuid\n      id: x.id || x.uuid,\n      username: x.username,\n      areFriends: x.areFriends,\n      requested: x.requested,\n      remoteRequested: x.remoteRequested,\n    }));\n\n  const fetchRequests = async () => {\n    const response = await fetch(`${BACKEND_API_URL}/friends/requests`, {\n      method: \"GET\",\n    });\n    try {\n      const json = await response.json();\n      setRequests(json.requests);\n    } catch (e) {\n      console.error(e);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchRequests();\n  }, []);\n\n  if (loading) {\n    return (\n      <div style={{ marginTop: 5 }}>\n        {\" \"}\n        <SkeletonContainer />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ marginTop: 5 }}>\n      {filteredRequests.length !== 0 ? <UserList\n        setMembers={setRequests}\n        users={filteredRequests as RemoteUserData[]}\n        /> : null}\n      {filteredRequests.length === 0 ? <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <div style={{ color: theme.custom.colors.fontColor }}>\n          You have no pending requests\n        </div>\n      </div> : null}\n    </div>\n  );\n};\n\nexport function SkeletonContainer() {\n  return (\n    <>\n      <UserSkeleton isFirst isLast={false} />\n      <UserSkeleton isFirst={false} isLast={false} />\n      <UserSkeleton isFirst={false} isLast={false} />\n      <UserSkeleton isFirst={false} isLast />\n    </>\n  );\n}\n\nexport function UserSkeleton({\n  isFirst,\n  isLast,\n}: {\n  isFirst: boolean;\n  isLast: boolean;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      onClick={() => {}}\n      style={{\n        paddingLeft: \"8px\",\n        paddingRight: \"8px\",\n        paddingTop: \"12px\",\n        height: 48,\n        paddingBottom: \"12px\",\n        display: \"flex\",\n        backgroundColor: theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n      }}\n    >\n      <div\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <Skeleton variant=\"circular\" width={32} height={32} />\n        </div>\n        <div\n          style={{\n            marginLeft: \"5px\",\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: 5,\n          }}\n        >\n          <Skeleton width=\"80px\" height={35} style={{ marginTop: \"-6px\" }} />\n          <Skeleton width=\"70px\" height={35} style={{ marginTop: \"-6px\" }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport type { EnrichedInboxDb, RemoteUserData } from \"@coral-xyz/common\";\nimport { UserList } from \"@coral-xyz/message-sdk\";\nimport {\n  BubbleTopLabel,\n  ContactsIcon,\n  EmptyState,\n  TextInput,\n} from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { Typography } from \"@mui/material\";\n\nimport { useNavigation } from \"../../common/Layout/NavStack\";\n\n// import { Requests } from \"./Requests\";\nimport { useStyles } from \"./styles\";\n\nexport const SearchUsers = ({\n  allChats,\n  requests,\n}: {\n  allChats: EnrichedInboxDb[];\n  requests: { received: RemoteUserData[]; sent: RemoteUserData[] };\n}) => {\n  const classes = useStyles();\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  const friends = allChats.filter((x: any) => x.areFriends === 1);\n  const theme = useCustomTheme();\n\n  const filteredFriends = friends\n    .filter((x: EnrichedInboxDb) => x.remoteUsername.includes(searchFilter))\n    .map((x: EnrichedInboxDb) => ({\n      image: x.remoteUserImage,\n      id: x.remoteUserId,\n      username: x.remoteUsername,\n      areFriends: x.areFriends ? true : false,\n      requested: x.requested ? true : false,\n      remoteRequested: x.remoteRequested ? true : false,\n    }));\n\n  return (\n    <div className={classes.container}>\n      <TextInput\n        className={classes.searchField}\n        placeholder=\"Search\"\n        startAdornment={\n          <SearchIcon sx={{ color: theme.custom.colors.icon, mr: \"10px\" }} />\n        }\n        value={searchFilter}\n        setValue={async (e) => {\n          const prefix = e.target.value;\n          setSearchFilter(prefix);\n        }}\n        inputProps={{\n          style: {\n            height: \"48px\",\n          },\n        }}\n      />\n      {filteredFriends.length > 0 ? (\n        <div style={{ marginTop: \"24px\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <BubbleTopLabel text=\"Your friends\" />\n            {requests.received.length > 0 ? (\n              <RequestHeader requests={requests} />\n            ) : null}\n          </div>\n          <div style={{ marginBottom: 15 }}>\n            <UserList users={filteredFriends as RemoteUserData[]} />\n          </div>\n        </div>\n      ) : (\n        <>\n          {requests.received.length > 0 ? (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"row-reverse\",\n                justifyContent: \"space-between\",\n                marginBottom: \"8px\",\n                marginTop: \"24px\",\n              }}\n            >\n              <RequestHeader requests={requests} />\n            </div>\n          ) : null}\n          <EmptyState\n            icon={(props: any) => (\n              <ContactsIcon fill={theme.custom.colors.icon} {...props} />\n            )}\n            title={\n              searchFilter === \"\"\n                ? \"No friends\"\n                : `No results for '${searchFilter}'`\n            }\n            subtitle={\n              searchFilter === \"\"\n                ? \"Request users to become friends in the messaging tab\"\n                : \"\"\n            }\n            style={{ paddingLeft: 0, paddingRight: 0, marginTop: \"24px\" }}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst RequestHeader = ({\n  requests,\n}: {\n  requests: { received: RemoteUserData[]; sent: RemoteUserData[] };\n}) => {\n  const theme = useCustomTheme();\n  const nav = useNavigation();\n  return (\n    <div\n      style={{\n        marginLeft: \"4px\",\n        display: \"flex\",\n        flexDirection: \"row-reverse\",\n      }}\n    >\n      <Typography\n        sx={{ cursor: \"pointer\" }}\n        color={theme.custom.colors.fontColor3}\n        fontSize={14}\n        onClick={() =>\n          nav.push(\"contact-requests\", {\n            description: (\n              <>\n                These people wanted to add you as a friend.\n                <br /> Click someone to view their profile.\n              </>\n            ),\n            requests,\n          })\n        }\n      >\n        Request{requests.received.length > 1 ? \"s\" : \"\"} (\n        {requests.received.length})\n      </Typography>\n    </div>\n  );\n};\n","import { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Skeleton } from \"@mui/material\";\n\nexport function UserListSkeleton() {\n  return (\n    <>\n      <UserSkeleton />\n      <UserSkeleton />\n      <UserSkeleton />\n      <UserSkeleton />\n    </>\n  );\n}\n\nexport function UserSkeleton() {\n  const theme = useCustomTheme();\n  return (\n    <div\n      onClick={() => {}}\n      style={{\n        paddingLeft: \"19px\",\n        paddingRight: \"19px\",\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        display: \"flex\",\n        height: \"38px\",\n        backgroundColor: theme.custom.colors.nav,\n        marginBottom: 10,\n      }}\n    >\n      <div\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ width: 50 }}>\n          <Skeleton variant=\"circular\" width={40} height={40} />\n        </div>\n        <div style={{ marginLeft: \"5px\", width: \"100%\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Skeleton width=\"40%\" height={20} style={{ marginTop: \"-6px\" }} />\n          </div>\n          <Skeleton width=\"80%\" height={20} style={{ marginTop: \"-6px\" }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { styles } from \"@coral-xyz/themes\";\n\nexport const useStyles = styles((theme) => ({\n  searchField: {\n    marginTop: \"16px\",\n    marginBottom: \"16px\",\n    width: \"inherit\",\n    display: \"flex\",\n    \"& .MuiOutlinedInput-root\": {\n      \"& input\": {\n        paddingTop: 0,\n        paddingBottom: 0,\n      },\n    },\n  },\n  icon: {\n    background: theme.custom.colors.textBackground,\n  },\n  iconInner: {\n    background: theme.custom.colors.fontColor,\n  },\n  topImage: {\n    maxWidth: \"25vw\",\n  },\n  horizontalCenter: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  container: {\n    marginLeft: \"16px\",\n    marginRight: \"16px\",\n  },\n  roundBtn: {\n    marginLeft: 8,\n    borderRadius: 20,\n    width: 20,\n    height: 20,\n    cursor: \"pointer\",\n    background: \"#FFFFFF\",\n    border: \"2px solid #F0F0F2\",\n    fontSize: 10,\n  },\n  add: {\n    width: 17,\n    paddingBottom: 6,\n    paddingRight: 1,\n  },\n  iconCircular: {\n    width: \"32px\",\n    height: \"32px\",\n    borderRadius: \"16px\",\n    marginRight: \"8px\",\n    color: theme.custom.colors.positive,\n  },\n  iconCircularBig: {\n    width: \"40px\",\n    height: \"40px\",\n    borderRadius: \"16px\",\n    marginRight: \"8px\",\n    color: theme.custom.colors.positive,\n  },\n  hoverParent: {\n    \"&:hover $hoverChild, & .Mui-focused $hoverChild\": {\n      visibility: \"visible\",\n    },\n  },\n  hoverChild: {\n    visibility: \"hidden\",\n  },\n  text: {\n    color: theme.custom.colors.fontColor2,\n  },\n  smallText: {\n    fontSize: 12,\n    color: theme.custom.colors.fontColor2,\n  },\n  userText: {\n    fontSize: 16,\n    marginTop: 4,\n    color: theme.custom.colors.fontColor2,\n  },\n  userTextSmall: {\n    fontSize: 14,\n    color: theme.custom.colors.fontColor2,\n  },\n  timestamp: {\n    fontSize: 14,\n    minWidth: 60,\n    color: theme.custom.colors.fontColor2,\n  },\n  smallTitle: {\n    color: theme.custom.colors.smallTextColor,\n    fontWeight: 600,\n  },\n  smallSubTitle: {\n    color: theme.custom.colors.smallTextColor,\n    fontWeight: 500,\n  },\n  contactIconOuter: {\n    background: theme.custom.colors.textBorder,\n  },\n  menuItem: {\n    fontWeight: 400,\n    fontSize: 14,\n    color: theme.custom.colors.fontColor,\n    padding: \"12px 16px\",\n  },\n  menu: {\n    \"& .MuiList-root\": {\n      padding: 0,\n    },\n    paddingTop: 0,\n    paddingBottom: 0,\n    minWidth: 184,\n    color: theme.custom.colors.fontColor,\n  },\n}));\n","import { useState } from \"react\";\nimport { MessageBubbleIcon } from \"@coral-xyz/react-common\";\nimport {\n  chatByCollectionId,\n  nftById,\n  nftCollectionsWithIds,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { CircularProgress, Grid, Typography } from \"@mui/material\";\nimport type { UnwrapRecoilValue } from \"recoil\";\nimport { useRecoilValueLoadable } from \"recoil\";\n\nimport { useOpenChat } from \"./NftDetail\";\nimport { NFTCard } from \"./NftEntry\";\n\nexport function NftsCollection({\n  publicKey,\n  connectionUrl,\n  id,\n}: {\n  publicKey: string;\n  connectionUrl: string;\n  id: string;\n}) {\n  return (\n    <div\n      style={{\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n      }}\n    >\n      <_Grid publicKey={publicKey} connectionUrl={connectionUrl} id={id} />\n    </div>\n  );\n}\n\nfunction _Grid({\n  publicKey,\n  connectionUrl,\n  id,\n}: {\n  publicKey: string;\n  connectionUrl: string;\n  id: string;\n}) {\n  const theme = useCustomTheme();\n  const openChat = useOpenChat();\n  const [joiningChat, setJoiningChat] = useState(false);\n  const { contents, state } = useRecoilValueLoadable<\n    UnwrapRecoilValue<typeof nftCollectionsWithIds>\n  >(nftCollectionsWithIds);\n  const c = (state === \"hasValue\" && contents) || null;\n  const collection = !c\n    ? null\n    : c\n        .map((c: any) => c.collections!)\n        .flat()\n        .find((c: any) => c.id === id);\n\n  const whitelistedCollectionChat = useRecoilValueLoadable(\n    chatByCollectionId(collection?.metadataCollectionId)\n  );\n\n  const chat = whitelistedCollectionChat.contents;\n\n  // Hack: id can be undefined due to framer-motion animation, and\n  // collection can be undefined when looking at a collection not in current\n  // wallet.\n  if (id === undefined || !collection) {\n    return null;\n  }\n\n  const countText =\n    chat?.memberCount >= 1000\n      ? `${(chat?.memberCount / 1000).toFixed(1)}k`\n      : chat?.memberCount ?? \"0\";\n\n  return (\n    <>\n      {chat ? (\n        <Typography\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            cursor: \"pointer\",\n            fontSize: \"14px\",\n            padding: \"8px 8px 16px 8px\",\n            color: theme.custom.colors.fontColor,\n          }}\n          onClick={async (e: any) => {\n            setJoiningChat(true);\n            await openChat(chat, collection.itemIds[0]);\n            setJoiningChat(false);\n            e.stopPropagation();\n          }}\n        >\n          <div\n            style={{\n              height: \"24px\",\n              width: \"24px\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            {joiningChat ? (\n              // eslint-disable-next-line react/jsx-no-undef\n              <CircularProgress\n                sx={{\n                  color: theme.custom.colors.fontColor,\n                  height: \"13px\",\n                  width: \"13px\",\n                }}\n                size=\"small\"\n                thickness={3}\n              />\n            ) : (\n              <MessageBubbleIcon\n                sx={{\n                  width: \"18px\",\n                  color: theme.custom.colors.fontColor,\n                  \"&:hover\": {\n                    color: `${theme.custom.colors.fontColor3} !important`,\n                  },\n                }}\n              />\n            )}\n          </div>\n          <div\n            style={{\n              padding: \"0px 8px\",\n              opacity: 0.8,\n            }}\n          >\n            {`${chat.name} ⸱ ${countText} members`}\n          </div>\n          <div\n            style={{\n              fontWeight: \"bold\",\n            }}\n          >\n            Join\n          </div>\n        </Typography>\n      ) : null}\n      <Grid container spacing={{ xs: 2, ms: 2, md: 2, lg: 2 }}>\n        {collection.itemIds.map((nftId: string) => (\n          <Grid item xs={6} sm={4} md={3} lg={2} key={nftId}>\n            <NftCard\n              publicKey={publicKey}\n              connectionUrl={connectionUrl}\n              nftId={nftId}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n}\n\nfunction NftCard({\n  publicKey,\n  connectionUrl,\n  nftId,\n}: {\n  publicKey: string;\n  connectionUrl: string;\n  nftId: string;\n}) {\n  const { contents, state } = useRecoilValueLoadable(\n    nftById({\n      publicKey,\n      connectionUrl,\n      nftId,\n    })\n  );\n  const nft = (state === \"hasValue\" && contents) || null;\n  if (!nft) {\n    return null;\n  }\n  return <NFTCard nft={nft} />;\n}\n","import type { Nft, NftCollection } from \"@coral-xyz/common\";\nimport {\n  NAV_COMPONENT_NFT_COLLECTION,\n  UNKNOWN_NFT_ICON_SRC,\n} from \"@coral-xyz/common\";\nimport { ProxyImage } from \"@coral-xyz/react-common\";\nimport {\n  nftsByIds,\n  useActiveWallet,\n  useBlockchainConnectionUrl,\n  useNavigation,\n} from \"@coral-xyz/recoil\";\nimport { HOVER_OPACITY, styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Button, MenuItem, Typography } from \"@mui/material\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { RightClickMenu } from \"../../common/Layout/RightClickMenu\";\n\nconst useStyles = styles((theme) => ({\n  button: {\n    \"&:hover\": {\n      opacity: HOVER_OPACITY,\n    },\n    \"&:hover .openXnft\": {\n      display: \"flex\",\n    },\n    \"&:hover .xnftIcon\": {\n      width: \"100%\",\n    },\n    \"&:hover .appIcon\": {\n      transform: \"rotate(360deg)\",\n    },\n  },\n}));\n\nexport function CollectionCard({ collection }: { collection: NftCollection }) {\n  const activeWallet = useActiveWallet();\n  const connectionUrl = useBlockchainConnectionUrl(activeWallet.blockchain);\n  const classes = useStyles();\n  const { push } = useNavigation();\n  const theme = useCustomTheme();\n  const collectionDisplayNftIds: {\n    publicKey: string;\n    nftId: string;\n  }[] = collection.itemIds.map((nftId) => ({\n    publicKey: activeWallet.publicKey,\n    nftId,\n  }));\n\n  collectionDisplayNftIds.length = Math.min(collectionDisplayNftIds.length, 4);\n\n  const collectionDisplayNfts = useRecoilValue(\n    nftsByIds({\n      nftIds: collectionDisplayNftIds,\n      blockchain: activeWallet.blockchain,\n    })\n  );\n\n  const paddedCollectionDisplayNfts = [\n    ...collectionDisplayNfts,\n    null,\n    null,\n    null,\n    null,\n  ];\n  paddedCollectionDisplayNfts.length = 4;\n\n  if (!collectionDisplayNfts) {\n    return null;\n  }\n\n  const nft = collectionDisplayNfts[0];\n\n  const openCollection = () => {\n    push({\n      title: nft.collectionName,\n      componentId: NAV_COMPONENT_NFT_COLLECTION,\n      componentProps: {\n        id: collection.id,\n        publicKey: activeWallet.publicKey,\n        connectionUrl,\n      },\n    });\n  };\n\n  return (\n    <RightClickMenu\n      renderItems={(close) => (\n        <MenuItem onClick={openCollection}>View Items</MenuItem>\n      )}\n    >\n      <>\n        <Button\n          className={classes.button}\n          onClick={openCollection}\n          disableRipple\n          style={{\n            textTransform: \"none\",\n            padding: \"4px\",\n            borderRadius: \"8px\",\n            position: \"relative\",\n            overflow: \"hidden\",\n            minWidth: \"153.5px\",\n            minHeight: \"153.5px\",\n            height: \"100%\",\n            width: \"100%\",\n            aspectRatio: \"1\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            background: theme.custom.colors.background,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              width: \"100%\",\n              height: \"100%\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              overflow: \"hidden\",\n            }}\n          >\n            {paddedCollectionDisplayNfts.map((nft, i) => {\n              return (\n                <div\n                  key={nft?.id ?? i}\n                  style={{\n                    position: \"relative\",\n                    width: \"50%\",\n                    height: \"50%\",\n                  }}\n                >\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"3px\",\n                      right: \"3px\",\n                      bottom: \"3px\",\n                      left: \"3px\",\n                      overflow: \"hidden\",\n                      borderRadius: \"8px\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        position: \"relative\",\n                        height: \"100%\",\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      {nft ? (\n                        <ProxyImage\n                          style={{\n                            width: \"100%\",\n                          }}\n                          loadingStyles={{\n                            height: \"100%\",\n                          }}\n                          removeOnError\n                          src={nft.imageUrl}\n                          onError={(e) => {\n                            e.currentTarget.src = UNKNOWN_NFT_ICON_SRC;\n                          }}\n                        />\n                      ) : null}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </Button>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            width: \"100%\",\n          }}\n        >\n          <Typography\n            onClick={openCollection}\n            component=\"div\"\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              fontSize: \"14px\",\n              color: theme.custom.colors.fontColor,\n              textOverflow: \"ellipsis\",\n              overflow: \"hidden\",\n              whiteSpace: \"nowrap\",\n              cursor: \"pointer\",\n              padding: \"8px 8px 8px 0px\",\n              flexGrow: 1,\n            }}\n          >\n            <div\n              style={{\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\",\n                whiteSpace: \"nowrap\",\n              }}\n            >\n              {nft.collectionName}\n            </div>\n            {collection.itemIds.length > 0 ? (\n              <span\n                style={{\n                  marginLeft: \"8px\",\n                  color: theme.custom.colors.secondary,\n                }}\n              >\n                {collection.itemIds.length}\n              </span>\n            ) : null}\n          </Typography>\n        </div>\n      </>\n    </RightClickMenu>\n  );\n}\n","import { useLayoutEffect, useRef, useState } from \"react\";\nimport { isOneLive, useOpenPlugin } from \"@coral-xyz/recoil\";\nimport { styles as makeStyles } from \"@coral-xyz/themes\";\nimport { Skeleton } from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport { useRecoilValue } from \"recoil\";\n\nimport type { AllWalletCollections } from \"./NftTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  blockchainCard: {\n    position: \"relative\",\n    marginBottom: \"12px\",\n    marginLeft: \"12px\",\n    marginRight: \"12px\",\n    borderRadius: \"12px\",\n    border: theme.custom.colors.border,\n    height: \"117px\",\n    overflow: \"hidden\",\n    pointerEvents: \"all\",\n    backgroundColor: \"transparent !important\",\n    \"&:hover\": {\n      cursor: \"pointer\",\n    },\n  },\n  imageBackground: {\n    zIndex: 2,\n    position: \"relative\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#000\",\n    pointerEvents: \"all\",\n  },\n  image: {\n    zIndex: 1,\n    position: \"relative\",\n    height: \"117px\",\n    width: \"547px\",\n    backgroundSize: \"547px 234px\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundPosition: \"0px 0px\",\n    pointerEvents: \"all\",\n    \"&:hover\": {\n      backgroundPosition: \"0px -117px\",\n    },\n  },\n  skeleton: {\n    position: \"absolute\",\n    zIndex: \"0\",\n    top: \"0px\",\n    left: \"0px\",\n    height: \"100%\",\n    width: \"100%\",\n    transform: \"none\",\n    pointerEvents: \"none\",\n    backgroundColor: theme.custom.colors.balanceSkeleton,\n  },\n  hidden: {\n    visibility: \"hidden\",\n  },\n  none: {\n    display: \"none\",\n    pointerEvents: \"none\",\n  },\n  visuallyHidden: {\n    zIndex: -1,\n    pointerEvents: \"none\",\n    visibility: \"hidden\",\n    position: \"absolute\",\n    top: \"1000px\",\n  },\n}));\n\nexport default function EntryONE({\n  allWalletCollections,\n}: {\n  allWalletCollections: AllWalletCollections | null;\n}) {\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const ref = useRef<HTMLImageElement>(null);\n  const oneLive = useRecoilValue(isOneLive);\n  const classes = useStyles();\n  const openPlugin = useOpenPlugin();\n\n  useLayoutEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n    const current = ref.current;\n    if (current.complete) {\n      setImageLoaded(true);\n      return;\n    }\n    current.onload = () => {\n      setImageLoaded(true);\n    };\n    return () => {\n      if (current) {\n        current.onload = () => null;\n      }\n    };\n  }, []);\n\n  const isLoading = false || !imageLoaded;\n\n  const hasMadNft = !!allWalletCollections?.find((wallet) => {\n    return !!wallet.collections?.find((collection) => {\n      return (\n        collection.metadataCollectionId === oneLive.madladsCollection &&\n        collection.itemIds.length > 0\n      );\n    });\n  });\n\n  const hasWLNft = !!allWalletCollections?.find((wallet) => {\n    return !!wallet.collections?.find((collection) => {\n      return (\n        collection.metadataCollectionId === oneLive.wlCollection &&\n        collection.itemIds.length > 0\n      );\n    });\n  });\n\n  const banner =\n    hasMadNft && oneLive.hasMadladBanner\n      ? oneLive.hasMadladBanner\n      : hasWLNft && oneLive.hasWLBanner\n      ? oneLive.hasWLBanner\n      : oneLive.banner;\n\n  const openXNFT = () => {\n    if (oneLive.isLive) {\n      openPlugin(\"CkqWjTWzRMAtYN3CSs8Gp4K9H891htmaN1ysNXqcULc8\");\n    }\n  };\n\n  return (\n    <Card onClick={openXNFT} className={classes.blockchainCard} elevation={0}>\n      <Skeleton\n        className={`${classes.skeleton}  ${!isLoading ? classes.none : \"\"}`}\n      />\n      <img ref={ref} className={classes.visuallyHidden} src={banner} />\n      <div\n        className={`${classes.imageBackground} ${\n          isLoading ? classes.hidden : \"\"\n        }`}\n      >\n        <div\n          className={`${classes.image}`}\n          style={{\n            backgroundImage: `url(${banner})`,\n          }}\n        />\n      </div>\n    </Card>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { ChatRoom } from \"@coral-xyz/chat-sdk\";\nimport {\n  BACKEND_API_URL,\n  NAV_COMPONENT_NFT_CHAT,\n  REALTIME_API_URL,\n} from \"@coral-xyz/common\";\nimport { PrimaryButton } from \"@coral-xyz/react-common\";\nimport {\n  useActiveSolanaWallet,\n  useDarkMode,\n  useNavigation,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { styles } from \"@coral-xyz/themes\";\nimport ArrowRightAltIcon from \"@mui/icons-material/ArrowRightAlt\";\n\nconst useStyles = styles(() => ({\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    backgroundImage: \"/assets/one/distressed-background.png\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n  centerAlign: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  btnOuter: {\n    padding: 15,\n  },\n}));\n\nexport const NftsExperience = ({ id }: any) => {\n  return (\n    <div\n      style={{\n        height: \"100%\",\n      }}\n    >\n      <MainScreen id={id} />\n    </div>\n  );\n};\n\nexport function NftChat({ collectionId, nftMint }: any) {\n  const { username, uuid } = useUser();\n  const isDarkMode = useDarkMode();\n  const activeSolanaWallet = useActiveSolanaWallet();\n\n  return (\n    <ChatRoom\n      username={username || \"\"}\n      type=\"collection\"\n      roomId={collectionId || \"-\"}\n      userId={uuid}\n      isDarkMode={isDarkMode}\n      publicKey={activeSolanaWallet?.publicKey}\n      nftMint={nftMint}\n    />\n  );\n}\n\nfunction MainScreen({ id }: { id: string }) {\n  const classes = useStyles();\n  const { push } = useNavigation();\n  return (\n    <div className={classes.container}>\n      <div className={classes.centerAlign}>\n        <img\n          src=\"/assets/one/cream-circle.png\"\n          style={{ height: \"50vh\", marginTop: \"10vh\" }}\n        />\n      </div>\n      <div className={classes.centerAlign}>\n        <img\n          src=\"/assets/one/vito-smoke.png\"\n          style={{ height: \"70vh\", marginTop: \"-60vh\" }}\n        />\n      </div>\n      <div className={classes.centerAlign}>\n        <img\n          src=\"/assets/one/vito.png\"\n          style={{ height: \"70vh\", marginTop: \"-70vh\" }}\n        />\n      </div>\n      <br />\n      <div className={classes.btnOuter}>\n        <PrimaryButton\n          onClick={() =>\n            push({\n              title: \"Chat\",\n              componentId: NAV_COMPONENT_NFT_CHAT,\n              componentProps: {\n                id: id,\n              },\n            })\n          }\n          label={\n            <div style={{ display: \"flex\" }}>\n              <div>Enter the chat</div>{\" \"}\n              <div style={{ marginLeft: 5 }}>\n                {\" \"}\n                <ArrowRightAltIcon />{\" \"}\n              </div>\n            </div>\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { type CSSProperties, useEffect, useState } from \"react\";\nimport type { Nft } from \"@coral-xyz/common\";\nimport {\n  AVATAR_BASE_URL,\n  BACKEND_API_URL,\n  Blockchain,\n  confirmTransaction,\n  explorerNftUrl,\n  getLogger,\n  isMadLads,\n  NAV_COMPONENT_MESSAGE_GROUP_CHAT,\n  Solana,\n  TAB_MESSAGES,\n  toTitleCase,\n  UI_RPC_METHOD_NAVIGATION_ACTIVE_TAB_UPDATE,\n  UI_RPC_METHOD_NAVIGATION_TO_ROOT,\n} from \"@coral-xyz/common\";\nimport { LocalImageManager, refreshGroups } from \"@coral-xyz/db\";\nimport {\n  NegativeButton,\n  PrimaryButton,\n  ProxyImage,\n} from \"@coral-xyz/react-common\";\nimport {\n  appStoreMetaTags,\n  chatByNftId,\n  collectibleXnft,\n  newAvatarAtom,\n  nftById,\n  useActiveWallet,\n  useBackgroundClient,\n  useDecodedSearchParams,\n  useEthereumExplorer,\n  useNavigation,\n  useOpenPlugin,\n  useSolanaCtx,\n  useSolanaExplorer,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Whatshot } from \"@mui/icons-material\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Button, IconButton, Typography } from \"@mui/material\";\nimport { PublicKey } from \"@solana/web3.js\";\nimport { BigNumber } from \"ethers\";\nimport {\n  useRecoilValue,\n  useRecoilValueLoadable,\n  useSetRecoilState,\n} from \"recoil\";\n\nimport { ApproveTransactionDrawer } from \"../../common/ApproveTransactionDrawer\";\nimport PopoverMenu from \"../../common/PopoverMenu\";\nimport {\n  Error as ErrorConfirmation,\n  Sending,\n} from \"../Balances/TokensWidget/Send\";\n\nimport { SendDrawer } from \"./SendDrawer\";\n\nconst logger = getLogger(\"app-extension/nft-detail\");\n\nexport function useOpenChat() {\n  const { uuid } = useUser();\n  const activeWallet = useActiveWallet();\n  const background = useBackgroundClient();\n  const { push } = useNavigation();\n\n  return async (whitelistedChatCollection: any, mint: string) => {\n    await fetch(`${BACKEND_API_URL}/nft/bulk`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        publicKey: activeWallet.publicKey,\n        nfts: [\n          {\n            collectionId: whitelistedChatCollection?.collectionId,\n            nftId: mint,\n            centralizedGroup: whitelistedChatCollection?.id,\n          },\n        ],\n      }),\n    });\n    await refreshGroups(uuid);\n\n    await background.request({\n      method: UI_RPC_METHOD_NAVIGATION_ACTIVE_TAB_UPDATE,\n      params: [TAB_MESSAGES],\n    });\n    push({\n      title: whitelistedChatCollection?.name,\n      componentId: NAV_COMPONENT_MESSAGE_GROUP_CHAT,\n      componentProps: {\n        fromInbox: true,\n        id: whitelistedChatCollection?.id,\n        title: whitelistedChatCollection?.name,\n      },\n    });\n  };\n}\n\nexport function NftsDetail({\n  publicKey,\n  connectionUrl,\n  nftId,\n}: {\n  publicKey: string;\n  connectionUrl: string;\n  nftId: string;\n}) {\n  const theme = useCustomTheme();\n  const whitelistedChatCollection = useRecoilValue(\n    chatByNftId({ publicKey, connectionUrl, nftId })\n  );\n  const openChat = useOpenChat();\n\n  const { contents, state } = useRecoilValueLoadable(\n    nftById({ publicKey, connectionUrl, nftId })\n  );\n  const nft = (state === \"hasValue\" && contents) || null;\n  const { contents: xnftContents, state: xnftState } = useRecoilValueLoadable(\n    collectibleXnft(\n      nft ? { collection: nft.metadataCollectionId, mint: nft.mint } : null\n    )\n  );\n  const xnft = (xnftState === \"hasValue\" && xnftContents) || null;\n  const [chatJoined, setChatJoined] = useState(false);\n  const [joiningChat, setJoiningChat] = useState(false);\n\n  const whitelistedChatCollectionId = whitelistedChatCollection?.collectionId;\n\n  // Hack: needed because this is undefined due to framer-motion animation.\n  if (!nftId) {\n    return null;\n  }\n\n  // TODO: this is hit when the NFT has been transferred out and\n  //       the user re-opens the app to the old url which is no longer\n  //       valid.\n  //\n  //       Should probably just pop the stack here or redirect.\n  if (!nft) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        paddingBottom: \"8px\",\n      }}\n    >\n      <Image nft={nft} />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"15px\",\n          marginTop: \"16px\",\n        }}\n      >\n        {whitelistedChatCollectionId ? (\n          <PrimaryButton\n            disabled={chatJoined || joiningChat}\n            label={\n              joiningChat ? \"Joining\" : chatJoined ? \"Joined\" : \"Join chat\"\n            }\n            onClick={async () => {\n              setJoiningChat(true);\n              await openChat(whitelistedChatCollection, nft.mint!);\n              setChatJoined(true);\n            }}\n          />\n        ) : null}\n        <SendDrawer nft={nft}>\n          {(open) => (\n            <PrimaryButton\n              invert={whitelistedChatCollectionId !== undefined}\n              // style={\n              //   whitelistedChatCollectionId\n              //     ? {\n              //         backgroundColor: theme.custom.colors.secondaryButton,\n              //         color: theme.custom.colors.secondaryButtonTextColor,\n              //       }\n              //     : undefined\n              // }\n              onClick={() => open()}\n              label=\"Send\"\n            />\n          )}\n        </SendDrawer>\n      </div>\n      {xnft ? <ApplicationButton xnft={xnft} mintAddress={nft.mint} /> : null}\n      <Description nft={nft} />\n      {nft.attributes && nft.attributes.length > 0 ? (\n        <Attributes nft={nft} />\n      ) : null}\n    </div>\n  );\n}\n\nfunction Image({ nft, style }: { nft: any; style?: any }) {\n  const src = isMadLads(nft.creators)\n    ? nft.lockScreenImageUrl ?? nft.imageUrl\n    : nft.imageUrl;\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        minHeight: \"343px\",\n        display: \"flex\",\n        position: \"relative\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        ...(style || {}),\n      }}\n    >\n      <ProxyImage\n        style={{\n          maxWidth: \"100%\",\n          borderRadius: \"8px\",\n        }}\n        loadingStyles={{\n          minHeight: \"343px\",\n        }}\n        src={src}\n        original\n        removeOnError\n      />\n    </div>\n  );\n}\n\nfunction ApplicationButton({\n  xnft,\n  mintAddress,\n}: {\n  xnft: string;\n  mintAddress?: string;\n}) {\n  const theme = useCustomTheme();\n  const openPlugin = useOpenPlugin();\n  const { contents, state } = useRecoilValueLoadable(appStoreMetaTags(xnft));\n\n  const data = (state === \"hasValue\" && contents) || null;\n\n  const handleClick = () => {\n    openPlugin(xnft + \"/\" + mintAddress);\n  };\n\n  return (\n    data && (\n      <div\n        style={{\n          marginTop: \"20px\",\n          position: \"relative\",\n        }}\n      >\n        <Typography\n          style={{\n            color: theme.custom.colors.secondary,\n            fontWeight: 500,\n            fontSize: \"16px\",\n            lineHeight: \"24px\",\n            marginBottom: \"4px\",\n          }}\n        >\n          Application\n        </Typography>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            borderRadius: \"12px\",\n            background: theme.custom.colors.nav,\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"12px\",\n            padding: \"12px\",\n          }}\n        >\n          <img src={data.image} height={64} width={64} />\n          <div\n            style={{\n              flexGrow: 1,\n              whiteSpace: \"nowrap\",\n              overflowX: \"hidden\",\n            }}\n          >\n            <Typography sx={{ color: theme.custom.colors.fontColor }}>\n              {data.name}\n            </Typography>\n            <Typography\n              sx={{\n                color: theme.custom.colors.fontColor3,\n                fontSize: \"14px\",\n                lineHeight: \"20px\",\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {data.description}\n            </Typography>\n          </div>\n          <Button\n            disableRipple\n            sx={{\n              color: theme.custom.colors.fontColor,\n              background: theme.custom.colors.bg2,\n              borderRadius: \"12px\",\n            }}\n            onClick={handleClick}\n          >\n            Open\n          </Button>\n        </div>\n      </div>\n    )\n  );\n}\n\nfunction Description({ nft }: { nft: any }) {\n  const theme = useCustomTheme();\n\n  return (\n    <div\n      style={{\n        marginTop: \"20px\",\n      }}\n    >\n      <Typography\n        style={{\n          color: theme.custom.colors.secondary,\n          fontWeight: 500,\n          fontSize: \"16px\",\n          lineHeight: \"24px\",\n          marginBottom: \"4px\",\n        }}\n      >\n        Description\n      </Typography>\n      <Typography\n        style={{\n          color: theme.custom.colors.fontColor,\n          fontWeight: 500,\n          fontSize: \"16px\",\n        }}\n      >\n        {nft.description}\n      </Typography>\n    </div>\n  );\n}\n\nfunction Attributes({ nft }: { nft: any }) {\n  const theme = useCustomTheme();\n\n  return (\n    <div\n      style={{\n        marginTop: 24,\n      }}\n    >\n      <Typography style={{ color: theme.custom.colors.secondary }}>\n        Attributes\n      </Typography>\n      <div\n        style={{\n          marginBottom: \"24px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            marginTop: \"4px\",\n            marginLeft: \"-4px\",\n            marginRight: \"-4px\",\n          }}\n        >\n          {nft.attributes.map((attr: { traitType: string; value: string }) => {\n            return (\n              <div\n                key={attr.traitType}\n                style={{\n                  padding: \"4px\",\n                }}\n              >\n                <div\n                  style={{\n                    borderRadius: \"8px\",\n                    backgroundColor: theme.custom.colors.nav,\n                    paddingTop: \"4px\",\n                    paddingBottom: \"4px\",\n                    paddingLeft: \"8px\",\n                    paddingRight: \"8px\",\n                  }}\n                >\n                  <Typography\n                    style={{\n                      color: theme.custom.colors.secondary,\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    {toTitleCase(attr.traitType)}\n                  </Typography>\n                  <Typography\n                    style={{\n                      color: theme.custom.colors.fontColor,\n                      fontSize: \"16px\",\n                    }}\n                  >\n                    {attr.value}\n                  </Typography>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function NftOptionsButton() {\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n  const { uuid, username } = useUser();\n  const setNewAvatar = useSetRecoilState(newAvatarAtom(username));\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const searchParams = useDecodedSearchParams();\n  const [wasBurnt, setWasBurnt] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      // If the modal is being closed and the NFT has been burnt then navigate\n      // back to the nav root because the send screen is no longer valid as the\n      // wallet no longer possesses the NFT.\n      if (!openDrawer && wasBurnt) {\n        await background.request({\n          method: UI_RPC_METHOD_NAVIGATION_TO_ROOT,\n          params: [],\n        });\n      }\n    })();\n  }, [openDrawer, wasBurnt, background]);\n\n  // @ts-ignore\n  const nftId: string = searchParams.props.nftId;\n  // @ts-ignore\n  const publicKey: string = searchParams.props.publicKey;\n  // @ts-ignore\n  const connectionUrl: string = searchParams.props.connectionUrl;\n\n  const { contents, state } = useRecoilValueLoadable(\n    nftById({ publicKey, connectionUrl, nftId })\n  );\n  const nft = (state === \"hasValue\" && contents) || null;\n\n  // @ts-ignore\n  const isEthereum: boolean = nft && nft.contractAddress;\n\n  const ethExpl = useEthereumExplorer();\n  const solExpl = useSolanaExplorer();\n  const explorer = isEthereum ? ethExpl : solExpl;\n\n  const onClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const onClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onBurn = () => {\n    onClose();\n    setOpenDrawer(true);\n  };\n\n  const onSetPfp = async () => {\n    if (nft) {\n      //\n      // Cleanup component state.\n      //\n      setAnchorEl(null);\n\n      //\n      // Store on server.\n      //\n      const id = `${nft.blockchain}/${\n        nft.blockchain === \"solana\" ? nft.mint : nft.id\n      }`;\n\n      await fetch(BACKEND_API_URL + \"/users/avatar\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n        body: JSON.stringify({ avatar: id }),\n      });\n      await fetch(`${AVATAR_BASE_URL}/${username}?bust_cache=1`);\n\n      //\n      // Store locally.\n      //\n      // Need SWR mechanic for Local pfps before enabling again so we can update PFPs from xnfts.\n      // await updateLocalNftPfp(uuid, username, tempAvatar.nft!);\n      setNewAvatar({ id, url: nft.imageUrl });\n    }\n  };\n\n  return (\n    <>\n      <IconButton\n        disableRipple\n        style={{\n          padding: 0,\n        }}\n        onClick={(e) => onClick(e)}\n      >\n        <MoreHorizIcon\n          style={{\n            color: theme.custom.colors.secondary,\n          }}\n        />\n      </IconButton>\n      <PopoverMenu.Root\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={onClose}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n      >\n        <PopoverMenu.Group>\n          <PopoverMenu.Item\n            onClick={() => {\n              const url = explorerNftUrl(explorer, nft, connectionUrl);\n              window.open(url, \"_blank\");\n            }}\n          >\n            View on Explorer\n          </PopoverMenu.Item>\n          <PopoverMenu.Item onClick={onSetPfp}>Set as PFP</PopoverMenu.Item>\n        </PopoverMenu.Group>\n        <PopoverMenu.Group>\n          <PopoverMenu.Item\n            sx={{ color: `${theme.custom.colors.negative} !important` }}\n            onClick={onBurn}\n          >\n            Burn Token\n          </PopoverMenu.Item>\n        </PopoverMenu.Group>\n      </PopoverMenu.Root>\n      <ApproveTransactionDrawer\n        openDrawer={openDrawer}\n        setOpenDrawer={setOpenDrawer}\n      >\n        <BurnConfirmationCard nft={nft} onComplete={() => setWasBurnt(true)} />\n      </ApproveTransactionDrawer>\n    </>\n  );\n}\n\nfunction BurnConfirmationCard({\n  nft,\n  onComplete,\n}: {\n  nft: any;\n  onComplete?: () => void;\n}) {\n  const [state, setState] = useState<\n    \"confirm\" | \"sending\" | \"confirmed\" | \"error\"\n  >(\"confirm\");\n  const [signature, setSignature] = useState<string | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const solanaCtx = useSolanaCtx();\n  const blockchain = Blockchain.SOLANA;\n\n  const token = {\n    logo: nft ? nft.imageUrl : \"\",\n    mint: nft ? nft.mint : \"\",\n    decimals: 0,\n  };\n\n  const onConfirm = async () => {\n    try {\n      // TODO: should use recoil for this to avoid the extra, unnecessary request.\n      const amount = parseInt(\n        (\n          await solanaCtx.connection.getTokenAccountBalance(\n            new PublicKey(nft.publicKey)\n          )\n        ).value.amount\n      );\n      setState(\"sending\");\n\n      const _signature = await Solana.burnAndCloseNft(solanaCtx, {\n        solDestination: solanaCtx.walletPublicKey,\n        mint: new PublicKey(nft.mint.toString()),\n        amount,\n      });\n      setSignature(_signature);\n\n      //\n      // Confirm the tx.\n      //\n      try {\n        await confirmTransaction(\n          solanaCtx.connection,\n          _signature,\n          solanaCtx.commitment !== \"confirmed\" &&\n            solanaCtx.commitment !== \"finalized\"\n            ? \"confirmed\"\n            : solanaCtx.commitment\n        );\n        setState(\"confirmed\");\n        if (onComplete) onComplete();\n      } catch (err: any) {\n        logger.error(\"unable to confirm NFT burn\", err);\n        setError(err.toString());\n        setState(\"error\");\n      }\n    } catch (err: any) {\n      console.log(\"error burning NFT\", err);\n      setError(err);\n      setState(\"error\");\n    }\n  };\n\n  return state === \"confirm\" ? (\n    <BurnConfirmation onConfirm={onConfirm} />\n  ) : state === \"sending\" ? (\n    <Sending\n      blockchain={Blockchain.SOLANA}\n      isComplete={false}\n      amount={BigNumber.from(1)}\n      token={token}\n      signature={signature!}\n      titleOverride=\"Burning\"\n    />\n  ) : state === \"confirmed\" ? (\n    <Sending\n      blockchain={Blockchain.SOLANA}\n      isComplete\n      amount={BigNumber.from(1)}\n      token={token}\n      signature={signature!}\n      titleOverride=\"Burnt\"\n    />\n  ) : (\n    <ErrorConfirmation\n      blockchain={blockchain}\n      signature={signature!}\n      error={error!.toString()}\n      onRetry={() => onConfirm()}\n    />\n  );\n}\n\nfunction BurnConfirmation({ onConfirm }: { onConfirm: () => void }) {\n  const theme = useCustomTheme();\n\n  return (\n    <div\n      style={{\n        height: \"400px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        padding: \"16px\",\n      }}\n    >\n      <div\n        style={{\n          flex: 1,\n        }}\n      >\n        <Whatshot\n          style={{\n            color: theme.custom.colors.negative,\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            fontSize: \"60px\",\n            marginTop: \"24px\",\n            marginBottom: \"24px\",\n          }}\n        />\n        <Typography\n          style={{\n            backgroundColor:\n              theme.custom.colors.approveTransactionTableBackground,\n            border: theme.custom.colors.borderFull,\n            padding: \"16px\",\n            color: theme.custom.colors.fontColor,\n            fontSize: \"20px\",\n            textAlign: \"center\",\n            borderRadius: \"8px\",\n          }}\n        >\n          Are you sure you want to burn this token? This action can't be undone.\n        </Typography>\n      </div>\n      <div>\n        <NegativeButton label=\"Confirm\" onClick={() => onConfirm()} />\n      </div>\n    </div>\n  );\n}\n\nexport async function updateLocalNftPfp(\n  uuid: string,\n  username: string,\n  nft: Nft\n) {\n  //\n  // Only show mad lads on the lock screen in full screen view.\n  //\n  let lockScreenImageUrl;\n  if (isMadLads(nft.creators)) {\n    window.localStorage.setItem(\n      lockScreenKey(uuid),\n      JSON.stringify({\n        uuid,\n        nft,\n      })\n    );\n    lockScreenImageUrl = nft.lockScreenImageUrl!;\n  } else {\n    window.localStorage.removeItem(lockScreenKey(uuid));\n    lockScreenImageUrl = nft.imageUrl;\n  }\n  await LocalImageManager.getInstance().storeImageInLocalStorage(\n    lockScreenKeyImage(username),\n    true,\n    lockScreenImageUrl\n  );\n}\n\nexport function lockScreenKey(uuid: string) {\n  return `${uuid}:lock-screen-nft:1`;\n}\n\nexport function lockScreenKeyImage(username: string) {\n  return `https://swr.xnfts.dev/avatars/${username}`;\n}\n","import type { MouseEvent } from \"react\";\nimport { useState } from \"react\";\nimport type { Nft } from \"@coral-xyz/common\";\nimport {\n  NAV_COMPONENT_NFT_DETAIL,\n  UNKNOWN_NFT_ICON_SRC,\n} from \"@coral-xyz/common\";\nimport { AppsColorIcon, ProxyImage } from \"@coral-xyz/react-common\";\nimport {\n  chatByCollectionId,\n  chatByNftId,\n  collectibleXnft,\n  useActiveWallet,\n  useBlockchainConnectionUrl,\n  useNavigation,\n  useOpenPlugin,\n} from \"@coral-xyz/recoil\";\nimport { HOVER_OPACITY, styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Button, IconButton, MenuItem, Typography } from \"@mui/material\";\nimport { useRecoilValue, useRecoilValueLoadable } from \"recoil\";\n\nimport { RightClickMenu } from \"../../common/Layout/RightClickMenu\";\nimport PopoverMenu from \"../../common/PopoverMenu\";\n\nimport { useOpenChat } from \"./NftDetail\";\nimport { SendDrawer } from \"./SendDrawer\";\n\nconst useStyles = styles((theme) => ({\n  xnftIcon: {\n    background: theme.custom.colors.nav,\n    color: theme.custom.colors.fontColor,\n    borderRadius: \"24px\",\n    fontSize: \"14px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    overflow: \"hidden\",\n    width: \"32px\",\n    flexWrap: \"nowrap\",\n    transition: \"width 100ms 200ms ease-out\",\n    \"& .appIcon\": {\n      transition: \"transform 300ms ease-out\",\n    },\n  },\n  button: {\n    \"&:hover\": {\n      opacity: HOVER_OPACITY,\n    },\n    \"&:hover .openXnft\": {\n      display: \"flex\",\n    },\n    \"&:hover .xnftIcon\": {\n      width: \"100%\",\n    },\n    \"&:hover .appIcon\": {\n      transform: \"rotate(360deg)\",\n    },\n  },\n}));\n\nexport function NFTCard({\n  nft,\n  subtitle,\n  showCollectionChat,\n}: {\n  nft: Nft;\n  subtitle?: {\n    length: number;\n    name: string;\n  };\n  showCollectionChat?: boolean;\n}) {\n  const activeWallet = useActiveWallet();\n  const connectionUrl = useBlockchainConnectionUrl(activeWallet.blockchain);\n  const { push } = useNavigation();\n  const openPlugin = useOpenPlugin();\n  const whitelistedNftChat = useRecoilValue(\n    chatByNftId({\n      publicKey: activeWallet.publicKey,\n      nftId: nft.id,\n      connectionUrl,\n    })\n  );\n  const whitelistedCollectionChat = useRecoilValue(\n    chatByCollectionId(nft.metadataCollectionId)\n  );\n  const openChat = useOpenChat();\n\n  const { contents, state } = useRecoilValueLoadable(\n    collectibleXnft(\n      nft ? { collection: nft.metadataCollectionId, mint: nft.mint } : null\n    )\n  );\n\n  if (!nft) {\n    return null;\n  }\n\n  const chat =\n    whitelistedNftChat ?? showCollectionChat ? whitelistedCollectionChat : null;\n\n  const xnft = (state === \"hasValue\" && contents) || null;\n\n  const onOpenXnft = (e: MouseEvent) => {\n    e.stopPropagation();\n    if (xnft) {\n      openPlugin(xnft + \"/\" + nft.mint);\n    }\n  };\n\n  const openDetails = async () => {\n    await push({\n      title: nft.name,\n      componentId: NAV_COMPONENT_NFT_DETAIL,\n      componentProps: {\n        nftId: nft.id,\n        publicKey: activeWallet.publicKey,\n        connectionUrl,\n      },\n    });\n  };\n\n  const onOpenChat = async (e: any) => {\n    await openChat(chat, nft.mint!);\n    e.stopPropagation();\n  };\n\n  return (\n    <SendDrawer nft={nft}>\n      {(openDrawer) => (\n        <RightClickMenu\n          renderItems={(closeMenu) => (\n            <NftRightClickActionMenu\n              onOpenDetails={openDetails}\n              onOpenChat={chat ? onOpenChat : undefined}\n              onOpenXnft={xnft ? onOpenXnft : undefined}\n              onOpenSend={openDrawer}\n              closeMenu={closeMenu}\n            />\n          )}\n        >\n          <>\n            <NftCardButton\n              onClick={xnft ? onOpenXnft : openDetails}\n              nft={nft}\n              isXnft={!!xnft}\n            />\n            <NftCardFooter\n              nft={nft}\n              subtitle={subtitle}\n              onOpenDetails={openDetails}\n              onOpenChat={chat ? onOpenChat : undefined}\n              onOpenXnft={xnft ? onOpenXnft : undefined}\n              onOpenSend={openDrawer}\n            />\n          </>\n        </RightClickMenu>\n      )}\n    </SendDrawer>\n  );\n}\n\nfunction NftCardButton({\n  nft,\n  isXnft,\n  onClick,\n}: {\n  nft: any;\n  isXnft: boolean;\n  onClick: (e: MouseEvent) => void;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  return (\n    <Button\n      className={classes.button}\n      onClick={onClick}\n      disableRipple\n      style={{\n        textTransform: \"none\",\n        padding: 0,\n        borderRadius: \"8px\",\n        position: \"relative\",\n        overflow: \"hidden\",\n        minWidth: \"153.5px\",\n        minHeight: \"153.5px\",\n        height: \"100%\",\n        width: \"100%\",\n        aspectRatio: \"1\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        background: theme.custom.colors.background,\n      }}\n    >\n      <ProxyImage\n        className=\"nftImage\"\n        style={{\n          width: \"100%\",\n        }}\n        loadingStyles={{\n          height: \"100%\",\n        }}\n        removeOnError\n        src={nft.imageUrl}\n        onError={(e) => {\n          e.currentTarget.src = UNKNOWN_NFT_ICON_SRC;\n        }}\n      />\n      <div\n        style={{\n          width: \"100%\",\n          position: \"absolute\",\n          left: 0,\n          bottom: 8,\n          zIndex: 2,\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          padding: \"0 8px\",\n          gap: \"6px\",\n        }}\n      >\n        {isXnft ? (\n          <div className={`${classes.xnftIcon} xnftIcon`}>\n            <AppsColorIcon\n              className=\"appIcon\"\n              style={{\n                width: \"16px\",\n                height: \"16px\",\n                margin: \"8px\",\n                flexShrink: 0,\n              }}\n            />\n            <Typography\n              sx={{\n                flexShrink: 0,\n                width: \"100px\",\n              }}\n            >\n              Open xNFT\n            </Typography>\n          </div>\n        ) : null}\n      </div>\n    </Button>\n  );\n}\n\nfunction NftCardFooter({\n  nft,\n  subtitle,\n  onOpenDetails,\n  onOpenChat,\n  onOpenXnft,\n  onOpenSend,\n}: {\n  nft: any;\n  subtitle?: {\n    length: number;\n    name: string;\n  };\n  onOpenDetails: () => Promise<void>;\n  onOpenChat?: (e: any) => Promise<void>;\n  onOpenXnft?: (e: MouseEvent) => void;\n  onOpenSend: () => void;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        padding: \"0px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        width: \"100%\",\n      }}\n    >\n      <Typography\n        onClick={onOpenDetails}\n        component=\"div\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          fontSize: \"14px\",\n          color: theme.custom.colors.fontColor,\n          textOverflow: \"ellipsis\",\n          overflow: \"hidden\",\n          whiteSpace: \"nowrap\",\n          cursor: \"pointer\",\n          padding: \"8px 8px 8px 0px\",\n          flexGrow: 1,\n        }}\n      >\n        <div\n          style={{\n            textOverflow: \"ellipsis\",\n            overflow: \"hidden\",\n            whiteSpace: \"nowrap\",\n          }}\n        >\n          {subtitle?.name ?? nft.name}\n        </div>\n        {subtitle?.length ?? 0 > 1 ? (\n          <span\n            style={{\n              marginLeft: \"8px\",\n              color: theme.custom.colors.secondary,\n            }}\n          >\n            {subtitle?.length ?? \"\"}\n          </span>\n        ) : null}\n      </Typography>\n      <NftMoreInfoActionMenu\n        onOpenDetails={onOpenDetails}\n        onOpenChat={onOpenChat}\n        onOpenXnft={onOpenXnft}\n        onOpenSend={onOpenSend}\n      />\n    </div>\n  );\n}\n\nfunction NftRightClickActionMenu({\n  onOpenChat,\n  onOpenXnft,\n  onOpenDetails,\n  onOpenSend,\n  closeMenu,\n}: {\n  onOpenChat?: (e: any) => Promise<void>;\n  onOpenXnft?: (e: MouseEvent) => void;\n  onOpenDetails: () => void;\n  onOpenSend: () => void;\n  closeMenu: () => void;\n}) {\n  return (\n    <>\n      {onOpenXnft ? <MenuItem onClick={onOpenXnft}>Open xNFT</MenuItem> : null}\n      {onOpenChat ? (\n        <MenuItem\n          onClick={async (e) => {\n            closeMenu();\n            await onOpenChat(e);\n          }}\n        >\n          Chat\n        </MenuItem>\n      ) : null}\n      <MenuItem sx={{ width: \"100px\" }} onClick={onOpenDetails}>\n        View\n      </MenuItem>\n      <MenuItem\n        onClick={() => {\n          closeMenu();\n          onOpenSend();\n        }}\n      >\n        Send\n      </MenuItem>\n    </>\n  );\n}\n\nfunction NftMoreInfoActionMenu({\n  onOpenChat,\n  onOpenXnft,\n  onOpenDetails,\n  onOpenSend,\n}: {\n  onOpenDetails: () => Promise<void>;\n  onOpenChat?: (e: any) => Promise<void>;\n  onOpenXnft?: (e: MouseEvent) => void;\n  onOpenSend: () => void;\n}) {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const theme = useCustomTheme();\n\n  return (\n    <>\n      <IconButton\n        disableRipple\n        sx={{\n          padding: 0,\n          height: \"5px\",\n        }}\n        onClick={(e) => setAnchorEl(e.currentTarget)}\n      >\n        <MoreHorizIcon\n          style={{\n            color: theme.custom.colors.secondary,\n          }}\n        />\n      </IconButton>\n      <PopoverMenu.Root\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={() => setAnchorEl(null)}\n      >\n        <PopoverMenu.Group>\n          {onOpenXnft ? (\n            <PopoverMenu.Item onClick={onOpenXnft}>Open xNFT</PopoverMenu.Item>\n          ) : null}\n          <PopoverMenu.Item\n            sx={{ width: \"100px\" }}\n            onClick={async () => {\n              await onOpenDetails();\n              setAnchorEl(null);\n            }}\n          >\n            View\n          </PopoverMenu.Item>\n          {onOpenChat ? (\n            <PopoverMenu.Item\n              onClick={async (e) => {\n                setAnchorEl(null);\n                await onOpenChat(e);\n              }}\n            >\n              Chat\n            </PopoverMenu.Item>\n          ) : null}\n          <PopoverMenu.Item\n            onClick={() => {\n              onOpenSend();\n              setAnchorEl(null);\n            }}\n          >\n            Send\n          </PopoverMenu.Item>\n        </PopoverMenu.Group>\n      </PopoverMenu.Root>\n    </>\n  );\n}\n","import { Suspense, useCallback, useRef, useState } from \"react\";\nimport Autosizer from \"react-virtualized-auto-sizer\";\nimport { VariableSizeList } from \"react-window\";\nimport type { Blockchain, NftCollection } from \"@coral-xyz/common\";\nimport { Loading } from \"@coral-xyz/react-common\";\nimport {\n  nftById,\n  useAllWallets,\n  useBlockchainConnectionUrl,\n  useNavigation,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport type { CustomTheme } from \"@coral-xyz/themes\";\nimport { styled } from \"@coral-xyz/themes\";\nimport { Skeleton } from \"@mui/material\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { Scrollbar } from \"../../common/Layout/Scrollbar\";\nimport { _BalancesTableHead } from \"../Balances/Balances\";\n\nimport { CollectionCard } from \"./CollectionEntry\";\nimport { NFTCard } from \"./NftEntry\";\n\nexport type AllWalletCollections = Array<{\n  publicKey: string;\n  collections: null | Array<NftCollection>;\n}>;\ntype CollapsedCollections = boolean[];\n\ntype Row = {\n  height: number;\n  key: string;\n  component: JSX.Element;\n};\n\ntype collapseSingleCollection = (\n  listIndex: number,\n  blockchainCollectionIndex: number,\n  isCollapsed: boolean\n) => void;\n\nexport function NftTable({\n  blockchainCollections,\n  prependItems = [],\n}: {\n  prependItems?: Row[];\n  blockchainCollections: AllWalletCollections;\n}) {\n  const [collapsedCollections, setCollapsedCollections] =\n    useState<CollapsedCollections>(\n      new Array(blockchainCollections.length).fill(false)\n    );\n\n  const ref = useRef<VariableSizeList>(null);\n\n  const collapseSingleCollection: collapseSingleCollection = useCallback(\n    (listIndex: number, blockchainIndex: number, isCollapsed: boolean) => {\n      setCollapsedCollections((oldValue) => {\n        const collapsed = [...oldValue];\n        collapsed[blockchainIndex] = isCollapsed;\n        return collapsed;\n      });\n      ref.current?.resetAfterIndex && ref.current?.resetAfterIndex(listIndex);\n    },\n    [setCollapsedCollections, ref]\n  );\n\n  const nftWidth = 174;\n\n  return (\n    <Autosizer>\n      {({ width, height }) => {\n        const numberOfItemsPerRow = Math.floor((width - 24) / nftWidth);\n        return (\n          <div\n            style={{\n              position: \"relative\",\n              height: `${height}px`,\n              width: `${width}px`,\n              pointerEvents: \"all\",\n            }}\n          >\n            <VariableSizeList\n              key={JSON.stringify({\n                blockchainCollections,\n                numberOfItemsPerRow,\n                prependItems: prependItems.length,\n              })}\n              ref={ref}\n              itemKey={(i) => {\n                const row = getItemForIndex(\n                  i,\n                  blockchainCollections,\n                  collapsedCollections,\n                  collapseSingleCollection,\n                  numberOfItemsPerRow,\n                  prependItems\n                );\n                return row ? row.key : 0;\n              }}\n              outerElementType={Scrollbar}\n              height={height}\n              width={width}\n              itemCount={getNumberOfItems(\n                blockchainCollections,\n                collapsedCollections,\n                numberOfItemsPerRow,\n                prependItems\n              )}\n              itemSize={(i) => {\n                const row = getItemForIndex(\n                  i,\n                  blockchainCollections,\n                  collapsedCollections,\n                  collapseSingleCollection,\n                  numberOfItemsPerRow,\n                  prependItems\n                );\n                return row ? row.height : 0;\n              }}\n              style={{ overflow: \"hidden\" }}\n            >\n              {({ index, style }) => {\n                const row = getItemForIndex(\n                  index,\n                  blockchainCollections,\n                  collapsedCollections,\n                  collapseSingleCollection,\n                  numberOfItemsPerRow,\n                  prependItems\n                );\n                return row ? <div style={style}>{row.component}</div> : null;\n              }}\n            </VariableSizeList>\n          </div>\n        );\n      }}\n    </Autosizer>\n  );\n}\n\nconst HeaderRow = function HeaderRow({\n  listIndex,\n  blockchainIndex,\n  blockchainCollections,\n  isCollapsed,\n  collapseSingleCollection,\n}: {\n  listIndex: number;\n  blockchainIndex: number;\n  blockchainCollections: AllWalletCollections;\n  isCollapsed: boolean;\n  collapseSingleCollection: collapseSingleCollection;\n}) {\n  const c = blockchainCollections[blockchainIndex];\n  const wallets = useAllWallets();\n  const wallet = wallets.find((wallet) => wallet.publicKey === c.publicKey);\n  const blockchain = wallet?.blockchain;\n  return (\n    <CustomCard top bottom={isCollapsed}>\n      <_BalancesTableHead\n        blockchain={blockchain as Blockchain}\n        wallet={wallet!}\n        showContent={!isCollapsed}\n        setShowContent={(isCollapsed) => {\n          collapseSingleCollection(listIndex, blockchainIndex, !isCollapsed);\n        }}\n      />\n    </CustomCard>\n  );\n};\n\nconst FooterRow = function () {\n  return <CustomCard top={false} bottom />;\n};\n\nconst LoadingRow = function ({ itemsPerRow }: { itemsPerRow: number }) {\n  const items = new Array(itemsPerRow).fill(null);\n\n  return (\n    <CustomCard top={false} bottom={false}>\n      <div\n        style={{\n          display: \"flex\",\n          padding: `6px 6px ${6 + 26}px 6px`,\n          justifyContent: \"space-evenly\",\n          flex: \"0 0 auto\",\n        }}\n      >\n        {items.map(() => {\n          return (\n            <div\n              style={{\n                position: \"relative\",\n                width: \"153.5px\",\n                height: `${153.5}px`,\n                margin: \"0px 6px\",\n                borderRadius: \"8px\",\n                overflow: \"hidden\",\n              }}\n            >\n              <Skeleton\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  transform: \"none\",\n                  transformOrigin: \"none\",\n                }}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </CustomCard>\n  );\n};\n\nconst ItemRow = function ({\n  blockchainIndex,\n  itemStartIndex,\n  itemsPerRow,\n  blockchainCollections,\n}: {\n  blockchainIndex: number;\n  itemStartIndex: number;\n  itemsPerRow: number;\n  blockchainCollections: AllWalletCollections;\n}) {\n  const c = blockchainCollections[blockchainIndex];\n\n  const wallets = useAllWallets();\n  const wallet = wallets.find((wallet) => wallet.publicKey === c.publicKey);\n  const blockchain = wallet?.blockchain!;\n\n  const collectionItems = c.collections!;\n  const connectionUrl = useBlockchainConnectionUrl(blockchain);\n\n  const numberOfItems =\n    itemStartIndex + itemsPerRow <= collectionItems.length\n      ? itemsPerRow\n      : collectionItems.length % itemsPerRow;\n\n  const items: any = new Array(itemsPerRow).fill(null);\n  for (let i = itemStartIndex; i < itemStartIndex + numberOfItems; i++) {\n    items[i - itemStartIndex] = collectionItems[i];\n  }\n\n  return (\n    <CustomCard top={false} bottom={false}>\n      <div\n        style={{\n          display: \"flex\",\n          padding: \"6px\",\n          justifyContent: \"space-evenly\",\n          flex: \"0 0 auto\",\n        }}\n      >\n        {items.map((collection: NftCollection, idx: number) => {\n          return (\n            <div\n              key={collection ? collection.id : null}\n              style={{\n                position: \"relative\",\n                width: \"153.5px\",\n                height: `${153.5 + 26}px`,\n                overflow: \"hidden\",\n                margin: \"0px 6px\",\n              }}\n            >\n              {collection ? (\n                <Suspense fallback={<Loading />}>\n                  <NftCollectionCard\n                    publicKey={c.publicKey}\n                    connectionUrl={connectionUrl}\n                    collection={collection}\n                  />\n                </Suspense>\n              ) : null}\n            </div>\n          );\n        })}\n      </div>\n    </CustomCard>\n  );\n};\n\nconst CustomCard = styled(\"div\")(\n  ({ theme }: { theme: CustomTheme }) =>\n    ({ top, bottom }: { top: boolean; bottom: boolean }) => ({\n      position: \"relative\",\n      backgroundColor: \"inherit\",\n      marginLeft: \"12px\",\n      marginRight: \"12px\",\n      overflow: \"hidden\",\n      borderLeft: theme.custom.colors.borderFull,\n      borderRight: theme.custom.colors.borderFull,\n      background: theme.custom.colors.nav,\n      ...(top\n        ? {\n            borderTopLeftRadius: \"12px\",\n            borderTopRightRadius: \"12px\",\n            borderTop: theme.custom.colors.borderFull,\n          }\n        : {}),\n      ...(bottom\n        ? {\n            borderBottomLeftRadius: \"12px\",\n            borderBottomRightRadius: \"12px\",\n            borderBottom: theme.custom.colors.borderFull,\n            marginBottom: \"12px\",\n            minHeight: \"12px\",\n          }\n        : {}),\n    })\n);\n\nfunction NftCollectionCard({\n  publicKey,\n  connectionUrl,\n  collection,\n}: {\n  publicKey: string;\n  connectionUrl: string;\n  collection: NftCollection;\n}) {\n  const { uuid } = useUser();\n  const { push } = useNavigation();\n  // Display the first NFT in the collection as the thumbnail in the grid\n  const collectionDisplayNftId = collection.itemIds?.find((nftId) => !!nftId)!;\n  const collectionDisplayNft = useRecoilValue(\n    nftById({\n      publicKey,\n      connectionUrl,\n      nftId: collectionDisplayNftId,\n    })\n  );\n\n  if (!collectionDisplayNft) {\n    return null;\n  }\n\n  if (collection.itemIds.length > 1) {\n    return <CollectionCard collection={collection} />;\n  }\n\n  return (\n    <NFTCard\n      nft={collectionDisplayNft}\n      subtitle={{\n        length: collection.itemIds.length,\n        name: collectionDisplayNft.collectionName,\n      }}\n      showCollectionChat\n    />\n  );\n}\n\nconst getNumberOfRowsInCollection = (\n  items: Array<NftCollection> | null,\n  itemsPerRow: number,\n  isCollapsed: boolean\n) => {\n  let numberOfRowsInCollection = 0;\n\n  if (items) {\n    numberOfRowsInCollection = Math.ceil(items.length! / itemsPerRow);\n  } else {\n    // loading: when items == null -> show 1 item;\n    numberOfRowsInCollection = 1;\n  }\n\n  if (isCollapsed) {\n    numberOfRowsInCollection = -1;\n  }\n  return numberOfRowsInCollection;\n};\n\nconst getItemForIndex = (\n  index: number,\n  blockchainCollections: AllWalletCollections,\n  collapsedCollections: CollapsedCollections,\n  collapseSingleCollection: collapseSingleCollection,\n  itemsPerRow: number,\n  prependItems: Row[]\n): Row | null => {\n  if (index < prependItems.length) {\n    return prependItems[index];\n  }\n  index = index - prependItems.length;\n\n  let result = 0;\n  const blockchainIndex = blockchainCollections.findIndex((collection, i) => {\n    const items = collection.collections;\n    const isCollapsed = collapsedCollections[i];\n\n    const numberOfRowsInCollection = getNumberOfRowsInCollection(\n      items,\n      itemsPerRow,\n      isCollapsed\n    );\n\n    if (numberOfRowsInCollection === 0) {\n      return false;\n    }\n\n    if (result + numberOfRowsInCollection + 2 <= index) {\n      result += numberOfRowsInCollection + 2; // rows + header & footer\n      return false;\n    } else {\n      return true;\n    }\n  });\n\n  if (blockchainIndex < 0) {\n    return null;\n  }\n\n  const isCollapsed = collapsedCollections[blockchainIndex];\n  const collection = blockchainCollections[blockchainIndex];\n  const collectionItems = collection ? collection.collections : null;\n\n  const numberOfRowsInCollection = getNumberOfRowsInCollection(\n    collectionItems,\n    itemsPerRow,\n    isCollapsed\n  );\n\n  const wrappedCollectionGroupIndex = index - result;\n  const collectionGroupIndex = wrappedCollectionGroupIndex - 1; // remove header;\n\n  if (wrappedCollectionGroupIndex === 0) {\n    return {\n      height: isCollapsed ? 52 : 36,\n      key: `header${blockchainIndex}`,\n      component: (\n        <HeaderRow\n          listIndex={index}\n          blockchainIndex={blockchainIndex}\n          blockchainCollections={blockchainCollections}\n          isCollapsed={collapsedCollections[blockchainIndex]}\n          collapseSingleCollection={collapseSingleCollection}\n        />\n      ),\n    };\n  }\n  if (collectionGroupIndex >= numberOfRowsInCollection) {\n    return {\n      height: 24,\n      key: `footer${blockchainIndex}`,\n      component: <FooterRow />,\n    };\n  }\n  const startIndex = collectionGroupIndex * itemsPerRow;\n\n  if (!collectionItems) {\n    return {\n      height: 165.5 + 26,\n      key: `loading${blockchainIndex}${itemsPerRow}`,\n      component: <LoadingRow itemsPerRow={itemsPerRow} />,\n    };\n  }\n\n  return {\n    height: 165.5 + 26,\n    key: `items${blockchainIndex}${startIndex}${itemsPerRow}`,\n    component: (\n      <ItemRow\n        itemStartIndex={startIndex}\n        blockchainIndex={blockchainIndex}\n        blockchainCollections={blockchainCollections}\n        itemsPerRow={itemsPerRow}\n      />\n    ),\n  };\n};\n\nconst getNumberOfItems = (\n  collections: AllWalletCollections,\n  collapsedCollections: CollapsedCollections,\n  itemsPerRow: number,\n  prependItems: Row[]\n) => {\n  const count = prependItems.length;\n  return collections.reduce((count, collection, i) => {\n    const items = collection.collections;\n    const isCollapsed = collapsedCollections[i];\n\n    // loading when items == null -> show 1 item;\n    const numberOfRowsInCollection = getNumberOfRowsInCollection(\n      items,\n      itemsPerRow,\n      isCollapsed\n    );\n\n    if (numberOfRowsInCollection == 0) {\n      return count;\n    }\n    return count + numberOfRowsInCollection + 2;\n  }, count);\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Blockchain,\n  isMadLads,\n  UI_RPC_METHOD_NAVIGATION_TO_ROOT,\n} from \"@coral-xyz/common\";\nimport {\n  LocalImage,\n  PrimaryButton,\n  ProxyImage,\n  SecondaryButton,\n} from \"@coral-xyz/react-common\";\nimport {\n  useAnchorContext,\n  useBackgroundClient,\n  useEthereumCtx,\n  useIsValidAddress,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { BigNumber } from \"ethers\";\n\nimport { ApproveTransactionDrawer } from \"../../common/ApproveTransactionDrawer\";\nimport { CopyablePublicKey } from \"../../common/CopyablePublicKey\";\nimport {\n  CloseButton,\n  useDrawerContext,\n  WithDrawer,\n} from \"../../common/Layout/Drawer\";\nimport {\n  NavStackEphemeral,\n  NavStackScreen,\n  useNavigation as useNavigationEphemeral,\n} from \"../../common/Layout/NavStack\";\nimport type { SendData } from \"../Balances/TokensWidget/AddressSelector\";\nimport { AddressSelector } from \"../Balances/TokensWidget/AddressSelector\";\nimport { SendEthereumConfirmationCard } from \"../Balances/TokensWidget/Ethereum\";\nimport { useStyles } from \"../Balances/TokensWidget/Send\";\nimport { SendSolanaConfirmationCard } from \"../Balances/TokensWidget/Solana\";\n\nexport function SendDrawer({\n  children,\n  nft,\n}: {\n  children: (openDrawer: () => void) => React.ReactElement;\n  nft: any;\n}) {\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const send = () => {\n    setOpenDrawer(true);\n  };\n  return (\n    <>\n      {children(send)}\n      <WithDrawer openDrawer={openDrawer} setOpenDrawer={setOpenDrawer}>\n        <div style={{ height: \"100%\" }}>\n          <NavStackEphemeral\n            initialRoute={{ name: \"select-address\" }}\n            options={() => ({\n              title: nft.name ? `${nft.name} / Send` : \"Send\",\n            })}\n            navButtonLeft={<CloseButton onClick={() => setOpenDrawer(false)} />}\n          >\n            <NavStackScreen\n              name=\"send\"\n              component={(props) => <SendScreen {...props} nft={nft} />}\n            />\n\n            <NavStackScreen\n              name=\"select-address\"\n              component={() => <NftAddressSelector nft={nft} />}\n            />\n          </NavStackEphemeral>\n        </div>\n      </WithDrawer>\n    </>\n  );\n}\n\nfunction NftAddressSelector({ nft }: { nft: any }) {\n  const { push } = useNavigationEphemeral();\n\n  return (\n    <div>\n      <AddressSelector\n        onSelect={(sendData: SendData) => {\n          push(\"send\", {\n            to: sendData,\n          });\n        }}\n        blockchain={nft.blockchain}\n        name={nft.name}\n      />\n    </div>\n  );\n}\n\nfunction SendScreen({ nft, to }: { nft: any; to: SendData }) {\n  const background = useBackgroundClient();\n  const { close } = useDrawerContext();\n  const { provider: solanaProvider } = useAnchorContext();\n  const classes = useStyles();\n  const ethereumCtx = useEthereumCtx();\n  const destinationAddress = to.address;\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [wasSent, setWasSent] = useState(false);\n  const { isValidAddress, isErrorAddress } = useIsValidAddress(\n    nft.blockchain,\n    destinationAddress,\n    solanaProvider.connection,\n    ethereumCtx.provider\n  );\n  const theme = useCustomTheme();\n\n  useEffect(() => {\n    (async () => {\n      // If the modal is being closed and the NFT has been sent elsewhere then\n      // navigate back to the nav root because the send screen is no longer\n      // valid as the wallet no longer possesses the NFT.\n      if (!openConfirm && wasSent) {\n        await background.request({\n          method: UI_RPC_METHOD_NAVIGATION_TO_ROOT,\n          params: [],\n        });\n      }\n    })();\n  }, [openConfirm, wasSent, background]);\n\n  return (\n    <>\n      <div\n        style={{\n          paddingLeft: \"16px\",\n          paddingRight: \"16px\",\n          height: \"100%\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n            height: \"100%\",\n          }}\n        >\n          <div>\n            <div>\n              <div\n                className={classes.horizontalCenter}\n                style={{ marginBottom: 6, paddingTop: 20 }}\n              >\n                <div className={classes.topImageOuter}>\n                  <LocalImage\n                    size={80}\n                    className={classes.topImage}\n                    src={\n                      to?.image ||\n                      `https://avatars.backpack.workers.dev/${to?.address}`\n                    }\n                    style={{ width: 80, height: 80 }}\n                  />\n                </div>\n              </div>\n              <div className={classes.horizontalCenter}>\n                {to.walletName || to.username ? (\n                  <div\n                    style={{\n                      color: theme.custom.colors.fontColor,\n                      fontSize: 16,\n                      fontWeight: 500,\n                    }}\n                  >\n                    {to.walletName ? to.walletName : `@${to.username}`}\n                  </div>\n                ) : null}\n              </div>\n              <div\n                className={classes.horizontalCenter}\n                style={{ marginTop: 4 }}\n              >\n                <CopyablePublicKey publicKey={to?.address} />\n              </div>\n            </div>\n            <div className={classes.horizontalCenter} style={{ marginTop: 35 }}>\n              <Image\n                nft={nft}\n                style={{ maxHeight: \"30vh\", maxWidth: 200, minHeight: \"\" }}\n              />\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              paddingTop: \"18px\",\n              paddingBottom: \"16px\",\n            }}\n          >\n            <SecondaryButton\n              style={{\n                marginRight: \"8px\",\n              }}\n              onClick={close}\n              label=\"Cancel\"\n            />\n            <PrimaryButton\n              disabled={!isValidAddress}\n              onClick={() => setOpenConfirm(true)}\n              label=\"Next\"\n            />\n          </div>\n        </div>\n      </div>\n      <ApproveTransactionDrawer\n        openDrawer={openConfirm}\n        setOpenDrawer={setOpenConfirm}\n      >\n        {nft.blockchain === Blockchain.SOLANA ? (\n          <SendSolanaConfirmationCard\n            token={{\n              address: nft.publicKey,\n              logo: nft.imageUrl,\n              decimals: 0, // Are there any NFTs that don't use decimals 0?\n              mint: nft.mint,\n            }}\n            destinationUser={\n              (to && to.uuid && to.username && to.image\n                ? to\n                : undefined) as React.ComponentProps<\n                typeof SendSolanaConfirmationCard\n              >[\"destinationUser\"]\n            }\n            destinationAddress={destinationAddress}\n            amount={BigNumber.from(1)}\n            onComplete={() => setWasSent(true)}\n          />\n        ) : null}\n        {nft.blockchain === Blockchain.ETHEREUM ? (\n          <SendEthereumConfirmationCard\n            token={{\n              logo: nft.imageUrl,\n              decimals: 0, // Are there any NFTs that don't use decimals 0?\n              address: nft.contractAddress,\n              tokenId: nft.tokenId,\n            }}\n            destinationUser={\n              (to && to.uuid && to.username && to.image\n                ? to\n                : undefined) as React.ComponentProps<\n                typeof SendEthereumConfirmationCard\n              >[\"destinationUser\"]\n            }\n            destinationAddress={destinationAddress}\n            amount={BigNumber.from(1)}\n            onComplete={() => setWasSent(true)}\n          />\n        ) : null}\n      </ApproveTransactionDrawer>\n    </>\n  );\n}\n\nfunction Image({ nft, style }: { nft: any; style?: any }) {\n  const src = isMadLads(nft.creators) ? nft.lockScreenImageUrl : nft.imageUrl;\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        minHeight: \"343px\",\n        display: \"flex\",\n        position: \"relative\",\n        alignItems: \"center\",\n        ...(style || {}),\n      }}\n    >\n      <ProxyImage\n        style={{\n          width: \"100%\",\n          borderRadius: \"8px\",\n        }}\n        loadingStyles={{\n          minHeight: \"343px\",\n        }}\n        src={src}\n        removeOnError\n      />\n    </div>\n  );\n}\n","import { useMemo } from \"react\";\nimport { EmptyState } from \"@coral-xyz/react-common\";\nimport {\n  isAggregateWallets,\n  isOneLive,\n  nftCollectionsWithIds,\n  useActiveWallet,\n  useAllWalletsDisplayed,\n} from \"@coral-xyz/recoil\";\nimport { Image as ImageIcon } from \"@mui/icons-material\";\nimport { useRecoilValue, useRecoilValueLoadable } from \"recoil\";\n\nimport { _BalancesTableHead } from \"../Balances/Balances\";\n\nimport EntryONE from \"./EntryONE\";\nimport { NftTable } from \"./NftTable\";\n\nexport function Nfts() {\n  const oneLive = useRecoilValue(isOneLive);\n  const activeWallet = useActiveWallet();\n  const wallets = useAllWalletsDisplayed();\n  const _isAggregateWallets = useRecoilValue(isAggregateWallets);\n  const { contents, state } = useRecoilValueLoadable(nftCollectionsWithIds);\n  const isLoading = state === \"loading\";\n  const allWalletCollections = (state === \"hasValue\" && contents) || null;\n\n  const NFTList = useMemo(() => {\n    return (\n      <NftTable\n        prependItems={\n          oneLive.isLive\n            ? [\n                {\n                  height: 129,\n                  key: \"oneEntry\",\n                  component: (\n                    <EntryONE allWalletCollections={allWalletCollections} />\n                  ),\n                },\n              ]\n            : []\n        }\n        blockchainCollections={\n          allWalletCollections ??\n          wallets.map((w) => ({ publicKey: w.publicKey, collections: null })) // Still loading.\n        }\n      />\n    );\n  }, [oneLive, allWalletCollections]);\n\n  const nftCount = allWalletCollections\n    ? allWalletCollections\n        .map((c: any) => c.collections)\n        .flat()\n        .reduce((acc, c) => (c === null ? acc : c.itemIds.length + acc), 0)\n    : 0;\n  const isEmpty = nftCount === 0 && !isLoading;\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        zIndex: 0,\n      }}\n    >\n      {isEmpty ? (\n        <>\n          {oneLive.isLive ? (\n            <EntryONE allWalletCollections={allWalletCollections} />\n          ) : null}\n          <EmptyState\n            icon={(props: any) => <ImageIcon {...props} />}\n            title=\"No NFTs\"\n            subtitle=\"Get started with your first NFT\"\n            buttonText=\"Browse Magic Eden\"\n            onClick={() => window.open(\"https://magiceden.io\")}\n            verticallyCentered={!oneLive}\n            header={\n              !_isAggregateWallets ? (\n                <_BalancesTableHead\n                  blockchain={activeWallet.blockchain}\n                  wallet={activeWallet}\n                  showContent\n                  setShowContent={() => {}}\n                />\n              ) : null\n            }\n            style={{\n              height: !oneLive.isLive ? \"100%\" : undefined,\n            }}\n          />\n        </>\n      ) : (\n        <div style={{ display: \"flex\", flex: 1, position: \"relative\" }}>\n          {NFTList}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  BACKEND_API_URL,\n  Blockchain,\n  toTitleCase,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport { PrimaryButton } from \"@coral-xyz/react-common\";\nimport {\n  serverPublicKeys,\n  useAllWallets,\n  useFeatureGates,\n  usePrimaryWallets,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Box } from \"@mui/material\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\n\nimport { Header, SubtextParagraph } from \"../common\";\nimport { WithDrawer } from \"../common/Layout/Drawer\";\n\nimport { TokenBadge } from \"./Balances/TokensWidget/TokenBadge\";\n\nexport const PrimaryPubkeySelector = () => {\n  const gates = useFeatureGates();\n  const wallets = useRecoilValue(serverPublicKeys);\n  const primaryWallets = usePrimaryWallets();\n  const blockchains: Blockchain[] = [Blockchain.SOLANA, Blockchain.ETHEREUM];\n  const needsMigration: Blockchain[] = [];\n  const [selectedAddresses, setSelectedSolAddresses] = useState({\n    [Blockchain.ETHEREUM]: \"\",\n    [Blockchain.SOLANA]: \"\",\n  });\n  const setServerPublicKeys = useSetRecoilState(serverPublicKeys);\n  const [migrationDone, setMigrationDone] = useState(false);\n\n  blockchains.forEach((blockchain) => {\n    const allBlockchainWallets = wallets.filter(\n      (x) => x.blockchain === blockchain\n    );\n    if (allBlockchainWallets.length) {\n      const isPrimaryWalletAvailable = primaryWallets.find(\n        (x) => x.blockchain === blockchain\n      );\n      if (!isPrimaryWalletAvailable) {\n        needsMigration.push(blockchain);\n      }\n    }\n  });\n\n  if (!gates[\"PRIMARY_PUBKEY_ENABLED\"]) {\n    return null;\n  }\n\n  return (\n    <WithDrawer\n      paperStyles={{\n        borderTopLeftRadius: \"12px\",\n        borderTopRightRadius: \"12px\",\n        height: \"80%\",\n      }}\n      openDrawer={needsMigration.length > 0 ? !migrationDone : false}\n      setOpenDrawer={() => {}}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          flexDirection: \"column\",\n          height: \"100%\",\n        }}\n      >\n        <Box sx={{ margin: \"24px\" }}>\n          <Header\n            text={\n              needsMigration.length == 1\n                ? \"Select a primary wallet\"\n                : \"Select primary wallets\"\n            }\n          />\n          <SubtextParagraph>\n            When others send you crypto, they'll see at least one address\n            publicly associated with your username.\n          </SubtextParagraph>\n          {needsMigration.map((b) => (\n            <MigrationInputs\n              selectedAddresses={selectedAddresses[b]}\n              setSelectedSolAddresses={setSelectedSolAddresses}\n              key={b}\n              blockchain={b}\n            />\n          ))}\n        </Box>\n        <Box\n          style={{\n            marginLeft: \"16px\",\n            marginRight: \"16px\",\n            marginBottom: \"16px\",\n          }}\n        >\n          <PrimaryButton\n            disabled={\n              (needsMigration.find((x) => x === Blockchain.SOLANA) &&\n                !selectedAddresses[Blockchain.SOLANA]) ||\n              (needsMigration.find((x) => x === Blockchain.ETHEREUM) &&\n                !selectedAddresses[Blockchain.ETHEREUM])\n            }\n            label={\n              needsMigration.length === 1\n                ? \"Set primary wallet\"\n                : \"Set primary wallets\"\n            }\n            onClick={() => {\n              needsMigration.forEach(async (blockchain) => {\n                fetch(`${BACKEND_API_URL}/users/activePubkey`, {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    publicKey: selectedAddresses[blockchain],\n                  }),\n                  headers: {\n                    \"Content-Type\": \"application/json\",\n                  },\n                });\n                setServerPublicKeys((current) =>\n                  current.map((c) => {\n                    if (c.blockchain !== blockchain) {\n                      return c;\n                    }\n                    if (\n                      c.primary &&\n                      c.publicKey !== selectedAddresses[blockchain]\n                    ) {\n                      return {\n                        ...c,\n                        primary: false,\n                      };\n                    }\n                    if (c.publicKey === selectedAddresses[blockchain]) {\n                      return {\n                        ...c,\n                        primary: true,\n                      };\n                    }\n                    return c;\n                  })\n                );\n              });\n              setMigrationDone(true);\n            }}\n          />\n        </Box>\n      </div>\n    </WithDrawer>\n  );\n};\n\nfunction MigrationInputs({\n  blockchain,\n  selectedAddresses,\n  setSelectedSolAddresses,\n}: {\n  blockchain: Blockchain;\n  selectedAddresses: string;\n  setSelectedSolAddresses: any;\n}) {\n  const wallets = useAllWallets();\n  const theme = useCustomTheme();\n\n  return (\n    <div style={{ color: theme.custom.colors.smallTextColor }}>\n      <div style={{ marginTop: 10, marginBottom: 10 }}>\n        Choose primary {toTitleCase(blockchain)} wallet:\n      </div>\n      {wallets\n        .filter((x) => x.blockchain === blockchain)\n        .map((wallet) => (\n          <TokenBadge\n            style={{\n              marginRight: 5,\n              marginBottom: 5,\n              fontSize: \"14px\",\n              width: \"100px\",\n            }}\n            overwriteBackground={\n              selectedAddresses === wallet.publicKey\n                ? theme.custom.colors.invertedPrimary\n                : theme.custom.colors.bg2\n            }\n            overwriteColor={\n              selectedAddresses === wallet.publicKey\n                ? theme.custom.colors.background\n                : \"\"\n            }\n            onClick={async () => {\n              setSelectedSolAddresses((x: any) => ({\n                ...x,\n                [blockchain]: wallet.publicKey,\n              }));\n            }}\n            label={walletAddressDisplay(wallet.publicKey)}\n          />\n        ))}\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport {\n  BACKPACK_CONFIG_VERSION,\n  BACKPACK_GITHUB_LINK,\n  BACKPACK_LINK,\n  BACKPACK_TERMS_OF_SERVICE,\n  DISCORD_INVITE_LINK,\n  TWITTER_LINK,\n} from \"@coral-xyz/common\";\nimport {\n  DiscordIcon,\n  LaunchDetail,\n  List,\n  ListItem,\n  RedBackpack,\n} from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { GitHub, OpenInBrowser } from \"@mui/icons-material\";\nimport TwitterIcon from \"@mui/icons-material/Twitter\";\nimport { Typography } from \"@mui/material\";\n\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\n\nexport function AboutBackpack() {\n  const nav = useNavigation();\n  const theme = useCustomTheme();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"About\" });\n  }, [nav.setOptions]);\n\n  const settingsMenu = [\n    {\n      label: \"Discord\",\n      onClick: () => window.open(DISCORD_INVITE_LINK, \"_blank\"),\n      icon: (props: any) => <DiscordIcon {...props} />,\n    },\n\n    {\n      label: \"Twitter\",\n      onClick: () => window.open(TWITTER_LINK, \"_blank\"),\n      icon: (props: any) => <TwitterIcon {...props} />,\n    },\n    {\n      label: \"GitHub\",\n      onClick: () => window.open(BACKPACK_GITHUB_LINK, \"_blank\"),\n      icon: (props: any) => <GitHub {...props} />,\n    },\n    {\n      label: \"Website\",\n      onClick: () => window.open(BACKPACK_LINK, \"_blank\"),\n      icon: (props: any) => <OpenInBrowser {...props} />,\n    },\n  ];\n\n  const termsList = [\n    {\n      label: \"Terms of Service\",\n      onClick: () => window.open(BACKPACK_TERMS_OF_SERVICE, \"_blank\"),\n      icon: null,\n      // detailIcon: <LaunchDetail />,\n    },\n  ];\n\n  return (\n    <>\n      <div style={{ marginBottom: \"35px\" }}>\n        <RedBackpack\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            margin: \"32px auto\",\n            marginBottom: 4,\n          }}\n        />\n        <Typography\n          style={{\n            fontWeight: \"600\",\n            fontSize: 42,\n            textAlign: \"center\",\n            color: theme.custom.colors.fontColor,\n          }}\n        >\n          Backpack\n        </Typography>\n\n        <Typography\n          style={{ color: theme.custom.colors.secondary, textAlign: \"center\" }}\n        >\n          {BACKPACK_CONFIG_VERSION}\n        </Typography>\n      </div>\n      <List>\n        {settingsMenu.map((s, idx) => {\n          return (\n            <ListItem\n              key={s.label}\n              isFirst={idx === 0}\n              isLast={idx === settingsMenu.length - 1}\n              onClick={s.onClick}\n              id={s.label}\n              style={{\n                height: \"44px\",\n                padding: \"12px\",\n              }}\n              // detail={s.detailIcon}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flex: 1,\n                }}\n              >\n                {s.icon({\n                  style: {\n                    color: theme.custom.colors.icon,\n                    marginRight: \"8px\",\n                    height: \"24px\",\n                    width: \"24px\",\n                  },\n                  fill: theme.custom.colors.icon,\n                })}\n                <Typography\n                  style={{\n                    fontWeight: 500,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }}\n                >\n                  {s.label}\n                </Typography>\n              </div>\n            </ListItem>\n          );\n        })}\n      </List>\n      <List\n        style={{\n          marginTop: \"12px\",\n          marginBottom: \"16px\",\n          border: `${theme.custom.colors.borderFull}`,\n          borderRadius: \"10px\",\n        }}\n      >\n        {termsList.map((s, idx) => {\n          return (\n            <ListItem\n              key={s.label}\n              isFirst={idx === 0}\n              isLast={idx === termsList.length - 1}\n              onClick={s.onClick}\n              id={s.label}\n              style={{\n                height: \"44px\",\n                padding: \"12px\",\n              }}\n              // detail={s.detailIcon}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flex: 1,\n                }}\n              >\n                <Typography\n                  style={{\n                    marginLeft: \"8px\",\n                    fontWeight: 500,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }}\n                >\n                  {s.label}\n                </Typography>\n              </div>\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n}\n","import { Blockchain } from \"@coral-xyz/common\";\nimport {\n  EthereumIcon,\n  PrimaryButton,\n  SolanaIcon,\n} from \"@coral-xyz/react-common\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, HeaderIcon, SubtextParagraph } from \"../../../../common\";\n\nexport function ConnectHardwareApp({\n  blockchain,\n  onNext,\n}: {\n  blockchain: Blockchain;\n  onNext: () => void;\n}) {\n  const header = {\n    [Blockchain.SOLANA]: { icon: <SolanaIcon />, text: \"Open the Solana app\" },\n    [Blockchain.ETHEREUM]: {\n      icon: <EthereumIcon />,\n      text: \"Open the Ethereum app\",\n    },\n  }[blockchain];\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"0 24px\" }}>\n        <HeaderIcon icon={header.icon} />\n        <Header text={header.text} />\n        <SubtextParagraph>\n          Make sure your wallet remains connected.\n        </SubtextParagraph>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <PrimaryButton label=\"Next\" onClick={onNext} />\n      </Box>\n    </Box>\n  );\n}\n","import { DISCORD_INVITE_LINK } from \"@coral-xyz/common\";\nimport {\n  PrimaryButton,\n  SadFaceIcon,\n  SecondaryButton,\n} from \"@coral-xyz/react-common\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, HeaderIcon, SubtextParagraph } from \"../../../../common\";\n\nexport function ConnectHardwareFailure({ onRetry }: { onRetry: () => void }) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"0 24px\" }}>\n        <HeaderIcon icon={<SadFaceIcon />} />\n        <Header text=\"Unable to connect\" />\n        <SubtextParagraph>\n          Check that your wallet is connected and unlocked, and your browser\n          permissions are approved.\n        </SubtextParagraph>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n        }}\n      >\n        <Box sx={{ marginBottom: \"12px\" }}>\n          <SecondaryButton\n            label=\"Help & Support\"\n            onClick={() => window.open(DISCORD_INVITE_LINK, \"_blank\")}\n          />\n        </Box>\n        <PrimaryButton label=\"Retry\" onClick={onRetry} />\n      </Box>\n    </Box>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport { HardwareWalletIcon, PrimaryButton } from \"@coral-xyz/react-common\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport TransportWebHid from \"@ledgerhq/hw-transport-webhid\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, HeaderIcon, SubtextParagraph } from \"../../../../common\";\n\nimport { ConnectHardwareApp } from \"./ConnectHardwareApp\";\nimport { ConnectHardwareFailure } from \"./ConnectHardwareFailure\";\n\nexport function ConnectHardwareSearching({\n  blockchain,\n  onNext,\n  isConnectFailure = false,\n}: {\n  blockchain: Blockchain;\n  onNext: (transport: Transport) => void;\n  isConnectFailure?: boolean;\n}) {\n  const [transport, setTransport] = useState<Transport | null>(null);\n  const [navigatorStateChange, setNavigatorStateChange] = useState(0);\n  const [connectFailure, setConnectFailure] = useState(isConnectFailure);\n  const [connectSuccess, setConnectSuccess] = useState(false);\n\n  //\n  // When devices get connected or disconnected, we need to refresh.\n  //\n  useEffect(() => {\n    // @ts-ignore\n    const connectListener = navigator.hid.addEventListener(\"connect\", () => {\n      setNavigatorStateChange((prev) => prev + 1);\n    });\n    // @ts-ignore\n    const disconnectListener = navigator.hid.addEventListener(\n      \"disconnect\",\n      async () => {\n        setNavigatorStateChange((prev) => prev + 1);\n      }\n    );\n    return () => {\n      // @ts-ignore\n      navigator.hid.removeEventListener(\"connect\", connectListener);\n      // @ts-ignore\n      navigator.hid.removeEventListener(\"disconnect\", disconnectListener);\n    };\n  }, []);\n\n  //\n  // Check how many connected devices we actually have.\n  //\n  useEffect(() => {\n    (async () => {\n      if (transport === null && !connectFailure) {\n        try {\n          setTransport(await TransportWebHid.create());\n        } catch (error: any) {\n          if (error.message === \"The device is already open.\") {\n            const devices = await TransportWebHid.list();\n            // Close all open devices\n            await Promise.all(devices.map((d) => d.close()));\n            // Reload to retry\n            setNavigatorStateChange(() => navigatorStateChange + 1);\n          } else if (error.message === \"Access denied to use Ledger device\") {\n            // User cancelled the permissions screen, or no device available in screen\n            console.debug(\"access denied to ledger device\");\n            setTimeout(() => setConnectFailure(true), 2000);\n          } else {\n            console.debug(\"ledger error\", error);\n            setTimeout(() => setConnectFailure(true), 2000);\n          }\n        }\n      }\n    })();\n  }, [connectFailure, navigatorStateChange]);\n\n  useEffect(() => {\n    // Auto advance if transport set\n    if (transport) {\n      setTimeout(() => setConnectSuccess(true), 2000);\n    }\n  }, [transport]);\n\n  if (connectFailure) {\n    return <ConnectHardwareFailure onRetry={() => setConnectFailure(false)} />;\n  } else if (connectSuccess) {\n    // Got device, but relevant app is not necessarily open. Remind user to open.\n    return (\n      <ConnectHardwareApp\n        blockchain={blockchain}\n        onNext={() => onNext(transport!)}\n      />\n    );\n  }\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"0 24px\" }}>\n        <HeaderIcon icon={<HardwareWalletIcon />} />\n        <Header text=\"Searching for wallet...\" />\n        <SubtextParagraph>\n          Make sure your wallet is connected, unlocked and browser permissions\n          are approved.\n        </SubtextParagraph>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {/*\n        This is just a placeholder next button so its always disabled. Screen\n        will auto advance when transport is set.\n        */}\n        <PrimaryButton label=\"Next\" disabled />\n      </Box>\n    </Box>\n  );\n}\n","import { HardwareWalletIcon, PrimaryButton } from \"@coral-xyz/react-common\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, HeaderIcon, SubtextParagraph } from \"../../../../common\";\n\nexport function ConnectHardwareWelcome({ onNext }: { onNext: () => void }) {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"0 24px\" }}>\n        <HeaderIcon icon={<HardwareWalletIcon />} />\n        <Header text=\"Connect a hardware wallet\" />\n        <SubtextParagraph>\n          Use your hardware wallet with Backpack.\n        </SubtextParagraph>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <PrimaryButton label=\"Next\" onClick={onNext} />\n      </Box>\n    </Box>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport type { Blockchain, SignedWalletDescriptor } from \"@coral-xyz/common\";\nimport {\n  getAddMessage,\n  UI_RPC_METHOD_BLOCKCHAIN_KEYRINGS_ADD,\n  UI_RPC_METHOD_FIND_WALLET_DESCRIPTOR,\n  UI_RPC_METHOD_KEYRING_IMPORT_WALLET,\n  UI_RPC_METHOD_KEYRING_SET_MNEMONIC,\n} from \"@coral-xyz/common\";\nimport {\n  ImportedIcon,\n  MnemonicIcon,\n  PushDetail,\n} from \"@coral-xyz/react-common\";\nimport { useBackgroundClient, useRpcRequests } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, SubtextParagraph } from \"../../../common\";\nimport { MnemonicInput } from \"../../../common/Account/MnemonicInput\";\nimport {\n  useDrawerContext,\n  WithMiniDrawer,\n} from \"../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../common/Settings/List\";\n\nimport { ConfirmCreateWallet } from \"./\";\n\nexport function CreateOrImportMnemonic({\n  blockchain,\n  keyringExists,\n}: {\n  blockchain: Blockchain;\n  keyringExists: boolean;\n}) {\n  const nav = useNavigation();\n  const menuItems = {\n    \"Generate new phrase\": {\n      onClick: () =>\n        nav.push(\"create-mnemonic\", {\n          blockchain,\n          keyringExists,\n        }),\n      icon: (props: any) => <MnemonicIcon {...props} />,\n      detailIcon: <PushDetail />,\n    },\n    \"Import recovery phrase\": {\n      onClick: () =>\n        nav.push(\"set-and-sync-mnemonic\", {\n          blockchain,\n          keyringExists,\n        }),\n      icon: (props: any) => <ImportedIcon {...props} />,\n      detailIcon: <PushDetail />,\n    },\n  };\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n    >\n      <Box\n        style={{\n          padding: \"0 16px 0 16px\",\n        }}\n      >\n        <Box style={{ margin: 8 }}>\n          <Header\n            text=\"Set your Backpack secret recovery phrase\"\n            style={{\n              fontWeight: 500,\n            }}\n          />\n          <SubtextParagraph>\n            Create or import a secret recovery phrase. This will be used to\n            create new wallets, so make sure you don't lose it. Only you will\n            have access to this secret.\n          </SubtextParagraph>\n        </Box>\n      </Box>\n      <SettingsList menuItems={menuItems} />\n    </Box>\n  );\n}\n\nexport function CreateMnemonic({\n  blockchain,\n  keyringExists,\n}: {\n  blockchain: Blockchain;\n  keyringExists: boolean;\n}) {\n  const nav = useNavigation();\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n  const { close: closeParentDrawer } = useDrawerContext();\n  const { signMessageForWallet } = useRpcRequests();\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [publicKey, setPublicKey] = useState<string | null>(null);\n\n  useEffect(() => {\n    const prevTitle = nav.title;\n    nav.setOptions({ headerTitle: \"\" });\n    return () => {\n      nav.setOptions({ headerTitle: prevTitle });\n    };\n  }, [nav, theme]);\n\n  // TODO replace the left nav button to go to the previous step if step > 0\n\n  const onComplete = async (\n    mnemonic: string,\n    signedWalletDescriptor: SignedWalletDescriptor\n  ) => {\n    let publicKey: string;\n    await background.request({\n      method: UI_RPC_METHOD_KEYRING_SET_MNEMONIC,\n      params: [mnemonic],\n    });\n    if (keyringExists) {\n      // Using the keyring mnemonic and the blockchain keyring exists, just\n      // import the path\n      publicKey = await background.request({\n        method: UI_RPC_METHOD_KEYRING_IMPORT_WALLET,\n        params: [signedWalletDescriptor],\n      });\n    } else {\n      // Blockchain keyring doesn't exist, init\n      publicKey = await background.request({\n        method: UI_RPC_METHOD_BLOCKCHAIN_KEYRINGS_ADD,\n        params: [\n          { mnemonic, signedWalletDescriptors: [signedWalletDescriptor] },\n        ],\n      });\n    }\n    setPublicKey(publicKey);\n    setOpenDrawer(true);\n  };\n\n  return (\n    <>\n      <MnemonicInput\n        readOnly\n        buttonLabel=\"Next\"\n        subtitle=\"Write it down and store it in a safe place.\"\n        onNext={async (mnemonic: string) => {\n          const walletDescriptor = await background.request({\n            method: UI_RPC_METHOD_FIND_WALLET_DESCRIPTOR,\n            params: [blockchain, 0, mnemonic],\n          });\n          const signature = await signMessageForWallet(\n            blockchain,\n            walletDescriptor.publicKey,\n            getAddMessage(walletDescriptor.publicKey),\n            {\n              mnemonic,\n              signedWalletDescriptors: [\n                {\n                  ...walletDescriptor,\n                  signature: \"\",\n                },\n              ],\n            }\n          );\n          await onComplete(mnemonic, {\n            ...walletDescriptor,\n            signature,\n          });\n        }}\n      />\n      <WithMiniDrawer\n        openDrawer={openDrawer}\n        setOpenDrawer={(open: boolean) => {\n          // Must close parent when the confirm create wallet drawer closes because\n          // the next button in the mnemonic input screen is no longer valid as the users\n          // keyring has a mnemonic once it has been clicked once\n          if (!open) closeParentDrawer();\n          setOpenDrawer(open);\n        }}\n        backdropProps={{\n          style: {\n            opacity: 0.8,\n            background: \"#18181b\",\n          },\n        }}\n      >\n        <ConfirmCreateWallet\n          blockchain={blockchain}\n          publicKey={publicKey!}\n          onClose={() => {\n            setOpenDrawer(false);\n            closeParentDrawer();\n          }}\n        />\n      </WithMiniDrawer>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport { openConnectHardware } from \"@coral-xyz/common\";\nimport {\n  BackpackMnemonicIcon,\n  HardwareIcon,\n  LaunchDetail,\n  MnemonicIcon,\n  PushDetail,\n  SecretKeyIcon,\n} from \"@coral-xyz/react-common\";\nimport {\n  useEnabledBlockchains,\n  useKeyringHasMnemonic,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, SubtextParagraph } from \"../../../common\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../common/Settings/List\";\n\nexport function ImportMenu({ blockchain }: { blockchain: Blockchain }) {\n  const navigation = useNavigation();\n  const hasMnemonic = useKeyringHasMnemonic();\n  const user = useUser();\n  const enabledBlockchains = useEnabledBlockchains();\n  const keyringExists = enabledBlockchains.includes(blockchain);\n\n  useEffect(() => {\n    const prevTitle = navigation.title;\n    navigation.setOptions({ headerTitle: \"\" });\n    return () => {\n      navigation.setOptions({ headerTitle: prevTitle });\n    };\n  }, [navigation]);\n\n  const importMenu = {\n    ...(hasMnemonic\n      ? {\n          \"Backpack recovery phrase\": {\n            onClick: () =>\n              navigation.push(\"import-from-mnemonic\", {\n                blockchain,\n                keyringExists,\n                inputMnemonic: false,\n              }),\n            icon: (props: any) => <BackpackMnemonicIcon {...props} />,\n            detail: <PushDetail />,\n          },\n        }\n      : {}),\n    \"Other recovery phrase\": {\n      onClick: () =>\n        navigation.push(\"import-from-mnemonic\", {\n          blockchain,\n          keyringExists,\n          inputMnemonic: true,\n        }),\n      icon: (props: any) => <MnemonicIcon {...props} />,\n      detail: <PushDetail />,\n    },\n    \"Private key\": {\n      onClick: () => navigation.push(\"import-from-secret-key\", { blockchain }),\n      icon: (props: any) => <SecretKeyIcon {...props} />,\n      detail: <PushDetail />,\n    },\n    \"Hardware wallet\": {\n      onClick: () => {\n        openConnectHardware(blockchain, \"import\");\n        window.close();\n      },\n      icon: (props: any) => <HardwareIcon {...props} />,\n      detail: <LaunchDetail />,\n    },\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n    >\n      <Box sx={{ margin: \"24px\" }}>\n        <Header text=\"Import a wallet\" />\n        <SubtextParagraph>\n          Import a wallet to @{user.username} on Backpack using one of the\n          following:\n        </SubtextParagraph>\n      </Box>\n      <SettingsList menuItems={importMenu} />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { mnemonicPathToPrivateKey } from \"@coral-xyz/blockchain-common\";\nimport type {\n  Blockchain,\n  SignedWalletDescriptor,\n  WalletDescriptor,\n} from \"@coral-xyz/common\";\nimport {\n  getAddMessage,\n  UI_RPC_METHOD_BLOCKCHAIN_KEYRINGS_ADD,\n  UI_RPC_METHOD_KEYRING_IMPORT_SECRET_KEY,\n  UI_RPC_METHOD_KEYRING_IMPORT_WALLET,\n  UI_RPC_METHOD_KEYRING_SET_MNEMONIC,\n  UI_RPC_METHOD_KEYRING_STORE_MNEMONIC_SYNC,\n} from \"@coral-xyz/common\";\nimport { CheckIcon, PrimaryButton, TextInput } from \"@coral-xyz/react-common\";\nimport {\n  useBackgroundClient,\n  useDehydratedWallets,\n  useRpcRequests,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Box, Typography } from \"@mui/material\";\n\nimport { useSteps } from \"../../../../hooks/useSteps\";\nimport { Header } from \"../../../common\";\nimport { ImportWallets } from \"../../../common/Account/ImportWallets\";\nimport { MnemonicInput } from \"../../../common/Account/MnemonicInput\";\nimport {\n  useDrawerContext,\n  WithMiniDrawer,\n} from \"../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\n\nimport { ConfirmCreateWallet } from \"./\";\n\n// WARNING: this will force set the mnemonic. Only use this if no mnemonic\n//          exists.\nexport function ImportMnemonicAutomatic() {\n  const background = useBackgroundClient();\n  const dehydratedWallets = useDehydratedWallets();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const { close } = useDrawerContext();\n\n  const onSync = async (mnemonic: string) => {\n    await background.request({\n      method: UI_RPC_METHOD_KEYRING_SET_MNEMONIC,\n      params: [mnemonic],\n    });\n    if (dehydratedWallets.length > 0) {\n      await background.request({\n        method: UI_RPC_METHOD_KEYRING_STORE_MNEMONIC_SYNC,\n        params: [dehydratedWallets],\n      });\n    }\n  };\n\n  return (\n    <>\n      <MnemonicInput\n        key=\"MnemonicInput\"\n        buttonLabel=\"Import\"\n        onNext={async (mnemonic) => {\n          onSync(mnemonic);\n          setOpenDrawer(true);\n        }}\n      />\n      <WithMiniDrawer\n        openDrawer={openDrawer}\n        setOpenDrawer={(isOpen: boolean) => {\n          setOpenDrawer(isOpen);\n          if (!isOpen) {\n            close();\n          }\n        }}\n        backdropProps={{\n          style: {\n            opacity: 0.8,\n            background: \"#18181b\",\n          },\n        }}\n      >\n        <ConfirmWalletSync\n          onClose={() => {\n            setOpenDrawer(false);\n            close();\n          }}\n        />\n      </WithMiniDrawer>\n    </>\n  );\n}\n\nexport const ConfirmWalletSync = ({ onClose }: { onClose: () => void }) => {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        height: \"232px\",\n        backgroundColor: theme.custom.colors.bg2,\n        padding: \"16px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <div>\n        <Typography\n          style={{\n            marginTop: \"16px\",\n            textAlign: \"center\",\n            fontWeight: 500,\n            fontSize: \"18px\",\n            lineHeight: \"24px\",\n            color: theme.custom.colors.fontColor,\n          }}\n        >\n          Recovery Phrase Set\n        </Typography>\n        <div\n          style={{\n            textAlign: \"center\",\n            marginTop: \"24px\",\n          }}\n        >\n          <CheckIcon />\n        </div>\n      </div>\n      <PrimaryButton label=\"Done\" onClick={() => onClose()} />\n    </div>\n  );\n};\n\nexport function ImportMnemonic({\n  blockchain,\n  keyringExists,\n  inputMnemonic,\n  forceSetMnemonic,\n  publicKey,\n}: {\n  blockchain: Blockchain;\n  keyringExists: boolean;\n  inputMnemonic: boolean;\n  forceSetMnemonic: boolean;\n  publicKey?: string;\n}) {\n  const nav = useNavigation();\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n  const { step, nextStep } = useSteps();\n  const { close: closeParentDrawer } = useDrawerContext();\n  const { signMessageForWallet } = useRpcRequests();\n  const dehydratedWallets = useDehydratedWallets();\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [mnemonic, setMnemonic] = useState<string | true>(true);\n  const [selectedPublicKey, setSelectedPublicKey] = useState<string | null>(\n    publicKey ?? null\n  );\n  const [name, setName] = useState<string | null>(null);\n\n  useEffect(() => {\n    const prevTitle = nav.title;\n    nav.setOptions({ headerTitle: \"\" });\n    return () => {\n      nav.setOptions({ headerTitle: prevTitle });\n    };\n  }, [nav, theme]);\n\n  // TODO replace the left nav button to go to the previous step if step > 0\n\n  const onComplete = async (signedWalletDescriptor: SignedWalletDescriptor) => {\n    let publicKey: string;\n\n    if (forceSetMnemonic) {\n      await background.request({\n        method: UI_RPC_METHOD_KEYRING_SET_MNEMONIC,\n        params: [mnemonic],\n      });\n      publicKey = await background.request({\n        method: UI_RPC_METHOD_KEYRING_IMPORT_WALLET,\n        params: [signedWalletDescriptor],\n      });\n      const walletsToSync = dehydratedWallets.filter(\n        (w) => w.publicKey !== publicKey\n      );\n      if (walletsToSync.length > 0) {\n        await background.request({\n          method: UI_RPC_METHOD_KEYRING_STORE_MNEMONIC_SYNC,\n          params: [walletsToSync],\n        });\n      }\n    } else {\n      if (!inputMnemonic) {\n        if (keyringExists) {\n          // Using the keyring mnemonic and the blockchain keyring exists, just\n          // import the path\n          publicKey = await background.request({\n            method: UI_RPC_METHOD_KEYRING_IMPORT_WALLET,\n            params: [signedWalletDescriptor],\n          });\n        } else {\n          // Blockchain keyring doesn't exist, init\n          publicKey = await background.request({\n            method: UI_RPC_METHOD_BLOCKCHAIN_KEYRINGS_ADD,\n            params: [\n              {\n                mnemonic: true,\n                signedWalletDescriptors: [signedWalletDescriptor],\n              },\n            ],\n          });\n        }\n      } else {\n        // Not using the keyring mnemonic, and the keyring only supports storing\n        // a singular mnemonic, so import as a private key\n        const privateKey = mnemonicPathToPrivateKey(\n          blockchain,\n          mnemonic as string,\n          signedWalletDescriptor.derivationPath\n        );\n\n        if (keyringExists) {\n          publicKey = await background.request({\n            method: UI_RPC_METHOD_KEYRING_IMPORT_SECRET_KEY,\n            params: [blockchain, privateKey, name],\n          });\n        } else {\n          // Blockchain keyring doesn't exist, init\n          publicKey = await background.request({\n            method: UI_RPC_METHOD_BLOCKCHAIN_KEYRINGS_ADD,\n            params: [\n              {\n                signature: signedWalletDescriptor.signature,\n                blockchain,\n                publicKey: signedWalletDescriptor.publicKey,\n                privateKey,\n              },\n            ],\n          });\n        }\n      }\n    }\n\n    setSelectedPublicKey(publicKey);\n    setOpenDrawer(true);\n  };\n\n  const steps = [\n    // Show the seed phrase if we are creating based on a mnemonic\n    ...(inputMnemonic\n      ? [\n        <MnemonicInput\n          key=\"MnemonicInput\"\n          buttonLabel=\"Next\"\n          onNext={async (mnemonic) => {\n              setMnemonic(mnemonic);\n              nextStep();\n            }}\n          />,\n          // Must prompt for a name if using an input mnemonic, because we can't\n          // easily generate one\n        <InputName\n          key=\"InputName\"\n          onNext={(name) => {\n              setName(name);\n              nextStep();\n            }}\n          />,\n        ]\n      : []),\n    <ImportWallets\n      key=\"ImportWallets\"\n      blockchain={blockchain}\n      mnemonic={mnemonic}\n      recovery={publicKey}\n      allowMultiple={false}\n      onNext={async (walletDescriptors: Array<WalletDescriptor>) => {\n        // Should only be one wallet descriptor\n        const walletDescriptor = walletDescriptors[0];\n        const message = getAddMessage(walletDescriptor.publicKey);\n        const signature = await signMessageForWallet(\n          walletDescriptor.blockchain,\n          walletDescriptor.publicKey,\n          message,\n          {\n            mnemonic,\n            signedWalletDescriptors: [\n              {\n                ...walletDescriptor,\n                signature: \"\",\n              },\n            ],\n          }\n        );\n        await onComplete({\n          ...walletDescriptor,\n          signature,\n        });\n      }}\n    />,\n  ];\n\n  return (\n    <>\n      {steps[step]}\n      <WithMiniDrawer\n        openDrawer={openDrawer}\n        setOpenDrawer={(open: boolean) => {\n          setOpenDrawer(open);\n          if (!open) {\n            closeParentDrawer();\n          }\n        }}\n        backdropProps={{\n          style: {\n            opacity: 0.8,\n            background: \"#18181b\",\n          },\n        }}\n      >\n        <ConfirmCreateWallet\n          blockchain={blockchain}\n          publicKey={selectedPublicKey!}\n          onClose={() => {\n            setOpenDrawer(false);\n            closeParentDrawer();\n          }}\n        />\n      </WithMiniDrawer>\n    </>\n  );\n}\n\nexport function InputName({ onNext }: { onNext: (name: string) => void }) {\n  const [name, setName] = useState(\"\");\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n        padding: \"0 16px 0 16px\",\n      }}\n    >\n      <Box sx={{ margin: \"24px\" }}>\n        <Header text=\"Enter a name for the wallet\" />\n      </Box>\n\n      <Box sx={{ margin: \"0 16px\" }}>\n        <TextInput\n          autoFocus\n          placeholder=\"Name\"\n          value={name}\n          setValue={(e: any) => setName(e.target.value)}\n        />\n      </Box>\n      <Box>\n        <PrimaryButton\n          label=\"Next\"\n          onClick={() => onNext(name)}\n          style={{ marginBottom: 16 }}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport {\n  getAddMessage,\n  UI_RPC_METHOD_BLOCKCHAIN_KEYRINGS_ADD,\n  UI_RPC_METHOD_KEYRING_IMPORT_SECRET_KEY,\n} from \"@coral-xyz/common\";\nimport {\n  useBackgroundClient,\n  useEnabledBlockchains,\n  useRpcRequests,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nimport { PrivateKeyInput } from \"../../../common/Account/PrivateKeyInput\";\nimport {\n  useDrawerContext,\n  WithMiniDrawer,\n} from \"../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\n\nimport { ConfirmCreateWallet } from \".\";\n\nexport function ImportSecretKey({\n  blockchain,\n  publicKey,\n}: {\n  blockchain: Blockchain;\n  publicKey?: string;\n}) {\n  const background = useBackgroundClient();\n  const nav = useNavigation();\n  const theme = useCustomTheme();\n  const enabledBlockchains = useEnabledBlockchains();\n  const keyringExists = enabledBlockchains.includes(blockchain);\n  const { signMessageForWallet } = useRpcRequests();\n  const { close: closeParentDrawer } = useDrawerContext();\n\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [newPublicKey, setNewPublicKey] = useState(\"\");\n\n  useEffect(() => {\n    const prevTitle = nav.title;\n    nav.setOptions({ headerTitle: \"\" });\n    return () => {\n      nav.setOptions({ headerTitle: prevTitle });\n    };\n  }, [nav, theme]);\n\n  const onNext = async ({\n    blockchain,\n    privateKey,\n    publicKey,\n    name,\n  }: {\n    blockchain: Blockchain;\n    privateKey: string;\n    publicKey: string;\n    name: string;\n  }) => {\n    if (keyringExists) {\n      publicKey = await background.request({\n        method: UI_RPC_METHOD_KEYRING_IMPORT_SECRET_KEY,\n        params: [blockchain, privateKey, name],\n      });\n    } else {\n      // Blockchain keyring doesn't exist, init\n      const signature = await signMessageForWallet(\n        blockchain,\n        publicKey,\n        getAddMessage(publicKey),\n        {\n          blockchain,\n          publicKey,\n          privateKey,\n          signature: \"\",\n        }\n      );\n      publicKey = await background.request({\n        method: UI_RPC_METHOD_BLOCKCHAIN_KEYRINGS_ADD,\n        params: [{ blockchain, publicKey, privateKey, signature }],\n      });\n    }\n    setNewPublicKey(publicKey);\n    setOpenDrawer(true);\n  };\n\n  let serverPublicKeys = publicKey ? [{ blockchain, publicKey }] : undefined;\n\n  return (\n    <>\n      <PrivateKeyInput\n        blockchain={blockchain}\n        onNext={onNext}\n        serverPublicKeys={serverPublicKeys}\n      />\n      <WithMiniDrawer\n        openDrawer={openDrawer}\n        setOpenDrawer={(open: boolean) => {\n          setOpenDrawer(open);\n          if (!open) {\n            closeParentDrawer();\n          }\n        }}\n        backdropProps={{\n          style: {\n            opacity: 0.8,\n            background: \"#18181b\",\n          },\n        }}\n      >\n        <ConfirmCreateWallet\n          blockchain={blockchain}\n          publicKey={newPublicKey}\n          onClose={() => {\n            setOpenDrawer(false);\n            closeParentDrawer();\n          }}\n        />\n      </WithMiniDrawer>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport {\n  getAddMessage,\n  openAddUserAccount,\n  openConnectHardware,\n  UI_RPC_METHOD_BLOCKCHAIN_KEYRINGS_ADD,\n  UI_RPC_METHOD_FIND_WALLET_DESCRIPTOR,\n  UI_RPC_METHOD_KEYRING_DERIVE_WALLET,\n  UI_RPC_METHOD_KEYRING_IMPORT_WALLET,\n} from \"@coral-xyz/common\";\nimport {\n  BackpackMnemonicIcon,\n  CheckIcon,\n  HardwareIcon,\n  ImportedIcon,\n  Loading,\n  MnemonicIcon,\n  PlusCircleIcon,\n  PrimaryButton,\n  ProxyImage,\n  PushDetail,\n  SecondaryButton,\n} from \"@coral-xyz/react-common\";\nimport {\n  useAvatarUrl,\n  useBackgroundClient,\n  useEnabledBlockchains,\n  useKeyringHasMnemonic,\n  useRpcRequests,\n  useUser,\n  useWalletName,\n  useWalletPublicKeys,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Box, Typography } from \"@mui/material\";\n\nimport { Header, SubtextParagraph } from \"../../../common\";\nimport {\n  useDrawerContext,\n  WithMiniDrawer,\n} from \"../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../common/Settings/List\";\nimport { WalletListItem } from \"../YourAccount/EditWallets\";\n\nexport function AddConnectPreview() {\n  const nav = useNavigation();\n  const user = useUser();\n  const avatarUrl = useAvatarUrl(72, user.username);\n  const theme = useCustomTheme();\n  const { close } = useDrawerContext();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"\" });\n  }, [nav]);\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        display: \"flex\",\n      }}\n    >\n      <div>\n        <ProxyImage\n          src={avatarUrl}\n          loadingStyles={{\n            margin: \"8px auto 16px auto\",\n            height: \"72px\",\n            width: \"72px\",\n            display: \"block\",\n          }}\n          style={{\n            marginBottom: \"16px\",\n            marginTop: \"8px\",\n            width: \"72px\",\n            borderRadius: \"36px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            display: \"block\",\n          }}\n        />\n        <Typography\n          style={{\n            color: theme.custom.colors.fontColor,\n            fontSize: \"24px\",\n            fontWeight: 500,\n            textAlign: \"center\",\n            marginLeft: \"32px\",\n            marginRight: \"32px\",\n          }}\n        >\n          Your new wallet will be associated with @{user.username}\n        </Typography>\n        <Typography\n          style={{\n            marginLeft: \"32px\",\n            marginRight: \"32px\",\n            marginTop: \"8px\",\n            fontSize: \"16px\",\n            fontWeight: 500,\n            color: theme.custom.colors.secondary,\n            textAlign: \"center\",\n          }}\n        >\n          This connection will be public, so if you'd prefer to create a\n          separate identity, create a new account.\n        </Typography>\n      </div>\n      <div\n        style={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n        }}\n      >\n        <PrimaryButton\n          label={`Continue as @${user.username}`}\n          onClick={() => nav.push(\"edit-wallets-blockchain-selector\")}\n        />\n        <SecondaryButton\n          label=\"Create a new account\"\n          style={{\n            marginTop: \"16px\",\n            marginBottom: \"16px\",\n            backgroundColor: \"transparent\",\n          }}\n          onClick={() => {\n            close();\n            openAddUserAccount();\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport function AddConnectWalletMenu({\n  blockchain,\n  publicKey,\n}: {\n  blockchain: Blockchain;\n  publicKey?: string;\n}) {\n  const nav = useNavigation();\n\n  useEffect(() => {\n    const prevTitle = nav.title;\n    nav.setOptions({ headerTitle: \"\" });\n    return () => {\n      nav.setOptions({ headerTitle: prevTitle });\n    };\n  }, [nav]);\n\n  // If a public key prop exists then attempting to recover an existing wallet\n  if (publicKey) {\n    return <RecoverWalletMenu blockchain={blockchain} publicKey={publicKey} />;\n  } else {\n    return <AddWalletMenu blockchain={blockchain} />;\n  }\n}\n\nexport function AddWalletMenu({ blockchain }: { blockchain: Blockchain }) {\n  const navigation = useNavigation();\n  const user = useUser();\n\n  const nav = useNavigation();\n  const drawer = useDrawerContext();\n  const background = useBackgroundClient();\n  const hasMnemonic = useKeyringHasMnemonic();\n  const { close: closeParentDrawer } = useDrawerContext();\n  const { signMessageForWallet } = useRpcRequests();\n  const publicKeys = useWalletPublicKeys();\n  const keyringExists = publicKeys[blockchain];\n  // If the keyring or if we don't have any public keys of the type we are\n  // adding then additional logic is required to select the account index of\n  // the first derivation path added\n  const hasHdPublicKeys =\n    publicKeys?.[blockchain]?.[\"hdPublicKeys\"]?.length > 0;\n\n  const [newPublicKey, setNewPublicKey] = useState(\"\");\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const createNewWithPhrase = async () => {\n    // Mnemonic based keyring. This is the simple case because we don't\n    // need to prompt for the user to open their Ledger app to get the\n    // required public key. We also don't need a signature to prove\n    // ownership of the public key because that can't be done\n    // transparently by the backend.\n    if (loading) {\n      return;\n    }\n\n    setOpenDrawer(true);\n    setLoading(true);\n    let newPublicKey;\n    if (!keyringExists || !hasHdPublicKeys) {\n      // No keyring or no existing mnemonic public keys so can't derive next\n      const walletDescriptor = await background.request({\n        method: UI_RPC_METHOD_FIND_WALLET_DESCRIPTOR,\n        params: [blockchain, 0],\n      });\n      const signature = await signMessageForWallet(\n        blockchain,\n        walletDescriptor.publicKey,\n        getAddMessage(walletDescriptor.publicKey),\n        {\n          mnemonic: true,\n          signedWalletDescriptors: [\n            {\n              ...walletDescriptor,\n              signature: \"\",\n            },\n          ],\n        }\n      );\n      const signedWalletDescriptor = { ...walletDescriptor, signature };\n      if (!keyringExists) {\n        // Keyring doesn't exist, create it\n        await background.request({\n          method: UI_RPC_METHOD_BLOCKCHAIN_KEYRINGS_ADD,\n          params: [\n            {\n              mnemonic: true, // Use the existing mnemonic\n              signedWalletDescriptors: [signedWalletDescriptor],\n            },\n          ],\n        });\n      } else {\n        // Keyring exists but the hd keyring is not initialised, import\n        await background.request({\n          method: UI_RPC_METHOD_KEYRING_IMPORT_WALLET,\n          params: [signedWalletDescriptor],\n        });\n      }\n      newPublicKey = walletDescriptor.publicKey;\n    } else {\n      newPublicKey = await background.request({\n        method: UI_RPC_METHOD_KEYRING_DERIVE_WALLET,\n        params: [blockchain],\n      });\n    }\n    setNewPublicKey(newPublicKey);\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n        }}\n      >\n        <Box sx={{ margin: \"24px\" }}>\n          <Header text=\"Create or import a wallet\" />\n          <SubtextParagraph>\n            Add a new wallet for @{user.username} on Backpack.\n          </SubtextParagraph>\n        </Box>\n        <SettingsList\n          menuItems={{\n            [hasMnemonic ? \"Create a new wallet\" : \"Setup recovery phrase\"]: {\n              onClick: () =>\n                hasMnemonic\n                  ? createNewWithPhrase()\n                  : nav.push(\"create-or-import-mnemonic\", {\n                      blockchain,\n                      keyringExists,\n                    }),\n              icon: (props: any) => <PlusCircleIcon {...props} />,\n            },\n            \"Advanced wallet import\": {\n              onClick: () => navigation.push(\"import-wallet\", { blockchain }),\n              icon: (props: any) => <ImportedIcon {...props} />,\n            },\n          }}\n        />\n      </div>\n      <WithMiniDrawer\n        openDrawer={openDrawer}\n        setOpenDrawer={(open: boolean) => {\n          setOpenDrawer(open);\n          if (!open) {\n            drawer.close();\n          }\n        }}\n        backdropProps={{\n          style: {\n            opacity: 0.8,\n            background: \"#18181b\",\n          },\n        }}\n      >\n        <ConfirmCreateWallet\n          blockchain={blockchain}\n          publicKey={newPublicKey}\n          onClose={() => {\n            setOpenDrawer(false);\n            closeParentDrawer();\n          }}\n          isLoading={loading}\n        />\n      </WithMiniDrawer>\n    </>\n  );\n}\n\nexport function RecoverWalletMenu({\n  blockchain,\n  publicKey,\n}: {\n  blockchain: Blockchain;\n  publicKey: string;\n}) {\n  const nav = useNavigation();\n  const enabledBlockchains = useEnabledBlockchains();\n  const keyringExists = enabledBlockchains.includes(blockchain);\n\n  const recoverMenu = {\n    \"Other recovery phrase\": {\n      onClick: () =>\n        nav.push(\"import-from-mnemonic\", {\n          blockchain,\n          inputMnemonic: true,\n          keyringExists,\n          publicKey,\n        }),\n      icon: (props: any) => <MnemonicIcon {...props} />,\n      detailIcon: <PushDetail />,\n    },\n    \"Private key\": {\n      onClick: () =>\n        nav.push(\"import-from-secret-key\", {\n          blockchain,\n          publicKey,\n        }),\n      icon: (props: any) => <PlusCircleIcon {...props} />,\n      detailIcon: <PushDetail />,\n    },\n    \"Hardware wallet\": {\n      onClick: () => {\n        openConnectHardware(blockchain, \"search\", publicKey);\n        window.close();\n      },\n      icon: (props: any) => <HardwareIcon {...props} />,\n      detailIcon: <PushDetail />,\n    },\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n    >\n      <Box sx={{ margin: \"24px\" }}>\n        <Header text=\"Recover a wallet\" />\n        <SubtextParagraph>\n          Recover a wallet using one of the following:\n        </SubtextParagraph>\n      </Box>\n      <SettingsList menuItems={recoverMenu} />\n    </div>\n  );\n}\n\nexport const ConfirmCreateWallet: React.FC<{\n  blockchain: Blockchain;\n  publicKey: string;\n  onClose: () => void;\n  isLoading?: boolean;\n}> = ({ blockchain, publicKey, onClose, isLoading = false }) => {\n  const theme = useCustomTheme();\n  const walletName = useWalletName(publicKey);\n\n  return (\n    <div\n      style={{\n        height: \"232px\",\n        backgroundColor: theme.custom.colors.bg2,\n        padding: \"16px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      {isLoading ? (\n        <Loading />\n      ) : (\n        <>\n          <div>\n            <Typography\n              style={{\n                marginTop: \"16px\",\n                textAlign: \"center\",\n                fontWeight: 500,\n                fontSize: \"18px\",\n                lineHeight: \"24px\",\n                color: theme.custom.colors.fontColor,\n              }}\n            >\n              Wallet Created\n            </Typography>\n            <div\n              style={{\n                textAlign: \"center\",\n                marginTop: \"24px\",\n              }}\n            >\n              <CheckIcon />\n            </div>\n          </div>\n          <div>\n            <WalletListItem\n              blockchain={blockchain}\n              name={walletName}\n              publicKey={publicKey}\n              showDetailMenu={false}\n              isFirst\n              isLast\n              onClick={() => {\n                onClose();\n              }}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import { useState } from \"react\";\nimport { ProxyImage } from \"@coral-xyz/react-common\";\nimport { useAvatarUrl, useUser } from \"@coral-xyz/recoil\";\nimport type { CustomTheme } from \"@coral-xyz/themes\";\nimport { styled, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Edit } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\n\nimport { CloseButton, WithDrawer } from \"../../../common/Layout/Drawer\";\nimport {\n  NavStackEphemeral,\n  NavStackScreen,\n} from \"../../../common/Layout/NavStack\";\n\nimport { UpdateProfilePicture } from \"./UpdateProfilePicture\";\n\nconst title = \"Change Profile Picture\";\n\nexport function AvatarHeader() {\n  const user = useUser();\n  const theme = useCustomTheme();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const avatarUrl = useAvatarUrl(64);\n\n  const onClick = () => {\n    setOpenDrawer(true);\n  };\n\n  return (\n    <div style={{ marginBottom: \"24px\" }}>\n      <AvatarWrapper onClick={onClick}>\n        <ProxyImage\n          key={avatarUrl}\n          src={avatarUrl}\n          style={{\n            width: \"74px\",\n            height: \"74px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            display: \"block\",\n            zIndex: 0,\n            borderRadius: \"50%\",\n          }}\n        />\n        <EditOverlay className=\"editOverlay\">\n          <Edit />\n        </EditOverlay>\n      </AvatarWrapper>\n      <Typography\n        style={{\n          color: theme.custom.colors.fontColor,\n          textAlign: \"center\",\n          marginTop: \"4px\",\n        }}\n      >\n        @{user.username}\n      </Typography>\n      <WithDrawer openDrawer={openDrawer} setOpenDrawer={setOpenDrawer}>\n        <div style={{ height: \"100%\" }}>\n          <NavStackEphemeral\n            options={() => ({\n              title,\n            })}\n            initialRoute={{\n              name: \"UpdateProfilePicture\",\n              title,\n            }}\n            navButtonLeft={<CloseButton onClick={() => setOpenDrawer(false)} />}\n          >\n            <NavStackScreen\n              key=\"update\"\n              name=\"UpdateProfilePicture\"\n              component={() => (\n                <UpdateProfilePicture setOpenDrawer={setOpenDrawer} />\n              )}\n            />\n          </NavStackEphemeral>\n        </div>\n      </WithDrawer>\n    </div>\n  );\n}\n\nconst AvatarWrapper = styled(\"div\")(({ theme }: { theme: CustomTheme }) => ({\n  position: \"relative\",\n  background: theme.custom.colors.avatarIconBackground,\n  borderRadius: \"40px\",\n  padding: \"3px\",\n  width: \"80px\",\n  height: \"80px\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  overflow: \"hidden\",\n  display: \"block\",\n  \"&:hover .editOverlay\": {\n    visibility: \"visible\",\n  },\n}));\n\nconst EditOverlay = styled(\"div\")(() => ({\n  position: \"absolute\",\n  top: \"0px\",\n  left: \"0px\",\n  height: \"100%\",\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  zIndex: \"1\",\n  visibility: \"hidden\",\n  cursor: \"pointer\",\n  backgroundColor: \"rgba(255,255,255, 0.5)\",\n}));\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport type { Nft, NftCollection } from \"@coral-xyz/common\";\nimport {\n  AVATAR_BASE_URL,\n  BACKEND_API_URL,\n  Blockchain,\n} from \"@coral-xyz/common\";\nimport {\n  EmptyState,\n  ImageIcon,\n  Loading,\n  PrimaryButton,\n  ProxyImage,\n  SecondaryButton,\n} from \"@coral-xyz/react-common\";\nimport {\n  isAggregateWallets,\n  newAvatarAtom,\n  nftById,\n  nftCollectionsWithIds,\n  useActiveWallet,\n  useActiveWallets,\n  useAvatarUrl,\n  useEthereumConnectionUrl,\n  useSolanaConnectionUrl,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport type { CustomTheme } from \"@coral-xyz/themes\";\nimport { styled, useCustomTheme } from \"@coral-xyz/themes\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { CircularProgress, Grid, IconButton } from \"@mui/material\";\nimport Collapse from \"@mui/material/Collapse\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  useRecoilValue,\n  useRecoilValueLoadable,\n  useSetRecoilState,\n} from \"recoil\";\n\nimport { Scrollbar } from \"../../../common/Layout/Scrollbar\";\nimport { _BalancesTableHead } from \"../../Balances/Balances\";\n\ntype tempAvatar = {\n  nft?: Nft;\n  url: string;\n  id: string;\n};\n\nexport function UpdateProfilePicture({\n  setOpenDrawer,\n}: {\n  setOpenDrawer: (open: boolean) => void;\n}) {\n  const [tempAvatar, setTempAvatar] = useState<tempAvatar | null>(null);\n  const [loading, setLoading] = useState(false);\n  const _isAggregateWallets = useRecoilValue(isAggregateWallets);\n  const avatarUrl = useAvatarUrl();\n  const { username } = useUser();\n  const activeWallet = useActiveWallet();\n  const setNewAvatar = useSetRecoilState(newAvatarAtom(username));\n  const theme = useCustomTheme();\n  const { contents, state } = useRecoilValueLoadable(nftCollectionsWithIds);\n  const [isDefaultAvatar, setIsDefaultAvatar] = useState(true);\n\n  useEffect(() => {\n    if (!avatarUrl || avatarUrl === \"\" || !username || username === \"\") return;\n\n    Promise.all([\n      fetch(avatarUrl).then((res) => res.text()),\n      fetch(`https://avatars.xnfts.dev/v1/${username}?size=500`).then((res) =>\n        res.text()\n      ),\n    ])\n      .then((avatars) => {\n        if (avatars[0] !== avatars[1]) {\n          setIsDefaultAvatar(false);\n        }\n      })\n      .catch(console.error);\n  }, [avatarUrl, username]);\n\n  const allWalletCollections: Array<{\n    publicKey: string;\n    collections: Array<NftCollection>;\n  }> = (state === \"hasValue\" && contents) || [];\n\n  const numberOfNFTs = allWalletCollections.reduce(\n    (acc, c) => acc + (c.collections ?? []).length,\n    0\n  );\n\n  return (\n    <Container>\n      <div\n        style={{ display: \"flex\", justifyContent: \"center\", padding: \"5px\" }}\n      >\n        <div style={{ position: \"relative\", width: \"max-content\" }}>\n          <AvatarWrapper>\n            <Avatar src={tempAvatar?.url || avatarUrl} />\n          </AvatarWrapper>\n          {!isDefaultAvatar ? (\n            <IconButton\n              disableRipple\n              sx={{\n                position: \"absolute\",\n                top: \"-8px\",\n                right: \"-8px\",\n                color: theme.custom.colors.icon,\n              }}\n              onClick={() =>\n                setTempAvatar({\n                  id: \"\",\n                  url: `https://avatars.xnfts.dev/v1/${username}`,\n                })\n              }\n            >\n              <DeleteIcon />\n            </IconButton>\n          ) : null}\n        </div>\n      </div>\n      <Typography\n        style={{\n          textAlign: \"center\",\n          color: theme.custom.colors.fontColor,\n        }}\n      >{`@${username}`}</Typography>\n      <FakeDrawer>\n        <Scrollbar\n          style={{\n            height: \"100%\",\n            background: theme.custom.colors.nav,\n          }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n              height: \"100%\",\n            }}\n          >\n            {state === \"loading\" ? (\n              <Loading size={50} />\n            ) : numberOfNFTs === 0 ? (\n              <>\n                {!_isAggregateWallets ? (\n                  <div\n                    style={{ position: \"absolute\", top: 0, left: 0, right: 0 }}\n                  >\n                    <_BalancesTableHead\n                      blockchain={activeWallet.blockchain}\n                      wallet={activeWallet}\n                      showContent\n                      setShowContent={() => {}}\n                    />\n                  </div>\n                ) : null}\n                <EmptyState\n                  icon={(props: any) => <ImageIcon {...props} />}\n                  title=\"No NFTs to use\"\n                  subtitle=\"Get started with your first NFT\"\n                  onClick={() => window.open(\"https://magiceden.io/\")}\n                  contentStyle={{\n                    marginBottom: 0,\n                    color: \"inherit\",\n                    border: \"none\",\n                  }}\n                  innerStyle={{\n                    border: \"none\",\n                  }}\n                  buttonText=\"Browse Magic Eden\"\n                />\n              </>\n            ) : (\n              <div\n                style={{\n                  paddingBottom: tempAvatar ? \"80px\" : \"0px\",\n                  transition: \"padding ease-out 200ms\",\n                }}\n              >\n                {allWalletCollections.map(\n                  (c: {\n                    publicKey: string;\n                    collections: Array<NftCollection>;\n                  }) => (\n                    <BlockchainNFTs\n                      key={c.publicKey}\n                      publicKey={c.publicKey}\n                      collections={c.collections}\n                      isLoading={false}\n                      tempAvatar={tempAvatar}\n                      setTempAvatar={setTempAvatar}\n                    />\n                  )\n                )}\n              </div>\n            )}\n          </div>\n        </Scrollbar>\n      </FakeDrawer>\n      <ButtonsOverlay\n        style={{\n          maxHeight: tempAvatar ? \"100px\" : \"0px\",\n        }}\n      >\n        <SecondaryButton\n          label=\"Cancel\"\n          onClick={() => {\n            setTempAvatar(null);\n          }}\n          style={{\n            margin: \"16px\",\n          }}\n        />\n        <PrimaryButton\n          label={\n            loading ? (\n              <CircularProgress\n                size={24}\n                sx={{ color: \"white\", display: \"flex\", alignSelf: \"center\" }}\n              />\n            ) : (\n              \"Update\"\n            )\n          }\n          onClick={async () => {\n            if (tempAvatar) {\n              if (!tempAvatar.nft) {\n                throw new Error(\"invariant violation\");\n              }\n              setLoading(true);\n              await fetch(BACKEND_API_URL + \"/users/avatar\", {\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                method: \"POST\",\n                body: JSON.stringify({\n                  avatar: tempAvatar.id === \"\" ? null : tempAvatar.id,\n                }),\n              });\n              await fetch(AVATAR_BASE_URL + \"/\" + username + \"?bust_cache=1\"); // bust edge cache\n\n              //  Need SWR mechanic for Local pfps before enabling again so we can update PFPs from xnfts.\n              // await updateLocalNftPfp(uuid, username, tempAvatar.nft!);\n              setLoading(false);\n              setNewAvatar(tempAvatar);\n              setTempAvatar(null);\n              setOpenDrawer(false);\n            }\n          }}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            margin: \"16px\",\n            marginLeft: \"0px\",\n          }}\n        />\n      </ButtonsOverlay>\n    </Container>\n  );\n}\n\nconst BlockchainNFTs = React.memo(function BlockchainNFTs({\n  publicKey,\n  collections,\n  isLoading,\n  tempAvatar,\n  setTempAvatar,\n}: {\n  publicKey: string;\n  collections: Array<NftCollection>;\n  isLoading: boolean;\n  tempAvatar: tempAvatar | null;\n  setTempAvatar: (tempAvatar: tempAvatar) => void;\n}) {\n  const [showContent, setShowContent] = useState(true);\n  const wallets = useActiveWallets();\n  const wallet = wallets.find((wallet) => wallet.publicKey === publicKey)!;\n  const blockchain = wallet.blockchain;\n  const solanaUrl = useSolanaConnectionUrl() ?? \"\"; // eslint dont move this line\n  const ethereumUrl = useEthereumConnectionUrl() ?? \"\"; // eslint dont move this line\n  const connectionUrl =\n    blockchain === Blockchain.SOLANA ? solanaUrl : ethereumUrl;\n\n  const nftsIds = collections.reduce<string[]>((flat, collection) => {\n    flat.push(...collection.itemIds);\n    return flat;\n  }, []);\n\n  if (!isLoading && collections.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      <_BalancesTableHead\n        blockchain={blockchain}\n        wallet={wallet!}\n        showContent={showContent}\n        setShowContent={setShowContent}\n      />\n      <Collapse in={showContent}>\n        <Grid\n          container\n          style={{ padding: \"12px 16px 16px 16px\" }}\n          spacing={{ xs: 2, ms: 2, md: 2, lg: 2 }}\n        >\n          {nftsIds.map((nftId) => (\n            <RenderNFT\n              key={nftId}\n              publicKey={publicKey}\n              connectionUrl={connectionUrl}\n              nftId={nftId}\n              tempAvatar={tempAvatar}\n              setTempAvatar={setTempAvatar}\n            />\n          ))}\n        </Grid>\n      </Collapse>\n    </>\n  );\n});\n\nfunction RenderNFT({\n  publicKey,\n  connectionUrl,\n  nftId,\n  tempAvatar,\n  setTempAvatar,\n}: {\n  publicKey: string;\n  connectionUrl: string;\n  nftId: string;\n  setTempAvatar: (tempAvatar: tempAvatar) => void;\n  tempAvatar: tempAvatar | null;\n}) {\n  const { contents, state } = useRecoilValueLoadable(\n    nftById({ publicKey, connectionUrl, nftId })\n  );\n  const nft = (state === \"hasValue\" && contents) || null;\n\n  return useMemo(\n    () =>\n      !nft ? null : (\n        <StyledProxyImage\n          key={nftId}\n          onClick={() => {\n            const avatarId =\n              nft.blockchain === \"solana\"\n                ? // @ts-ignore\n                  nft.mint\n                : nft.id;\n\n            setTempAvatar({\n              nft,\n              url: nft.imageUrl,\n              id: `${nft.blockchain}/${avatarId}`,\n            });\n          }}\n          style={{\n            width: \"72px\",\n            height: \"72px\",\n            borderRadius: \"40px\",\n            margin: \"16px 0px 0px 16px\",\n            border: tempAvatar?.url === nft.imageUrl ? \"3px solid black\" : \"\",\n          }}\n          src={nft.imageUrl}\n          removeOnError\n        />\n      ),\n    [nft, nftId, tempAvatar]\n  );\n}\n\nconst Container = styled(\"div\")(() => ({\n  position: \"relative\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100%\",\n  overflow: \"hidden\",\n}));\n\nconst StyledProxyImage = styled(ProxyImage)(\n  ({ theme }: { theme: CustomTheme }) => ({\n    \"&:hover\": {\n      border: `3px solid ${theme.custom.colors.avatarIconBackground}`,\n      cursor: \"pointer\",\n    },\n  })\n);\n\nconst FakeDrawer = styled(\"div\")(({ theme }: { theme: CustomTheme }) => ({\n  position: \"relative\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexGrow: 1,\n  backgroundColor: theme.custom.colors.nav,\n  flex: 1,\n  borderTop: `${theme.custom.colors.borderFull}`,\n  paddingBottom: \"0px\",\n  paddingTop: \"0px\",\n  borderTopLeftRadius: \"12px\",\n  borderTopRightRadius: \"12px\",\n  marginTop: \"16px\",\n  zIndex: \"0\",\n  overflow: \"hidden\",\n}));\nconst ButtonsOverlay = styled(\"div\")(({ theme }: { theme: CustomTheme }) => ({\n  position: \"absolute\",\n  bottom: \"0px\",\n  display: \"flex\",\n  zIndex: \"1\",\n  background: theme.custom.colors.nav,\n  alignItems: \"stretch\",\n  width: \"100%\",\n  transition: \"max-height ease-out 200ms\",\n}));\n\nconst Avatar = styled(ProxyImage)(() => ({\n  borderRadius: \"40px\",\n  width: \"64px\",\n  height: \"64px\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  display: \"block\",\n  zIndex: 0,\n}));\n\nconst AvatarWrapper = styled(\"div\")(({ theme }: { theme: CustomTheme }) => ({\n  boxSizing: \"border-box\",\n  position: \"relative\",\n  borderRadius: \"50px\",\n  backgroundImage: `url(\"data:image/svg+xml,%3csvg width='100%25' height='100%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' rx='100' ry='100' stroke='${encodeURIComponent(\n    theme.custom.colors.avatarIconBackground\n  )}' stroke-width='5' stroke-dasharray='8%25%2c 13%25' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e\")`,\n  padding: \"6px\",\n  width: \"82px\",\n  height: \"82px\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  overflow: \"hidden\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  \"&:hover .editOverlay\": {\n    visibility: \"visible\",\n  },\n}));\n","import React, { useContext, useState } from \"react\";\nimport {\n  openAddUserAccount,\n  openPopupWindow,\n  UI_RPC_METHOD_ACTIVE_USER_UPDATE,\n  UI_RPC_METHOD_KEYRING_STORE_LOCK,\n} from \"@coral-xyz/common\";\nimport { ProxyImage, useBreakpoints } from \"@coral-xyz/react-common\";\nimport {\n  useAllUsers,\n  useAvatarUrl,\n  useBackgroundClient,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { HOVER_OPACITY, styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Add, Check } from \"@mui/icons-material\";\nimport { Button, IconButton, Popover, Typography } from \"@mui/material\";\n\nimport { SettingsNavStackDrawer } from \"./SettingsNavStackDrawer\";\n\nconst useStyles = styles((theme) => ({\n  menuButton: {\n    padding: \"2px\",\n    background: `${theme.custom.colors.avatarIconBackground} !important`,\n    \"&:hover\": {\n      background: `${theme.custom.colors.avatarIconBackground} !important`,\n      backgroundColor: `${theme.custom.colors.avatarIconBackground} !important`,\n      opacity: HOVER_OPACITY,\n    },\n  },\n  popoverRoot: {\n    zIndex: 2,\n  },\n}));\n\nexport function AvatarPopoverButton({\n  buttonStyle,\n  imgStyle,\n}: {\n  buttonStyle?: React.CSSProperties;\n  imgStyle?: React.CSSProperties;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const [anchorEl, setAnchorEl] = useState<any | undefined>(undefined);\n  const avatarUrl = useAvatarUrl(32);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n  const { isXs } = useBreakpoints();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <IconButton\n        disableRipple\n        className={classes.menuButton}\n        style={{\n          ...buttonStyle,\n        }}\n        onClick={(e) => {\n          setAnchorEl(e.currentTarget);\n        }}\n      >\n        <ProxyImage\n          src={avatarUrl}\n          style={{\n            width: \"32px\",\n            height: \"32px\",\n            borderRadius: \"16px\",\n            ...imgStyle,\n          }}\n        />\n      </IconButton>\n      <Popover\n        open={Boolean(anchorEl)}\n        anchorEl={anchorEl}\n        onClose={() => setAnchorEl(undefined)}\n        anchorOrigin={{\n          vertical: isXs ? \"bottom\" : \"top\",\n          horizontal: \"left\",\n        }}\n        PaperProps={{\n          style: {\n            minWidth: \"218px\",\n            borderRadius: \"6px\",\n            background: theme.custom.colors.avatarPopoverMenuBackground,\n          },\n        }}\n        transformOrigin={{\n          vertical: isXs ? \"top\" : \"bottom\",\n          horizontal: \"left\",\n        }}\n        classes={{ root: classes.popoverRoot }}\n        // Required duration of 0 because the rerender on a user change causes\n        // the transition component in mui to not complete and so the popover\n        // never disappears\n        transitionDuration={0}\n      >\n        <PopoverProvider\n          close={() => setAnchorEl(undefined)}\n          openSettings={() => setSettingsOpen(true)}\n        >\n          <AvatarMenu />\n        </PopoverProvider>\n      </Popover>\n      <SettingsNavStackDrawer\n        settingsOpen={settingsOpen}\n        setSettingsOpen={setSettingsOpen}\n      />\n    </div>\n  );\n}\n\nfunction AvatarMenu() {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        width: \"218px\",\n        border: theme.custom.colors.borderFull,\n        borderRadius: \"6px\",\n      }}\n    >\n      <UsersMenuList />\n      <div\n        style={{\n          borderTop: theme.custom.colors.borderFull,\n        }}\n      />\n      <AuxMenuList />\n      <div\n        style={{\n          borderTop: theme.custom.colors.borderFull,\n        }}\n      />\n      <LockMenuList />\n    </div>\n  );\n}\n\nfunction MenuList({ children }: { children: any }) {\n  return (\n    <div\n      style={{\n        paddingTop: \"4px\",\n        paddingBottom: \"4px\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction MenuListItem({\n  onClick,\n  children,\n}: {\n  onClick: () => void;\n  children: any;\n}) {\n  return (\n    <Button\n      onClick={onClick}\n      disableRipple\n      style={{\n        textTransform: \"none\",\n        padding: 0,\n        paddingTop: \"8px\",\n        paddingBottom: \"8px\",\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        width: \"100%\",\n        display: \"inline\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n        }}\n      >\n        {children}\n      </div>\n    </Button>\n  );\n}\n\nfunction UsersMenuList() {\n  const users = useAllUsers();\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n  const { close } = usePopoverContext();\n  return (\n    <MenuList>\n      {users.map((user: any) => {\n        return (\n          <UserMenuItem\n            key={user.uuid}\n            user={user}\n            onClick={async () => {\n              close();\n              await background.request({\n                method: UI_RPC_METHOD_ACTIVE_USER_UPDATE,\n                params: [user.uuid],\n              });\n            }}\n          />\n        );\n      })}\n      <MenuListItem\n        onClick={() => {\n          close();\n          openAddUserAccount();\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            marginRight: \"4px\",\n          }}\n        >\n          <Add\n            style={{\n              fontSize: \"14px\",\n              color: theme.custom.colors.secondary,\n            }}\n          />\n        </div>\n        <Typography\n          style={{\n            fontSize: 14,\n            color: theme.custom.colors.secondary,\n          }}\n        >\n          Add Account\n        </Typography>\n      </MenuListItem>\n    </MenuList>\n  );\n}\n\nfunction AuxMenuList() {\n  const theme = useCustomTheme();\n  const { openSettings } = usePopoverContext();\n  return (\n    <MenuList>\n      <MenuListItem\n        onClick={() => {\n          openSettings();\n        }}\n      >\n        <Typography\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            color: theme.custom.colors.fontColor,\n            fontSize: \"14px\",\n          }}\n        >\n          Settings\n        </Typography>\n      </MenuListItem>\n      <MenuListItem\n        onClick={async () => {\n          await openPopupWindow(\"popup.html\");\n          window.close();\n        }}\n      >\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Typography\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              color: theme.custom.colors.fontColor,\n              fontSize: \"14px\",\n            }}\n          >\n            Pop Window\n          </Typography>\n          <Typography\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              color: theme.custom.colors.secondary,\n              fontSize: \"14px\",\n            }}\n          >\n            Ctrl + G\n          </Typography>\n        </div>\n      </MenuListItem>\n    </MenuList>\n  );\n}\n\nfunction LockMenuList() {\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n  return (\n    <MenuList>\n      <MenuListItem\n        onClick={() => {\n          background\n            .request({\n              method: UI_RPC_METHOD_KEYRING_STORE_LOCK,\n              params: [],\n            })\n            .catch(console.error);\n        }}\n      >\n        <Typography\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            color: theme.custom.colors.fontColor,\n            fontSize: \"14px\",\n          }}\n        >\n          Lock\n        </Typography>\n      </MenuListItem>\n    </MenuList>\n  );\n}\n\nfunction UserMenuItem({ user, onClick }: { user: any; onClick: () => void }) {\n  const theme = useCustomTheme();\n  const currentUser = useUser();\n  const avatarUrl = useAvatarUrl(undefined, user.username);\n  const isCurrentUser = user.uuid === currentUser.uuid;\n\n  return (\n    <MenuListItem onClick={onClick}>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <ProxyImage\n              src={avatarUrl}\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                borderRadius: \"50%\",\n              }}\n            />\n          </div>\n          <Typography\n            style={{\n              marginLeft: \"8px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              color: theme.custom.colors.fontColor,\n              fontSize: \"14px\",\n            }}\n          >\n            @{user.username}\n          </Typography>\n        </div>\n        {isCurrentUser ? (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Check\n              style={{\n                width: \"20px\",\n                height: \"20px\",\n                opacity: 0.8,\n                color: theme.custom.colors.fontColor,\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    </MenuListItem>\n  );\n}\n\nfunction LockList() {\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n  return (\n    <MenuList>\n      <MenuListItem\n        onClick={() => {\n          background\n            .request({\n              method: UI_RPC_METHOD_KEYRING_STORE_LOCK,\n              params: [],\n            })\n            .catch(console.error);\n        }}\n      >\n        <Typography\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            color: theme.custom.colors.fontColor,\n            fontSize: \"14px\",\n          }}\n        >\n          Lock Wallet\n        </Typography>\n      </MenuListItem>\n    </MenuList>\n  );\n}\n\ntype PopoverContext = {\n  close: () => void;\n  openSettings: () => void;\n};\nconst _PopoverContext = React.createContext<PopoverContext | null>(null);\n\nfunction PopoverProvider({ children, close, openSettings }: any) {\n  return (\n    <_PopoverContext.Provider\n      value={{\n        close,\n        openSettings,\n      }}\n    >\n      {children}\n    </_PopoverContext.Provider>\n  );\n}\n\nexport function usePopoverContext(): PopoverContext {\n  const ctx = useContext(_PopoverContext);\n  if (ctx === null) {\n    throw new Error(\"Context not available\");\n  }\n  return ctx;\n}\n","import { useEffect, useState } from \"react\";\nimport { UI_RPC_METHOD_KEYRING_AUTO_LOCK_SETTINGS_UPDATE } from \"@coral-xyz/common\";\nimport {\n  ListItem,\n  PrimaryButton,\n  SecondaryButton,\n  TextInput,\n} from \"@coral-xyz/react-common\";\nimport { useAutoLockSettings, useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { LockClock } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\n\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\n\nimport { Checkmark } from \"./Solana/ConnectionSwitch\";\n\nexport function PreferencesAutoLock() {\n  const nav = useNavigation();\n  const theme = useCustomTheme();\n  const settings = useAutoLockSettings();\n  const background = useBackgroundClient();\n  const [minutes, setMinutes] = useState(\n    settings.seconds ? settings.seconds / 60.0 : undefined\n  );\n  const [option, setOption] = useState(settings.option);\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Auto-lock timer\" });\n  }, []);\n\n  const onCancel = () => {\n    nav.pop();\n  };\n\n  const save = async (e?: React.FormEvent) => {\n    e?.preventDefault();\n    const params = (() => {\n      if (!option && minutes) {\n        const secs = Math.round(minutes * 60);\n        return [secs, undefined];\n      } else {\n        return [undefined, option];\n      }\n    })();\n    await background.request({\n      method: UI_RPC_METHOD_KEYRING_AUTO_LOCK_SETTINGS_UPDATE,\n      params,\n    });\n    nav.pop();\n  };\n\n  const options = [\n    { id: \"never\", text: \"Never\" },\n    { id: \"onClose\", text: \"Every time I close Backpack\" },\n  ] as { id: typeof settings.option; text: string }[];\n\n  return (\n    <form\n      onSubmit={save}\n      style={{\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        paddingBottom: \"16px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"100%\",\n        textAlign: \"center\",\n        alignContent: \"center\",\n        color: theme.custom.colors.secondary,\n      }}\n    >\n      <LockClock\n        sx={{\n          color: theme.custom.colors.icon,\n          fontSize: 40,\n          margin: \"32px auto 0\",\n        }}\n      />\n      <Typography\n        style={{\n          fontSize: 14,\n          fontWeight: 500,\n          margin: \"16px auto\",\n        }}\n      >\n        Lock Backpack when I'm inactive for:\n      </Typography>\n\n      <div\n        style={{\n          flex: 1,\n          display: \"grid\",\n          gridAutoRows: \"max-content\",\n          rowGap: 12,\n        }}\n      >\n        <div style={{ marginBottom: -2 }}>\n          <TextInput\n            placeholder=\"\"\n            type=\"string\"\n            required={false}\n            error={false}\n            inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n            value={!option && minutes ? minutes.toString() : \"\"}\n            setValue={(e) => {\n              if (isNaN(e.target.value)) {\n                return;\n              }\n              if (option) setOption(undefined);\n              setMinutes(+e.target.value.replace(/[.,]/g, \"\").substring(0, 3));\n            }}\n            // disabled={option !== \"seconds\"}\n            endAdornment={\n              <Typography\n                style={{\n                  fontSize: \"16px\",\n                  fontWeight: 500,\n                  lineHeight: \"24px\",\n                  color: theme.custom.colors.secondary,\n                }}\n              >\n                Minutes\n              </Typography>\n            }\n          />\n        </div>\n\n        {options.map(({ id, text }) => (\n          <ListItem\n            key={id}\n            isFirst\n            isLast\n            onClick={() => {\n              setOption(id);\n            }}\n            detail={option === id ? <Checkmark /> : null}\n          >\n            <Typography style={{ padding: \"0 8px\" }}>{text}</Typography>\n          </ListItem>\n        ))}\n      </div>\n\n      <div style={{ display: \"flex\" }}>\n        <SecondaryButton\n          label=\"Cancel\"\n          onClick={() => onCancel()}\n          style={{\n            marginRight: \"8px\",\n            border: `${theme.custom.colors.borderFull}`,\n          }}\n        />\n        <PrimaryButton\n          label=\"Set\"\n          type=\"submit\"\n          disabled={!option ? !minutes : false}\n        />\n      </div>\n    </form>\n  );\n}\n","import { useEffect } from \"react\";\nimport { EthereumConnectionUrl } from \"@coral-xyz/common\";\nimport { PushDetail } from \"@coral-xyz/react-common\";\nimport {\n  useBackgroundClient,\n  useEthereumConnectionUrl,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Check } from \"@mui/icons-material\";\n\nimport { useDrawerContext } from \"../../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../../common/Settings/List\";\n\nimport { changeNetwork } from \"./common\";\n\nexport function PreferencesEthereumConnection() {\n  const { close } = useDrawerContext();\n  const background = useBackgroundClient();\n  const currentUrl = useEthereumConnectionUrl();\n  const nav = useNavigation();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"RPC Connection\" });\n  }, [nav]);\n\n  const menuItems = {\n    Mainnet: {\n      onClick: async () => {\n        await changeNetwork(background, EthereumConnectionUrl.MAINNET, \"0x1\");\n        close();\n      },\n      detail:\n        currentUrl === EthereumConnectionUrl.MAINNET ? <Checkmark /> : <></>,\n    },\n    \"Görli Testnet\": {\n      onClick: async () => {\n        await changeNetwork(background, EthereumConnectionUrl.GOERLI, \"0x5\");\n        close();\n      },\n      detail:\n        currentUrl === EthereumConnectionUrl.GOERLI ? <Checkmark /> : <></>,\n    },\n    Localnet: {\n      onClick: async () => {\n        await changeNetwork(background, EthereumConnectionUrl.LOCALNET);\n        close();\n      },\n      detail:\n        currentUrl === EthereumConnectionUrl.LOCALNET ? <Checkmark /> : <></>,\n    },\n    Custom: {\n      onClick: () => nav.push(\"preferences-ethereum-edit-rpc-connection\"),\n      detail:\n        currentUrl !== EthereumConnectionUrl.MAINNET &&\n        currentUrl !== EthereumConnectionUrl.GOERLI &&\n        currentUrl !== EthereumConnectionUrl.LOCALNET ? (\n          <>\n            <Checkmark /> <PushDetail />\n          </>\n        ) : (\n          <PushDetail />\n        ),\n    },\n  };\n  return <SettingsList menuItems={menuItems} />;\n}\n\nexport function Checkmark() {\n  const theme = useCustomTheme();\n  return (\n    <Check\n      style={{\n        color: theme.custom.colors.brandColor,\n      }}\n    />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { InputListItem, Inputs, PrimaryButton } from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\n\nimport { useDrawerContext } from \"../../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\n\nimport { changeNetwork } from \"./common\";\n\nexport function PreferenceEthereumCustomRpcUrl() {\n  const { close } = useDrawerContext();\n  const nav = useNavigation();\n  const background = useBackgroundClient();\n  const [rpcUrl, setRpcUrl] = useState(\"\");\n  const [chainId, setChainId] = useState(\"\");\n\n  const [rpcUrlError, setRpcUrlError] = useState(false);\n\n  useEffect(() => {\n    const title = nav.title;\n    nav.setOptions({ headerTitle: \"Change RPC Connection\" });\n    return () => {\n      nav.setOptions({ headerTitle: title });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!rpcUrl) {\n      setRpcUrlError(false);\n      return;\n    }\n    try {\n      new URL(rpcUrl.trim());\n      setRpcUrlError(false);\n    } catch (e: any) {\n      setRpcUrlError(true);\n    }\n  }, [rpcUrl]);\n\n  return (\n    <div style={{ paddingTop: \"16px\", height: \"100%\" }}>\n      <form\n        onSubmit={async () => {\n          await changeNetwork(background, rpcUrl, chainId);\n          close();\n        }}\n        style={{ display: \"flex\", height: \"100%\", flexDirection: \"column\" }}\n      >\n        <div style={{ flex: 1, flexGrow: 1 }}>\n          <Inputs error={rpcUrlError}>\n            <InputListItem\n              isLast={false}\n              isFirst\n              button={false}\n              title=\"RPC\"\n              placeholder=\"RPC URL\"\n              value={rpcUrl}\n              onChange={(e) => {\n                setRpcUrl(e.target.value);\n              }}\n            />\n            <InputListItem\n              isLast\n              isFirst={false}\n              button={false}\n              title=\"Chain\"\n              placeholder=\"Chain ID\"\n              value={chainId}\n              onChange={(e) => setChainId(e.target.value)}\n            />\n          </Inputs>\n        </div>\n        <div style={{ padding: 16 }}>\n          <PrimaryButton\n            disabled={!rpcUrl || rpcUrlError}\n            label=\"Switch\"\n            type=\"submit\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import type { ChannelAppUiClient } from \"@coral-xyz/common\";\nimport {\n  UI_RPC_METHOD_ETHEREUM_CHAIN_ID_UPDATE,\n  UI_RPC_METHOD_ETHEREUM_CONNECTION_URL_UPDATE,\n} from \"@coral-xyz/common\";\nimport { ethers } from \"ethers\";\nconst { hexlify } = ethers.utils;\n\nexport const changeNetwork = async (\n  background: ChannelAppUiClient,\n  url: string,\n  chainId?: string\n) => {\n  await background.request({\n    method: UI_RPC_METHOD_ETHEREUM_CONNECTION_URL_UPDATE,\n    params: [url],\n  });\n\n  if (!chainId) {\n    const provider = ethers.getDefaultProvider(url);\n    const network = await provider.getNetwork();\n    chainId = hexlify(network.chainId);\n  }\n\n  await background.request({\n    method: UI_RPC_METHOD_ETHEREUM_CHAIN_ID_UPDATE,\n    params: [chainId],\n  });\n};\n","import { useEffect } from \"react\";\n\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../../common/Settings/List\";\n\nexport const PreferencesEthereum = () => {\n  const nav = useNavigation();\n  const ethereumMenuItems = {\n    \"RPC Connection\": {\n      onClick: () => nav.push(\"preferences-ethereum-rpc-connection\"),\n    },\n  };\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Ethereum\" });\n  }, [nav]);\n\n  return <SettingsList menuItems={ethereumMenuItems} />;\n};\n","import { useEffect } from \"react\";\nimport { UI_RPC_METHOD_SOLANA_COMMITMENT_UPDATE } from \"@coral-xyz/common\";\nimport { useBackgroundClient, useSolanaCommitment } from \"@coral-xyz/recoil\";\nimport type { Commitment } from \"@solana/web3.js\";\n\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../../common/Settings/List\";\n\nimport { Checkmark } from \"./ConnectionSwitch\";\n\nexport function PreferencesSolanaCommitment() {\n  const nav = useNavigation();\n  const commitment = useSolanaCommitment();\n  const background = useBackgroundClient();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Confirmation Commitment\" });\n  }, [nav]);\n\n  const menuItems = {\n    Processed: {\n      onClick: () => changeCommitment(\"processed\"),\n      detail: commitment === \"processed\" ? <Checkmark /> : <></>,\n    },\n    Confirmed: {\n      onClick: () => changeCommitment(\"confirmed\"),\n      detail: commitment === \"confirmed\" ? <Checkmark /> : <></>,\n    },\n    Finalized: {\n      onClick: () => changeCommitment(\"finalized\"),\n      detail: commitment === \"finalized\" ? <Checkmark /> : <></>,\n    },\n  };\n\n  const changeCommitment = (commitment: Commitment) => {\n    background\n      .request({\n        method: UI_RPC_METHOD_SOLANA_COMMITMENT_UPDATE,\n        params: [commitment],\n      })\n      .catch(console.error);\n  };\n\n  return <SettingsList menuItems={menuItems} />;\n}\n","import { useEffect } from \"react\";\nimport {\n  SolanaCluster,\n  UI_RPC_METHOD_SOLANA_CONNECTION_URL_UPDATE,\n} from \"@coral-xyz/common\";\nimport { PushDetail } from \"@coral-xyz/react-common\";\nimport { useBackgroundClient, useSolanaConnectionUrl } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Check } from \"@mui/icons-material\";\n\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../../common/Settings/List\";\n\nexport function PreferencesSolanaConnection() {\n  const background = useBackgroundClient();\n  const currentUrl = useSolanaConnectionUrl();\n  const nav = useNavigation();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Choose Eclipse Chain\" });\n  }, [nav]);\n\n  const menuItems = {\n    Localnet: {\n      onClick: () => changeNetwork(SolanaCluster.LOCALNET),\n      detail: currentUrl === SolanaCluster.LOCALNET ? <Checkmark /> : null,\n    },\n    \"Eclipse Devnet\": {\n      onClick: () =>\n        changeNetwork(\"https://staging.dev.eclipsenetwork.xyz:8899\"),\n      detail:\n        currentUrl === \"https://staging.dev.eclipsenetwork.xyz:8899\" ? (\n          <Checkmark />\n        ) : null,\n    },\n    Custom: {\n      onClick: () => {\n        nav.push(\"preferences-solana-edit-rpc-connection\");\n      },\n      detail:\n        currentUrl !== \"https://staging.dev.eclipsenetwork.xyz:8899\" &&\n        currentUrl !== SolanaCluster.LOCALNET ? (\n          <>\n            <Checkmark />\n            <PushDetail />\n          </>\n        ) : (\n          <PushDetail />\n        ),\n    },\n  };\n\n  const changeNetwork = (url: string) => {\n    try {\n      background\n        .request({\n          method: UI_RPC_METHOD_SOLANA_CONNECTION_URL_UPDATE,\n          params: [url],\n        })\n        .catch(console.error);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return <SettingsList menuItems={menuItems} />;\n}\n\nexport function Checkmark() {\n  const theme = useCustomTheme();\n  return (\n    <Check\n      style={{\n        color: theme.custom.colors.brandColor,\n      }}\n    />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { UI_RPC_METHOD_SOLANA_CONNECTION_URL_UPDATE } from \"@coral-xyz/common\";\nimport { InputListItem, Inputs, PrimaryButton } from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\n\nimport { useDrawerContext } from \"../../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\n\nexport function PreferenceSolanaCustomRpcUrl() {\n  const { close } = useDrawerContext();\n  const nav = useNavigation();\n  const background = useBackgroundClient();\n  const [rpcUrl, setRpcUrl] = useState(\"\");\n\n  const [rpcUrlError, setRpcUrlError] = useState(false);\n\n  const changeNetwork = () => {\n    try {\n      background\n        .request({\n          method: UI_RPC_METHOD_SOLANA_CONNECTION_URL_UPDATE,\n          params: [rpcUrl],\n        })\n        .then(close)\n        .catch(console.error);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    const title = nav.title;\n    nav.setOptions({ headerTitle: \"Change RPC Connection\" });\n    return () => {\n      nav.setOptions({ headerTitle: title });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!rpcUrl) {\n      setRpcUrlError(false);\n      return;\n    }\n    try {\n      new URL(rpcUrl.trim());\n      setRpcUrlError(false);\n    } catch (e: any) {\n      setRpcUrlError(true);\n    }\n  }, [rpcUrl]);\n\n  return (\n    <div style={{ paddingTop: \"16px\", height: \"100%\" }}>\n      <form\n        onSubmit={changeNetwork}\n        style={{ display: \"flex\", height: \"100%\", flexDirection: \"column\" }}\n      >\n        <div style={{ flex: 1, flexGrow: 1 }}>\n          <Inputs error={rpcUrlError}>\n            <InputListItem\n              isFirst\n              isLast\n              button={false}\n              title=\"RPC\"\n              placeholder=\"RPC URL\"\n              value={rpcUrl}\n              onChange={(e) => {\n                setRpcUrl(e.target.value);\n              }}\n            />\n          </Inputs>\n        </div>\n        <div style={{ padding: 16 }}>\n          <PrimaryButton\n            disabled={!rpcUrl || rpcUrlError}\n            label=\"Switch\"\n            type=\"submit\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport {\n  SolanaExplorer,\n  UI_RPC_METHOD_SOLANA_EXPLORER_UPDATE,\n} from \"@coral-xyz/common\";\nimport { useBackgroundClient, useSolanaExplorer } from \"@coral-xyz/recoil\";\n\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../../common/Settings/List\";\n\nimport { Checkmark } from \"./ConnectionSwitch\";\n\nexport function PreferencesSolanaExplorer() {\n  const background = useBackgroundClient();\n  const explorer = useSolanaExplorer();\n  const nav = useNavigation();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Explorer\" });\n  }, [nav]);\n\n  const menuItems = {\n    \"Solana Beach\": {\n      onClick: () => changeExplorer(SolanaExplorer.SOLANA_BEACH),\n      detail:\n        explorer === SolanaExplorer.SOLANA_BEACH ? <Checkmark /> : <div />,\n    },\n    \"Solana Explorer\": {\n      onClick: () => changeExplorer(SolanaExplorer.SOLANA_EXPLORER),\n      detail:\n        explorer === SolanaExplorer.SOLANA_EXPLORER ? (\n          <Checkmark />\n        ) : (\n          <div />\n        ),\n    },\n    \"Solana FM\": {\n      onClick: () => changeExplorer(SolanaExplorer.SOLANA_FM),\n      detail:\n        explorer === SolanaExplorer.SOLANA_FM ? <Checkmark /> : <div />,\n    },\n    Solscan: {\n      onClick: () => changeExplorer(SolanaExplorer.SOLSCAN),\n      detail: explorer === SolanaExplorer.SOLSCAN ? <Checkmark /> : <div />,\n    },\n    XRAY: {\n      onClick: () => changeExplorer(SolanaExplorer.XRAY),\n      detail: explorer === SolanaExplorer.XRAY ? <Checkmark /> : <div />,\n    },\n  };\n\n  const changeExplorer = (explorer: string) => {\n    try {\n      background\n        .request({\n          method: UI_RPC_METHOD_SOLANA_EXPLORER_UPDATE,\n          params: [explorer],\n        })\n        .catch(console.error);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return <SettingsList menuItems={menuItems} />;\n}\n","import { useEffect } from \"react\";\n\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../../common/Settings/List\";\n\nexport const PreferencesSolana: React.FC = () => {\n  const nav = useNavigation();\n  const solanaMenuItems = {\n    \"Choose Eclipse Chain\": {\n      onClick: () => nav.push(\"preferences-solana-rpc-connection\"),\n    },\n    \"Confirmation Commitment\": {\n      onClick: () => nav.push(\"preferences-solana-commitment\"),\n    },\n    Explorer: {\n      onClick: () => nav.push(\"preferences-solana-explorer\"),\n    },\n  };\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Eclipse\" });\n  }, [nav]);\n\n  return <SettingsList menuItems={solanaMenuItems} />;\n};\n","import { useEffect } from \"react\";\nimport { UI_RPC_METHOD_APPROVED_ORIGINS_DELETE } from \"@coral-xyz/common\";\nimport {\n  EmptyState,\n  List,\n  ListItem,\n  PrimaryButton,\n} from \"@coral-xyz/react-common\";\nimport { useApprovedOrigins, useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { GppBad } from \"@mui/icons-material\";\nimport { ListItemText } from \"@mui/material\";\n\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\n\nexport function PreferencesTrustedSites() {\n  const theme = useCustomTheme();\n  const nav = useNavigation();\n  const approvedOrigins = useApprovedOrigins();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Trusted Sites\" });\n  }, [nav]);\n\n  return approvedOrigins.length === 0 ? (\n    <EmptyState\n      icon={(props: any) => <GppBad {...props} />}\n      title=\"No trusted sites\"\n      subtitle=\"Trusted sites will be listed here\"\n      contentStyle={{\n        marginBottom: \"64px\", // Tab height offset.\n      }}\n    />\n  ) : (\n    <List\n      style={{\n        marginTop: \"16px\",\n        border: `${theme.custom.colors.borderFull}`,\n      }}\n    >\n      {Object.entries(approvedOrigins).map(\n        ([key, origin]: any, i, { length }) => (\n          <ListItem\n            button={false}\n            key={key}\n            id={key}\n            isFirst={i === 0}\n            isLast={i === length - 1}\n            style={{\n              height: \"66px\",\n              padding: \"8px\",\n            }}\n            detail={<RevokeButton origin={origin} />}\n          >\n            <ListItemText style={{ fontWeight: 500 }}>{origin}</ListItemText>\n          </ListItem>\n        )\n      )}\n    </List>\n  );\n}\n\nfunction RevokeButton({ origin }: { origin: string }) {\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n\n  const onClick = async () => {\n    await background.request({\n      method: UI_RPC_METHOD_APPROVED_ORIGINS_DELETE,\n      params: [origin],\n    });\n  };\n\n  return (\n    <PrimaryButton\n      onClick={() => onClick()}\n      label=\"Revoke\"\n      style={{\n        backgroundColor: theme.custom.colors.negative,\n        width: \"71px\",\n        height: \"34px\",\n        borderRadius: \"4px\",\n      }}\n    />\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from \"react\";\nimport {\n  BACKPACK_FEATURE_AGGREGATE_WALLETS,\n  BACKPACK_FEATURE_LIGHT_MODE,\n  Blockchain,\n  UI_RPC_METHOD_SETTINGS_AGGREGATE_WALLETS_UPDATE,\n  UI_RPC_METHOD_SETTINGS_DARK_MODE_UPDATE,\n  UI_RPC_METHOD_SETTINGS_DEVELOPER_MODE_UPDATE,\n} from \"@coral-xyz/common\";\nimport {\n  getBlockchainLogo,\n  useBackgroundClient,\n  useDarkMode,\n  useDeveloperMode,\n  useIsAggregateWallets,\n} from \"@coral-xyz/recoil\";\nimport { styles } from \"@coral-xyz/themes\";\nimport { Switch } from \"@mui/material\";\n\nimport {\n  deleteSubscription,\n  hasActiveSubscription,\n  unregisterNotificationServiceWorker,\n} from \"../../../../permissions/utils\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../common/Settings/List\";\n\nexport function Preferences() {\n  const nav = useNavigation();\n  const background = useBackgroundClient();\n  const isDarkMode = useDarkMode();\n  const isDeveloperMode = useDeveloperMode();\n  const isAggregateWallets = useIsAggregateWallets();\n  const [isNotificationsOn, setIsNotificationsOn] = useState(false);\n\n  useEffect(() => {\n    hasActiveSubscription()\n      .then((status) => {\n        setIsNotificationsOn(\n          window.Notification.permission === \"granted\" && status\n        );\n      })\n      .catch(console.error);\n  }, [window.Notification.permission]);\n\n  const onDarkModeSwitch = async (isDarkMode: boolean) => {\n    await background.request({\n      method: UI_RPC_METHOD_SETTINGS_DARK_MODE_UPDATE,\n      params: [isDarkMode],\n    });\n  };\n\n  const onDeveloperModeSwitch = async (isDeveloperMode: boolean) => {\n    await background.request({\n      method: UI_RPC_METHOD_SETTINGS_DEVELOPER_MODE_UPDATE,\n      params: [isDeveloperMode],\n    });\n  };\n\n  const onAggregateWalletsSwitch = async (isAggregateWallets: boolean) => {\n    await background.request({\n      method: UI_RPC_METHOD_SETTINGS_AGGREGATE_WALLETS_UPDATE,\n      params: [isAggregateWallets],\n    });\n  };\n\n  const onNotificationsSwitch = async (isNotificationsEnabled: boolean) => {\n    if (isNotificationsEnabled) {\n      setIsNotificationsOn(true);\n      window.open(\n        \"/permissions.html?notifications=true\",\n        \"_blank\",\n        \"noreferrer\"\n      );\n    } else {\n      await deleteSubscription();\n      await unregisterNotificationServiceWorker();\n      setIsNotificationsOn(false);\n    }\n  };\n\n  //\n  // Global.\n  //\n  const menuItems: any = {\n    \"Auto-Lock Timer\": {\n      onClick: () => nav.push(\"preferences-auto-lock\"),\n    },\n    \"Trusted Sites\": {\n      onClick: () => nav.push(\"preferences-trusted-sites\"),\n    },\n  };\n\n  if (BACKPACK_FEATURE_LIGHT_MODE) {\n    menuItems[\"Dark Mode\"] = {\n      onClick: () => onDarkModeSwitch(!isDarkMode),\n      detail: (\n        <ModeSwitch\n          enabled={isDarkMode}\n          onSwitch={(enabled) => onDarkModeSwitch(enabled)}\n        />\n      ),\n    };\n  }\n\n  menuItems[\"Developer Mode\"] = {\n    onClick: () => onDeveloperModeSwitch(!isDeveloperMode),\n    detail: (\n      <ModeSwitch\n        enabled={isDeveloperMode}\n        onSwitch={(enabled) => onDeveloperModeSwitch(enabled)}\n      />\n    ),\n  };\n\n  menuItems[\"Notifications\"] = {\n    onClick: () => onNotificationsSwitch(!isNotificationsOn),\n    detail: (\n      <ModeSwitch\n        enabled={isNotificationsOn}\n        onSwitch={(enabled) => onNotificationsSwitch(enabled)}\n      />\n    ),\n  };\n\n  if (BACKPACK_FEATURE_AGGREGATE_WALLETS) {\n    menuItems[\"Aggregate Wallets\"] = {\n      onClick: () => onAggregateWalletsSwitch(!isAggregateWallets),\n      detail: (\n        <ModeSwitch\n          enabled={isAggregateWallets}\n          onSwitch={(enabled) => onAggregateWalletsSwitch(enabled)}\n        />\n      ),\n    };\n  }\n\n  const blockchainMenuItems: any = {\n    Solana: {\n      onClick: () => nav.push(\"preferences-solana\"),\n      icon: () => {\n        const blockchainLogo = getBlockchainLogo(Blockchain.SOLANA);\n        return (\n          <img\n            src={blockchainLogo}\n            style={{\n              width: \"12px\",\n              height: \"12px\",\n              marginRight: \"8px\",\n            }}\n          />\n        );\n      },\n    },\n    Ethereum: {\n      onClick: () => nav.push(\"preferences-ethereum\"),\n      icon: () => {\n        const blockchainLogo = getBlockchainLogo(Blockchain.ETHEREUM);\n        return (\n          <img\n            src={blockchainLogo}\n            style={{\n              width: \"12px\",\n              height: \"12px\",\n              marginRight: \"8px\",\n            }}\n          />\n        );\n      },\n    },\n  };\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Preferences\" });\n  }, []);\n\n  return (\n    <div>\n      <SettingsList menuItems={menuItems} />\n      <SettingsList menuItems={blockchainMenuItems as any} />\n    </div>\n  );\n}\n\nexport function ModeSwitch({\n  enabled,\n  onSwitch,\n}: {\n  enabled: boolean;\n  onSwitch: (enabled: boolean) => void;\n}) {\n  return <SwitchToggle enabled={enabled} onChange={() => onSwitch(!enabled)} />;\n}\n\nexport function SwitchToggle({\n  enabled,\n  onChange,\n  disableUiState = false,\n}: {\n  enabled: boolean;\n  onChange: () => void;\n  disableUiState?: boolean;\n}) {\n  const classes = useStyles();\n  return (\n    <Switch\n      disableRipple\n      disabled={disableUiState}\n      checked={enabled}\n      onChange={onChange}\n      classes={{\n        switchBase: classes.switchBase,\n        track: enabled ? classes.trackChecked : classes.track,\n        colorPrimary: disableUiState ? classes.disabled : classes.colorPrimary,\n      }}\n    />\n  );\n}\n\nconst useStyles = styles((theme) => ({\n  switchBase: {\n    \"&:hover\": {\n      backgroundColor: \"transparent !important\",\n      \"@media (hover: none)\": {\n        backgroundColor: \"transparent !important\",\n      },\n    },\n  },\n  colorPrimary: {\n    \"&.Mui-checked\": {\n      color: theme.custom.colors.brandColor,\n    },\n  },\n  disabled: {\n    \"&.Mui-checked\": {\n      color: `${theme.custom.colors.brandColor} !important`,\n      opacity: 0.5,\n    },\n  },\n  track: {},\n  trackChecked: {\n    backgroundColor: `${theme.custom.colors.brandColor} !important`,\n  },\n}));\n","import {\n  AllWalletsList,\n  WalletListBlockchainSelector,\n} from \"../../../components/common/WalletList\";\nimport { CloseButton, WithDrawer } from \"../../common/Layout/Drawer\";\nimport {\n  NavStackEphemeral,\n  NavStackScreen,\n} from \"../../common/Layout/NavStack\";\nimport { Logout, ResetWarning } from \"../../Locked/Reset/ResetWarning\";\nimport { ResetWelcome } from \"../../Locked/Reset/ResetWelcome\";\nimport { ContactRequests, Contacts } from \"../Messages/Contacts\";\nimport { Requests } from \"../Messages/Requests\";\n\nimport {\n  CreateMnemonic,\n  CreateOrImportMnemonic,\n} from \"./AddConnectWallet/CreateMnemonic\";\nimport { ImportMenu } from \"./AddConnectWallet/ImportMenu\";\nimport {\n  ImportMnemonic,\n  ImportMnemonicAutomatic,\n} from \"./AddConnectWallet/ImportMnemonic\";\nimport { ImportSecretKey } from \"./AddConnectWallet/ImportSecretKey\";\nimport { PreferencesAutoLock } from \"./Preferences/AutoLock\";\nimport { PreferencesEthereum } from \"./Preferences/Ethereum\";\nimport { PreferencesEthereumConnection } from \"./Preferences/Ethereum/Connection\";\nimport { PreferenceEthereumCustomRpcUrl } from \"./Preferences/Ethereum/CustomRpcUrl\";\nimport { PreferencesSolana } from \"./Preferences/Solana\";\nimport { PreferencesSolanaCommitment } from \"./Preferences/Solana/Commitment\";\nimport { PreferencesSolanaConnection } from \"./Preferences/Solana/ConnectionSwitch\";\nimport { PreferenceSolanaCustomRpcUrl } from \"./Preferences/Solana/CustomRpcUrl\";\nimport { PreferencesSolanaExplorer } from \"./Preferences/Solana/Explorer\";\nimport { PreferencesTrustedSites } from \"./Preferences/TrustedSites\";\nimport { XnftDetail } from \"./Xnfts/Detail\";\nimport { ChangePassword } from \"./YourAccount/ChangePassword\";\nimport { RemoveWallet } from \"./YourAccount/EditWallets/RemoveWallet\";\nimport { RenameWallet } from \"./YourAccount/EditWallets/RenameWallet\";\nimport { WalletDetail } from \"./YourAccount/EditWallets/WalletDetail\";\nimport {\n  ShowPrivateKey,\n  ShowPrivateKeyWarning,\n} from \"./YourAccount/ShowPrivateKey\";\nimport {\n  ShowRecoveryPhrase,\n  ShowRecoveryPhraseWarning,\n} from \"./YourAccount/ShowRecoveryPhrase\";\nimport { AboutBackpack } from \"./AboutBackpack\";\nimport { AddConnectPreview, AddConnectWalletMenu } from \"./AddConnectWallet\";\nimport { Preferences } from \"./Preferences\";\nimport { XnftSettings } from \"./Xnfts\";\nimport { YourAccount } from \"./YourAccount\";\nimport { SettingsMenu } from \".\";\n\nexport function SettingsNavStackDrawer({\n  settingsOpen,\n  setSettingsOpen,\n}: {\n  settingsOpen: boolean;\n  setSettingsOpen: any;\n}) {\n  return (\n    <WithDrawer openDrawer={settingsOpen} setOpenDrawer={setSettingsOpen}>\n      <div style={{ height: \"100%\" }}>\n        <NavStackEphemeral\n          initialRoute={{ name: \"root\", title: \"Profile\" }}\n          options={() => ({ title: \"\" })}\n          navButtonLeft={<CloseButton onClick={() => setSettingsOpen(false)} />}\n        >\n          <NavStackScreen\n            name=\"root\"\n            component={(props: any) => <SettingsMenu {...props} />}\n          />\n          <NavStackScreen\n            name=\"add-connect-wallet\"\n            component={(props: any) => <AddConnectWalletMenu {...props} />}\n          />\n          <NavStackScreen\n            name=\"create-or-import-mnemonic\"\n            component={(props: any) => <CreateOrImportMnemonic {...props} />}\n          />\n          <NavStackScreen\n            name=\"create-mnemonic\"\n            component={(props: any) => <CreateMnemonic {...props} />}\n          />\n          <NavStackScreen\n            name=\"import-wallet\"\n            component={(props: any) => <ImportMenu {...props} />}\n          />\n          <NavStackScreen\n            name=\"import-from-mnemonic\"\n            component={(props: any) => <ImportMnemonic {...props} />}\n          />\n          <NavStackScreen\n            name=\"set-and-sync-mnemonic\"\n            component={(props: any) => <ImportMnemonicAutomatic {...props} />}\n          />\n          <NavStackScreen\n            name=\"import-from-secret-key\"\n            component={(props: any) => <ImportSecretKey {...props} />}\n          />\n          <NavStackScreen\n            name=\"your-account\"\n            component={(props: any) => <YourAccount {...props} />}\n          />\n          <NavStackScreen\n            name=\"preferences\"\n            component={(props: any) => <Preferences {...props} />}\n          />\n          <NavStackScreen\n            name=\"preferences-auto-lock\"\n            component={(props: any) => <PreferencesAutoLock {...props} />}\n          />\n          <NavStackScreen\n            name=\"preferences-trusted-sites\"\n            component={(props: any) => <PreferencesTrustedSites {...props} />}\n          />\n          <NavStackScreen\n            name=\"preferences-solana\"\n            component={(props: any) => <PreferencesSolana {...props} />}\n          />\n          <NavStackScreen\n            name=\"preferences-ethereum\"\n            component={(props: any) => <PreferencesEthereum {...props} />}\n          />\n          <NavStackScreen\n            name=\"preferences-solana-rpc-connection\"\n            component={(props: any) => (\n              <PreferencesSolanaConnection {...props} />\n            )}\n          />\n          <NavStackScreen\n            name=\"preferences-solana-edit-rpc-connection\"\n            component={(props: any) => (\n              <PreferenceSolanaCustomRpcUrl {...props} />\n            )}\n          />\n          <NavStackScreen\n            name=\"preferences-solana-commitment\"\n            component={(props: any) => (\n              <PreferencesSolanaCommitment {...props} />\n            )}\n          />\n          <NavStackScreen\n            name=\"preferences-solana-explorer\"\n            component={(props: any) => <PreferencesSolanaExplorer {...props} />}\n          />\n          <NavStackScreen\n            name=\"preferences-ethereum-rpc-connection\"\n            component={(props: any) => (\n              <PreferencesEthereumConnection {...props} />\n            )}\n          />\n          <NavStackScreen\n            name=\"preferences-ethereum-edit-rpc-connection\"\n            component={(props: any) => (\n              <PreferenceEthereumCustomRpcUrl {...props} />\n            )}\n          />\n          <NavStackScreen\n            name=\"change-password\"\n            component={(props: any) => <ChangePassword {...props} />}\n          />\n          <NavStackScreen\n            name=\"reset\"\n            component={(props: any) => <ResetWelcome {...props} />}\n          />\n          <NavStackScreen\n            name=\"edit-wallets\"\n            component={(props: any) => <AllWalletsList {...props} />}\n          />\n          <NavStackScreen\n            name=\"edit-wallets-add-connect-preview\"\n            component={(props: any) => <AddConnectPreview {...props} />}\n          />\n          <NavStackScreen\n            name=\"edit-wallets-wallet-detail\"\n            component={(props: any) => <WalletDetail {...props} />}\n          />\n          <NavStackScreen\n            name=\"edit-wallets-remove\"\n            component={(props: any) => <RemoveWallet {...props} />}\n          />\n          <NavStackScreen\n            name=\"edit-wallets-rename\"\n            component={(props: any) => <RenameWallet {...props} />}\n          />\n          <NavStackScreen\n            name=\"edit-wallets-blockchain-selector\"\n            component={(props: any) => (\n              <WalletListBlockchainSelector {...props} />\n            )}\n          />\n          <NavStackScreen\n            name=\"show-private-key-warning\"\n            component={(props: any) => <ShowPrivateKeyWarning {...props} />}\n          />\n          <NavStackScreen\n            name=\"show-private-key\"\n            component={(props: any) => <ShowPrivateKey {...props} />}\n          />\n          <NavStackScreen\n            name=\"show-secret-phrase-warning\"\n            component={(props: any) => <ShowRecoveryPhraseWarning {...props} />}\n          />\n          <NavStackScreen\n            name=\"show-secret-phrase\"\n            component={(props: any) => <ShowRecoveryPhrase {...props} />}\n          />\n          <NavStackScreen\n            name=\"reset-warning\"\n            component={(props: any) => <ResetWarning {...props} />}\n          />\n          <NavStackScreen\n            name=\"logout\"\n            component={(props: any) => <Logout {...props} />}\n          />\n          <NavStackScreen\n            name=\"xnfts\"\n            component={(props: any) => <XnftSettings {...props} />}\n          />\n          <NavStackScreen\n            name=\"xnfts-detail\"\n            component={(props: any) => <XnftDetail {...props} />}\n          />\n          <NavStackScreen\n            name=\"contacts\"\n            component={(props: any) => <Contacts {...props} />}\n          />\n          <NavStackScreen\n            name=\"contact-requests\"\n            component={(props: any) => <ContactRequests {...props} />}\n          />\n          <NavStackScreen\n            name=\"contact-requests-sent\"\n            component={(props: any) => <ContactRequests {...props} />}\n          />\n          <NavStackScreen\n            name=\"requests\"\n            component={(props: any) => <Requests {...props} />}\n          />\n          <NavStackScreen\n            name=\"about-backpack\"\n            component={(props: any) => <AboutBackpack {...props} />}\n          />\n        </NavStackEphemeral>\n      </div>\n    </WithDrawer>\n  );\n}\n","import { useEffect, useMemo, useState } from \"react\";\nimport {\n  BAKED_IN_XNFTS,\n  Blockchain,\n  confirmTransaction,\n  DEFAULT_PUBKEY_STR,\n  explorerUrl,\n  getLogger,\n  Solana,\n  UI_RPC_METHOD_SET_XNFT_PREFERENCES,\n  XNFT_GG_LINK,\n} from \"@coral-xyz/common\";\nimport {\n  CheckIcon,\n  LaunchDetail,\n  Loading,\n  NegativeButton,\n  ProxyImage,\n  SecondaryButton,\n} from \"@coral-xyz/react-common\";\nimport {\n  useBackgroundClient,\n  useSolanaConnectionUrl,\n  useSolanaCtx,\n  useSolanaExplorer,\n  useUser,\n  xnftPreference as xnftPreferenceAtom,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Button, Typography } from \"@mui/material\";\nimport { useRecoilValue } from \"recoil\";\n\nimport { updateRemotePreference } from \"../../../../api/preferences\";\nimport { ApproveTransactionDrawer } from \"../../../common/ApproveTransactionDrawer\";\nimport { useNavigation as useNavigationEphemeral } from \"../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../common/Settings/List\";\nimport { Error } from \"../../Balances/TokensWidget/Send\";\nimport { SwitchToggle } from \"../Preferences\";\nconst logger = getLogger(\"xnft-detail\");\n\nexport const XnftDetail: React.FC<{ xnft: any }> = ({ xnft }) => {\n  const theme = useCustomTheme();\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const xnftPreference = useRecoilValue(\n    xnftPreferenceAtom(xnft.install.account.xnft.toString())\n  );\n\n  const nav = useNavigationEphemeral();\n  const background = useBackgroundClient();\n  const { username } = useUser();\n\n  const isBaked = useMemo(\n    () =>\n      xnft.title === \"Simulator\" ||\n      Object.values(BAKED_IN_XNFTS).find(\n        (x) => x.publicKey === xnft.install.account.xnft.toBase58()\n      ) !== undefined,\n    [xnft]\n  );\n\n  // Using the raw string here instead of PublicKey.default.toString() because\n  // typescript sucks and is throwing inexplicable errors.\n  const isDisabled = xnft.install.publicKey === DEFAULT_PUBKEY_STR;\n\n  useEffect(() => {\n    nav.setOptions({\n      headerTitle: xnft.title,\n    });\n  }, []);\n\n  const menuItems = {\n    Display: {\n      detail: (\n        <SwitchToggle enabled={!xnftPreference?.disabled} onChange={() => {}} />\n      ),\n      onClick: () => {},\n      style: {\n        opacity: 0.5,\n      },\n      allowOnclickPropagation: true,\n    },\n    MediaAccess: {\n      label: \"Cam/Mic/Display access\",\n      detail: (\n        <SwitchToggle\n          enabled={!!xnftPreference?.mediaPermissions}\n          onChange={async () => {\n            const updatedMediaPermissions = !xnftPreference?.mediaPermissions;\n            await background.request({\n              method: UI_RPC_METHOD_SET_XNFT_PREFERENCES,\n              params: [\n                xnft.install.account.xnft.toString(),\n                {\n                  mediaPermissions: updatedMediaPermissions,\n                },\n              ],\n            });\n            if (updatedMediaPermissions) {\n              const result = await window.navigator.permissions.query({\n                //@ts-ignore: camera not part of the typedoc yet\n                name: \"camera\",\n              });\n              if (result.state !== \"granted\") {\n                window.open(\"/permissions.html\", \"_blank\");\n                return;\n              }\n            }\n          }}\n        />\n      ),\n      onClick: () => {},\n      style: {\n        opacity: 0.5,\n      },\n      allowOnclickPropagation: true,\n    },\n    PushNotificationAccess: {\n      label: \"Push notifications\",\n      detail: (\n        <SwitchToggle\n          enabled={!!xnftPreference?.pushNotifications}\n          onChange={async () => {\n            const updatedPushNotifications = !xnftPreference?.pushNotifications;\n            await background.request({\n              method: UI_RPC_METHOD_SET_XNFT_PREFERENCES,\n              params: [\n                xnft.install.account.xnft.toString(),\n                {\n                  pushNotifications: updatedPushNotifications,\n                },\n              ],\n            });\n            await updateRemotePreference(\n              xnft.install.account.xnft.toString(),\n              username || \"\",\n              {\n                notifications: updatedPushNotifications,\n              }\n            ).catch((e) =>\n              console.error(\n                `Error while updating remote notification state ${e}`\n              )\n            );\n\n            if (updatedPushNotifications) {\n              const result = await window.navigator.permissions.query({\n                //@ts-ignore: camera not part of the typedoc yet\n                name: \"notifications\",\n              });\n\n              if (result.state !== \"granted\") {\n                window.open(\"/permissions.html?notifications=true\", \"_blank\");\n                return;\n              }\n            }\n          }}\n        />\n      ),\n      onClick: () => {},\n      style: {\n        opacity: 0.5,\n      },\n      allowOnclickPropagation: true,\n    },\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"16px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div>\n        <ProxyImage\n          src={xnft.iconUrl}\n          style={{\n            width: \"120px\",\n            height: \"120px\",\n            borderRadius: \"8px\",\n            display: \"block\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            marginBottom: \"15px\",\n          }}\n        />\n        {xnft.metadata?.xnft ? <Typography\n          sx={{\n              color: theme.custom.colors.fontColor,\n              fontSize: \"12px\",\n              marginBottom: \"15px\",\n              textAlign: \"center\",\n            }}\n          >\n          v{xnft.metadata.xnft.version}\n        </Typography> : null}\n        <Button\n          disabled={isDisabled}\n          disableRipple\n          variant=\"contained\"\n          style={{\n            textTransform: \"none\",\n            background: theme.custom.colors.bg2,\n            color: theme.custom.colors.fontColor,\n            borderRadius: \"12px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            height: \"48px\",\n            display: \"flex\",\n            position: \"relative\",\n            opacity: isDisabled ? 0.5 : undefined,\n            boxShadow: \"none\",\n          }}\n          onClick={() =>\n            window.open(\n              `${XNFT_GG_LINK}/app/${xnft.install.account.xnft.toString()}`\n            )\n          }\n        >\n          View in Library{\" \"}\n          <LaunchDetail\n            style={{\n              marginLeft: \"4px\",\n              marginRight: \"-4px\",\n            }}\n          />\n        </Button>\n      </div>\n      <div>\n        <SettingsList\n          menuItems={menuItems}\n          style={{\n            marginLeft: 0,\n            marginRight: 0,\n          }}\n        />\n        <Typography\n          style={{\n            fontSize: \"14px\",\n            marginTop: \"36px\",\n            marginBottom: \"36px\",\n            textAlign: \"center\",\n            color: theme.custom.colors.secondary,\n          }}\n        >\n          {isBaked\n            ? \"This xNFT was developed by the Backpack team and cannot be uninstalled.\"\n            : \"Uninstalling will remove this xNFT from your account.\"}\n        </Typography>\n        {!isBaked ? (\n          <NegativeButton\n            disabled={isDisabled}\n            label=\"Uninstall xNFT\"\n            onClick={() => setOpenConfirm(true)}\n          />\n        ) : null}\n      </div>\n      <ApproveTransactionDrawer\n        openDrawer={openConfirm}\n        setOpenDrawer={setOpenConfirm}\n      >\n        <UninstallConfirmationCard xnft={xnft} />\n      </ApproveTransactionDrawer>\n    </div>\n  );\n};\n\nconst UninstallConfirmationCard = ({ xnft }: { xnft: any }) => {\n  const ctx = useSolanaCtx();\n  const [error, setError] = useState(\"\");\n  const [cardType, setCardType] = useState<\n    \"confirm\" | \"sending\" | \"complete\" | \"error\"\n  >(\"confirm\");\n  const [txSignature, setTxSignature] = useState<string | null>(null);\n\n  const onConfirm = async () => {\n    //\n    // Change view to display loading indicator.\n    //\n    setCardType(\"sending\");\n\n    //\n    // Send the tx.\n    //\n    let txSig = \"\";\n    try {\n      txSig = await Solana.uninstallXnft(ctx, {\n        install: xnft.install.publicKey,\n      });\n    } catch (err) {\n      logger.error(\"unable to send transaction\", err);\n      setCardType(\"error\");\n      return;\n    }\n    setTxSignature(txSig);\n\n    //\n    // Confirm tx.\n    //\n    try {\n      await confirmTransaction(\n        ctx.connection,\n        txSig,\n        ctx.commitment !== \"confirmed\" && ctx.commitment !== \"finalized\"\n          ? \"confirmed\"\n          : ctx.commitment\n      );\n\n      setCardType(\"complete\");\n    } catch (err: any) {\n      logger.error(\"unable to confirm\", err);\n      setError(err.toString());\n      setCardType(\"error\");\n    }\n  };\n\n  const retry = () => {\n    onConfirm();\n  };\n\n  return cardType === \"confirm\" ? (\n    <ConfirmUninstall xnft={xnft} onConfirm={onConfirm} />\n  ) : cardType === \"sending\" ? (\n    <Sending signature={txSignature!} isComplete={false} />\n  ) : cardType === \"complete\" ? (\n    <Sending signature={txSignature!} isComplete />\n  ) : (\n    <Error\n      blockchain={Blockchain.SOLANA}\n      signature={txSignature!}\n      error={error}\n      onRetry={() => retry()}\n    />\n  );\n};\n\nconst ConfirmUninstall = ({\n  xnft,\n  onConfirm,\n}: {\n  xnft: any;\n  onConfirm: () => void;\n}) => {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        height: \"402px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"16px\",\n      }}\n    >\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography\n          style={{\n            textAlign: \"center\",\n            fontSize: \"24px\",\n            color: theme.custom.colors.fontColor,\n          }}\n        >\n          Are you sure you want to uninstall {xnft.title}?\n        </Typography>\n      </div>\n      <NegativeButton label=\"Confirm\" onClick={() => onConfirm()} />\n    </div>\n  );\n};\n\nfunction Sending({\n  signature,\n  isComplete,\n}: {\n  signature: string;\n  isComplete: boolean;\n}) {\n  const theme = useCustomTheme();\n  const solanaExplorer = useSolanaExplorer();\n  const connectionUrl = useSolanaConnectionUrl();\n  return (\n    <div\n      style={{\n        height: \"264px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Typography\n        style={{\n          textAlign: \"center\",\n          color: theme.custom.colors.secondary,\n          fontSize: \"14px\",\n          fontWeight: 500,\n          marginTop: \"30px\",\n        }}\n      >\n        {isComplete ? \"Sent\" : \"Sending...\"}\n      </Typography>\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {isComplete ? (\n          <div style={{ textAlign: \"center\" }}>\n            <CheckIcon />\n          </div>\n        ) : (\n          <Loading\n            size={48}\n            iconStyle={{\n              color: theme.custom.colors.primaryButton,\n              display: \"flex\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n            }}\n            thickness={6}\n          />\n        )}\n      </div>\n      <div\n        style={{\n          marginBottom: \"16px\",\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n        }}\n      >\n        <SecondaryButton\n          onClick={() => {\n            window.open(explorerUrl(solanaExplorer, signature, connectionUrl));\n          }}\n          label=\"View Explorer\"\n        />\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { XNFT_GG_LINK } from \"@coral-xyz/common\";\nimport {\n  EmptyState,\n  Loading,\n  ProxyImage,\n  PushDetail,\n} from \"@coral-xyz/react-common\";\nimport {\n  filteredPlugins,\n  useActiveSolanaWallet,\n  useSolanaConnectionUrl,\n} from \"@coral-xyz/recoil\";\nimport { Apps } from \"@mui/icons-material\";\nimport { useRecoilValueLoadable } from \"recoil\";\n\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../common/Settings/List\";\n\nexport function XnftSettings() {\n  const nav = useNavigation();\n  // TODO: Aggregate view.\n  const activeSolanaWallet = useActiveSolanaWallet();\n  const connectionUrl = useSolanaConnectionUrl();\n  const publicKey = activeSolanaWallet?.publicKey;\n  const { contents, state } = useRecoilValueLoadable(\n    filteredPlugins({ publicKey, connectionUrl })\n  );\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"xNFTs\" });\n  }, [nav.setOptions]);\n\n  if (state !== \"hasValue\" && state === \"loading\") {\n    return (\n      <div\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Loading />\n      </div>\n    );\n  }\n\n  const xnfts = contents || [];\n  const settingsMenu = {} as any;\n  xnfts.forEach((xnft: any) => {\n    const pubkeyStr = xnft.install.publicKey.toString();\n    settingsMenu[pubkeyStr] = {\n      label: xnft.title,\n      onClick: () => nav.push(\"xnfts-detail\", { xnft }),\n      icon: () => (\n        <ProxyImage\n          style={{\n            marginRight: \"12px\",\n            borderRadius: \"8px\",\n            width: \"44px\",\n            height: \"44px\",\n          }}\n          src={xnft.iconUrl}\n        />\n      ),\n      detailIcon: <PushDetail />,\n      style: {\n        height: \"68px\",\n      },\n    };\n  });\n\n  return xnfts.length === 0 ? (\n    <EmptyState\n      icon={(props: any) => <Apps {...props} />}\n      title=\"No xNFTs\"\n      subtitle=\"Get started by adding your first xNFT\"\n      contentStyle={{\n        marginBottom: \"64px\", // Tab height offset.\n      }}\n      buttonText=\"Browse the xNFT Library\"\n      onClick={() => window.open(XNFT_GG_LINK, \"_blank\")}\n    />\n  ) : (\n    <div\n      style={{\n        marginTop: \"16px\",\n        marginBottom: \"16px\",\n      }}\n    >\n      <SettingsList\n        menuItems={settingsMenu}\n        style={{\n          marginTop: \"12px\",\n        }}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  UI_RPC_METHOD_KEYRING_STORE_CHECK_PASSWORD,\n  UI_RPC_METHOD_PASSWORD_UPDATE,\n} from \"@coral-xyz/common\";\nimport { InputListItem, Inputs, PrimaryButton } from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Button, Typography } from \"@mui/material\";\n\nimport { SubtextParagraph } from \"../../../common\";\nimport { useDrawerContext } from \"../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\n\nexport function ChangePassword() {\n  const theme = useCustomTheme();\n  const { close } = useDrawerContext();\n  const nav = useNavigation();\n  const background = useBackgroundClient();\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [newPw1, setNewPw1] = useState(\"\");\n  const [newPw2, setNewPw2] = useState(\"\");\n\n  const [currentPasswordError, setCurrentPasswordError] = useState(false);\n  const [passwordMismatchError, setPasswordMismatchError] = useState(false);\n  const missingNewPw = newPw1.trim() === \"\" || newPw2.trim() === \"\";\n\n  useEffect(() => {\n    const title = nav.title;\n    nav.setOptions({ headerTitle: \"Change password\" });\n    return () => {\n      nav.setOptions({ headerTitle: title });\n    };\n  }, []);\n\n  return (\n    <div style={{ paddingTop: \"16px\", height: \"100%\" }}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          (async () => {\n            const isCurrentCorrect = await background.request({\n              method: UI_RPC_METHOD_KEYRING_STORE_CHECK_PASSWORD,\n              params: [currentPassword],\n            });\n            const mismatchError = newPw1.trim() === \"\" || newPw1 !== newPw2;\n\n            setCurrentPasswordError(!isCurrentCorrect);\n            setPasswordMismatchError(mismatchError);\n\n            if (!isCurrentCorrect || mismatchError) {\n              return;\n            }\n\n            await background.request({\n              method: UI_RPC_METHOD_PASSWORD_UPDATE,\n              params: [currentPassword, newPw1],\n            });\n\n            close();\n          })();\n        }}\n        style={{ display: \"flex\", height: \"100%\", flexDirection: \"column\" }}\n      >\n        <div style={{ flex: 1, flexGrow: 1 }}>\n          <Inputs error={currentPasswordError}>\n            <InputListItem\n              isFirst\n              isLast\n              value={currentPassword}\n              onChange={(e) => setCurrentPassword(e.target.value)}\n              placeholder=\"Enter password\"\n              type=\"password\"\n              button={false}\n              title=\"Current\"\n            />\n          </Inputs>\n          <Button\n            onClick={() => nav.push(\"reset\", { closeDrawer: () => nav.pop() })}\n            disableRipple\n            style={{\n              padding: 0,\n              backgroundColor: \"transparent\",\n              marginTop: \"10px\",\n              marginLeft: \"26px\",\n              marginBottom: \"26px\",\n              textTransform: \"none\",\n              color: theme.custom.colors.brandColor,\n            }}\n          >\n            <Typography\n              style={{\n                fontSize: \"14px\",\n                fontWeight: 500,\n                lineHeight: \"24px\",\n              }}\n            >\n              Forgot Password?\n            </Typography>\n          </Button>\n          <Inputs error={passwordMismatchError}>\n            <InputListItem\n              isFirst\n              value={newPw1}\n              onChange={(e) => setNewPw1(e.target.value)}\n              placeholder=\"Enter password\"\n              type=\"password\"\n              button={false}\n              title=\"New\"\n            />\n            <InputListItem\n              isLast\n              value={newPw2}\n              onChange={(e) => setNewPw2(e.target.value)}\n              placeholder=\"Re-enter password\"\n              type=\"password\"\n              button={false}\n              title=\"Verify\"\n            />\n          </Inputs>\n          <SubtextParagraph\n            style={{\n              fontWeight: 500,\n              fontSize: \"14px\",\n              lineHeight: \"20px\",\n              marginLeft: \"26px\",\n              marginRight: \"26px\",\n              marginTop: \"10px\",\n            }}\n          >\n            Your password must be at least 8 characters long and contain letters\n            and numbers.\n          </SubtextParagraph>\n        </div>\n        <div style={{ padding: 16 }}>\n          <PrimaryButton\n            label=\"Change password\"\n            type=\"submit\"\n            disabled={missingNewPw}\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport {\n  UI_RPC_METHOD_KEYRING_KEY_DELETE,\n  UI_RPC_METHOD_USER_ACCOUNT_PUBLIC_KEY_DELETE,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport {\n  CheckIcon,\n  PrimaryButton,\n  SecondaryButton,\n  WarningIcon,\n} from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\n\nimport { WithMiniDrawer } from \"../../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\n\nexport const RemoveWallet: React.FC<{\n  blockchain: Blockchain;\n  publicKey: string;\n  type: string;\n}> = ({ blockchain, publicKey, type }) => {\n  const theme = useCustomTheme();\n  const nav = useNavigation();\n  const background = useBackgroundClient();\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Remove Wallet\" });\n  }, [nav]);\n\n  const onRemove = async () => {\n    setLoading(true);\n    if (type === \"dehydrated\") {\n      await background.request({\n        method: UI_RPC_METHOD_USER_ACCOUNT_PUBLIC_KEY_DELETE,\n        params: [blockchain, publicKey],\n      });\n    } else {\n      await background.request({\n        method: UI_RPC_METHOD_KEYRING_KEY_DELETE,\n        params: [blockchain, publicKey],\n      });\n    }\n    setLoading(false);\n    setShowSuccess(true);\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n          height: \"100%\",\n          paddingBottom: \"16px\",\n        }}\n      >\n        <div\n          style={{\n            marginLeft: \"36px\",\n            marginRight: \"36px\",\n            marginTop: \"45px\",\n            textAlign: \"center\",\n          }}\n        >\n          <WarningIcon fill={theme.custom.colors.negative} />\n          <Typography\n            style={{\n              fontWeight: 500,\n              fontSize: \"24px\",\n              lineHeight: \"32px\",\n              textAlign: \"center\",\n              marginTop: \"30px\",\n              color: theme.custom.colors.fontColor,\n            }}\n          >\n            {`Are you sure you want to remove ${walletAddressDisplay(\n              publicKey\n            )}?`}\n          </Typography>\n          <Typography\n            style={{\n              textAlign: \"center\",\n              color: theme.custom.colors.secondary,\n              fontSize: \"16px\",\n              lineHeight: \"24px\",\n              fontWeight: 500,\n              marginTop: \"8px\",\n            }}\n          >\n            {type === \"derived\" ? (\n              <>\n                Removing from Backpack will not delete the wallet’s contents. It\n                will still be available by importing your secret recovery phrase\n                in a new Backpack.\n              </>\n            ) : type === \"ledger\" ? (\n              <>\n                Removing from Backpack will not delete the wallet’s contents. It\n                will still be available by connecting your ledger.\n              </>\n            ) : type === \"dehydrated\" ? (\n              <>\n                Removing from Backpack will remove the connection between your\n                username and this public key. You can always add it back later\n                by adding the wallet to Backpack.\n              </>\n            ) : (\n              <>\n                Removing from Backpack will delete the wallet’s keypair. Make\n                sure you have exported and saved the private key before\n                removing.\n              </>\n            )}\n          </Typography>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            marginLeft: \"16px\",\n            marginRight: \"16px\",\n          }}\n        >\n          <SecondaryButton\n            label=\"Cancel\"\n            style={{ marginRight: \"8px\" }}\n            onClick={() => nav.pop()}\n          />\n          <PrimaryButton\n            label=\"Remove\"\n            style={{ backgroundColor: theme.custom.colors.negative }}\n            onClick={onRemove}\n            disabled={loading}\n          />\n        </div>\n      </div>\n      <WithMiniDrawer\n        openDrawer={showSuccess}\n        setOpenDrawer={setShowSuccess}\n        backdropProps={{\n          style: {\n            opacity: 0.8,\n            background: \"#18181b\",\n          },\n        }}\n        onClose={() => {\n          setShowSuccess(false);\n          nav.pop(2);\n        }}\n      >\n        <div\n          style={{\n            borderTopLeftRadius: \"12px\",\n            borderTopRightRadius: \"12px\",\n            height: \"100%\",\n            background: theme.custom.colors.background,\n          }}\n        >\n          <div\n            style={{\n              height: \"100%\",\n              borderTopLeftRadius: \"12px\",\n              borderTopRightRadius: \"12px\",\n              background: theme.custom.colors.drawerGradient,\n              paddingTop: \"32px\",\n              paddingBottom: \"16px\",\n              paddingLeft: \"16px\",\n              paddingRight: \"16px\",\n            }}\n          >\n            <div\n              style={{\n                marginLeft: \"36px\",\n                marginRight: \"36px\",\n                textAlign: \"center\",\n              }}\n            >\n              <CheckIcon />\n            </div>\n            <div>\n              <Typography\n                style={{\n                  fontWeight: 500,\n                  fontSize: \"24px\",\n                  lineHeight: \"32px\",\n                  textAlign: \"center\",\n                  marginTop: \"16px\",\n                  marginBottom: \"32px\",\n                  color: theme.custom.colors.fontColor,\n                }}\n              >\n                Wallet removed\n              </Typography>\n              <PrimaryButton\n                label=\"Done\"\n                onClick={() => {\n                  nav.pop(2);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </WithMiniDrawer>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { UI_RPC_METHOD_KEYNAME_UPDATE } from \"@coral-xyz/common\";\nimport {\n  PrimaryButton,\n  SecondaryButton,\n  TextInput,\n} from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\n\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\n\nexport const RenameWallet: React.FC<{ publicKey: string; name: string }> = ({\n  publicKey,\n  name,\n}) => {\n  const [walletName, setWalletName] = useState(name);\n  const nav = useNavigation();\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Rename Wallet\" });\n  }, [nav]);\n\n  const cancel = () => {\n    nav.pop();\n  };\n\n  const save = async (e: React.FormEvent) => {\n    e.preventDefault();\n    await background.request({\n      method: UI_RPC_METHOD_KEYNAME_UPDATE,\n      params: [publicKey, walletName],\n    });\n    nav.pop();\n  };\n\n  const pubkeyDisplay =\n    publicKey.slice(0, 4) + \"...\" + publicKey.slice(publicKey.length - 4);\n  const isPrimaryDisabled = walletName.trim() === \"\";\n\n  return (\n    <form\n      onSubmit={save}\n      style={{\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        paddingBottom: \"16px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n        height: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          marginTop: \"112px\",\n        }}\n      >\n        <TextInput\n          autoFocus\n          value={walletName}\n          setValue={(e) => setWalletName(e.target.value)}\n        />\n        <Typography\n          style={{\n            color: theme.custom.colors.secondary,\n            textAlign: \"center\",\n            marginTop: \"10px\",\n          }}\n        >\n          ({pubkeyDisplay})\n        </Typography>\n      </div>\n      <div style={{ display: \"flex\" }}>\n        <SecondaryButton\n          label=\"Cancel\"\n          onClick={() => cancel()}\n          style={{\n            marginRight: \"8px\",\n          }}\n        />\n        <PrimaryButton label=\"Set\" type=\"submit\" disabled={isPrimaryDisabled} />\n      </div>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport {\n  BACKEND_API_URL,\n  UI_RPC_METHOD_KEY_IS_COLD_UPDATE,\n  UI_RPC_METHOD_KEYNAME_READ,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport {\n  PrimaryButton,\n  SecondaryButton,\n  toast,\n  WarningIcon,\n} from \"@coral-xyz/react-common\";\nimport {\n  isKeyCold,\n  serverPublicKeys,\n  useBackgroundClient,\n  usePrimaryWallets,\n  useWalletPublicKeys,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { ContentCopy } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\n\nimport { HeaderIcon } from \"../../../../common\";\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../../common/Settings/List\";\nimport { WithCopyTooltip } from \"../../../../common/WithCopyTooltip\";\nimport { ModeSwitch } from \"../../Preferences\";\n\nexport const WalletDetail: React.FC<{\n  blockchain: Blockchain;\n  publicKey: string;\n  name: string;\n  type: string;\n  isActive: boolean;\n}> = ({ blockchain, publicKey, name, type }) => {\n  const nav = useNavigation();\n  const theme = useCustomTheme();\n  const background = useBackgroundClient();\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const [walletName, setWalletName] = useState(name);\n  const publicKeyData = useWalletPublicKeys();\n  const isCold = useRecoilValue(isKeyCold(publicKey));\n  const primaryWallets = usePrimaryWallets();\n  const setServerPublicKeys = useSetRecoilState(serverPublicKeys);\n\n  useEffect(() => {\n    (async () => {\n      let keyname = \"\";\n      try {\n        keyname = await background.request({\n          method: UI_RPC_METHOD_KEYNAME_READ,\n          params: [publicKey],\n        });\n      } catch {\n        // No wallet name, might be dehydrated\n        keyname = walletAddressDisplay(publicKey);\n      }\n      setWalletName(keyname);\n      nav.setOptions({ headerTitle: keyname });\n    })();\n  }, []);\n\n  const copyAddress = () => {\n    setTooltipOpen(true);\n    setTimeout(() => setTooltipOpen(false), 1000);\n    navigator.clipboard.writeText(publicKey);\n  };\n\n  const isPrimary = primaryWallets.find((x) => x.publicKey === publicKey)\n    ? true\n    : false;\n\n  const menuItems = {\n    \"Wallet Address\": {\n      onClick: () => copyAddress(),\n      detail: (\n        <WithCopyTooltip tooltipOpen={tooltipOpen}>\n          <div style={{ display: \"flex\" }}>\n            <Typography\n              style={{\n                color: theme.custom.colors.secondary,\n                marginRight: \"8px\",\n              }}\n            >\n              {publicKey.slice(0, 4) +\n                \"...\" +\n                publicKey.slice(publicKey.length - 4)}\n            </Typography>\n            <ContentCopy\n              style={{ width: \"20px\", color: theme.custom.colors.icon }}\n            />\n          </div>\n        </WithCopyTooltip>\n      ),\n    },\n    \"Rename Wallet\": {\n      onClick: () =>\n        nav.push(\"edit-wallets-rename\", {\n          publicKey,\n          name: walletName,\n        }),\n    },\n  };\n\n  const secrets = {\n    \"Show Private Key\": {\n      onClick: () => nav.push(\"show-private-key-warning\", { publicKey }),\n    },\n  };\n\n  const removeWallet = {\n    \"Remove Wallet\": {\n      onClick: () => {\n        if (!isPrimary) {\n          nav.push(\"edit-wallets-remove\", {\n            blockchain,\n            publicKey,\n            name,\n            type,\n          });\n        }\n      },\n      style: {\n        color: theme.custom.colors.negative,\n        opacity: isPrimary ? 0.6 : 1,\n      },\n    },\n  };\n\n  const _isCold = {\n    \"App Signing\": {\n      onClick: async () => {\n        await background.request({\n          method: UI_RPC_METHOD_KEY_IS_COLD_UPDATE,\n          params: [publicKey, !isCold],\n        });\n      },\n      detail: (\n        <ModeSwitch\n          enabled={!isCold}\n          onSwitch={async () => {\n            await background.request({\n              method: UI_RPC_METHOD_KEY_IS_COLD_UPDATE,\n              params: [publicKey, !isCold],\n            });\n          }}\n        />\n      ),\n    },\n  };\n\n  return (\n    <div>\n      {type === \"dehydrated\" ? (\n        <div\n          style={{\n            marginLeft: \"16px\",\n            marginRight: \"16px\",\n            marginBottom: \"32px\",\n          }}\n        >\n          <HeaderIcon icon={<WarningIcon />} />\n          <Typography\n            style={{\n              color: theme.custom.colors.fontColor,\n              fontSize: \"20px\",\n              fontWeight: 500,\n              textAlign: \"center\",\n              marginLeft: \"28px\",\n              marginRight: \"28px\",\n              marginBottom: \"16px\",\n            }}\n          >\n            Some more steps are needed to recover this wallet\n          </Typography>\n          <SecondaryButton\n            label=\"Recover\"\n            onClick={() => {\n              nav.push(\"add-connect-wallet\", {\n                blockchain,\n                publicKey,\n                isRecovery: true,\n              });\n            }}\n          />\n        </div>\n      ) : null}\n      <div>\n        <SettingsList menuItems={menuItems} />\n      </div>\n      {type !== \"dehydrated\" ? <SettingsList menuItems={_isCold} /> : null}\n      {type !== \"hardware\" && type !== \"dehydrated\" ? (\n        <SettingsList menuItems={secrets} />\n      ) : null}\n      <SettingsList menuItems={removeWallet} />\n      <div\n        style={{\n          padding: \"16px\",\n        }}\n      >\n        <PrimaryButton\n          fullWidth\n          label={isPrimary ? \"This is your primary wallet\" : \"Set as primary\"}\n          disabled={isPrimary || type === \"dehydrated\"}\n          onClick={async () => {\n            await fetch(`${BACKEND_API_URL}/users/activePubkey`, {\n              method: \"POST\",\n              body: JSON.stringify({\n                publicKey: publicKey,\n              }),\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n            });\n            setServerPublicKeys((current) =>\n              current.map((c) => {\n                if (c.blockchain !== blockchain) {\n                  return c;\n                }\n                if (c.primary && c.publicKey !== publicKey) {\n                  return {\n                    ...c,\n                    primary: false,\n                  };\n                }\n                if (c.publicKey === publicKey) {\n                  return {\n                    ...c,\n                    primary: true,\n                  };\n                }\n                return c;\n              })\n            );\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","import type { Blockchain } from \"@coral-xyz/common\";\nimport { ListItem } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { MoreHoriz } from \"@mui/icons-material\";\n\nimport { WalletAddress } from \"../../../../common\";\nimport { useNavigation } from \"../../../../common/Layout/NavStack\";\nimport { ImportTypeBadge } from \"../../../../common/WalletList\";\n\nexport const WalletListItem: React.FC<{\n  blockchain: Blockchain;\n  name: string;\n  publicKey: string;\n  type?: string;\n  isFirst: boolean;\n  isLast: boolean;\n  showDetailMenu: boolean;\n  onClick?: () => void;\n}> = ({\n  blockchain,\n  name,\n  publicKey,\n  type,\n  isFirst,\n  isLast,\n  showDetailMenu,\n  onClick,\n}) => {\n  const theme = useCustomTheme();\n  const nav = useNavigation();\n  return (\n    <ListItem\n      button\n      key={publicKey.toString()}\n      isFirst={isFirst}\n      isLast={isLast}\n      detail={\n        showDetailMenu ? (\n          <MoreHoriz\n            style={{\n              cursor: \"pointer\",\n              color: theme.custom.colors.secondary,\n            }}\n          />\n        ) : null\n      }\n      onClick={\n        onClick\n          ? onClick\n          : () =>\n              nav.push(\"edit-wallets-wallet-detail\", {\n                blockchain,\n                publicKey,\n                name,\n                type,\n              })\n      }\n      style={{ height: \"48px\", display: \"flex\", width: \"100%\" }}\n    >\n      <WalletAddress\n        name={name}\n        publicKey={publicKey}\n        style={{\n          fontWeight: 500,\n          lineHeight: \"24px\",\n          fontSize: \"16px\",\n        }}\n        nameStyle={{\n          color: theme.custom.colors.fontColor,\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          maxWidth: \"75px\",\n        }}\n      />\n      {type ? <div\n        style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            marginLeft: \"4px\",\n          }}\n        >\n        <ImportTypeBadge type={type} />\n      </div> : null}\n    </ListItem>\n  );\n};\n","import type { FormEvent } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { UI_RPC_METHOD_KEYRING_EXPORT_SECRET_KEY } from \"@coral-xyz/common\";\nimport {\n  DangerButton,\n  EyeIcon,\n  SecondaryButton,\n  TextInput,\n  WarningIcon,\n} from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport WebIcon from \"@mui/icons-material/Web\";\nimport { Box, List, ListItem, ListItemIcon } from \"@mui/material\";\n\nimport {\n  Header,\n  HeaderIcon,\n  SubtextParagraph,\n  TextField,\n} from \"../../../common\";\nimport { CopyButton } from \"../../../common/Account/MnemonicInput\";\nimport { useDrawerContext } from \"../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\n\nconst useStyles = styles((theme: any) => ({\n  passwordField: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        border: `${theme.custom.colors.borderFull}`,\n      },\n      \"&:hover fieldset\": {\n        border: `solid 2pt ${theme.custom.colors.primaryButton}`,\n      },\n    },\n  },\n  privateKeyField: {\n    borderRadius: \"12px\",\n    border: theme.custom.colors.borderFull,\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        border: `solid 1pt ${theme.custom.colors.border}`,\n      },\n      \"& textarea\": {\n        border: \"none\",\n      },\n      \"&:hover fieldset\": {\n        border: `solid 1pt ${theme.custom.colors.border}`,\n      },\n      \"&.Mui-focused fieldset\": {\n        border: `solid 1pt ${theme.custom.colors.border} !important`,\n      },\n    },\n  },\n  mnemonicInputRoot: {\n    color: theme.custom.colors.secondary,\n    borderRadius: \"8px\",\n    marginTop: \"4px\",\n    \"& .MuiOutlinedInput-root\": {\n      backgroundColor: theme.custom.colors.nav,\n      borderRadius: \"8px\",\n      height: \"40px\",\n      \"& fieldset\": {\n        border: \"none\",\n      },\n    },\n    \"& .MuiInputBase-input\": {\n      color: theme.custom.colors.fontColor,\n      backgroundColor: theme.custom.colors.nav,\n      borderRadius: \"8px\",\n      fontSize: \"12px\",\n      fontWeight: 700,\n    },\n    \"& .MuiInputAdornment-root\": {\n      color: theme.custom.colors.secondary,\n      fontWeight: 500,\n    },\n  },\n  listRoot: {\n    color: theme.custom.colors.fontColor,\n    padding: \"0\",\n    margin: \"0 8px\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\",\n  },\n  listItemRoot: {\n    alignItems: \"start\",\n    borderRadius: \"4px\",\n    background: theme.custom.colors.nav,\n    padding: \"8px\",\n    height: \"56px\",\n    marginBottom: \"1px\",\n    border: `${theme.custom.colors.borderFull}`,\n  },\n  listItemIconRoot: {\n    minWidth: \"inherit\",\n    height: \"20px\",\n    width: \"20px\",\n    marginRight: \"8px\",\n  },\n}));\n\nexport function ShowPrivateKeyWarning({ publicKey }: { publicKey: string }) {\n  const classes = useStyles();\n  const background = useBackgroundClient();\n  const nav = useNavigation();\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const navButton = nav.navButtonRight;\n    nav.setOptions({ headerTitle: \"Show private key\" });\n    return () => {\n      nav.setOptions({ headerRight: navButton });\n    };\n  }, []);\n\n  const next = async (e: FormEvent) => {\n    e.preventDefault();\n\n    let privateKey;\n    try {\n      privateKey = await background.request({\n        method: UI_RPC_METHOD_KEYRING_EXPORT_SECRET_KEY,\n        params: [password, publicKey],\n      });\n    } catch (e) {\n      console.error(e);\n      setError(true);\n      return;\n    }\n    nav.push(\"show-private-key\", { privateKey });\n  };\n\n  return (\n    <form\n      noValidate\n      onSubmit={next}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"32px 24px 0 24px\" }}>\n        <HeaderIcon\n          style={{ width: \"40px\", height: \"40px\", marginBottom: \"24px\" }}\n          icon={<WarningIcon fill=\"#E95050\" width=\"40px\" height=\"40px\" />}\n        />\n        <Header text=\"Warning\" style={{ textAlign: \"center\" }} />\n        <Box sx={{ marginTop: \"24px\" }}>\n          <List className={classes.listRoot}>\n            <ListItem className={classes.listItemRoot}>\n              <ListItemIcon className={classes.listItemIconRoot}>\n                <ChatIcon\n                  htmlColor=\"#EF4444\"\n                  style={{\n                    height: \"20px\",\n                    width: \"20px\",\n                  }}\n                />\n              </ListItemIcon>\n              Backpack support will never ask for your private key.\n            </ListItem>\n            <ListItem className={classes.listItemRoot}>\n              <ListItemIcon className={classes.listItemIconRoot}>\n                <WebIcon\n                  htmlColor=\"#EF4444\"\n                  style={{\n                    height: \"20px\",\n                    width: \"20px\",\n                  }}\n                />\n              </ListItemIcon>\n              Never share your private key or enter it into an app or website.\n            </ListItem>\n            <ListItem className={classes.listItemRoot}>\n              <ListItemIcon className={classes.listItemIconRoot}>\n                <LockOpenIcon\n                  htmlColor=\"#EF4444\"\n                  style={{ height: \"20px\", width: \"20px\" }}\n                />\n              </ListItemIcon>\n              Anyone with your private key will have complete control of your\n              account.\n            </ListItem>\n          </List>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n        }}\n      >\n        <Box sx={{ marginBottom: \"8px\" }}>\n          <TextInput\n            autoFocus\n            error={error}\n            placeholder=\"Password\"\n            inputProps={{ name: \"password\" }}\n            value={password}\n            type=\"password\"\n            setValue={(e) => setPassword(e.target.value)}\n          />\n        </Box>\n        <DangerButton\n          label=\"Show private key\"\n          type=\"submit\"\n          disabled={password.length === 0}\n        />\n      </Box>\n    </form>\n  );\n}\n\nexport function ShowPrivateKey({ privateKey }: { privateKey: string }) {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const { close } = useDrawerContext();\n  const nav = useNavigation();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Private key\" });\n  }, []);\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box>\n        <Box sx={{ margin: \"32px 24px 0 24px\" }}>\n          <HeaderIcon\n            icon={<EyeIcon />}\n            style={{ width: \"40px\", height: \"40px\", marginBottom: \"24px\" }}\n          />\n          <Header text=\"Private key\" style={{ textAlign: \"center\" }} />\n          <SubtextParagraph style={{ textAlign: \"center\", fontSize: \"14px\" }}>\n            Never give out your private key\n          </SubtextParagraph>\n        </Box>\n        <Box sx={{ margin: \"0 16px\" }}>\n          <TextField\n            rows={3}\n            readOnly\n            value={privateKey}\n            rootClass={classes.privateKeyField}\n          />\n          <Box sx={{ marginTop: \"4px\" }}>\n            <CopyButton\n              text={privateKey}\n              icon={\n                <ContentCopyIcon\n                  style={{ color: theme.custom.colors.fontColor }}\n                />\n              }\n              style={{\n                height: \"50px\",\n                border: theme.custom.colors.borderFull,\n              }}\n            />\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n        }}\n      >\n        <SecondaryButton\n          label=\"Close\"\n          onClick={() => close()}\n          style={{\n            border: theme.custom.colors.borderFull,\n            height: \"50px\",\n          }}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import type { FormEvent } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { UI_RPC_METHOD_KEYRING_EXPORT_MNEMONIC } from \"@coral-xyz/common\";\nimport {\n  DangerButton,\n  EyeIcon,\n  SecondaryButton,\n  TextInput,\n  WarningIcon,\n} from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport WebIcon from \"@mui/icons-material/Web\";\nimport { Box, List, ListItem, ListItemIcon } from \"@mui/material\";\n\nimport { Header, HeaderIcon, SubtextParagraph } from \"../../../common\";\nimport {\n  CopyButton,\n  MnemonicInputFields,\n} from \"../../../common/Account/MnemonicInput\";\nimport { useDrawerContext } from \"../../../common/Layout/Drawer\";\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\n\nconst useStyles = styles((theme: any) => ({\n  listRoot: {\n    color: theme.custom.colors.fontColor,\n    padding: \"0\",\n    margin: \"0 8px\",\n    borderRadius: \"4px\",\n    fontSize: \"14px\",\n  },\n  listItemRoot: {\n    border: `${theme.custom.colors.borderFull}`,\n    alignItems: \"start\",\n    borderRadius: \"4px\",\n    background: theme.custom.colors.nav,\n    padding: \"8px\",\n    minHeight: \"56px\",\n    marginBottom: \"1px\",\n  },\n  listItemIconRoot: {\n    minWidth: \"inherit\",\n    height: \"20px\",\n    width: \"20px\",\n    marginRight: \"8px\",\n  },\n}));\n\nexport function ShowRecoveryPhraseWarning() {\n  const classes = useStyles();\n  const background = useBackgroundClient();\n  const nav = useNavigation();\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const navButton = nav.navButtonRight;\n    nav.setOptions({\n      headerTitle: \"Secret recovery phrase\",\n    });\n    return () => {\n      nav.setOptions({ headerRight: navButton });\n    };\n  }, []);\n\n  const next = async (e: FormEvent) => {\n    e.preventDefault();\n\n    let mnemonic;\n    try {\n      mnemonic = await background.request({\n        method: UI_RPC_METHOD_KEYRING_EXPORT_MNEMONIC,\n        params: [password],\n      });\n    } catch (e) {\n      console.error(e);\n      setError(true);\n      return;\n    }\n    nav.push(\"show-secret-phrase\", { mnemonic });\n  };\n\n  return (\n    <form\n      noValidate\n      onSubmit={next}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"32px 24px 0 24px\" }}>\n        <HeaderIcon\n          style={{ width: \"40px\", height: \"40px\", marginBottom: \"24px\" }}\n          icon={<WarningIcon fill=\"#E95050\" width=\"40px\" height=\"40px\" />}\n        />\n        <Header text=\"Warning\" style={{ textAlign: \"center\" }} />\n        <Box sx={{ marginTop: \"24px\" }}>\n          <List className={classes.listRoot}>\n            <ListItem className={classes.listItemRoot}>\n              <ListItemIcon className={classes.listItemIconRoot}>\n                <ChatIcon\n                  htmlColor=\"#EF4444\"\n                  style={{\n                    height: \"20px\",\n                    width: \"20px\",\n                  }}\n                />\n              </ListItemIcon>\n              Backpack support will never ask for your secret phrase.\n            </ListItem>\n            <ListItem className={classes.listItemRoot}>\n              <ListItemIcon className={classes.listItemIconRoot}>\n                <WebIcon\n                  htmlColor=\"#EF4444\"\n                  style={{\n                    height: \"20px\",\n                    width: \"20px\",\n                  }}\n                />\n              </ListItemIcon>\n              Never share your secret phrase or enter it into an app or website.\n            </ListItem>\n            <ListItem className={classes.listItemRoot}>\n              <ListItemIcon className={classes.listItemIconRoot}>\n                <LockOpenIcon\n                  htmlColor=\"#EF4444\"\n                  style={{ height: \"20px\", width: \"20px\" }}\n                />\n              </ListItemIcon>\n              Anyone with your secret phrase will have complete control of your\n              account.\n            </ListItem>\n          </List>\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n        }}\n      >\n        <Box sx={{ marginBottom: \"8px\" }}>\n          <TextInput\n            autoFocus\n            value={password}\n            setValue={(e) => setPassword(e.target.value)}\n            error={error}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </Box>\n        <DangerButton\n          label=\"Show phrase\"\n          type=\"submit\"\n          disabled={password.length === 0}\n        />\n      </Box>\n    </form>\n  );\n}\n\nexport function ShowRecoveryPhrase({ mnemonic }: { mnemonic: string }) {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const { close } = useDrawerContext();\n  const mnemonicWords = mnemonic.split(\" \");\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"32px 16px 0 16px\" }}>\n        <HeaderIcon\n          icon={<EyeIcon />}\n          style={{ width: \"40px\", height: \"40px\", marginBottom: \"24px\" }}\n        />\n        <Header text=\"Recovery phrase\" style={{ textAlign: \"center\" }} />\n        <SubtextParagraph style={{ textAlign: \"center\", fontSize: \"14px\" }}>\n          Use these {mnemonicWords.length} words to recover your wallet\n        </SubtextParagraph>\n        <MnemonicInputFields\n          mnemonicWords={mnemonicWords}\n          rootClass={classes.mnemonicInputRoot}\n        />\n        <Box sx={{ marginTop: \"4px\" }}>\n          <CopyButton\n            text={mnemonic}\n            icon={\n              <ContentCopyIcon\n                style={{ color: theme.custom.colors.fontColor }}\n              />\n            }\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n        }}\n      >\n        <SecondaryButton label=\"Close\" onClick={() => close()} />\n      </Box>\n    </Box>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useKeyringHasMnemonic } from \"@coral-xyz/recoil\";\n\nimport { useNavigation } from \"../../../common/Layout/NavStack\";\nimport { SettingsList } from \"../../../common/Settings/List\";\n\nexport function YourAccount() {\n  const nav = useNavigation();\n  const hasMnemonic = useKeyringHasMnemonic();\n\n  const menuItems = {\n    \"Change Password\": {\n      onClick: () => nav.push(\"change-password\"),\n    },\n    ...(hasMnemonic\n      ? {\n          \"Show Secret Recovery Phrase\": {\n            onClick: () => nav.push(\"show-secret-phrase-warning\"),\n          },\n        }\n      : {}),\n    Remove: {\n      onClick: () => nav.push(\"logout\"),\n    },\n  };\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Your Account\" });\n  }, []);\n\n  return <SettingsList menuItems={menuItems} />;\n}\n","import { Suspense, useEffect } from \"react\";\nimport {\n  BACKPACK_FEATURE_XNFT,\n  UI_RPC_METHOD_KEYRING_STORE_LOCK,\n} from \"@coral-xyz/common\";\nimport {\n  ContactsIcon,\n  GridIcon,\n  List,\n  ListItem,\n  PushDetail,\n} from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport {\n  AccountCircleOutlined,\n  Lock,\n  Search,\n  Settings,\n} from \"@mui/icons-material\";\nimport AccountBalanceWalletIcon from \"@mui/icons-material/AccountBalanceWallet\";\nimport { IconButton,Typography } from \"@mui/material\";\n\nimport { useNavigation } from \"../../common/Layout/NavStack\";\nimport { RecentActivityButton } from \"../../Unlocked/Balances/RecentActivity\";\nimport { NotificationButton } from \"../Balances/Notifications\";\n\nimport { AvatarHeader } from \"./AvatarHeader/AvatarHeader\";\nimport { AvatarPopoverButton } from \"./AvatarPopover\";\n\nexport function SettingsButton() {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <SearchButton />\n      <RecentActivityButton />\n      <NotificationButton />\n      <div style={{ width: \"16px\" }} />\n      <AvatarPopoverButton />\n    </div>\n  );\n}\n\nfunction SearchButton() {\n  const theme = useCustomTheme();\n  return (\n    <IconButton\n      disableRipple\n      sx={{\n        padding: 0,\n        width: \"24px\",\n        \"&:hover\": {\n          background: \"transparent\",\n        },\n      }}\n      size=\"large\"\n      onClick={() => {\n        document.dispatchEvent(\n          new KeyboardEvent(\"keydown\", { key: \"k\", metaKey: true })\n        );\n      }}\n    >\n      <Search\n        style={{\n          color: theme.custom.colors.icon,\n          backgroundColor: \"transparent\",\n          borderRadius: \"12px\",\n        }}\n      />\n    </IconButton>\n  );\n}\n\nexport function SettingsMenu() {\n  const nav = useNavigation();\n\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"\" });\n  }, [nav.setOptions]);\n\n  return (\n    <Suspense fallback={<div />}>\n      <_SettingsContent />\n    </Suspense>\n  );\n}\n\nfunction _SettingsContent() {\n  return (\n    <div>\n      <AvatarHeader />\n      <SettingsList />\n    </div>\n  );\n}\n\nfunction SettingsList() {\n  const theme = useCustomTheme();\n  const nav = useNavigation();\n  const background = useBackgroundClient();\n\n  const lockWallet = () => {\n    background\n      .request({\n        method: UI_RPC_METHOD_KEYRING_STORE_LOCK,\n        params: [],\n      })\n      .catch(console.error);\n  };\n\n  const walletsMenu = [\n    {\n      label: \"Wallets\",\n      onClick: () => nav.push(\"edit-wallets\"),\n      icon: (props: any) => <AccountBalanceWalletIcon {...props} />,\n      detailIcon: <PushDetail />,\n    },\n  ];\n\n  const settingsMenu = [\n    {\n      label: \"Your Account\",\n      onClick: () => nav.push(\"your-account\"),\n      icon: (props: any) => <AccountCircleOutlined {...props} />,\n      detailIcon: <PushDetail />,\n    },\n    {\n      label: \"Preferences\",\n      onClick: () => nav.push(\"preferences\"),\n      icon: (props: any) => <Settings {...props} />,\n      detailIcon: <PushDetail />,\n    },\n  ];\n\n  settingsMenu.push({\n    label: \"Friends\",\n    onClick: () => nav.push(\"contacts\"),\n    icon: (props: any) => <ContactsIcon {...props} />,\n    detailIcon: <PushDetail />,\n  });\n\n  if (BACKPACK_FEATURE_XNFT) {\n    settingsMenu.push({\n      label: \"xNFTs\",\n      onClick: () => nav.push(\"xnfts\"),\n      icon: (props: any) => (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <GridIcon\n            {...props}\n            style={{ ...props.style, width: \"24px\", height: \"20px\" }}\n          />\n        </div>\n      ),\n      detailIcon: <PushDetail />,\n    });\n  }\n  settingsMenu.push({\n    label: \"Lock\",\n    onClick: () => lockWallet(),\n    icon: (props: any) => <Lock {...props} />,\n    detailIcon: null as unknown as JSX.Element,\n  });\n\n  const aboutList = [\n    {\n      label: \"About Backpack\",\n      onClick: () => nav.push(\"about-backpack\"),\n      icon: null,\n      detailIcon: <PushDetail />,\n    },\n  ];\n\n  return (\n    <>\n      <List\n        style={{\n          marginTop: \"24px\",\n          marginBottom: \"16px\",\n          border: `${theme.custom.colors.borderFull}`,\n          borderRadius: \"10px\",\n        }}\n      >\n        {walletsMenu.map((s, idx) => {\n          return (\n            <ListItem\n              key={s.label}\n              isFirst={idx === 0}\n              isLast={idx === walletsMenu.length - 1}\n              onClick={s.onClick}\n              id={s.label}\n              style={{\n                height: \"44px\",\n                padding: \"12px\",\n              }}\n              detail={s.detailIcon}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flex: 1,\n                }}\n              >\n                {s.icon({\n                  style: {\n                    color: theme.custom.colors.icon,\n                    height: \"24px\",\n                    width: \"24px\",\n                  },\n                  fill: theme.custom.colors.icon,\n                })}\n                <Typography\n                  style={{\n                    marginLeft: \"8px\",\n                    fontWeight: 500,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }}\n                >\n                  {s.label}\n                </Typography>\n              </div>\n            </ListItem>\n          );\n        })}\n      </List>\n      <List\n        style={{\n          marginTop: \"12px\",\n          marginBottom: \"16px\",\n          border: `${theme.custom.colors.borderFull}`,\n          borderRadius: \"10px\",\n        }}\n      >\n        {settingsMenu.map((s, idx) => {\n          return (\n            <ListItem\n              key={s.label}\n              isFirst={idx === 0}\n              isLast={idx === settingsMenu.length - 1}\n              onClick={s.onClick}\n              id={s.label}\n              style={{\n                height: \"44px\",\n                padding: \"12px\",\n              }}\n              detail={s.detailIcon}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flex: 1,\n                }}\n              >\n                {s.icon({\n                  style: {\n                    color: theme.custom.colors.icon,\n                    marginRight: \"8px\",\n                    height: \"24px\",\n                    width: \"24px\",\n                  },\n                  fill: theme.custom.colors.icon,\n                })}\n                <Typography\n                  style={{\n                    fontWeight: 500,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }}\n                >\n                  {s.label}\n                </Typography>\n              </div>\n            </ListItem>\n          );\n        })}\n      </List>\n      <List\n        style={{\n          marginTop: \"12px\",\n          marginBottom: \"16px\",\n          border: `${theme.custom.colors.borderFull}`,\n          borderRadius: \"10px\",\n        }}\n      >\n        {aboutList.map((s, idx) => {\n          return (\n            <ListItem\n              key={s.label}\n              isFirst={idx === 0}\n              isLast={idx === aboutList.length - 1}\n              onClick={s.onClick}\n              id={s.label}\n              style={{\n                height: \"44px\",\n                padding: \"12px\",\n              }}\n              detail={s.detailIcon}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flex: 1,\n                }}\n              >\n                <Typography\n                  style={{\n                    marginLeft: \"8px\",\n                    fontWeight: 500,\n                    fontSize: \"16px\",\n                    lineHeight: \"24px\",\n                  }}\n                >\n                  {s.label}\n                </Typography>\n              </div>\n            </ListItem>\n          );\n        })}\n      </List>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  Blockchain,\n  SOL_NATIVE_MINT,\n  toDisplayBalance,\n  WSOL_MINT,\n} from \"@coral-xyz/common\";\nimport {\n  CheckIcon,\n  CrossIcon,\n  DangerButton,\n  Loading,\n  MaxLabel,\n  PrimaryButton,\n  SecondaryButton,\n  TextFieldLabel,\n} from \"@coral-xyz/react-common\";\nimport type {\n  SwapContext,\n  TokenData,\n  TokenDataWithPrice,\n} from \"@coral-xyz/recoil\";\nimport {\n  useActiveWallet,\n  useDarkMode,\n  useJupiterOutputTokens,\n  useSwapContext,\n} from \"@coral-xyz/recoil\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { ExpandMore, SwapVert as SwitchIcon } from \"@mui/icons-material\";\nimport Info from \"@mui/icons-material/Info\";\nimport {\n  IconButton,\n  InputAdornment,\n  Skeleton,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport type { BigNumberish } from \"ethers\";\nimport { ethers,FixedNumber } from \"ethers\";\n\nimport { Button as XnftButton } from \"../../plugin/Component\";\nimport { TextField } from \"../common\";\nimport { ApproveTransactionDrawer } from \"../common/ApproveTransactionDrawer\";\nimport { BottomCard } from \"../common/Layout/BottomCard\";\nimport { useDrawerContext } from \"../common/Layout/Drawer\";\nimport { useNavigation } from \"../common/Layout/NavStack\";\nimport { TokenAmountHeader } from \"../common/TokenAmountHeader\";\nimport { TokenInputField } from \"../common/TokenInput\";\nimport type { Token } from \"../common/TokenTable\";\nimport { SearchableTokenTable } from \"../common/TokenTable\";\nimport { WalletDrawerButton } from \"../common/WalletList\";\n\nconst { Zero } = ethers.constants;\n\nconst useStyles = styles((theme) => ({\n  tooltipIcon: {\n    color: theme.custom.colors.secondary,\n    height: 14,\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  topHalf: {\n    paddingTop: \"24px\",\n    paddingBottom: \"38px\",\n    marginLeft: \"16px\",\n    marginRight: \"16px\",\n  },\n  bottomHalfWrapper: {\n    borderTop: `${theme.custom.colors.borderFull}`,\n    backgroundColor: theme.custom.colors.bg3,\n    flex: 1,\n    paddingBottom: \"16px\",\n    paddingTop: \"38px\",\n    borderTopLeftRadius: \"12px\",\n    borderTopRightRadius: \"12px\",\n    position: \"relative\",\n  },\n  bottomHalf: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    margin: \"0 16px 16px 16px\",\n    height: \"100%\",\n  },\n  fromFieldRoot: {\n    marginTop: 0,\n    marginBottom: 0,\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        border: `${theme.custom.colors.borderFull}`,\n      },\n      \"&:hover fieldset\": {\n        border: `solid 2pt ${theme.custom.colors.primaryButton}`,\n      },\n      \"& input\": {\n        border: \"none\",\n      },\n    },\n  },\n  receiveFieldRoot: {\n    marginTop: 0,\n    marginBottom: 0,\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        border: `${theme.custom.colors.borderFull} !important`,\n      },\n      \"&:hover fieldset\": {\n        border: `${theme.custom.colors.borderFull}`, // Prevent hover from changing border.\n      },\n      \"& input\": {\n        border: \"none\",\n      },\n    },\n    \"& .MuiInputBase-input.Mui-disabled\": {\n      // Override disabled font color\n      WebkitTextFillColor: `${theme.custom.colors.secondary} !important`,\n    },\n  },\n  switchTokensContainer: {\n    backgroundColor: theme.custom.colors.switchTokensButton,\n    width: \"44px\",\n    height: \"44px\",\n    zIndex: 2,\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    borderRadius: \"22px\",\n    position: \"fixed\",\n    top: 175,\n    left: 24,\n  },\n  switchTokensButton: {\n    border: `${theme.custom.colors.borderFull}`,\n    width: \"44px\",\n    height: \"44px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  switchIcon: {\n    color: theme.custom.colors.icon,\n  },\n  cannotSwitch: {\n    border: \"2px solid red\",\n  },\n  loadingContainer: {\n    backgroundColor: theme.custom.colors.nav,\n    width: \"38px\",\n    height: \"38px\",\n    borderRadius: \"19px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  tokenSelectorButton: {\n    display: \"flex\",\n  },\n  tokenSelectorButtonLabel: {\n    color: theme.custom.colors.fontColor,\n    fontSize: \"14px\",\n    fontWeight: 600,\n    lineHeight: \"24px\",\n  },\n  expandMore: {\n    color: theme.custom.colors.secondary,\n    fontSize: \"18px\",\n    marginLeft: \"6px\",\n  },\n  tokenLogo: {\n    marginRight: \"8px\",\n    width: \"20px\",\n    height: \"20px\",\n    borderRadius: \"10px\",\n  },\n  tokenLogoLarge: {\n    marginRight: \"8px\",\n    width: \"32px\",\n    height: \"32px\",\n    borderRadius: \"10px\",\n  },\n  confirmationTitle: {\n    color: theme.custom.colors.secondary,\n    fontSize: \"14px\",\n    fontWeight: 500,\n    lineHeight: \"20px\",\n    textAlign: \"center\",\n  },\n  confirmationAmount: {\n    color: theme.custom.colors.fontColor,\n    fontSize: \"24px\",\n    fontWeight: 500,\n    lineHeight: \"32px\",\n    textAlign: \"center\",\n  },\n  swapInfoRow: {\n    marginBottom: \"8px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  swapInfoTitleLeft: {\n    color: theme.custom.colors.secondary,\n    lineHeight: \"20px\",\n    fontSize: \"14px\",\n    fontWeight: 500,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  swapInfoTitleRight: {\n    color: theme.custom.colors.fontColor,\n    lineHeight: \"20px\",\n    fontSize: \"14px\",\n    fontWeight: 500,\n  },\n  feesTooltipTable: {\n    tableCollapse: \"collapse\",\n  },\n  feesTooltipTableHeading: {\n    fontWeight: 500,\n    textAlign: \"left\",\n    paddingRight: 10,\n  },\n  feesTooltipTableValue: {\n    textAlign: \"right\",\n  },\n}));\n\nenum SwapState {\n  INITIAL,\n  CONFIRMATION,\n  CONFIRMING,\n  CONFIRMED,\n  ERROR,\n}\n\nexport function Swap({ blockchain }: { blockchain: Blockchain }) {\n  const isDark = useDarkMode();\n  const nav = useNavigation();\n\n  useEffect(() => {\n    nav.setOptions({\n      headerTitle: \"Swap\",\n      style: isDark ? { background: \"#1D1D20\" } : undefined,\n    });\n  }, [nav, isDark]);\n\n  if (blockchain && blockchain !== Blockchain.SOLANA) {\n    throw new Error(\"only Solana swaps are supported currently\");\n  }\n\n  return <_Swap />;\n}\n\nfunction _Swap() {\n  const isDark = useDarkMode();\n  const classes = useStyles();\n  const { swapToFromMints, fromToken, canSwitch } = useSwapContext();\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const { close } = useDrawerContext();\n\n  const isLoading = !fromToken;\n\n  const onSubmit = (e: any) => {\n    e.preventDefault();\n    setOpenDrawer(true);\n  };\n\n  const onViewBalances = () => {\n    setOpenDrawer(false);\n    close();\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={onSubmit}\n        className={classes.container}\n        style={isDark ? { background: \"#1D1D20\" } : undefined}\n        noValidate\n      >\n        <div className={classes.topHalf}>\n          <SwitchTokensButton disabled={!canSwitch} onClick={swapToFromMints} />\n          {isLoading ? (\n            <Skeleton height={80} style={{ borderRadius: \"12px\" }} />\n          ) : (\n            <InputTextField />\n          )}\n        </div>\n        <div className={classes.bottomHalfWrapper}>\n          <div className={classes.bottomHalf}>\n            {isLoading ? (\n              <Skeleton height={80} style={{ borderRadius: \"12px\" }} />\n            ) : (\n              <div>\n                <OutputTextField />\n                <div\n                  style={{\n                    marginTop: \"24px\",\n                    marginLeft: \"8px\",\n                    marginRight: \"8px\",\n                  }}\n                >\n                  <SwapInfo />\n                </div>\n              </div>\n            )}\n            <ConfirmSwapButton />\n          </div>\n        </div>\n      </form>\n      <ApproveTransactionDrawer\n        openDrawer={openDrawer}\n        setOpenDrawer={setOpenDrawer}\n      >\n        <SwapConfirmationCard\n          onClose={() => setOpenDrawer(false)}\n          onViewBalances={() => onViewBalances()}\n        />\n      </ApproveTransactionDrawer>\n    </>\n  );\n}\n\nconst SwapConfirmationCard: React.FC<{\n  onClose: () => void;\n  onViewBalances: () => void;\n}> = ({ onClose, onViewBalances }) => {\n  const { executeSwap } = useSwapContext();\n  const [swapState, setSwapState] = useState(SwapState.CONFIRMATION);\n\n  const onConfirm = async () => {\n    setSwapState(SwapState.CONFIRMING);\n    const result = await executeSwap();\n    if (result) {\n      setSwapState(SwapState.CONFIRMED);\n    } else {\n      setSwapState(SwapState.ERROR);\n    }\n  };\n\n  return (\n    <div>\n      {swapState === SwapState.CONFIRMATION ? (\n        <SwapConfirmation onConfirm={onConfirm} />\n      ) : null}\n      {swapState === SwapState.CONFIRMING ? (\n        <SwapConfirming isConfirmed={false} onViewBalances={onViewBalances} />\n      ) : null}\n      {swapState === SwapState.CONFIRMED ? (\n        <SwapConfirming isConfirmed onViewBalances={onViewBalances} />\n      ) : null}\n      {swapState === SwapState.ERROR ? (\n        <SwapError onCancel={() => onClose()} onRetry={onConfirm} />\n      ) : null}\n    </div>\n  );\n};\n\nfunction InputTextField() {\n  const classes = useStyles();\n  const {\n    fromAmount,\n    setFromAmount,\n    fromToken,\n    availableForSwap,\n    exceedsBalance,\n  } = useSwapContext();\n\n  return (\n    <>\n      <TextFieldLabel\n        leftLabel=\"Sending\"\n        rightLabelComponent={\n          <MaxLabel\n            amount={availableForSwap}\n            onSetAmount={setFromAmount}\n            decimals={fromToken!.decimals}\n          />\n        }\n      />\n      <TokenInputField\n        type=\"number\"\n        placeholder=\"0\"\n        endAdornment={<InputTokenSelectorButton />}\n        rootClass={classes.fromFieldRoot}\n        value={fromAmount}\n        setValue={setFromAmount}\n        decimals={fromToken!.decimals}\n        isError={exceedsBalance}\n      />\n    </>\n  );\n}\n\nfunction OutputTextField() {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const { toAmount, toToken, isLoadingRoutes } = useSwapContext();\n  return (\n    <>\n      <TextFieldLabel leftLabel=\"Receiving\" />\n      <TextField\n        placeholder=\"0\"\n        startAdornment={\n          isLoadingRoutes ? (\n            <Loading\n              iconStyle={{\n                display: \"flex\",\n                color: theme.custom.colors.secondary,\n                marginRight: \"10px\",\n              }}\n              size={24}\n              thickness={5}\n            />\n          ) : null\n        }\n        endAdornment={<OutputTokensSelectorButton />}\n        rootClass={classes.receiveFieldRoot}\n        type=\"number\"\n        value={\n          toAmount && toToken\n            ? ethers.utils.formatUnits(toAmount, toToken.decimals)\n            : \"\"\n        }\n        disabled\n        inputProps={{\n          style: {\n            textFill: `${theme.custom.colors.fontColor} !important`,\n          },\n        }}\n      />\n    </>\n  );\n}\n\nconst SwapUnavailableButton = () => {\n  return <DangerButton label=\"Swaps unavailable\" disabled />;\n};\n\nconst SwapInvalidButton = () => {\n  return <DangerButton label=\"Invalid swap\" disabled />;\n};\n\nconst InsufficientBalanceButton = () => {\n  return <DangerButton label=\"Insufficient balance\" disabled />;\n};\n\nconst InsufficientFeeButton = () => {\n  return <DangerButton label=\"Insufficient balance for fee\" disabled />;\n};\n\nconst ConfirmSwapButton = () => {\n  const {\n    toAmount,\n    toMint,\n    fromAmount,\n    fromMint,\n    isJupiterError,\n    exceedsBalance,\n    feeExceedsBalance,\n    isLoadingRoutes,\n    isLoadingTransactions,\n  } = useSwapContext();\n  const tokenAccounts = useJupiterOutputTokens(fromMint);\n\n  // Parameters aren't all entered or the swap data is loading\n  const isIncomplete =\n    !fromAmount || !toAmount || isLoadingRoutes || isLoadingTransactions;\n\n  if (fromMint === toMint) {\n    return <SwapInvalidButton />;\n  } else if (exceedsBalance) {\n    return <InsufficientBalanceButton />;\n  } else if (feeExceedsBalance && !isIncomplete) {\n    return <InsufficientFeeButton />;\n  } else if (isJupiterError || tokenAccounts.length === 0) {\n    return <SwapUnavailableButton />;\n  }\n\n  let label;\n  if (fromMint === SOL_NATIVE_MINT && toMint === WSOL_MINT) {\n    label = \"Wrap\";\n  } else if (fromMint === WSOL_MINT && toMint === SOL_NATIVE_MINT) {\n    label = \"Unwrap\";\n  } else {\n    label = \"Review\";\n  }\n\n  return <PrimaryButton type=\"submit\" label={label} disabled={isIncomplete} />;\n};\n\n//\n// Bottom drawer displayed so the user can confirm the swap parameters.\n//\nfunction SwapConfirmation({ onConfirm }: { onConfirm: () => void }) {\n  const classes = useStyles();\n  return (\n    <BottomCard onButtonClick={onConfirm} buttonLabel=\"Confirm\">\n      <Typography\n        className={classes.confirmationTitle}\n        style={{ marginTop: \"32px\" }}\n      >\n        You Receive\n      </Typography>\n      <div style={{ marginTop: \"8px\", marginBottom: \"38px\" }}>\n        <SwapReceiveAmount />\n      </div>\n      <div style={{ margin: \"24px 24px 68px 24px\" }}>\n        <SwapInfo compact={false} />\n      </div>\n    </BottomCard>\n  );\n}\n\n//\n// Bottom card that is displayed while the swap is confirming (i.e. transactions\n// are being submitted/confirmed)\n//\nfunction SwapConfirming({\n  isConfirmed,\n  onViewBalances,\n}: {\n  isConfirmed: boolean;\n  onViewBalances: () => void;\n}) {\n  const classes = useStyles();\n\n  return (\n    <div\n      style={{\n        height: \"264px\",\n        paddingTop: \"52px\",\n        position: \"relative\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <div>\n        <Typography className={classes.confirmationTitle}>\n          {isConfirmed ? \"Swap Confirmed!\" : \"Swapping..\"}\n        </Typography>\n        <div style={{ marginTop: \"8px\", marginBottom: \"16px\" }}>\n          <SwapReceiveAmount />\n        </div>\n        <div\n          style={{\n            flex: 1,\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          {isConfirmed ? (\n            <div\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <CheckIcon />\n            </div>\n          ) : (\n            <Loading\n              size={48}\n              iconStyle={{\n                display: \"flex\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n              }}\n              thickness={6}\n            />\n          )}\n        </div>\n      </div>\n      {isConfirmed ? (\n        <div\n          style={{\n            marginBottom: \"16px\",\n            marginLeft: \"16px\",\n            marginRight: \"16px\",\n          }}\n        >\n          <SecondaryButton\n            onClick={() => onViewBalances()}\n            label=\"View Balances\"\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\n//\n// Bottom card displayed on swap error.\n//\nfunction SwapError({ onRetry, onCancel }: any) {\n  const classes = useStyles();\n  return (\n    <BottomCard\n      buttonLabel=\"Retry\"\n      onButtonClick={onRetry}\n      cancelButtonLabel=\"Back\"\n      onCancelButtonClick={onCancel}\n    >\n      <Typography\n        className={classes.confirmationTitle}\n        style={{ marginTop: \"40px\", marginBottom: \"16px\" }}\n      >\n        Error :(\n      </Typography>\n      <div style={{ textAlign: \"center\", marginBottom: \"24px\" }}>\n        <CrossIcon />\n      </div>\n    </BottomCard>\n  );\n}\n\nfunction SwapReceiveAmount() {\n  const { toAmount, toToken } = useSwapContext();\n  return (\n    <TokenAmountHeader\n      token={{\n        logo: toToken!.logo,\n        ticker: toToken!.ticker,\n        decimals: toToken!.decimals,\n      }}\n      amount={toAmount!}\n    />\n  );\n}\n\nfunction SwapInfo({ compact = true }: { compact?: boolean }) {\n  const {\n    fromAmount,\n    toAmount,\n    fromToken,\n    toToken,\n    priceImpactPct,\n    isLoadingRoutes,\n    isLoadingTransactions,\n    transactionFees,\n    swapFee,\n  } = useSwapContext();\n\n  // Loading indicator when routes are being loaded due to polling\n  if (isLoadingRoutes || isLoadingTransactions) {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <Loading\n          size={48}\n          iconStyle={{\n            margin: \"32px 0\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          thickness={6}\n        />\n      </div>\n    );\n  }\n\n  if (!fromAmount || !toAmount || !fromToken || !toToken) {\n    return (\n      <SwapInfoRows\n        {...{\n          compact,\n          youPay: \"-\",\n          rate: \"-\",\n          priceImpact: \"-\",\n          networkFee: \"-\",\n        }}\n      />\n    );\n  }\n\n  const decimalDifference = fromToken.decimals - toToken.decimals;\n\n  // Scale a FixedNumber up or down by a number of decimals\n  const scale = (x: FixedNumber, decimalDifference: number) => {\n    if (decimalDifference > 0) {\n      return x.mulUnsafe(FixedNumber.from(10 ** decimalDifference));\n    } else if (decimalDifference < 0) {\n      return x.divUnsafe(FixedNumber.from(10 ** Math.abs(decimalDifference)));\n    }\n    return x;\n  };\n\n  const rate = fromAmount.gt(Zero)\n    ? ethers.utils.commify(\n        scale(\n          FixedNumber.from(toAmount).divUnsafe(FixedNumber.from(fromAmount)),\n          decimalDifference\n        ).toString()\n      )\n    : \"0\";\n\n  return (\n    <SwapInfoRows\n      {...{\n        compact,\n        youPay: `${toDisplayBalance(fromAmount, fromToken.decimals)} ${\n          fromToken.ticker\n        }`,\n        rate: `1 ${fromToken.ticker} ≈ ${rate.substring(0, 10)} ${\n          toToken.ticker\n        }`,\n        priceImpact: `${\n          priceImpactPct === 0\n            ? 0\n            : priceImpactPct > 0.1\n            ? priceImpactPct.toFixed(2)\n            : \"< 0.1\"\n        }%`,\n        networkFee: transactionFees\n          ? `~ ${approximateAmount(transactionFees.total)} SOL`\n          : \"-\",\n        swapFee,\n        transactionFees,\n      }}\n    />\n  );\n}\n\ntype SwapInfoRowProps = {\n  label: string;\n  value: string | React.ReactElement;\n  tooltip?: string;\n};\n\nfunction SwapInfoRows({\n  youPay,\n  rate,\n  networkFee,\n  priceImpact,\n  compact,\n  swapFee,\n  transactionFees,\n}: {\n  youPay: any;\n  rate: any;\n  priceImpact: any;\n  networkFee: any;\n  compact?: boolean;\n  swapFee?: SwapContext[\"swapFee\"];\n  transactionFees?: SwapContext[\"transactionFees\"];\n}) {\n  const classes = useStyles();\n  const wallet = useActiveWallet();\n\n  const rows: Array<SwapInfoRowProps> = [\n    {\n      label: \"Wallet\",\n      value: <WalletDrawerButton wallet={wallet} style={{ height: \"20px\" }} />,\n    },\n  ];\n\n  if (!compact) {\n    rows.push({ label: \"You Pay\", value: youPay });\n  }\n\n  rows.push({ label: \"Rate\", value: rate });\n  rows.push({\n    label: \"Estimated Fees\",\n    value: networkFee,\n    // @ts-ignore - tooltip's supposed to be a string, can be a component for now\n    tooltip:\n      transactionFees && swapFee ? (\n        <table className={classes.feesTooltipTable}>\n          <tbody>\n            {Object.entries(transactionFees?.fees ?? {}).map(\n              ([description, value]) => (\n                <tr key={description}>\n                  <th className={classes.feesTooltipTableHeading}>\n                    {description}\n                  </th>\n                  <td className={classes.feesTooltipTableValue}>\n                    {approximateAmount(value)} SOL\n                  </td>\n                </tr>\n              )\n            )}\n            {swapFee.pct > 0 ? (\n              <tr>\n                <td colSpan={2} style={{ opacity: 0.5 }}>\n                  Quote includes a {swapFee.pct}% Backpack fee\n                </td>\n              </tr>\n            ) : null}\n          </tbody>\n        </table>\n      ) : null,\n  });\n  rows.push({ label: \"Price Impact\", value: priceImpact });\n\n  return (\n    <>\n      {rows.map((row) => (\n        <SwapInfoRow key={row.label} {...row} />\n      ))}\n    </>\n  );\n}\n\nconst SwapInfoRow = ({ label, value, tooltip }: SwapInfoRowProps) => {\n  const classes = useStyles();\n  // show tooltip when user hovers on the label text, not just the icon\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n  return (\n    <div className={classes.swapInfoRow}>\n      <div\n        onMouseOver={() => setTooltipVisible(true)}\n        onMouseOut={() => setTooltipVisible(false)}\n      >\n        <Typography className={classes.swapInfoTitleLeft}>\n          {label}\n          {tooltip ? (\n            <Tooltip title={tooltip} arrow open={tooltipVisible}>\n              <Info className={classes.tooltipIcon} />\n            </Tooltip>\n          ) : null}\n        </Typography>\n      </div>\n      <Typography className={classes.swapInfoTitleRight}>{value}</Typography>\n    </div>\n  );\n};\n\nfunction SwitchTokensButton({\n  onClick,\n  disabled = false,\n}: {\n  onClick: () => void;\n  disabled?: Boolean;\n}) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.switchTokensContainer}>\n      <IconButton\n        disableRipple\n        className={classes.switchTokensButton}\n        onClick={onClick}\n        disabled={Boolean(disabled)}\n      >\n        <SwitchIcon className={classes.switchIcon} />\n      </IconButton>\n    </div>\n  );\n}\n\nfunction InputTokenSelectorButton() {\n  const { fromToken, setFromMint } = useSwapContext();\n  return <TokenSelectorButton token={fromToken!} input setMint={setFromMint} />;\n}\n\nfunction OutputTokensSelectorButton() {\n  const { toToken, setToMint } = useSwapContext();\n  return (\n    <TokenSelectorButton token={toToken!} setMint={setToMint} input={false} />\n  );\n}\n\nfunction TokenSelectorButton({\n  token,\n  setMint,\n  input,\n}: {\n  token: TokenData;\n  setMint: (mint: string) => void;\n  input: boolean;\n}) {\n  const classes = useStyles();\n  const nav = useNavigation();\n\n  return (\n    <InputAdornment position=\"end\">\n      <XnftButton\n        onClick={() =>\n          nav.push(\"select-token\", {\n            // @ts-ignore\n            setMint: (...args: any) => setMint(...args),\n            input,\n          })\n        }\n        style={{\n          backgroundColor: \"transparent\",\n          width: \"auto\",\n          justifyContent: \"right\",\n        }}\n      >\n        {token ? (\n          <img\n            className={classes.tokenLogo}\n            src={token.logo}\n            onError={(event) => (event.currentTarget.style.display = \"none\")}\n          />\n        ) : null}\n        <Typography className={classes.tokenSelectorButtonLabel}>\n          {token ? token.ticker : null}\n        </Typography>\n        <ExpandMore className={classes.expandMore} />\n      </XnftButton>\n    </InputAdornment>\n  );\n}\n\nexport function SwapSelectToken({\n  setMint,\n  customFilter,\n  input,\n}: {\n  setMint: (mint: string) => void;\n  customFilter: (token: Token) => boolean;\n  input: boolean;\n}) {\n  const isDark = useDarkMode();\n  const theme = useCustomTheme();\n  const nav = useNavigation();\n  const { fromTokens, toTokens } = useSwapContext();\n  useEffect(() => {\n    nav.setOptions({\n      headerTitle: \"Select Token\",\n      style: isDark\n        ? { background: theme.custom.colors.background }\n        : undefined,\n    });\n  }, [nav, isDark, theme]);\n\n  const tokenAccounts = (\n    !input ? toTokens : fromTokens\n  ) as Array<TokenDataWithPrice>;\n\n  const onClickRow = (_blockchain: Blockchain, token: Token) => {\n    setMint(token.mint!);\n    nav.pop();\n  };\n\n  return (\n    <SearchableTokenTable\n      onClickRow={onClickRow}\n      tokenAccounts={tokenAccounts}\n      customFilter={customFilter}\n    />\n  );\n}\n\n/**\n * Hides miniscule amounts of SOL\n * @example approximateAmount(0.00203928) = \"0.002\"\n * @param value BigNumberish amount of Solana Lamports\n */\nconst approximateAmount = (value: BigNumberish) =>\n  ethers.utils.formatUnits(value, 9).replace(/(0.0{2,}[1-9])(\\d+)/, \"$1\");\n","import { useEffect, useState } from \"react\";\nimport type {\n  Blockchain,\n  ServerPublicKey,\n  SignedWalletDescriptor,\n} from \"@coral-xyz/common\";\nimport {\n  BACKEND_API_URL,\n  getAuthMessage,\n  UI_RPC_METHOD_KEYRING_KEY_DELETE,\n  UI_RPC_METHOD_KEYRING_STORE_MNEMONIC_SYNC,\n  UI_RPC_METHOD_USER_ACCOUNT_PUBLIC_KEY_CREATE,\n  UI_RPC_METHOD_USER_JWT_UPDATE,\n} from \"@coral-xyz/common\";\nimport {\n  useAuthentication,\n  useBackgroundClient,\n  useDehydratedWallets,\n  useKeyringHasMnemonic,\n  useRpcRequests,\n  useUser,\n} from \"@coral-xyz/recoil\";\n\nimport { WithDrawer } from \"../common/Layout/Drawer\";\nimport { HardwareOnboard } from \"../Onboarding/pages/HardwareOnboard\";\n\nexport function WithAuth({ children }: { children: React.ReactElement }) {\n  const { authenticate, checkAuthentication, getAuthSigner, getSigners } =\n    useAuthentication();\n  const background = useBackgroundClient();\n  const user = useUser();\n  const dehydratedWallets = useDehydratedWallets();\n  const { signMessageForWallet } = useRpcRequests();\n\n  const [authData, setAuthData] = useState<{\n    publicKey: string;\n    blockchain: Blockchain;\n    hardware: boolean;\n    message: string;\n    userId: string;\n  } | null>(null);\n  const [authSignature, setAuthSignature] = useState<string | null>(null);\n  const [openDrawer, setOpenDrawer] = useState(false);\n  const [serverPublicKeys, setServerPublicKeys] = useState<Array<{\n    blockchain: Blockchain;\n    publicKey: string;\n  }> | null>(null);\n  const [clientPublicKeys, setClientPublicKeys] = useState<\n    Array<{ blockchain: Blockchain; publicKey: string; hardware: boolean }>\n  >([]);\n  const hasMnemonic = useKeyringHasMnemonic();\n  const [syncAttempted, setSyncAttempted] = useState(false);\n\n  /**\n   * Check authentication status and take required actions to authenticate if\n   * not authenticated.\n   */\n  useEffect(() => {\n    setAuthSignature(null);\n    setServerPublicKeys(null);\n    (async () => {\n      setClientPublicKeys(await getSigners());\n      const result = user.jwt ? await checkAuthentication(user.jwt) : null;\n      // These set state calls should be batched\n      if (result) {\n        const { publicKeys } = result;\n        setServerPublicKeys(publicKeys);\n      } else {\n        // Not authenticated so couldn't get public keys, get the primary\n        // public keys from a public endpoint and use one of those to auth\n        const response = await fetch(\n          `${BACKEND_API_URL}/users/${user.username}`\n        );\n        const serverPublicKeys = (await response.json()).publicKeys;\n        setServerPublicKeys(serverPublicKeys);\n        // Find a local signer that exists on the client and server and\n        // set the auth data\n        const signer = await getAuthSigner(\n          serverPublicKeys.map((p: ServerPublicKey) => p.publicKey)\n        );\n        setAuthData({\n          ...signer,\n          message: getAuthMessage(user.uuid),\n          userId: user.uuid,\n        });\n      }\n    })();\n    // Rerun authentication on user changes\n  }, [user]);\n\n  /**\n   * When data for authentication is set, take the required action to get a signature.\n   */\n  useEffect(() => {\n    (async () => {\n      if (authData) {\n        if (!authData.hardware) {\n          // Auth signer is not a hardware wallet, sign transparent\n          const signature = await signMessageForWallet(\n            authData.blockchain,\n            authData.publicKey,\n            authData.message\n          );\n          setAuthSignature(signature);\n        } else {\n          // Auth signer is a hardware wallet, pop up a drawer to guide through\n          // flow\n          setOpenDrawer(true);\n        }\n      }\n    })();\n  }, [authData]);\n\n  /**\n   * When an auth signature is created, authenticate with it.\n   */\n  useEffect(() => {\n    (async () => {\n      if (authData && authSignature) {\n        const { id, jwt, publicKeys } = await authenticate({\n          ...authData,\n          signature: authSignature,\n        });\n        // Update server public keys so we attempt to sync the non primary\n        // public keys (i.e. those that require authentication to see)\n        setServerPublicKeys(publicKeys);\n        // Store the JWT from the authentication forl ater\n        await background.request({\n          method: UI_RPC_METHOD_USER_JWT_UPDATE,\n          params: [id, jwt],\n        });\n        // Close the hardware sign drawer (if open)\n        setOpenDrawer(false);\n      }\n    })();\n  }, [authData, authSignature]);\n\n  /**\n   * Remove any hardware wallets that are on the client but not the server\n   * because we can't transparently sign. For mnemmonic based wallets\n   * transparently sign and add them to the server.\n   */\n  useEffect(() => {\n    (async () => {\n      if (!serverPublicKeys) return;\n      // Public key/signature pairs that are required to sync the state of the\n      // server public key data with the client data.\n      const danglingPublicKeys = clientPublicKeys.filter((c) => {\n        // Filter to client public keys that don't exist on the server\n        const existsServer = serverPublicKeys.find(\n          (s) => s.blockchain === c.blockchain && s.publicKey === c.publicKey\n        );\n        return !existsServer;\n      });\n      for (const danglingPublicKey of danglingPublicKeys) {\n        if (danglingPublicKey.hardware) {\n          // Remove hardware public keys if they are not on the server\n          // They can be added again through settings to capture the\n          // signature\n          try {\n            await background.request({\n              method: UI_RPC_METHOD_KEYRING_KEY_DELETE,\n              params: [\n                danglingPublicKey.blockchain,\n                danglingPublicKey.publicKey,\n              ],\n            });\n          } catch {\n            // If the delete fails for some reason, don't error out because\n            // the wallet will not be accessible\n          }\n        } else {\n          // Sync all transparently signable public keys by adding them\n          // to the server\n          await background.request({\n            method: UI_RPC_METHOD_USER_ACCOUNT_PUBLIC_KEY_CREATE,\n            params: [danglingPublicKey.blockchain, danglingPublicKey.publicKey],\n          });\n        }\n      }\n    })();\n  }, [background, clientPublicKeys, serverPublicKeys]);\n\n  //\n  // Attempt to find any dehydrated wallets on the mnemonic if a mnemonic is in use.\n  //\n  useEffect(() => {\n    (async () => {\n      try {\n        if (hasMnemonic) {\n          if (dehydratedWallets.length > 0 && !syncAttempted) {\n            // We need to only do this once, the dehydrated wallets array will change\n            // if we find wallets and successfully load them and we don't want to\n            // trigger this function for smaller and smaller dehydratedWallets arrays\n            setSyncAttempted(true);\n            // Do the sync\n            await background.request({\n              method: UI_RPC_METHOD_KEYRING_STORE_MNEMONIC_SYNC,\n              params: [dehydratedWallets],\n            });\n          }\n        } else {\n          // If no mnemonic, don't try and sync again. When adding a mnemonic to a\n          // keyring there is a small period where the notifications\n          // haven't been processed which can trigger this again resulting in two\n          // of the same wallet appearing in the wallet list.\n          setSyncAttempted(true);\n        }\n      } catch (error) {\n        console.log(\"sync error\", error);\n      }\n    })();\n  }, [background, hasMnemonic, dehydratedWallets, syncAttempted]);\n\n  return (\n    <>\n      {children}\n      {authData ? (\n        <WithDrawer\n          openDrawer={openDrawer}\n          setOpenDrawer={setOpenDrawer}\n          paperStyles={{\n            height: \"calc(100% - 56px)\",\n            borderTopLeftRadius: \"12px\",\n            borderTopRightRadius: \"12px\",\n          }}\n        >\n          <HardwareOnboard\n            blockchain={authData!.blockchain}\n            action=\"search\"\n            searchPublicKey={authData!.publicKey}\n            signMessage={authData!.message}\n            signText=\"Sign the message to authenticate with Backpack.\"\n            onComplete={(signedWalletDescriptor: SignedWalletDescriptor) => {\n              setAuthSignature(signedWalletDescriptor.signature);\n            }}\n          />\n        </WithDrawer>\n      ) : null}\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  BACKPACK_CONFIG_GITHUB_RUN_NUMBER,\n  BACKPACK_FEATURE_FORCE_LATEST_VERSION,\n} from \"@coral-xyz/common\";\nimport { EmptyState } from \"@coral-xyz/react-common\";\nimport { Block } from \"@mui/icons-material\";\n\nimport { WithDrawer } from \"../common/Layout/Drawer\";\n\n/**\n * WithVersion does a check to make sure the app is running with the latest version\n * as determinied by a remote worker. If the app is not on the latest version, then\n * we present a drawer to force the user to update.\n */\nexport function WithVersion({ children }: { children: any }) {\n  const [openDrawer, setOpenDrawer] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const { version } = await (\n        await fetch(\"https://version.backpack.workers.dev/\")\n      ).json();\n      if (BACKPACK_FEATURE_FORCE_LATEST_VERSION) {\n        let buildNumber: number | undefined;\n        try {\n          buildNumber = parseInt(BACKPACK_CONFIG_GITHUB_RUN_NUMBER);\n          if (buildNumber < version) {\n            setOpenDrawer(true);\n          }\n        } catch (err) {\n          // Do nothing because the version is \"development\".\n          setOpenDrawer(true);\n        }\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {children}\n      <WithDrawer openDrawer={openDrawer} setOpenDrawer={setOpenDrawer}>\n        <VersionWarning />\n      </WithDrawer>\n    </>\n  );\n}\n\nfunction VersionWarning() {\n  return (\n    <div\n      style={{\n        height: \"100%\",\n      }}\n    >\n      <EmptyState\n        icon={(props: any) => <Block {...props} />}\n        title=\"Please upgrade your Backpack\"\n        subtitle={`During the duration of the beta program, Backpack\n        requires users to use the most up to date version of the extension.`}\n      />\n    </div>\n  );\n}\n","import type { Blockchain } from \"@coral-xyz/common\";\nimport { explorerUrl } from \"@coral-xyz/common\";\nimport {\n  CrossIcon,\n  PrimaryButton,\n  SecondaryButton,\n} from \"@coral-xyz/react-common\";\nimport {\n  useBlockchainConnectionUrl,\n  useBlockchainExplorer,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\n\nexport function ErrorTransaction({\n  blockchain,\n  signature,\n  onRetry,\n}: {\n  blockchain: Blockchain;\n  signature: string;\n  onRetry: () => void;\n}) {\n  const explorer = useBlockchainExplorer(blockchain);\n  const connectionUrl = useBlockchainConnectionUrl(blockchain);\n  const theme = useCustomTheme();\n\n  return (\n    <div\n      style={{\n        height: \"254px\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        padding: \"14px\",\n      }}\n    >\n      <div\n        style={{\n          textAlign: \"center\",\n        }}\n      >\n        <Typography\n          style={{\n            fontSize: \"16px\",\n            fontWeight: 500,\n            marginTop: \"20px\",\n            marginBottom: \"16px\",\n            color: theme.custom.colors.fontColor,\n          }}\n        >\n          Error while sending transaction\n        </Typography>\n        <div\n          style={{\n            height: \"48px\",\n            marginBottom: 10,\n          }}\n        >\n          <CrossIcon />\n        </div>\n        {explorer && connectionUrl && signature ? <SecondaryButton\n          buttonLabelStyle={{\n              fontSize: \"14px\",\n            }}\n          label=\"View Explorer\"\n          onClick={() =>\n              window.open(\n                explorerUrl(explorer, signature, connectionUrl),\n                \"_blank\"\n              )\n            }\n          /> : null}\n      </div>\n      <PrimaryButton label=\"Retry\" onClick={() => onRetry()} />\n    </div>\n  );\n}\n","import type { Blockchain } from \"@coral-xyz/common\";\nimport { explorerUrl } from \"@coral-xyz/common\";\nimport { Loading, SecondaryButton } from \"@coral-xyz/react-common\";\nimport {\n  useBlockchainConnectionUrl,\n  useBlockchainExplorer,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\n\nexport function Sending({\n  blockchain,\n  signature,\n}: {\n  blockchain: Blockchain;\n  signature: string;\n}) {\n  const theme = useCustomTheme();\n  const explorer = useBlockchainExplorer(blockchain);\n  const connectionUrl = useBlockchainConnectionUrl(blockchain);\n  return (\n    <div\n      style={{\n        height: \"184px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Typography\n        style={{\n          textAlign: \"center\",\n          color: theme.custom.colors.secondary,\n          fontSize: \"16px\",\n          fontWeight: 500,\n          marginTop: \"20px\",\n        }}\n      >\n        Sending\n      </Typography>\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Loading\n          size={48}\n          iconStyle={{\n            color: theme.custom.colors.primaryButton,\n            display: \"flex\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n          }}\n          thickness={6}\n        />\n      </div>\n      <div\n        style={{\n          marginBottom: \"16px\",\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n        }}\n      >\n        {explorer && connectionUrl ? <SecondaryButton\n          onClick={() => {\n              window.open(explorerUrl(explorer, signature, connectionUrl));\n            }}\n          label=\"View Explorer\"\n          /> : null}\n      </div>\n    </div>\n  );\n}\n","import type { Blockchain } from \"@coral-xyz/common\";\nimport { explorerUrl } from \"@coral-xyz/common\";\nimport { CheckIcon, SecondaryButton } from \"@coral-xyz/react-common\";\nimport {\n  useBlockchainConnectionUrl,\n  useBlockchainExplorer,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\n\nexport function Success({\n  blockchain,\n  signature,\n  title,\n}: {\n  blockchain: Blockchain;\n  signature: string;\n  title?: string;\n}) {\n  const theme = useCustomTheme();\n  const explorer = useBlockchainExplorer(blockchain);\n  const connectionUrl = useBlockchainConnectionUrl(blockchain);\n  return (\n    <div\n      style={{\n        height: \"184px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Typography\n        style={{\n          textAlign: \"center\",\n          color: theme.custom.colors.secondary,\n          fontSize: \"16px\",\n          fontWeight: 500,\n          marginTop: \"20px\",\n        }}\n      >\n        {title ? title : \"Sent\"}\n      </Typography>\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <CheckIcon />\n        </div>\n      </div>\n      <div\n        style={{\n          marginBottom: \"16px\",\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n        }}\n      >\n        {explorer && connectionUrl ? <SecondaryButton\n          onClick={() => {\n              window.open(explorerUrl(explorer, signature, connectionUrl));\n            }}\n          label=\"View Explorer\"\n          /> : null}\n      </div>\n    </div>\n  );\n}\n","import { useBootstrapFast } from \"@coral-xyz/recoil\";\n\nimport { Spotlight } from \"../../spotlight/Spotlight\";\nimport { Router } from \"../common/Layout/Router\";\nimport { WithTabs } from \"../common/Layout/Tab\";\nimport { WalletDrawerProvider } from \"../common/WalletList\";\n\nimport { ApproveTransactionRequest } from \"./ApproveTransactionRequest\";\nimport { PrimaryPubkeySelector } from \"./PrimaryPubkeySelector\";\nimport { WithVersion } from \"./WithVersion\";\n\n//\n// The main nav persistent stack.\n//\nexport function Unlocked() {\n  useBootstrapFast();\n\n  return (\n    <WithVersion>\n      <WalletDrawerProvider>\n        <Spotlight />\n        <WithTabs>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"100%\",\n            }}\n          >\n            <Router />\n            <ApproveTransactionRequest />\n            <PrimaryPubkeySelector />\n          </div>\n        </WithTabs>\n      </WalletDrawerProvider>\n    </WithVersion>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport type { WalletDescriptor } from \"@coral-xyz/common\";\nimport {\n  Blockchain,\n  DEFAULT_SOLANA_CLUSTER,\n  EthereumConnectionUrl,\n  ethereumIndexed,\n  legacyBip44ChangeIndexed,\n  legacyBip44Indexed,\n  legacyEthereum,\n  legacyLedgerIndexed,\n  legacyLedgerLiveAccount,\n  legacySolletIndexed,\n  LOAD_PUBLIC_KEY_AMOUNT,\n  UI_RPC_METHOD_FIND_SERVER_PUBLIC_KEY_CONFLICTS,\n  UI_RPC_METHOD_KEYRING_STORE_READ_ALL_PUBKEYS,\n  UI_RPC_METHOD_PREVIEW_PUBKEYS,\n} from \"@coral-xyz/common\";\nimport { Loading, PrimaryButton, TextInput } from \"@coral-xyz/react-common\";\nimport { useBackgroundClient, useDehydratedWallets } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport Ethereum from \"@ledgerhq/hw-app-eth\";\nimport Solana from \"@ledgerhq/hw-app-solana\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport {\n  Box,\n  List,\n  ListItemButton,\n  ListItemText,\n  MenuItem,\n} from \"@mui/material\";\nimport * as anchor from \"@project-serum/anchor\";\nimport { Connection as SolanaConnection, PublicKey } from \"@solana/web3.js\";\nimport { BigNumber, ethers } from \"ethers\";\n\nimport {\n  Checkbox,\n  Header,\n  SubtextParagraph,\n  walletAddressDisplay,\n} from \"../../common\";\nimport { Scrollbar } from \"../Layout/Scrollbar\";\n\nconst { base58: bs58 } = ethers.utils;\n\nexport function ImportWallets({\n  blockchain,\n  mnemonic,\n  transport,\n  onNext,\n  onError,\n  recovery,\n  allowMultiple = true,\n}: {\n  blockchain: Blockchain;\n  mnemonic?: string | true;\n  transport?: Transport;\n  onNext: (walletDescriptor: Array<WalletDescriptor>) => void;\n  onError?: (error: Error) => void;\n  recovery?: string;\n  allowMultiple?: boolean;\n}) {\n  const background = useBackgroundClient();\n  const theme = useCustomTheme();\n\n  const dehydrated = useDehydratedWallets();\n  const dehydratedPubkeys = dehydrated\n    .filter((d) => d.blockchain === blockchain)\n    .map((d) => d.publicKey);\n\n  // Loaded balances for each public key\n  const [balances, setBalances] = useState<{ [publicKey: string]: BigNumber }>(\n    {}\n  );\n  // Path to the public key\n  const [walletDescriptors, setWalletDescriptors] = useState<\n    Array<WalletDescriptor>\n  >([]);\n  const [checkedWalletDescriptors, setCheckedWalletDescriptors] = useState<\n    Array<WalletDescriptor>\n  >([]);\n  // Lock flag to prevent changing of derivation path while ledger is loading\n  const [ledgerLocked, setLedgerLocked] = useState(false);\n  // Public keys that have already been imported on this account\n  const [importedPublicKeys, setImportedPublicKeys] = useState<string[]>([]);\n  // Public keys that are in use on other Backpack accounts\n  const [conflictingPublicKeys, setConflictingPublicKeys] = useState<string[]>(\n    []\n  );\n\n  const derivationPathOptions = {\n    [Blockchain.SOLANA]: [\n      {\n        path: (i: number) => legacyBip44Indexed(Blockchain.SOLANA, i),\n        label: \"m/44/501'/x'\",\n      },\n      {\n        path: (i: number) => legacyBip44ChangeIndexed(Blockchain.SOLANA, i),\n        label: \"m/44/501'/x'/0'\",\n      },\n      {\n        path: (i: number) =>\n          legacyBip44ChangeIndexed(Blockchain.SOLANA, i) + \"/0'\",\n        label: \"m/44/501'/x'/0'/0'\",\n      },\n    ]\n      // Note: We only allow importing the deprecated sollet derivation path for\n      //       hot wallets. This UI is hidden behind a local storage flag we\n      //       expect people to manually set, since this derivation path was only\n      //       used by mostly technical early Solana users.\n      .concat(\n        mnemonic && window.localStorage.getItem(\"sollet\")\n          ? [\n              {\n                path: (i: number) => legacySolletIndexed(i),\n                label: \"501'/0'/0/0 (Deprecated)\",\n              },\n            ]\n          : []\n      ),\n    [Blockchain.ETHEREUM]: [\n      {\n        path: (i: number) => legacyEthereum(i),\n        label: \"m/44/60'/x\",\n      },\n      {\n        path: (i: number) => legacyLedgerIndexed(i),\n        label: \"m/44'/60'/0'/x' - Ledger\",\n      },\n      {\n        path: (i: number) => legacyLedgerLiveAccount(i),\n        label: \"m/44'/60'/x'/0/0 - Ledger Live\",\n      },\n      {\n        path: (i: number) => ethereumIndexed(i),\n        label: \"m/44'/60'/0'/0/x - Ethereum Standard\",\n      },\n    ],\n  }[blockchain];\n\n  const [derivationPathLabel, setDerivationPathLabel] = useState<string>(\n    derivationPathOptions[0].label\n  );\n  const [derivationPaths, setDerivationPaths] = useState<Array<string>>([]);\n\n  const disabledPublicKeys = [...importedPublicKeys, ...conflictingPublicKeys];\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const blockchainKeyrings = await background.request({\n          method: UI_RPC_METHOD_KEYRING_STORE_READ_ALL_PUBKEYS,\n          params: [],\n        });\n        const keyring = blockchainKeyrings[blockchain];\n        setImportedPublicKeys(\n          Object.values(keyring)\n            .flat()\n            .map((a: any) => a.publicKey)\n        );\n      } catch (error) {\n        // Keyring store locked, either onboarding or left open\n      }\n    })();\n  }, [background, blockchain]);\n\n  //\n  // Query the server for a list of public keys that are already in use\n  //\n  useEffect(() => {\n    (async () => {\n      if (walletDescriptors.length === 0) return;\n      try {\n        const response = await background.request({\n          method: UI_RPC_METHOD_FIND_SERVER_PUBLIC_KEY_CONFLICTS,\n          params: [\n            walletDescriptors.map((w) => ({\n              publicKey: w.publicKey,\n              blockchain,\n            })),\n          ],\n        });\n        setConflictingPublicKeys(\n          response.map(\n            (r: { user_id: string; public_key: string; blockchain: string }) =>\n              r.public_key\n          )\n        );\n      } catch {\n        // If the query failed assume all are valid\n      }\n    })();\n  }, [background, blockchain, walletDescriptors]);\n\n  //\n  // Load a list of accounts and their associated balances\n  //\n  useEffect(() => {\n    if (!derivationPaths) return;\n\n    setCheckedWalletDescriptors([]);\n\n    let loaderFn;\n    // `mnemonic` can be true here if we aren't passing the mnemonic then it\n    // can be taken from the unlocked keyring on the backend\n    if (mnemonic) {\n      // Loading accounts from a mnemonic\n      loaderFn = (derivationPaths: Array<string>) =>\n        loadMnemonicPublicKeys(mnemonic, derivationPaths);\n    } else if (transport) {\n      // Loading accounts from a Ledger\n      loaderFn = (derivationPaths: Array<string>) =>\n        loadLedgerPublicKeys(transport, derivationPaths);\n    } else {\n      throw new Error(\"no public key loader found\");\n    }\n\n    loaderFn(derivationPaths)\n      .then(async (publicKeys: string[]) => {\n        setWalletDescriptors(\n          derivationPaths.map((derivationPath, i) => ({\n            blockchain,\n            publicKey: publicKeys[i],\n            derivationPath,\n          }))\n        );\n        const balances = await loadBalances(publicKeys);\n        setBalances(\n          Object.fromEntries(\n            balances\n              .sort((a, b) =>\n                b.balance.lt(a.balance) ? -1 : b.balance.eq(a.balance) ? 0 : 1\n              )\n              .map((a) => [a.publicKey, a.balance])\n          )\n        );\n      })\n      .catch((error) => {\n        // Probably Ledger error, i.e. app is not opened\n        console.error(error);\n        if (onError) {\n          // Call custom error handler if one was passed\n          onError(error);\n        } else {\n          throw error;\n        }\n      });\n  }, [mnemonic, transport, derivationPaths]);\n\n  //\n  // Clear accounts and selected acounts on change of derivation path.\n  //\n  useEffect(() => {\n    setBalances({});\n    setWalletDescriptors([]);\n    if (derivationPathLabel !== null) {\n      const derivationPath = derivationPathOptions.find(\n        (d) => d.label === derivationPathLabel\n      );\n      if (!derivationPath) throw new Error(\"Invalid derivation path label\");\n      setDerivationPaths(\n        [...Array(LOAD_PUBLIC_KEY_AMOUNT).keys()].map((i) =>\n          derivationPath.path(i)\n        )\n      );\n    }\n  }, [derivationPathLabel]);\n\n  //\n  // Load balances for accounts that have been loaded\n  //\n  const loadBalances = async (publicKeys: string[]) => {\n    if (blockchain === Blockchain.SOLANA) {\n      // TODO use Backpack configured value\n      const solanaMainnetRpc =\n        process.env.DEFAULT_SOLANA_CONNECTION_URL || DEFAULT_SOLANA_CLUSTER;\n      const solanaConnection = new SolanaConnection(\n        solanaMainnetRpc,\n        \"confirmed\"\n      );\n      const accounts = (\n        await anchor.utils.rpc.getMultipleAccounts(\n          solanaConnection,\n          publicKeys.map((p) => new PublicKey(p))\n        )\n      ).map((result, index) => {\n        return {\n          publicKey: publicKeys[index],\n          balance: result\n            ? BigNumber.from(result.account.lamports)\n            : BigNumber.from(0),\n          index,\n        };\n      });\n      return accounts;\n    } else if (blockchain === Blockchain.ETHEREUM) {\n      // TODO use Backpack configured value\n      const ethereumMainnetRpc =\n        process.env.DEFAULT_ETHEREUM_CONNECTION_URL ||\n        EthereumConnectionUrl.MAINNET;\n      const ethereumProvider = new ethers.providers.JsonRpcProvider(\n        ethereumMainnetRpc\n      );\n      const balances = await Promise.all(\n        publicKeys.map((p) => ethereumProvider.getBalance(p))\n      );\n      return publicKeys.map((p, index) => {\n        return { publicKey: p, balance: balances[index], index };\n      });\n    } else {\n      throw new Error(\"invalid blockchain\");\n    }\n  };\n\n  //\n  // Load accounts for the given mnemonic. This is passed to the ImportWallets\n  // component and called whenever the derivation path is changed with the selector.\n  //\n  const loadMnemonicPublicKeys = async (\n    mnemonic: string | true,\n    derivationPaths: Array<string>\n  ) => {\n    return await background.request({\n      method: UI_RPC_METHOD_PREVIEW_PUBKEYS,\n      params: [blockchain, mnemonic, derivationPaths],\n    });\n  };\n\n  //\n  // Load accounts for a ledger.\n  //\n  const loadLedgerPublicKeys = async (\n    transport: Transport,\n    derivationPaths: Array<string>\n  ): Promise<string[]> => {\n    const publicKeys = [];\n    setLedgerLocked(true);\n    const ledger = {\n      [Blockchain.SOLANA]: new Solana(transport),\n      [Blockchain.ETHEREUM]: new Ethereum(transport),\n    }[blockchain];\n    // Add remaining accounts\n    for (const derivationPath of derivationPaths) {\n      publicKeys.push(\n        (await ledger.getAddress(derivationPath.replace(\"m/\", \"\"))).address\n      );\n    }\n    setLedgerLocked(false);\n    return publicKeys.map((p) =>\n      blockchain === Blockchain.SOLANA ? bs58.encode(p) : p.toString()\n    );\n  };\n\n  const isDisabledPublicKey = (pk: string): boolean => {\n    if (recovery === undefined) {\n      return disabledPublicKeys.includes(pk);\n    }\n    return pk !== recovery || !dehydratedPubkeys.includes(pk);\n  };\n\n  //\n  // Handles checkbox clicks to select accounts to import.\n  //\n  const handleSelect = (publicKey: string, derivationPath: string) => () => {\n    const currentIndex = checkedWalletDescriptors.findIndex(\n      (a) => a.publicKey === publicKey\n    );\n    let newCheckedWalletDescriptors = [...checkedWalletDescriptors];\n    if (currentIndex === -1) {\n      // Not selected, add it\n      const walletDescriptor = {\n        blockchain,\n        derivationPath,\n        publicKey,\n      };\n      // Adding the account\n      if (allowMultiple) {\n        newCheckedWalletDescriptors.push(walletDescriptor);\n      } else {\n        newCheckedWalletDescriptors = [walletDescriptor];\n      }\n    } else {\n      // Removing the account\n      newCheckedWalletDescriptors.splice(currentIndex, 1);\n    }\n    // TODO Sort by account indices\n    // newCheckedWalletDescriptors.sort((a, b) => a.index - b.index);\n    setCheckedWalletDescriptors(newCheckedWalletDescriptors);\n  };\n\n  // Symbol for balance displays\n  const symbol = {\n    [Blockchain.SOLANA]: \"SOL\",\n    [Blockchain.ETHEREUM]: \"ETH\",\n  }[blockchain];\n\n  // Decimals for balance displays\n  const decimals = {\n    [Blockchain.SOLANA]: 9,\n    [Blockchain.ETHEREUM]: 18,\n  }[blockchain];\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box>\n        <Box\n          sx={{\n            marginLeft: \"24px\",\n            marginRight: \"24px\",\n            marginTop: \"24px\",\n          }}\n        >\n          <Header text={`Import wallet${allowMultiple ? \"s\" : \"\"}`} />\n          <SubtextParagraph>\n            Select which wallet{allowMultiple ? \"s\" : \"\"} you'd like to import.\n          </SubtextParagraph>\n        </Box>\n        <div style={{ margin: \"16px\" }}>\n          <TextInput\n            placeholder=\"Derivation Path\"\n            value={derivationPathLabel}\n            setValue={(e) => setDerivationPathLabel(e.target.value)}\n            select\n            disabled={ledgerLocked}\n          >\n            {derivationPathOptions.map((o) => (\n              <MenuItem value={o.label} key={o.label}>\n                {o.label}\n              </MenuItem>\n            ))}\n          </TextInput>\n        </div>\n        {Object.keys(balances).length > 0 ? (\n          <List\n            sx={{\n              color: theme.custom.colors.fontColor,\n              background: theme.custom.colors.background,\n              borderRadius: \"12px\",\n              marginLeft: \"16px\",\n              marginRight: \"16px\",\n              paddingTop: \"8px\",\n              paddingBottom: \"8px\",\n              height: \"225px\",\n            }}\n          >\n            <Scrollbar>\n              {[...walletDescriptors]\n                .sort((a, b) => {\n                  // Sort so that any public keys with balances are displayed first\n                  if (balances[a.publicKey] < balances[b.publicKey]) {\n                    return 1;\n                  } else if (balances[a.publicKey] > balances[b.publicKey]) {\n                    return -1;\n                  } else {\n                    return 0;\n                  }\n                })\n                .map(({ publicKey, derivationPath }) => (\n                  <ListItemButton\n                    disableRipple\n                    key={publicKey.toString()}\n                    onClick={handleSelect(publicKey, derivationPath)}\n                    sx={{\n                      display: \"flex\",\n                      paddinLeft: \"16px\",\n                      paddingRight: \"16px\",\n                      paddingTop: \"5px\",\n                      paddingBottom: \"5px\",\n                    }}\n                    disabled={isDisabledPublicKey(publicKey.toString())}\n                  >\n                    <Box style={{ display: \"flex\", width: \"100%\" }}>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          flexDirection: \"column\",\n                        }}\n                      >\n                        <Checkbox\n                          edge=\"start\"\n                          checked={\n                            checkedWalletDescriptors.some(\n                              (a) => a.derivationPath === derivationPath\n                            ) ||\n                            importedPublicKeys.includes(publicKey.toString())\n                          }\n                          tabIndex={-1}\n                          disabled={isDisabledPublicKey(publicKey.toString())}\n                          disableRipple\n                          style={{ marginLeft: 0 }}\n                        />\n                      </div>\n                      <ListItemText\n                        id={publicKey.toString()}\n                        primary={walletAddressDisplay(publicKey)}\n                        sx={{\n                          marginLeft: \"8px\",\n                          fontSize: \"14px\",\n                          lineHeight: \"32px\",\n                          fontWeight: 500,\n                        }}\n                      />\n                      <ListItemText\n                        sx={{\n                          color: theme.custom.colors.secondary,\n                          textAlign: \"right\",\n                        }}\n                        primary={`${\n                          balances[publicKey]\n                            ? (+ethers.utils.formatUnits(\n                                balances[publicKey],\n                                decimals\n                              )).toFixed(4)\n                            : \"-\"\n                        } ${symbol}`}\n                      />\n                    </Box>\n                  </ListItemButton>\n                ))}\n            </Scrollbar>\n          </List>\n        ) : (\n          <Loading />\n        )}\n      </Box>\n      <Box\n        sx={{\n          mt: \"12px\",\n          ml: \"16px\",\n          mr: \"16px\",\n          mb: \"16px\",\n        }}\n      >\n        <PrimaryButton\n          label={`Import Wallet${allowMultiple ? \"s\" : \"\"}`}\n          onClick={() => onNext(checkedWalletDescriptors)}\n          disabled={checkedWalletDescriptors.length === 0}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  UI_RPC_METHOD_KEYRING_STORE_MNEMONIC_CREATE,\n  UI_RPC_METHOD_KEYRING_VALIDATE_MNEMONIC,\n} from \"@coral-xyz/common\";\nimport { PrimaryButton, SecondaryButton } from \"@coral-xyz/react-common\";\nimport { useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport {\n  Box,\n  Grid,\n  InputAdornment,\n  Link,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\n\nimport { CheckboxForm, Header, SubtextParagraph } from \"../../common\";\nimport { WithCopyTooltip } from \"../../common/WithCopyTooltip\";\nconst useStyles = makeStyles((theme: any) => ({\n  mnemonicInputRoot: {\n    border: `${theme.custom.colors.borderFull}`,\n    background: theme.custom.colors.textBackground,\n    color: theme.custom.colors.secondary,\n    borderRadius: \"8px\",\n    marginTop: \"4px\",\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: \"8px\",\n      height: \"40px\",\n      paddingLeft: \"8px\",\n      \"& fieldset\": {\n        border: \"none\",\n      },\n    },\n    \"& .MuiInputBase-input\": {\n      color: theme.custom.colors.fontColor,\n      borderRadius: \"8px\",\n      fontSize: \"14px\",\n      fontWeight: 700,\n      paddingRight: \"8px\",\n    },\n    \"& .MuiInputAdornment-root\": {\n      color: theme.custom.colors.secondary,\n      fontWeight: 500,\n      minWidth: \"11px\",\n      fontSize: \"14px\",\n    },\n    \"&:hover\": {\n      backgroundColor: theme.custom.colors.primary,\n    },\n  },\n  link: {\n    cursor: \"pointer\",\n    color: theme.custom.colors.secondary,\n    textDecoration: \"none\",\n  },\n  errorMsg: {\n    color: \"red\",\n    marginBottom: \"12px\",\n    textAlign: \"center\",\n  },\n}));\n\nexport function MnemonicInput({\n  onNext,\n  readOnly = false,\n  buttonLabel,\n  customError,\n  subtitle,\n}: {\n  onNext: (mnemonic: string) => Promise<void>;\n  readOnly?: boolean;\n  buttonLabel: string;\n  customError?: string;\n  subtitle?: string;\n}) {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const background = useBackgroundClient();\n  const [mnemonicWords, setMnemonicWords] = useState<string[]>([\n    ...Array(12).fill(\"\"),\n  ]);\n  const [error, setError] = useState<string>();\n  const [checked, setChecked] = useState(false);\n  const [loading, setLoading] = useState(false)\n\n  const mnemonic = mnemonicWords.map((f) => f.trim()).join(\" \");\n  // Only enable copy all fields populated\n  const copyEnabled = mnemonicWords.find((w) => w.length < 3) === undefined;\n  // Only allow next if checkbox is checked in read only and all fields are populated\n  const nextEnabled = (!readOnly || checked) && copyEnabled;\n\n  useEffect(() => {\n    if (customError) setError(customError);\n  }, [customError]);\n\n  //\n  // Handle pastes of 12 or 24 word mnemonics.\n  //\n  useEffect(() => {\n    const onPaste = (e: any) => {\n      const words = e.clipboardData.getData(\"text\").split(\" \");\n      if (words.length !== 12 && words.length !== 24) {\n        // Not a valid mnemonic length\n        return;\n      }\n      // Prevent the paste from populating an individual input field with\n      // all words\n      e.preventDefault();\n      setMnemonicWords(words);\n    };\n    if (!readOnly) {\n      // Enable pasting if not readonly\n      window.addEventListener(\"paste\", onPaste);\n    } else {\n      // If read only we can generate a random mnemnic\n      generateRandom();\n    }\n    return () => {\n      if (!readOnly) {\n        window.removeEventListener(\"paste\", onPaste);\n      }\n    };\n  }, []);\n\n  //\n  // Validate the mnemonic and call the onNext handler.\n  //\n  const next = async () => {\n    const isValid = await background\n      .request({\n        method: UI_RPC_METHOD_KEYRING_VALIDATE_MNEMONIC,\n        params: [mnemonic],\n      })\n    if (!isValid) {\n      setError(\"Invalid secret recovery phrase\");\n    } else {\n      await onNext(mnemonic)\n    }\n  };\n\n  //\n  // Generate a random mnemonic and populate state.\n  //\n  const generateRandom = async () => {\n    const words = await background\n      .request({\n        method: UI_RPC_METHOD_KEYRING_STORE_MNEMONIC_CREATE,\n        params: [mnemonicWords.length === 12 ? 128 : 256],\n      })\n    setMnemonicWords(words.split(\" \"))\n  };\n\n  return (\n    <Box\n      sx={{\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n        padding: \"0 16px 0 16px\",\n      }}\n    >\n      <Box>\n        <Box style={{ margin: 8 }}>\n          <Header\n            text=\"Secret recovery phrase\"\n            style={{\n              fontWeight: 500,\n            }}\n          />\n          <SubtextParagraph>\n            {subtitle ? subtitle : readOnly\n              ? \"This is the only way to recover your account if you lose your device. Write it down and store it in a safe place.\"\n              : \"Enter your 12 or 24-word secret recovery mnemonic to add an existing wallet.\"}\n          </SubtextParagraph>\n        </Box>\n        <MnemonicInputFields\n          mnemonicWords={mnemonicWords}\n          onChange={readOnly ? undefined : setMnemonicWords}\n        />\n        {readOnly ? null : (\n          <Box\n            sx={{\n              textAlign: \"center\",\n              margin: \"32px 0\",\n            }}\n          >\n            <Box sx={{ flex: 1 }}>\n              <Link\n                className={classes.link}\n                onClick={() =>\n                  setMnemonicWords([\n                    ...Array(mnemonicWords.length === 12 ? 24 : 12).fill(\"\"),\n                  ])\n                }\n              >\n                Use a {mnemonicWords.length === 12 ? \"24\" : \"12\"}-word\n                recovery mnemonic\n              </Link>\n            </Box>\n          </Box>\n        )}\n      </Box>\n      {readOnly ? <>\n        <CopyButton\n          text={mnemonic}\n          icon={\n            <ContentCopyIcon\n              style={{ color: theme.custom.colors.fontColor }}\n            />\n          }\n          disabled={!copyEnabled}\n        />\n        <Box sx={{ margin: \"6px\" }}>\n          <CheckboxForm\n            checked={checked}\n            setChecked={setChecked}\n            label=\"I saved my secret recovery phrase\"\n          />\n        </Box>\n      </> : null}\n      <Box>\n        {error ? <Typography className={classes.errorMsg}>{error}</Typography> : null}\n\n        <PrimaryButton\n          label={buttonLabel}\n          onClick={async () => {\n            setLoading(true)\n            await next()\n            setLoading(false)\n          }}\n          disabled={!nextEnabled || loading}\n          buttonLabelStyle={{\n            fontWeight: 600,\n          }}\n          style={{ marginBottom: 16 }}\n        />\n      </Box>\n    </Box>\n  );\n}\n\nexport function MnemonicInputFields({\n  mnemonicWords,\n  onChange,\n  rootClass,\n}: {\n  mnemonicWords: Array<string>;\n  onChange?: (mnemonicWords: Array<string>) => void;\n  rootClass?: any;\n}) {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  if (!rootClass) {\n    rootClass = classes.mnemonicInputRoot;\n  }\n  return (\n    <Grid\n      container\n      rowSpacing={0}\n      columnSpacing={1.00005}\n      sx={{ marginTop: \"24px\" }}\n    >\n      {Array.from(Array(mnemonicWords.length).keys()).map((i) => (\n        <Grid item xs={4} key={i}>\n          <TextField\n            className={rootClass}\n            variant=\"outlined\"\n            margin=\"dense\"\n            size=\"small\"\n            required\n            fullWidth\n            InputLabelProps={{\n              shrink: false,\n              style: {\n                backgroundColor: theme.custom.colors.nav,\n              },\n            }}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">{i + 1}</InputAdornment>\n              ),\n              readOnly: onChange === undefined,\n            }}\n            value={mnemonicWords[i]}\n            onChange={(e) => {\n              if (onChange) {\n                const newMnemonicWords = [...mnemonicWords];\n                newMnemonicWords[i] = e.target.value;\n                onChange(newMnemonicWords);\n              }\n            }}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport function CopyButton({\n  text,\n  icon,\n  disabled = false,\n  style,\n}: {\n  text: string;\n  icon?: React.ReactElement;\n  disabled?: boolean;\n  style?: React.CSSProperties;\n}) {\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const onCopy = async () => {\n    setTooltipOpen(true);\n    setTimeout(() => setTooltipOpen(false), 1000);\n    await navigator.clipboard.writeText(text);\n  };\n  return (\n    <WithCopyTooltip tooltipOpen={tooltipOpen} setToolTipOpen={setTooltipOpen}>\n      <Box>\n        <SecondaryButton\n          onClick={onCopy}\n          label=\"Copy\"\n          disabled={disabled}\n          endIcon={icon ? icon : null}\n          buttonLabelStyle={{\n            fontWeight: 600,\n          }}\n          style={style}\n        />\n      </Box>\n    </WithCopyTooltip>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport type { Blockchain, ServerPublicKey } from \"@coral-xyz/common\";\nimport {\n  UI_RPC_METHOD_FIND_SERVER_PUBLIC_KEY_CONFLICTS,\n  validatePrivateKey,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport { PrimaryButton, TextInput } from \"@coral-xyz/react-common\";\nimport { useAllWallets, useBackgroundClient } from \"@coral-xyz/recoil\";\nimport { Box } from \"@mui/material\";\n\nimport { Header, SubtextParagraph } from \"../../common\";\n\nexport const PrivateKeyInput = ({\n  blockchain,\n  onNext,\n  serverPublicKeys,\n  displayNameInput = false,\n  onboarding,\n}: {\n  blockchain?: Blockchain;\n  onNext: ({\n    blockchain,\n    publicKey,\n    privateKey,\n    name,\n  }: {\n    blockchain: Blockchain;\n    publicKey: string;\n    privateKey: string;\n    name: string;\n  }) => void;\n  serverPublicKeys?: Array<ServerPublicKey>;\n  displayNameInput?: boolean;\n  onboarding?: boolean;\n}) => {\n  const background = useBackgroundClient();\n  // eslint-disable-next-line\n  const wallets = onboarding ? [] : useAllWallets();\n  const [name, setName] = useState(\"\");\n  const [privateKey, setPrivateKey] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    // Clear error on form input changes\n    setError(null);\n  }, [name, privateKey, setError]);\n\n  const onSave = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Do some validation of the private key\n    let _privateKey: string, _publicKey: string, _blockchain: Blockchain;\n    try {\n      ({\n        privateKey: _privateKey,\n        publicKey: _publicKey,\n        blockchain: _blockchain,\n      } = validatePrivateKey(privateKey, blockchain));\n    } catch (e) {\n      setLoading(false);\n      setError((e as Error).message);\n      return;\n    }\n\n    if (wallets.find((w) => w.publicKey === _publicKey)) {\n      setError(\"This wallet is already active and available in your account.\");\n      return;\n    }\n\n    // Check if the public key we have is the public key we wanted (if we were\n    // looking for a specific public key)\n    if (serverPublicKeys && serverPublicKeys.length > 0) {\n      setLoading(false);\n      const found = !!serverPublicKeys.find(\n        (s: { publicKey: string; blockchain: Blockchain }) =>\n          s.publicKey === _publicKey && s.blockchain === _blockchain\n      );\n      if (!found) {\n        if (serverPublicKeys.length === 1) {\n          setError(\n            `Incorrect private key for ${walletAddressDisplay(\n              serverPublicKeys[0].publicKey\n            )}. The public key was ${walletAddressDisplay(_publicKey)}.`\n          );\n        } else {\n          setError(\n            `Public key ${walletAddressDisplay(\n              _publicKey\n            )} not found on your Backpack account.`\n          );\n        }\n      }\n    } else {\n      // If we aren't searching for a public key we are adding it to the account,\n      // check for conflicts.\n      const response = await background.request({\n        method: UI_RPC_METHOD_FIND_SERVER_PUBLIC_KEY_CONFLICTS,\n        params: [[{ blockchain: _blockchain, publicKey: _publicKey }]],\n      });\n\n      if (response.length > 0) {\n        setError(\"Wallet address is used by another Backpack account\");\n        return;\n      }\n    }\n\n    onNext({\n      blockchain: _blockchain,\n      publicKey: _publicKey,\n      privateKey: _privateKey,\n      name,\n    });\n  };\n\n  return (\n    <form\n      noValidate\n      onSubmit={onSave}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <Box sx={{ margin: \"24px 0\" }}>\n        <Box sx={{ margin: \"0 24px\" }}>\n          <Header text=\"Enter private key\" />\n          <SubtextParagraph style={{ marginBottom: \"32px\" }}>\n            {serverPublicKeys && serverPublicKeys.length === 1 ? (\n              <>\n                Enter the private key for{\" \"}\n                {walletAddressDisplay(serverPublicKeys[0].publicKey)} to recover\n                the wallet.\n              </>\n            ) : (\n              <>\n                Enter your private key. It will be encrypted and stored on your\n                device.\n              </>\n            )}\n          </SubtextParagraph>\n        </Box>\n        <Box sx={{ margin: \"0 16px\" }}>\n          {displayNameInput ? (\n            <Box sx={{ marginBottom: \"4px\" }}>\n              <TextInput\n                autoFocus\n                placeholder=\"Name\"\n                value={name}\n                setValue={(e) => setName(e.target.value)}\n              />\n            </Box>\n          ) : null}\n          <TextInput\n            placeholder=\"Enter private key\"\n            value={privateKey}\n            setValue={(e) => {\n              setPrivateKey(e.target.value.trim());\n            }}\n            onKeyDown={async (e) => {\n              if (e.key === \"Enter\") {\n                await onSave(e);\n              }\n            }}\n            rows={4}\n            error={error ? true : false}\n            errorMessage={error || \"\"}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          marginLeft: \"16px\",\n          marginRight: \"16px\",\n          marginBottom: \"16px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <PrimaryButton\n          type=\"submit\"\n          label=\"Import\"\n          disabled={privateKey.length === 0 || loading}\n        />\n      </Box>\n    </form>\n  );\n};\n","import { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Close } from \"@mui/icons-material\";\nimport { IconButton } from \"@mui/material\";\n\nimport { WithMiniDrawer } from \"./Layout/Drawer\";\n\nconst useStyles = makeStyles((theme) => ({\n  paperAnchorBottom: {\n    boxShadow: \"none\",\n  },\n  closeConfirmButton: {\n    width: \"38px\",\n    height: \"38px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    border: \"none !important\",\n    background: theme.custom.colors.nav,\n  },\n  approveTransactionCloseContainer: {\n    backgroundColor: theme.custom.colors.approveTransactionCloseBackground,\n    width: \"44px\",\n    height: \"44px\",\n    zIndex: 2,\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    borderRadius: \"22px\",\n  },\n  closeIcon: {\n    color: theme.custom.colors.icon,\n  },\n}));\n\nexport const ApproveTransactionDrawer: React.FC<{\n  openDrawer: boolean;\n  setOpenDrawer: (b: boolean) => void;\n  children: React.ReactNode;\n}> = ({ openDrawer, setOpenDrawer, children }) => {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  return (\n    <WithMiniDrawer\n      openDrawer={openDrawer}\n      setOpenDrawer={setOpenDrawer}\n      backdropProps={{\n        style: {\n          opacity: 0.8,\n          background: \"#18181b\",\n        },\n      }}\n      paperAnchorBottom={classes.paperAnchorBottom}\n    >\n      <div\n        onClick={() => setOpenDrawer(false)}\n        style={{\n          height: \"50px\",\n          zIndex: 1,\n          backgroundColor: \"transparent\",\n        }}\n      >\n        <CloseButton\n          onClick={() => setOpenDrawer(false)}\n          style={{\n            marginTop: \"28px\",\n            marginLeft: \"24px\",\n            zIndex: 1,\n          }}\n        />\n      </div>\n      <div\n        style={{\n          borderTopLeftRadius: \"12px\",\n          borderTopRightRadius: \"12px\",\n          height: \"100%\",\n          background: theme.custom.colors.background,\n        }}\n      >\n        <div\n          style={{\n            height: \"100%\",\n            borderTopLeftRadius: \"12px\",\n            borderTopRightRadius: \"12px\",\n            background: theme.custom.colors.drawerGradient,\n          }}\n        >\n          {children}\n        </div>\n      </div>\n    </WithMiniDrawer>\n  );\n};\n\nexport function CloseButton({\n  onClick,\n  style,\n}: {\n  onClick: () => void;\n  style?: React.CSSProperties;\n}) {\n  const classes = useStyles();\n  return (\n    <div className={classes.approveTransactionCloseContainer} style={style}>\n      <IconButton\n        disableRipple\n        className={`${classes.closeConfirmButton}`}\n        onClick={onClick}\n      >\n        <Close className={classes.closeIcon} />\n      </IconButton>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { walletAddressDisplay } from \"@coral-xyz/common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nimport { TokenBadge } from \"../Unlocked/Balances/TokensWidget/TokenBadge\";\n\nimport { WithCopyTooltip } from \"./WithCopyTooltip\";\n\n/**\n * A shortened version of a public key inside a themed grey box, it shows\n * the full key on hover and copies it to the clipboard on click.\n */\nexport const CopyablePublicKey = ({\n  publicKey,\n  ...optionalProps\n}: {\n  publicKey: Parameters<typeof walletAddressDisplay>[0];\n} & Partial<React.ComponentPropsWithoutRef<typeof TokenBadge>>) => {\n  const theme = useCustomTheme();\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  const publicKeyString = publicKey.toString();\n  return (\n    <WithCopyTooltip tooltipOpen={tooltipOpen}>\n      <div title={publicKeyString} aria-label={publicKeyString}>\n        <TokenBadge\n          fontSize={13}\n          overwriteBackground={theme.custom.colors.bg2}\n          onClick={async () => {\n            setTooltipOpen(true);\n            setTimeout(() => setTooltipOpen(false), 1000);\n            await navigator.clipboard.writeText(publicKeyString);\n          }}\n          label={walletAddressDisplay(publicKey)}\n          {...optionalProps}\n        />\n      </div>\n    </WithCopyTooltip>\n  );\n};\n","export const UNKNOWN_ICON_SRC =\n  \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM10.9645 15.3015C10.9645 15.7984 11.3677 16.2015 11.8645 16.2015C12.3612 16.2015 12.7645 15.7984 12.7645 15.3015C12.7645 14.8047 12.3612 14.4015 11.8645 14.4015C11.3677 14.4015 10.9645 14.8047 10.9645 15.3015ZM13.3939 11.8791C13.9135 11.5085 14.2656 11.1748 14.4511 10.8777C14.8776 10.1948 14.8728 9.02088 14.0532 8.35291C12.9367 7.44383 10.8943 7.77224 9.6001 8.49763L10.2067 9.7155C10.9189 9.35193 11.553 9.17 12.1092 9.17C12.6546 9.17 13.1214 9.36453 13.1214 9.91004C13.1214 10.4891 12.6543 10.8231 12.1713 11.1684L12.171 11.1686L12.1645 11.173C11.9915 11.2996 11.8416 11.4235 11.7147 11.5442C11.5451 11.7059 11.4168 11.8621 11.3298 12.013C11.1013 12.4085 11.1014 12.736 11.1019 13.152V13.2015H12.5761L12.576 13.158C12.5755 12.6312 12.5753 12.4844 13.3939 11.8791ZM20.5 12C20.5 16.6944 16.6944 20.5 12 20.5C7.30558 20.5 3.5 16.6944 3.5 12C3.5 7.30558 7.30558 3.5 12 3.5C16.6944 3.5 20.5 7.30558 20.5 12ZM22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z' fill='%238F929E'/%3E%3C/svg%3E\";\n\nexport function QuestionIcon({ fill = \"#A1A1AA\", ...props }) {\n  return (\n    <svg\n      width=\"56\"\n      height=\"56\"\n      viewBox=\"0 0 56 56\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M28.335 5C15.4677 5 5 15.4677 5 28.335C5 41.2023 15.4677 51.67 28.335 51.67C41.2023 51.67 51.67 41.2023 51.67 28.335C51.67 15.4677 41.2023 5 28.335 5ZM27.3627 41.9471C25.7526 41.9471 24.4458 40.6403 24.4458 39.0302C24.4458 37.4201 25.7526 36.1133 27.3627 36.1133C28.9728 36.1133 30.2796 37.4201 30.2796 39.0302C30.2796 40.6403 28.9728 41.9471 27.3627 41.9471ZM35.7458 24.6928C35.1449 25.6554 34.0035 26.7366 32.3195 27.9383C29.5951 29.9529 29.669 30.4001 29.669 32.2242H24.8911C24.8911 30.7988 24.86 29.704 25.6301 28.3719C26.1221 27.5183 27.0244 26.6102 28.335 25.6495C29.9082 24.5256 31.4366 23.4424 31.4366 21.5562C31.4366 19.7886 29.9237 19.1585 28.1561 19.1585C26.3535 19.1585 24.298 19.7477 21.9898 20.9261L20.0239 16.9786C24.2183 14.6276 30.8377 13.5639 34.4565 16.51C37.1128 18.6743 37.1284 22.4799 35.7458 24.6928Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function WarningIcon({ fill = \"#A1A1AA\", ...props }) {\n  return (\n    <svg\n      width=\"56\"\n      height=\"56\"\n      viewBox=\"0 0 56 56\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M10.43 47.8421H45.57C49.1633 47.8421 51.4033 43.9454 49.6067 40.8421L32.0367 10.4854C30.24 7.3821 25.76 7.3821 23.9633 10.4854L6.39333 40.8421C4.59666 43.9454 6.83666 47.8421 10.43 47.8421ZM28 31.5088C26.7167 31.5088 25.6667 30.4588 25.6667 29.1754V24.5088C25.6667 23.2254 26.7167 22.1754 28 22.1754C29.2833 22.1754 30.3333 23.2254 30.3333 24.5088V29.1754C30.3333 30.4588 29.2833 31.5088 28 31.5088ZM30.3333 40.8421H25.6667V36.1754H30.3333V40.8421Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function WidgetIcon({ fill = \"#FAFAFA\" }) {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16.5001 5.17497L19.3301 8.00497L16.5001 10.835L13.6701 8.00497L16.5001 5.17497ZM8.84009 5.65497V9.65497H4.84009V5.65497H8.84009ZM18.8401 15.655V19.655H14.8401V15.655H18.8401ZM8.84009 15.655V19.655H4.84009V15.655H8.84009ZM16.5001 2.34497L10.8401 7.99497L16.5001 13.655L22.1601 7.99497L16.5001 2.34497ZM10.8401 3.65497H2.84009V11.655H10.8401V3.65497ZM20.8401 13.655H12.8401V21.655H20.8401V13.655ZM10.8401 13.655H2.84009V21.655H10.8401V13.655Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function AppStoreIcon() {\n  return (\n    <svg\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_17065_123277)\">\n        <path\n          d=\"M7.50001 0.833336H2.50001C1.57954 0.833336 0.833344 1.57953 0.833344 2.5V7.5C0.833344 8.42048 1.57954 9.16667 2.50001 9.16667H7.50001C8.42048 9.16667 9.16668 8.42048 9.16668 7.5V2.5C9.16668 1.57953 8.42048 0.833336 7.50001 0.833336Z\"\n          fill=\"#C061F7\"\n        />\n        <path\n          d=\"M19.5234 3.84833L16.1509 0.476668C15.8452 0.172256 15.4314 0.00134277 15 0.00134277C14.5686 0.00134277 14.1548 0.172256 13.8492 0.476668L10.4767 3.84833C10.1722 4.15427 10.0012 4.56835 10.0012 5C10.0012 5.43165 10.1722 5.84574 10.4767 6.15167L13.8492 9.52417C14.1548 9.82858 14.5686 9.99949 15 9.99949C15.4314 9.99949 15.8452 9.82858 16.1509 9.52417L19.5234 6.1525C19.8281 5.84653 19.9992 5.43227 19.9992 5.00042C19.9992 4.56856 19.8281 4.1543 19.5234 3.84833Z\"\n          fill=\"#28DBD1\"\n        />\n        <path\n          d=\"M17.5 10.8333H12.5C11.5795 10.8333 10.8333 11.5795 10.8333 12.5V17.5C10.8333 18.4205 11.5795 19.1667 12.5 19.1667H17.5C18.4205 19.1667 19.1667 18.4205 19.1667 17.5V12.5C19.1667 11.5795 18.4205 10.8333 17.5 10.8333Z\"\n          fill=\"#6360FF\"\n        />\n        <path\n          d=\"M7.50001 10.8333H2.50001C1.57954 10.8333 0.833344 11.5795 0.833344 12.5V17.5C0.833344 18.4205 1.57954 19.1667 2.50001 19.1667H7.50001C8.42048 19.1667 9.16668 18.4205 9.16668 17.5V12.5C9.16668 11.5795 8.42048 10.8333 7.50001 10.8333Z\"\n          fill=\"#FE6F5C\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_17065_123277\">\n          <rect width=\"20\" height=\"20\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\nexport function TwitterIcon({\n  fill = \"#FAFAFA\",\n  style,\n}: {\n  fill?: string;\n  style?: React.CSSProperties;\n}) {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={style}\n    >\n      <path\n        d=\"M7.548 21.9012C16.6044 21.9012 21.558 14.3976 21.558 7.89117C21.558 7.67757 21.558 7.46517 21.5436 7.25517C22.5074 6.55741 23.3392 5.69351 24 4.70397C23.1013 5.10238 22.1479 5.36369 21.1716 5.47917C22.1996 4.86364 22.9689 3.89559 23.3364 2.75517C22.37 3.32864 21.3128 3.73285 20.2104 3.95037C19.4681 3.16049 18.486 2.63737 17.4164 2.46202C16.3467 2.28666 15.249 2.46885 14.2933 2.98038C13.3377 3.4919 12.5773 4.30422 12.13 5.29157C11.6826 6.27891 11.5732 7.38619 11.8188 8.44197C9.86111 8.34386 7.94592 7.83516 6.19757 6.94889C4.44923 6.06263 2.90679 4.8186 1.6704 3.29757C1.04078 4.38142 0.847907 5.66448 1.13104 6.88553C1.41418 8.10658 2.15204 9.17383 3.1944 9.86997C2.41112 9.84725 1.64478 9.63653 0.96 9.25557V9.31797C0.960467 10.4547 1.35407 11.5563 2.07408 12.436C2.79408 13.3157 3.79616 13.9192 4.9104 14.1444C4.18537 14.342 3.42467 14.3708 2.6868 14.2284C3.00139 15.2069 3.61401 16.0627 4.43895 16.6759C5.26389 17.2891 6.25989 17.6291 7.2876 17.6484C6.26654 18.4507 5.09734 19.0438 3.84687 19.3938C2.5964 19.7439 1.28919 19.844 0 19.6884C2.25193 21.1336 4.87223 21.9001 7.548 21.8964\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function DiscordIcon({\n  fill = \"#FAFAFA\",\n  style,\n}: {\n  fill?: string;\n  style?: React.CSSProperties;\n}) {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 71 55\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={style}\n    >\n      <g clipPath=\"url(#clip0)\">\n        <path\n          d=\"M60.1045 4.8978C55.5792 2.8214 50.7265 1.2916 45.6527 0.41542C45.5603 0.39851 45.468 0.440769 45.4204 0.525289C44.7963 1.6353 44.105 3.0834 43.6209 4.2216C38.1637 3.4046 32.7345 3.4046 27.3892 4.2216C26.905 3.0581 26.1886 1.6353 25.5617 0.525289C25.5141 0.443589 25.4218 0.40133 25.3294 0.41542C20.2584 1.2888 15.4057 2.8186 10.8776 4.8978C10.8384 4.9147 10.8048 4.9429 10.7825 4.9795C1.57795 18.7309 -0.943561 32.1443 0.293408 45.3914C0.299005 45.4562 0.335386 45.5182 0.385761 45.5576C6.45866 50.0174 12.3413 52.7249 18.1147 54.5195C18.2071 54.5477 18.305 54.5139 18.3638 54.4378C19.7295 52.5728 20.9469 50.6063 21.9907 48.5383C22.0523 48.4172 21.9935 48.2735 21.8676 48.2256C19.9366 47.4931 18.0979 46.6 16.3292 45.5858C16.1893 45.5041 16.1781 45.304 16.3068 45.2082C16.679 44.9293 17.0513 44.6391 17.4067 44.3461C17.471 44.2926 17.5606 44.2813 17.6362 44.3151C29.2558 49.6202 41.8354 49.6202 53.3179 44.3151C53.3935 44.2785 53.4831 44.2898 53.5502 44.3433C53.9057 44.6363 54.2779 44.9293 54.6529 45.2082C54.7816 45.304 54.7732 45.5041 54.6333 45.5858C52.8646 46.6197 51.0259 47.4931 49.0921 48.2228C48.9662 48.2707 48.9102 48.4172 48.9718 48.5383C50.038 50.6034 51.2554 52.5699 52.5959 54.435C52.6519 54.5139 52.7526 54.5477 52.845 54.5195C58.6464 52.7249 64.529 50.0174 70.6019 45.5576C70.6551 45.5182 70.6887 45.459 70.6943 45.3942C72.1747 30.0791 68.2147 16.7757 60.1968 4.9823C60.1772 4.9429 60.1437 4.9147 60.1045 4.8978ZM23.7259 37.3253C20.2276 37.3253 17.3451 34.1136 17.3451 30.1693C17.3451 26.225 20.1717 23.0133 23.7259 23.0133C27.308 23.0133 30.1626 26.2532 30.1066 30.1693C30.1066 34.1136 27.28 37.3253 23.7259 37.3253ZM47.3178 37.3253C43.8196 37.3253 40.9371 34.1136 40.9371 30.1693C40.9371 26.225 43.7636 23.0133 47.3178 23.0133C50.9 23.0133 53.7545 26.2532 53.6986 30.1693C53.6986 34.1136 50.9 37.3253 47.3178 37.3253Z\"\n          fill={fill}\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"71\" height=\"55\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\nexport const ContactsIcon = ({\n  fill = \"#FAFAFA\",\n  style,\n}: {\n  fill?: string;\n  style?: React.CSSProperties;\n}) => {\n  return (\n    <svg\n      style={style}\n      width=\"20\"\n      height=\"22\"\n      viewBox=\"0 0 20 22\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M10 21.6992C9.85005 21.6992 9.70405 21.6742 9.56205 21.6242C9.42072 21.5742 9.30005 21.4992 9.20005 21.3992L6.90005 19.0992H3.07505C2.44172 19.0992 1.90438 18.8786 1.46305 18.4372C1.02105 17.9952 0.800049 17.4576 0.800049 16.8242V2.97422C0.800049 2.34089 1.02105 1.80322 1.46305 1.36122C1.90438 0.919885 2.44172 0.699219 3.07505 0.699219H16.925C17.5584 0.699219 18.0961 0.919885 18.538 1.36122C18.9794 1.80322 19.2001 2.34089 19.2001 2.97422V16.8242C19.2001 17.4576 18.9794 17.9952 18.538 18.4372C18.0961 18.8786 17.5584 19.0992 16.925 19.0992H13.075L10.8 21.3992C10.6834 21.4992 10.5544 21.5742 10.413 21.6242C10.271 21.6742 10.1334 21.6992 10 21.6992ZM10 11.0242C10.9834 11.0242 11.821 10.6782 12.513 9.98622C13.2044 9.29489 13.55 8.45755 13.55 7.47422C13.55 6.49089 13.2044 5.65355 12.513 4.96222C11.821 4.27022 10.9834 3.92422 10 3.92422C9.01672 3.92422 8.17938 4.27022 7.48805 4.96222C6.79605 5.65355 6.45005 6.49089 6.45005 7.47422C6.45005 8.45755 6.79605 9.29489 7.48805 9.98622C8.17938 10.6782 9.01672 11.0242 10 11.0242ZM10 18.6242L12.425 16.8242H16.925V15.5492C16.025 14.6826 14.9917 14.0076 13.825 13.5242C12.6584 13.0409 11.3834 12.7992 10 12.7992C8.61672 12.7992 7.34172 13.0409 6.17505 13.5242C5.00838 14.0076 3.97505 14.6826 3.07505 15.5492V16.8242H7.55005L10 18.6242Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n\nexport function CashIcon() {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M4.7999 4.80005C3.47442 4.80005 2.3999 5.87457 2.3999 7.20005V12C2.3999 13.3255 3.47442 14.4 4.7999 14.4L4.7999 7.20005H16.7999C16.7999 5.87457 15.7254 4.80005 14.3999 4.80005H4.7999Z\"\n        fill=\"#FAFAFA\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.1999 12C7.1999 10.6746 8.27442 9.60005 9.5999 9.60005H19.1999C20.5254 9.60005 21.5999 10.6746 21.5999 12V16.8C21.5999 18.1255 20.5254 19.2 19.1999 19.2H9.5999C8.27442 19.2 7.1999 18.1255 7.1999 16.8V12ZM14.3999 16.8C15.7254 16.8 16.7999 15.7255 16.7999 14.4C16.7999 13.0746 15.7254 12 14.3999 12C13.0744 12 11.9999 13.0746 11.9999 14.4C11.9999 15.7255 13.0744 16.8 14.3999 16.8Z\"\n        fill=\"#FAFAFA\"\n      />\n    </svg>\n  );\n}\n\nexport function SuccessIcon() {\n  return (\n    <svg\n      width=\"56\"\n      height=\"56\"\n      viewBox=\"0 0 56 56\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M28.0001 4.66675C15.1201 4.66675 4.66675 15.1201 4.66675 28.0001C4.66675 40.8801 15.1201 51.3334 28.0001 51.3334C40.8801 51.3334 51.3334 40.8801 51.3334 28.0001C51.3334 15.1201 40.8801 4.66675 28.0001 4.66675ZM21.6767 38.0101L13.3001 29.6334C12.3901 28.7234 12.3901 27.2534 13.3001 26.3434C14.2101 25.4334 15.6801 25.4334 16.5901 26.3434L23.3334 33.0634L39.3867 17.0101C40.2967 16.1001 41.7668 16.1001 42.6768 17.0101C43.5868 17.9201 43.5868 19.3901 42.6768 20.3001L24.9667 38.0101C24.0801 38.9201 22.5867 38.9201 21.6767 38.0101Z\"\n        fill=\"#A1A1AA\"\n      />\n    </svg>\n  );\n}\n\nexport function CheckIcon({\n  fill = \"#35A63A\",\n  style,\n}: {\n  fill?: string;\n  style?: React.CSSProperties;\n}) {\n  return (\n    <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" style={style}>\n      <rect width=\"48\" height=\"48\" rx=\"24\" fill={fill} />\n      <path\n        d=\"M20 29.5598L14.44 23.9998L12.5466 25.8798L20 33.3331L36 17.3331L34.12 15.4531L20 29.5598Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n}\n\nexport function CrossIcon() {\n  return (\n    <svg\n      width=\"48\"\n      height=\"48\"\n      viewBox=\"0 0 48 48\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <rect width=\"48\" height=\"48\" rx=\"24\" fill=\"#E95050\" />\n      <path\n        d=\"M33.3334 16.547L31.4534 14.667L24.0001 22.1203L16.5467 14.667L14.6667 16.547L22.1201 24.0003L14.6667 31.4537L16.5467 33.3337L24.0001 25.8803L31.4534 33.3337L33.3334 31.4537L25.8801 24.0003L33.3334 16.547Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n}\n\nexport function HardwareWalletIcon({ fill = \"#A1A1AA\", ...props }) {\n  return (\n    <svg\n      width=\"56\"\n      height=\"56\"\n      viewBox=\"0 0 56 56\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M42 9.33325H14C8.84332 9.33325 4.66666 13.5099 4.66666 18.6666V37.3333C4.66666 42.4899 8.84332 46.6666 14 46.6666H42C47.1567 46.6666 51.3333 42.4899 51.3333 37.3333V18.6666C51.3333 13.5099 47.1567 9.33325 42 9.33325ZM37.66 32.1299C37.1 32.5966 36.33 32.7833 35.6067 32.5966L9.68332 26.2499C10.3833 24.5466 12.04 23.3333 14 23.3333H42C43.5633 23.3333 44.94 24.1266 45.8033 25.2933L37.66 32.1299ZM14 13.9999H42C44.5667 13.9999 46.6667 16.0999 46.6667 18.6666V19.9499C45.29 19.1566 43.7033 18.6666 42 18.6666H14C12.2967 18.6666 10.71 19.1566 9.33332 19.9499V18.6666C9.33332 16.0999 11.4333 13.9999 14 13.9999Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function SolanaIcon() {\n  return (\n    <svg\n      width=\"56\"\n      height=\"56\"\n      viewBox=\"0 0 56 56\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M28 56C43.464 56 56 43.464 56 28C56 12.536 43.464 0 28 0C12.536 0 0 12.536 0 28C0 43.464 12.536 56 28 56Z\"\n        fill=\"black\"\n      />\n      <path\n        d=\"M55.5 28C55.5 43.1878 43.1878 55.5 28 55.5C12.8122 55.5 0.5 43.1878 0.5 28C0.5 12.8122 12.8122 0.5 28 0.5C43.1878 0.5 55.5 12.8122 55.5 28Z\"\n        stroke=\"white\"\n        strokeOpacity=\"0.15\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17.2789 35.7183C17.3843 35.6023 17.5127 35.5098 17.6559 35.4464C17.799 35.3829 17.954 35.3502 18.1105 35.35L43.7697 35.371C43.8791 35.3713 43.9859 35.4032 44.0773 35.463C44.1689 35.5228 44.241 35.6079 44.2849 35.7079C44.329 35.8078 44.343 35.9186 44.3254 36.0264C44.3077 36.1342 44.2592 36.2346 44.1855 36.3153L38.7213 42.3318C38.6159 42.4478 38.4874 42.5404 38.3442 42.6039C38.2008 42.6673 38.0458 42.7 37.889 42.7L12.2305 42.6791C12.1213 42.6788 12.0144 42.6468 11.9229 42.5871C11.8315 42.5273 11.7594 42.4422 11.7153 42.3422C11.6713 42.2422 11.6572 42.1315 11.6749 42.0237C11.6925 41.9159 11.7411 41.8155 11.8147 41.7348L17.2789 35.7183ZM44.1855 30.7097C44.2592 30.7905 44.3077 30.8909 44.3254 30.9987C44.343 31.1065 44.329 31.2172 44.2849 31.3172C44.241 31.4172 44.1689 31.5023 44.0773 31.5621C43.9859 31.6218 43.8791 31.6538 43.7697 31.654L18.1112 31.675C17.9546 31.675 17.7996 31.6423 17.6562 31.5789C17.5128 31.5154 17.3843 31.4228 17.2789 31.3068L11.8147 25.2868C11.7411 25.2061 11.6925 25.1057 11.6749 24.9979C11.6572 24.8901 11.6713 24.7793 11.7153 24.6794C11.7594 24.5794 11.8315 24.4943 11.9229 24.4345C12.0144 24.3747 12.1213 24.3428 12.2305 24.3425L37.8897 24.3215C38.0464 24.3217 38.2012 24.3544 38.3444 24.4179C38.4877 24.4813 38.616 24.5738 38.7213 24.6897L44.1855 30.7097ZM17.2789 13.6682C17.3843 13.5524 17.5127 13.4598 17.6559 13.3964C17.799 13.333 17.954 13.3001 18.1105 13.3L43.7697 13.321C43.8791 13.3213 43.9859 13.3532 44.0773 13.413C44.1689 13.4728 44.241 13.5579 44.2849 13.6579C44.329 13.7579 44.343 13.8685 44.3254 13.9764C44.3077 14.0842 44.2592 14.1846 44.1855 14.2653L38.7213 20.2818C38.6159 20.3978 38.4874 20.4904 38.3442 20.5539C38.2008 20.6173 38.0458 20.65 37.889 20.65L12.2305 20.629C12.1213 20.6288 12.0144 20.5968 11.9229 20.5371C11.8315 20.4773 11.7594 20.3922 11.7153 20.2922C11.6713 20.1922 11.6572 20.0815 11.6749 19.9737C11.6925 19.8659 11.7411 19.7655 11.8147 19.6847L17.2789 13.6682Z\"\n        fill=\"url(#paint0_linear_5897_33336)\"\n      />\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_5897_33336\"\n          x1=\"12.6589\"\n          y1=\"43.3412\"\n          x2=\"43.3413\"\n          y2=\"12.6588\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#9945FF\" />\n          <stop offset=\"0.2\" stopColor=\"#7962E7\" />\n          <stop offset=\"1\" stopColor=\"#00D18C\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n}\n\nexport function EthereumIcon() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"body_1\" width=\"56\" height=\"56\">\n      <g transform=\"matrix(1.6470588 0 0 1.6470588 0 0)\">\n        <path\n          d=\"M17 34C 26.3888 34 34 26.3888 34 17C 34 7.61116 26.3888 0 17 0C 7.61116 0 0 7.61116 0 17C 0 26.3888 7.61116 34 17 34z\"\n          stroke=\"none\"\n          fill=\"#627EEA\"\n          fillRule=\"nonzero\"\n        />\n        <path\n          d=\"M17.5293 4.25L17.5293 13.6744L25.4949 17.2337L17.5293 4.25z\"\n          stroke=\"none\"\n          fill=\"#FFFFFF\"\n          fillRule=\"nonzero\"\n          fillOpacity=\"0.6\"\n        />\n        <path\n          d=\"M17.5291 4.25L9.5625 17.2337L17.5291 13.6744L17.5291 4.25z\"\n          stroke=\"none\"\n          fill=\"#FFFFFF\"\n          fillRule=\"nonzero\"\n        />\n        <path\n          d=\"M17.5293 23.3408L17.5293 29.7445L25.5002 18.7168L17.5293 23.3408z\"\n          stroke=\"none\"\n          fill=\"#FFFFFF\"\n          fillRule=\"nonzero\"\n          fillOpacity=\"0.6\"\n        />\n        <path\n          d=\"M17.5291 29.7445L17.5291 23.3397L9.5625 18.7168L17.5291 29.7445z\"\n          stroke=\"none\"\n          fill=\"#FFFFFF\"\n          fillRule=\"nonzero\"\n        />\n        <path\n          d=\"M17.5293 21.8581L25.4949 17.233L17.5293 13.6758L17.5293 21.8581z\"\n          stroke=\"none\"\n          fill=\"#FFFFFF\"\n          fillRule=\"nonzero\"\n          fillOpacity=\"0.2\"\n        />\n        <path\n          d=\"M9.5625 17.233L17.5291 21.8581L17.5291 13.6758L9.5625 17.233z\"\n          stroke=\"none\"\n          fill=\"#FFFFFF\"\n          fillRule=\"nonzero\"\n          fillOpacity=\"0.6\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nexport function SadFaceIcon() {\n  return (\n    <svg\n      width=\"56\"\n      height=\"56\"\n      viewBox=\"0 0 56 56\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M36.1666 25.6667C38.0996 25.6667 39.6666 24.0997 39.6666 22.1667C39.6666 20.2338 38.0996 18.6667 36.1666 18.6667C34.2336 18.6667 32.6666 20.2338 32.6666 22.1667C32.6666 24.0997 34.2336 25.6667 36.1666 25.6667Z\"\n        fill=\"#A1A1AA\"\n      />\n      <path\n        d=\"M19.8333 25.6667C21.7663 25.6667 23.3333 24.0997 23.3333 22.1667C23.3333 20.2338 21.7663 18.6667 19.8333 18.6667C17.9003 18.6667 16.3333 20.2338 16.3333 22.1667C16.3333 24.0997 17.9003 25.6667 19.8333 25.6667Z\"\n        fill=\"#A1A1AA\"\n      />\n      <path\n        d=\"M27.9766 4.66675C15.0966 4.66675 4.66663 15.1201 4.66663 28.0001C4.66663 40.8801 15.0966 51.3334 27.9766 51.3334C40.88 51.3334 51.3333 40.8801 51.3333 28.0001C51.3333 15.1201 40.88 4.66675 27.9766 4.66675ZM28 46.6667C17.6866 46.6667 9.33329 38.3134 9.33329 28.0001C9.33329 17.6867 17.6866 9.33341 28 9.33341C38.3133 9.33341 46.6666 17.6867 46.6666 28.0001C46.6666 38.3134 38.3133 46.6667 28 46.6667ZM28 32.6667C23.5666 32.6667 19.53 34.9301 17.15 38.6867C16.6366 39.5034 16.8933 40.5767 17.71 41.0901C18.5266 41.6034 19.6 41.3467 20.1133 40.5301C21.84 37.7767 24.78 36.1434 28 36.1434C31.22 36.1434 34.16 37.7767 35.8866 40.5301C36.2133 41.0667 36.7966 41.3467 37.38 41.3467C37.7066 41.3467 38.01 41.2534 38.3133 41.0901C39.13 40.5767 39.3866 39.5034 38.8733 38.6867C36.47 34.9067 32.4333 32.6667 28 32.6667Z\"\n        fill=\"#A1A1AA\"\n      />\n    </svg>\n  );\n}\n\nexport function EyeIcon() {\n  return (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M20.0003 10.7834C24.6003 10.7834 28.3337 14.5167 28.3337 19.1167C28.3337 19.9667 28.167 20.7834 27.9337 21.5501L33.0337 26.6501C35.3503 24.6001 37.1837 22.0334 38.3337 19.1001C35.4503 11.8001 28.3337 6.61675 20.0003 6.61675C17.8837 6.61675 15.8503 6.95008 13.9337 7.56675L17.5503 11.1834C18.3337 10.9501 19.1503 10.7834 20.0003 10.7834ZM4.51699 5.21675C3.86699 5.86675 3.86699 6.91675 4.51699 7.56675L7.80032 10.8501C5.10032 13.0001 2.95033 15.8334 1.66699 19.1167C4.55033 26.4334 11.667 31.6167 20.0003 31.6167C22.5337 31.6167 24.9503 31.1167 27.1837 30.2501L31.717 34.7834C32.367 35.4334 33.417 35.4334 34.067 34.7834C34.717 34.1334 34.717 33.0834 34.067 32.4334L6.88366 5.21675C6.23366 4.56675 5.16699 4.56675 4.51699 5.21675ZM20.0003 27.4501C15.4003 27.4501 11.667 23.7167 11.667 19.1167C11.667 17.8334 11.967 16.6167 12.4837 15.5501L15.1003 18.1667C15.0503 18.4667 15.0003 18.7834 15.0003 19.1167C15.0003 21.8834 17.2337 24.1167 20.0003 24.1167C20.3337 24.1167 20.6337 24.0667 20.9503 24.0001L23.567 26.6167C22.4837 27.1501 21.2837 27.4501 20.0003 27.4501ZM24.9503 18.5667C24.7003 16.2334 22.867 14.4167 20.5503 14.1667L24.9503 18.5667Z\"\n        fill=\"#A1A1AA\"\n      />\n    </svg>\n  );\n}\n\nexport function BalancesIcon({ fill = \"#99A4B4\", ...props }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      {...props}\n    >\n      <path d=\"M15.7664 5L18.7664 0H5.23438L8.23438 5H15.7664Z\" fill={fill} />\n      <path\n        d=\"M16.416 7H7.583C5.416 9.305 2 13.492 2 17C2 19.1 2.975 24 12 24C21.025 24 22 19.1 22 17C22 13.492 18.582 9.305 16.416 7Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function GridIcon({ fill = \"#99A4B4\", ...props }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      {...props}\n    >\n      <path\n        d=\"M9 1H3C1.89543 1 1 1.89543 1 3V9C1 10.1046 1.89543 11 3 11H9C10.1046 11 11 10.1046 11 9V3C11 1.89543 10.1046 1 9 1Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M23.4285 4.61798L19.3815 0.571977C19.0147 0.206683 18.5182 0.00158691 18.0005 0.00158691C17.4829 0.00158691 16.9863 0.206683 16.6195 0.571977L12.5725 4.61798C12.2071 4.9851 12.002 5.48199 12.002 5.99998C12.002 6.51796 12.2071 7.01486 12.5725 7.38198L16.6195 11.429C16.9863 11.7943 17.4829 11.9994 18.0005 11.9994C18.5182 11.9994 19.0147 11.7943 19.3815 11.429L23.4285 7.38298C23.7942 7.01582 23.9996 6.5187 23.9996 6.00048C23.9996 5.48225 23.7942 4.98514 23.4285 4.61798Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M21 13H15C13.8954 13 13 13.8954 13 15V21C13 22.1046 13.8954 23 15 23H21C22.1046 23 23 22.1046 23 21V15C23 13.8954 22.1046 13 21 13Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M9 13H3C1.89543 13 1 13.8954 1 15V21C1 22.1046 1.89543 23 3 23H9C10.1046 23 11 22.1046 11 21V15C11 13.8954 10.1046 13 9 13Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function ImageIcon({ fill = \"#99A4B4\", ...props }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      {...props}\n    >\n      <path\n        d=\"M20 1H4C3.20435 1 2.44129 1.31607 1.87868 1.87868C1.31607 2.44129 1 3.20435 1 4V20C1 20.7956 1.31607 21.5587 1.87868 22.1213C2.44129 22.6839 3.20435 23 4 23H20C20.7956 23 21.5587 22.6839 22.1213 22.1213C22.6839 21.5587 23 20.7956 23 20V4C23 3.20435 22.6839 2.44129 22.1213 1.87868C21.5587 1.31607 20.7956 1 20 1V1ZM9.5 6C9.79667 6 10.0867 6.08797 10.3334 6.2528C10.58 6.41762 10.7723 6.65189 10.8858 6.92597C10.9994 7.20006 11.0291 7.50166 10.9712 7.79264C10.9133 8.08361 10.7704 8.35088 10.5607 8.56066C10.3509 8.77044 10.0836 8.9133 9.79264 8.97118C9.50166 9.02906 9.20006 8.99935 8.92597 8.88582C8.65189 8.77229 8.41762 8.58003 8.2528 8.33335C8.08797 8.08668 8 7.79667 8 7.5C8 7.10218 8.15804 6.72064 8.43934 6.43934C8.72064 6.15804 9.10218 6 9.5 6ZM18.925 16.763C18.8802 16.8354 18.8177 16.8952 18.7433 16.9367C18.6689 16.9782 18.5852 17 18.5 17H5.5C5.41075 17 5.32312 16.9761 5.24622 16.9308C5.16932 16.8855 5.10594 16.8204 5.06268 16.7424C5.01941 16.6643 4.99783 16.5761 5.00017 16.4869C5.00251 16.3977 5.0287 16.3107 5.076 16.235L7.576 12.235C7.61791 12.168 7.6751 12.1119 7.74288 12.0713C7.81067 12.0306 7.88712 12.0066 7.96596 12.0013C8.04481 11.9959 8.1238 12.0093 8.19647 12.0404C8.26914 12.0714 8.3334 12.1193 8.384 12.18L10.479 14.694L14.6 9.2C14.6519 9.13248 14.7197 9.07886 14.7973 9.04396C14.875 9.00906 14.9601 8.99395 15.045 9C15.1294 9.00799 15.2105 9.03734 15.2804 9.08527C15.3504 9.1332 15.407 9.19815 15.445 9.274L18.945 16.274C18.9839 16.3504 19.0024 16.4355 18.9989 16.5211C18.9954 16.6067 18.97 16.69 18.925 16.763V16.763Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function MessageIcon({ fill = \"#99A4B4\", ...props }) {\n  return (\n    <svg\n      width=\"22\"\n      height=\"21\"\n      viewBox=\"0 0 22 21\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M6.5999 10.9C6.96657 10.9 7.2749 10.775 7.5249 10.525C7.7749 10.275 7.8999 9.96667 7.8999 9.6C7.8999 9.23333 7.7749 8.925 7.5249 8.675C7.2749 8.425 6.96657 8.3 6.5999 8.3C6.23324 8.3 5.9249 8.425 5.6749 8.675C5.4249 8.925 5.2999 9.23333 5.2999 9.6C5.2999 9.96667 5.4249 10.275 5.6749 10.525C5.9249 10.775 6.23324 10.9 6.5999 10.9ZM10.9999 10.9C11.3666 10.9 11.6749 10.775 11.9249 10.525C12.1749 10.275 12.2999 9.96667 12.2999 9.6C12.2999 9.23333 12.1749 8.925 11.9249 8.675C11.6749 8.425 11.3666 8.3 10.9999 8.3C10.6332 8.3 10.3249 8.425 10.0749 8.675C9.8249 8.925 9.6999 9.23333 9.6999 9.6C9.6999 9.96667 9.8249 10.275 10.0749 10.525C10.3249 10.775 10.6332 10.9 10.9999 10.9ZM15.3999 10.9C15.7666 10.9 16.0749 10.775 16.3249 10.525C16.5749 10.275 16.6999 9.96667 16.6999 9.6C16.6999 9.23333 16.5749 8.925 16.3249 8.675C16.0749 8.425 15.7666 8.3 15.3999 8.3C15.0332 8.3 14.7249 8.425 14.4749 8.675C14.2249 8.925 14.0999 9.23333 14.0999 9.6C14.0999 9.96667 14.2249 10.275 14.4749 10.525C14.7249 10.775 15.0332 10.9 15.3999 10.9ZM0.149902 18.65V3.9C0.149902 3.01667 0.453902 2.27067 1.0619 1.662C1.67057 1.054 2.41657 0.75 3.2999 0.75H18.6999C19.5832 0.75 20.3292 1.054 20.9379 1.662C21.5459 2.27067 21.8499 3.01667 21.8499 3.9V15.3C21.8499 16.1833 21.5459 16.9293 20.9379 17.538C20.3292 18.146 19.5832 18.45 18.6999 18.45H4.1499L2.8249 19.775C2.3249 20.275 1.75424 20.3877 1.1129 20.113C0.470902 19.8377 0.149902 19.35 0.149902 18.65V18.65Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function PowerIcon({ fill = \"#99A4B4\" }) {\n  return (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n      <path\n        d=\"M8.88896 0H7.11125V8.88896H8.88896V0ZM13.1867 1.92437L11.929 3.18208C13.3244 4.32438 14.2223 6.05333 14.2223 8C14.2223 11.4356 11.4356 14.2223 8 14.2223C4.56437 14.2223 1.77771 11.4356 1.77771 8C1.77771 6.05333 2.67542 4.32438 4.07104 3.18229L2.81333 1.92458C1.09771 3.39104 0 5.56437 0 8C0 12.4177 3.58229 16 8 16C12.4177 16 16 12.4177 16 8C16 5.56437 14.9023 3.39104 13.1867 1.92437Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function MoreIcon({ fill = \"#99A4B4\" }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"8\"\n      viewBox=\"0 0 20 8\"\n      fill=\"none\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.99991 7.50012C11.9329 7.50012 13.4999 5.93312 13.4999 4.00012C13.4999 2.06713 11.9329 0.500122 9.99991 0.500122C8.06691 0.500122 6.49991 2.06713 6.49991 4.00012C6.49991 5.93312 8.06691 7.50012 9.99991 7.50012ZM4.5 4.00006C4.5 5.10463 3.60457 6.00006 2.5 6.00006C1.39543 6.00006 0.5 5.10463 0.5 4.00006C0.5 2.89549 1.39543 2.00006 2.5 2.00006C3.60457 2.00006 4.5 2.89549 4.5 4.00006ZM19.5 4.00012C19.5 5.10469 18.6046 6.00012 17.5 6.00012C16.3954 6.00012 15.5 5.10469 15.5 4.00012C15.5 2.89555 16.3954 2.00012 17.5 2.00012C18.6046 2.00012 19.5 2.89555 19.5 4.00012Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function SwapIcon({ fill = \"#99A4B4\" }) {\n  return (\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M22 12C22 6.48 17.52 2 12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12ZM15 6.5L18.15 9.65C18.35 9.85 18.35 10.16 18.15 10.36L15 13.5V11H11V9H15V6.5ZM9 17.5L5.85 14.35C5.65 14.15 5.65 13.84 5.85 13.64L9 10.5V13H13V15H9V17.5Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function ExtensionIcon({ fill = \"#FAFAFA\" }) {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n      <path\n        d=\"M16.6667 9.58333H15.4167V6.25C15.4167 5.33333 14.6667 4.58333 13.75 4.58333H10.4167V3.33333C10.4167 2.18333 9.48333 1.25 8.33333 1.25C7.18333 1.25 6.25 2.18333 6.25 3.33333V4.58333H2.91667C2 4.58333 1.25833 5.33333 1.25833 6.25V9.41667H2.5C3.74167 9.41667 4.75 10.425 4.75 11.6667C4.75 12.9083 3.74167 13.9167 2.5 13.9167H1.25V17.0833C1.25 18 2 18.75 2.91667 18.75H6.08333V17.5C6.08333 16.2583 7.09167 15.25 8.33333 15.25C9.575 15.25 10.5833 16.2583 10.5833 17.5V18.75H13.75C14.6667 18.75 15.4167 18 15.4167 17.0833V13.75H16.6667C17.8167 13.75 18.75 12.8167 18.75 11.6667C18.75 10.5167 17.8167 9.58333 16.6667 9.58333Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function PinIcon({ fill = \"#FAFAFA\" }) {\n  return (\n    <svg width=\"12\" height=\"18\" viewBox=\"0 0 12 18\" fill=\"none\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.33317 6.49996V2.33329H10.1665C10.6248 2.33329 10.9998 1.95829 10.9998 1.49996C10.9998 1.04163 10.6248 0.666626 10.1665 0.666626H1.83317C1.37484 0.666626 0.999837 1.04163 0.999837 1.49996C0.999837 1.95829 1.37484 2.33329 1.83317 2.33329H2.6665V6.49996C2.6665 7.88329 1.54984 8.99996 0.166504 8.99996V10.6666H5.1415V16.5L5.97484 17.3333L6.80817 16.5V10.6666H11.8332V8.99996C10.4498 8.99996 9.33317 7.88329 9.33317 6.49996Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function Backpack({ fill }: { fill: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"200\"\n      height=\"41\"\n      viewBox=\"0 0 200 41\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M2.02026 31.597V1.49499H14.748C16.8221 1.49499 18.6 1.84518 20.0815 2.54554C21.563 3.2459 22.6944 4.25603 23.4755 5.57594C24.2567 6.86892 24.6473 8.44473 24.6473 10.3034C24.6473 11.6233 24.2837 12.8893 23.5564 14.1015C22.8291 15.2867 21.6304 16.2834 19.9603 17.0915V14.0207C21.5496 14.6402 22.7752 15.381 23.6372 16.243C24.4991 17.105 25.0918 18.0478 25.415 19.0714C25.7382 20.068 25.8999 21.1186 25.8999 22.223C25.8999 25.186 24.9167 27.4892 22.9503 29.1323C20.9839 30.7755 18.2498 31.597 14.748 31.597H2.02026ZM8.2831 26.1423H15.4753C16.7413 26.1423 17.7514 25.7787 18.5057 25.0514C19.2599 24.3241 19.637 23.3813 19.637 22.223C19.637 21.0378 19.2599 20.0815 18.5057 19.3542C17.7514 18.6269 16.7413 18.2632 15.4753 18.2632H8.2831V26.1423ZM8.2831 12.8085H15.1924C16.1622 12.8085 16.9299 12.5391 17.4955 12.0004C18.0882 11.4347 18.3845 10.694 18.3845 9.77811C18.3845 8.86225 18.0882 8.13495 17.4955 7.59621C16.9299 7.03054 16.1622 6.7477 15.1924 6.7477H8.2831V12.8085Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M36.3014 32.0819C34.7121 32.0819 33.3384 31.826 32.1801 31.3142C31.0218 30.8024 30.1329 30.0751 29.5133 29.1323C28.8938 28.1626 28.584 27.0178 28.584 25.6978C28.584 24.4587 28.8668 23.3678 29.4325 22.425C29.9982 21.4553 30.8602 20.6472 32.0184 20.0007C33.2037 19.3542 34.6717 18.8963 36.4226 18.6269L43.1703 17.5359V21.9805L37.5136 22.9907C36.6516 23.1523 35.9916 23.4351 35.5337 23.8392C35.0758 24.2163 34.8468 24.7685 34.8468 25.4958C34.8468 26.1692 35.1027 26.6945 35.6145 27.0716C36.1263 27.4487 36.7594 27.6373 37.5136 27.6373C38.5103 27.6373 39.3857 27.4218 40.1399 26.9908C40.8942 26.5598 41.4733 25.9807 41.8774 25.2534C42.3084 24.4992 42.5239 23.6776 42.5239 22.7887V17.0511C42.5239 16.216 42.1871 15.5157 41.5137 14.95C40.8672 14.3843 39.9783 14.1015 38.847 14.1015C37.7695 14.1015 36.8132 14.3978 35.9782 14.9904C35.1701 15.583 34.5775 16.3642 34.2003 17.3339L29.3517 15.0308C29.7827 13.7917 30.4696 12.7277 31.4124 11.8388C32.3552 10.9499 33.4865 10.263 34.8064 9.77811C36.1263 9.29324 37.5675 9.05081 39.1298 9.05081C40.9885 9.05081 42.6316 9.38752 44.0593 10.0609C45.4869 10.7344 46.5913 11.6772 47.3725 12.8893C48.1806 14.0746 48.5847 15.4618 48.5847 17.0511V31.597H42.9279V28.0414L44.3017 27.7989C43.6552 28.7687 42.9414 29.5768 42.1602 30.2233C41.379 30.8428 40.5036 31.3007 39.5339 31.597C38.5641 31.9203 37.4866 32.0819 36.3014 32.0819Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M63.8582 32.0819C61.6494 32.0819 59.6561 31.5836 57.8782 30.5869C56.1273 29.5633 54.7266 28.176 53.6761 26.4251C52.6525 24.6742 52.1407 22.7078 52.1407 20.5259C52.1407 18.3441 52.6525 16.3911 53.6761 14.6672C54.6997 12.9163 56.1004 11.5425 57.8782 10.5458C59.6561 9.54914 61.6494 9.05081 63.8582 9.05081C65.5014 9.05081 67.0233 9.33365 68.4241 9.89933C69.8248 10.465 71.0235 11.2596 72.0201 12.2832C73.0168 13.2799 73.7306 14.4651 74.1616 15.8389L68.9089 18.1016C68.5318 16.9972 67.8853 16.1218 66.9695 15.4753C66.0805 14.8288 65.0435 14.5055 63.8582 14.5055C62.8077 14.5055 61.8649 14.7614 61.0299 15.2732C60.2218 15.785 59.5753 16.4989 59.0904 17.4147C58.6325 18.3306 58.4035 19.3811 58.4035 20.5664C58.4035 21.7516 58.6325 22.8021 59.0904 23.718C59.5753 24.6338 60.2218 25.3477 61.0299 25.8595C61.8649 26.3713 62.8077 26.6272 63.8582 26.6272C65.0704 26.6272 66.1209 26.3039 67.0099 25.6574C67.8988 25.011 68.5318 24.1355 68.9089 23.0311L74.1616 25.3342C73.7576 26.6272 73.0572 27.7855 72.0605 28.8091C71.0639 29.8327 69.8652 30.6408 68.4645 31.2334C67.0637 31.7991 65.5283 32.0819 63.8582 32.0819Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M77.7306 31.597V1.01013H83.7914V20.6068L81.5287 19.8795L91.2664 9.53568H98.7414L90.7411 18.4249L98.701 31.597H91.832L85.1651 20.4047L88.6804 19.5158L81.9327 26.8696L83.7914 23.3543V31.597H77.7306Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M101.406 39.6781V9.53568H107.062V13.7378L106.537 12.5257C107.264 11.4213 108.248 10.5727 109.487 9.98013C110.753 9.36058 112.194 9.05081 113.81 9.05081C115.911 9.05081 117.81 9.56261 119.507 10.5862C121.204 11.6098 122.551 12.9971 123.548 14.748C124.544 16.4719 125.043 18.4114 125.043 20.5664C125.043 22.6944 124.544 24.6338 123.548 26.3847C122.578 28.1356 121.245 29.5229 119.548 30.5465C117.851 31.5701 115.925 32.0819 113.77 32.0819C112.261 32.0819 110.86 31.8125 109.567 31.2738C108.301 30.7081 107.278 29.8865 106.497 28.8091L107.466 27.5565V39.6781H101.406ZM113.042 26.6272C114.174 26.6272 115.17 26.3713 116.032 25.8595C116.894 25.3477 117.568 24.6338 118.053 23.718C118.538 22.8021 118.78 21.7516 118.78 20.5664C118.78 19.3811 118.538 18.3441 118.053 17.4551C117.568 16.5393 116.894 15.8255 116.032 15.3137C115.17 14.7749 114.174 14.5055 113.042 14.5055C111.965 14.5055 110.995 14.7614 110.133 15.2732C109.298 15.785 108.638 16.4989 108.153 17.4147C107.695 18.3306 107.466 19.3811 107.466 20.5664C107.466 21.7516 107.695 22.8021 108.153 23.718C108.638 24.6338 109.298 25.3477 110.133 25.8595C110.995 26.3713 111.965 26.6272 113.042 26.6272Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M135.421 32.0819C133.832 32.0819 132.458 31.826 131.3 31.3142C130.141 30.8024 129.252 30.0751 128.633 29.1323C128.013 28.1626 127.704 27.0178 127.704 25.6978C127.704 24.4587 127.986 23.3678 128.552 22.425C129.118 21.4553 129.98 20.6472 131.138 20.0007C132.323 19.3542 133.791 18.8963 135.542 18.6269L142.29 17.5359V21.9805L136.633 22.9907C135.771 23.1523 135.111 23.4351 134.653 23.8392C134.195 24.2163 133.966 24.7685 133.966 25.4958C133.966 26.1692 134.222 26.6945 134.734 27.0716C135.246 27.4487 135.879 27.6373 136.633 27.6373C137.63 27.6373 138.505 27.4218 139.259 26.9908C140.014 26.5598 140.593 25.9807 140.997 25.2534C141.428 24.4992 141.643 23.6776 141.643 22.7887V17.0511C141.643 16.216 141.307 15.5157 140.633 14.95C139.987 14.3843 139.098 14.1015 137.967 14.1015C136.889 14.1015 135.933 14.3978 135.098 14.9904C134.29 15.583 133.697 16.3642 133.32 17.3339L128.471 15.0308C128.902 13.7917 129.589 12.7277 130.532 11.8388C131.475 10.9499 132.606 10.263 133.926 9.77811C135.246 9.29324 136.687 9.05081 138.249 9.05081C140.108 9.05081 141.751 9.38752 143.179 10.0609C144.606 10.7344 145.711 11.6772 146.492 12.8893C147.3 14.0746 147.704 15.4618 147.704 17.0511V31.597H142.047V28.0414L143.421 27.7989C142.775 28.7687 142.061 29.5768 141.28 30.2233C140.499 30.8428 139.623 31.3007 138.653 31.597C137.684 31.9203 136.606 32.0819 135.421 32.0819Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M162.978 32.0819C160.769 32.0819 158.776 31.5836 156.998 30.5869C155.247 29.5633 153.846 28.176 152.796 26.4251C151.772 24.6742 151.26 22.7078 151.26 20.5259C151.26 18.3441 151.772 16.3911 152.796 14.6672C153.819 12.9163 155.22 11.5425 156.998 10.5458C158.776 9.54914 160.769 9.05081 162.978 9.05081C164.621 9.05081 166.143 9.33365 167.544 9.89933C168.944 10.465 170.143 11.2596 171.14 12.2832C172.136 13.2799 172.85 14.4651 173.281 15.8389L168.028 18.1016C167.651 16.9972 167.005 16.1218 166.089 15.4753C165.2 14.8288 164.163 14.5055 162.978 14.5055C161.927 14.5055 160.984 14.7614 160.149 15.2732C159.341 15.785 158.695 16.4989 158.21 17.4147C157.752 18.3306 157.523 19.3811 157.523 20.5664C157.523 21.7516 157.752 22.8021 158.21 23.718C158.695 24.6338 159.341 25.3477 160.149 25.8595C160.984 26.3713 161.927 26.6272 162.978 26.6272C164.19 26.6272 165.24 26.3039 166.129 25.6574C167.018 25.011 167.651 24.1355 168.028 23.0311L173.281 25.3342C172.877 26.6272 172.177 27.7855 171.18 28.8091C170.183 29.8327 168.985 30.6408 167.584 31.2334C166.183 31.7991 164.648 32.0819 162.978 32.0819Z\"\n        fill={fill}\n      />\n      <path\n        d=\"M176.85 31.597V1.01013H182.911V20.6068L180.648 19.8795L190.386 9.53568H197.861L189.861 18.4249L197.821 31.597H190.952L184.285 20.4047L187.8 19.5158L181.052 26.8696L182.911 23.3543V31.597H176.85Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function RedBackpack({ style }: { style?: React.CSSProperties }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"55\"\n      height=\"80\"\n      viewBox=\"0 0 55 80\"\n      fill=\"none\"\n      style={style}\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M32.71 6.29026C35.6178 6.29026 38.3452 6.68005 40.8705 7.40296C38.3982 1.64085 33.2649 0 27.5519 0C21.8277 0 16.6855 1.64729 14.2188 7.43692C16.7255 6.68856 19.4412 6.29026 22.339 6.29026H32.71ZM21.6739 12.0752C7.86677 12.0752 0 22.9371 0 36.336V50.1C0 51.4399 1.11929 52.5 2.5 52.5H52.5C53.8807 52.5 55 51.4399 55 50.1V36.336C55 22.9371 45.8521 12.0752 32.0449 12.0752H21.6739ZM27.4805 36.4551C32.313 36.4551 36.2305 32.5376 36.2305 27.7051C36.2305 22.8726 32.313 18.9551 27.4805 18.9551C22.648 18.9551 18.7305 22.8726 18.7305 27.7051C18.7305 32.5376 22.648 36.4551 27.4805 36.4551ZM0 60.5901C0 59.2503 1.11929 58.1641 2.5 58.1641H52.5C53.8807 58.1641 55 59.2503 55 60.5901V75.1466C55 77.8264 52.7614 79.9988 50 79.9988H5C2.23857 79.9988 0 77.8264 0 75.1466V60.5901Z\"\n        fill=\"#E33E3F\"\n      />\n    </svg>\n  );\n}\n\nexport function Dollar({\n  fill,\n  style,\n}: {\n  fill?: string;\n  style?: React.CSSProperties;\n}) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"10\"\n      height=\"18\"\n      viewBox=\"0 0 10 18\"\n      fill=\"none\"\n      style={style}\n    >\n      <path\n        d=\"M5.3 7.9C3.03 7.31 2.3 6.7 2.3 5.75C2.3 4.66 3.31 3.9 5 3.9C6.42 3.9 7.13 4.44 7.39 5.3C7.51 5.7 7.84 6 8.26 6H8.56C9.22 6 9.69 5.35 9.46 4.73C9.04 3.55 8.06 2.57 6.5 2.19V1.5C6.5 0.67 5.83 0 5 0C4.17 0 3.5 0.67 3.5 1.5V2.16C1.56 2.58 0 3.84 0 5.77C0 8.08 1.91 9.23 4.7 9.9C7.2 10.5 7.7 11.38 7.7 12.31C7.7 13 7.21 14.1 5 14.1C3.35 14.1 2.5 13.51 2.17 12.67C2.02 12.28 1.68 12 1.27 12H0.99C0.32 12 -0.15 12.68 0.0999999 13.3C0.67 14.69 2 15.51 3.5 15.83V16.5C3.5 17.33 4.17 18 5 18C5.83 18 6.5 17.33 6.5 16.5V15.85C8.45 15.48 10 14.35 10 12.3C10 9.46 7.57 8.49 5.3 7.9Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n}\n\nexport function MnemonicIcon({ fill = \"#8F929E\" }: { fill?: string }) {\n  return <ImportedIcon fill={fill} />;\n}\n\nexport function ImportedIcon({ fill = \"#8F929E\" }: { fill?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <path\n        d=\"M11.5601 6.05806L8.37813 9.24004C8.13405 9.48412 8.13405 9.87984 8.37813 10.1239C8.6222 10.368 9.01793 10.368 9.26201 10.1239L11.377 8.00888L11.377 14.5C11.377 14.8452 11.6569 15.125 12.002 15.125C12.3472 15.125 12.627 14.8452 12.627 14.5L12.627 8.00888L14.7421 10.1239C14.9862 10.368 15.3819 10.368 15.626 10.1239C15.87 9.87984 15.87 9.48412 15.626 9.24004L12.444 6.05806C12.1999 5.81398 11.8042 5.81398 11.5601 6.05806Z\"\n        fill={fill}\n        stroke=\"#8F929E\"\n        strokeWidth=\"0.25\"\n      />\n      <line\n        x1=\"8.25\"\n        y1=\"16.377\"\n        x2=\"15.75\"\n        y2=\"16.377\"\n        stroke=\"#8F929E\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n}\n\nexport function HardwareIcon({ fill = \"#8F929E\" }: { fill?: string }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <g opacity=\"0.5\">\n        <path\n          d=\"M8.55521 10.887C8.24632 10.887 7.98022 10.9937 7.76473 11.2068C7.54917 11.4198 7.44063 11.6836 7.44063 11.9902C7.44063 12.2968 7.54917 12.5606 7.76473 12.7737C7.98022 12.9867 8.24632 13.0935 8.55521 13.0935C8.86409 13.0935 9.1302 12.9867 9.34569 12.7737C9.56124 12.5606 9.66979 12.2968 9.66979 11.9902C9.66979 11.6836 9.56124 11.4198 9.34569 11.2068C9.1302 10.9937 8.86409 10.887 8.55521 10.887ZM18.8073 8.5H5.92292C5.69651 8.5 5.50185 8.572 5.35014 8.72197C5.19671 8.87365 5.125 9.0743 5.125 9.30978V14.5728C5.125 14.8198 5.19545 15.0373 5.34045 15.2184C5.48916 15.404 5.68647 15.5 5.92292 15.5H18.8073C19.054 15.5 19.2591 15.4063 19.4095 15.2184C19.5546 15.0373 19.625 14.8198 19.625 14.5728V9.30978C19.625 9.07431 19.5533 8.87365 19.3999 8.72197C19.2466 8.57046 19.0443 8.5 18.8073 8.5ZM18.1875 14.0761H6.5625V9.92391H18.1875V14.0761Z\"\n          fill={fill}\n          stroke=\"#8F929E\"\n          strokeWidth=\"0.25\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nexport function EthereumIconOnboarding() {\n  return (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_12985_2265)\">\n        <path\n          d=\"M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z\"\n          fill=\"#627EEA\"\n        />\n        <path\n          d=\"M20.6226 5V16.0875L29.9938 20.275L20.6226 5Z\"\n          fill=\"white\"\n          fillOpacity=\"0.602\"\n        />\n        <path d=\"M20.6225 5L11.25 20.275L20.6225 16.0875V5Z\" fill=\"white\" />\n        <path\n          d=\"M20.6226 27.46V34.9938L30.0001 22.02L20.6226 27.46Z\"\n          fill=\"white\"\n          fillOpacity=\"0.602\"\n        />\n        <path\n          d=\"M20.6225 34.9938V27.4588L11.25 22.02L20.6225 34.9938Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M20.6226 25.7163L29.9938 20.2751L20.6226 16.0901V25.7163Z\"\n          fill=\"white\"\n          fillOpacity=\"0.2\"\n        />\n        <path\n          d=\"M11.25 20.2751L20.6225 25.7163V16.0901L11.25 20.2751Z\"\n          fill=\"white\"\n          fillOpacity=\"0.602\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_12985_2265\">\n          <rect width=\"40\" height=\"40\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\nexport function SolanaIconOnboarding() {\n  return (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <rect width=\"40\" height=\"40\" rx=\"20\" fill=\"#0D0C2B\" />\n      <path\n        d=\"M19.7052 30.1796C20.0752 30.1796 20.3751 29.8797 20.3751 29.5098C20.3751 29.1398 20.0752 28.8399 19.7052 28.8399C19.3353 28.8399 19.0354 29.1398 19.0354 29.5098C19.0354 29.8797 19.3353 30.1796 19.7052 30.1796Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M19.3529 32.9931C19.8908 32.9931 20.3269 32.557 20.3269 32.0191C20.3269 31.4812 19.8908 31.0451 19.3529 31.0451C18.815 31.0451 18.3789 31.4812 18.3789 32.0191C18.3789 32.557 18.815 32.9931 19.3529 32.9931Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M21.6304 31.5166C22.0455 31.5166 22.382 31.1801 22.382 30.7651C22.382 30.35 22.0455 30.0135 21.6304 30.0135C21.2153 30.0135 20.8788 30.35 20.8788 30.7651C20.8788 31.1801 21.2153 31.5166 21.6304 31.5166Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M21.8984 34.6663C22.5199 34.6663 23.0237 34.1625 23.0237 33.541C23.0237 32.9194 22.5199 32.4156 21.8984 32.4156C21.2768 32.4156 20.773 32.9194 20.773 33.541C20.773 34.1625 21.2768 34.6663 21.8984 34.6663Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M16.088 29.3436C16.4579 29.3436 16.7578 29.0437 16.7578 28.6737C16.7578 28.3038 16.4579 28.0039 16.088 28.0039C15.718 28.0039 15.4181 28.3038 15.4181 28.6737C15.4181 29.0437 15.718 29.3436 16.088 29.3436Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M14.8018 31.8301C15.3397 31.8301 15.7758 31.394 15.7758 30.8561C15.7758 30.3182 15.3397 29.8822 14.8018 29.8822C14.2639 29.8822 13.8279 30.3182 13.8279 30.8561C13.8279 31.394 14.2639 31.8301 14.8018 31.8301Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M17.3875 31.3211C17.8026 31.3211 18.1391 30.9846 18.1391 30.5695C18.1391 30.1544 17.8026 29.8179 17.3875 29.8179C16.9724 29.8179 16.6359 30.1544 16.6359 30.5695C16.6359 30.9846 16.9724 31.3211 17.3875 31.3211Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M16.5716 34.3609C17.1931 34.3609 17.697 33.8571 17.697 33.2356C17.697 32.614 17.1931 32.1102 16.5716 32.1102C15.9501 32.1102 15.4462 32.614 15.4462 33.2356C15.4462 33.8571 15.9501 34.3609 16.5716 34.3609Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M13.0669 27.1853C13.4368 27.1853 13.7368 26.8854 13.7368 26.5155C13.7368 26.1455 13.4368 25.8456 13.0669 25.8456C12.6969 25.8456 12.397 26.1455 12.397 26.5155C12.397 26.8854 12.6969 27.1853 13.0669 27.1853Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M11.0426 29.014C11.5805 29.014 12.0165 28.578 12.0165 28.04C12.0165 27.5021 11.5805 27.0661 11.0426 27.0661C10.5046 27.0661 10.0686 27.5021 10.0686 28.04C10.0686 28.578 10.5046 29.014 11.0426 29.014Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M13.5412 29.5165C13.9562 29.5165 14.2927 29.18 14.2927 28.7649C14.2927 28.3498 13.9562 28.0133 13.5412 28.0133C13.1261 28.0133 12.7896 28.3498 12.7896 28.7649C12.7896 29.18 13.1261 29.5165 13.5412 29.5165Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M11.7673 32.0418C12.3889 32.0418 12.8927 31.538 12.8927 30.9165C12.8927 30.2949 12.3889 29.7911 11.7673 29.7911C11.1458 29.7911 10.642 30.2949 10.642 30.9165C10.642 31.538 11.1458 32.0418 11.7673 32.0418Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M11.1002 24.0369C11.4701 24.0369 11.77 23.737 11.77 23.3671C11.77 22.9971 11.4701 22.6972 11.1002 22.6972C10.7302 22.6972 10.4303 22.9971 10.4303 23.3671C10.4303 23.737 10.7302 24.0369 11.1002 24.0369Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M8.64846 24.9748C9.18638 24.9748 9.62245 24.5387 9.62245 24.0008C9.62245 23.4629 9.18638 23.0268 8.64846 23.0268C8.11055 23.0268 7.67448 23.4629 7.67448 24.0008C7.67448 24.5387 8.11055 24.9748 8.64846 24.9748Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M10.6781 26.3775C11.0932 26.3775 11.4297 26.041 11.4297 25.6259C11.4297 25.2108 11.0932 24.8743 10.6781 24.8743C10.2631 24.8743 9.92656 25.2108 9.92656 25.6259C9.92656 26.041 10.2631 26.3775 10.6781 26.3775Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M8.21573 28.0601C8.83726 28.0601 9.3411 27.5563 9.3411 26.9347C9.3411 26.3132 8.83726 25.8094 8.21573 25.8094C7.59421 25.8094 7.09036 26.3132 7.09036 26.9347C7.09036 27.5563 7.59421 28.0601 8.21573 28.0601Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M10.4893 20.3741C10.8592 20.3741 11.1591 20.0742 11.1591 19.7042C11.1591 19.3343 10.8592 19.0344 10.4893 19.0344C10.1193 19.0344 9.81939 19.3343 9.81939 19.7042C9.81939 20.0742 10.1193 20.3741 10.4893 20.3741Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M7.98128 20.3259C8.5192 20.3259 8.95526 19.8898 8.95526 19.3519C8.95526 18.814 8.5192 18.378 7.98128 18.378C7.44337 18.378 7.0073 18.814 7.0073 19.3519C7.0073 19.8898 7.44337 20.3259 7.98128 20.3259Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M9.23394 22.3811C9.64903 22.3811 9.98552 22.0446 9.98552 21.6295C9.98552 21.2144 9.64903 20.8779 9.23394 20.8779C8.81885 20.8779 8.48235 21.2144 8.48235 21.6295C8.48235 22.0446 8.81885 22.3811 9.23394 22.3811Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M6.45936 23.0228C7.08088 23.0228 7.58473 22.5189 7.58473 21.8974C7.58473 21.2759 7.08088 20.772 6.45936 20.772C5.83783 20.772 5.33398 21.2759 5.33398 21.8974C5.33398 22.5189 5.83783 23.0228 6.45936 23.0228Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M11.3266 16.7569C11.6965 16.7569 11.9965 16.457 11.9965 16.087C11.9965 15.7171 11.6965 15.4172 11.3266 15.4172C10.9566 15.4172 10.6567 15.7171 10.6567 16.087C10.6567 16.457 10.9566 16.7569 11.3266 16.7569Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M9.14417 15.7749C9.68208 15.7749 10.1181 15.3388 10.1181 14.8009C10.1181 14.263 9.68208 13.8269 9.14417 13.8269C8.60625 13.8269 8.17019 14.263 8.17019 14.8009C8.17019 15.3388 8.60625 15.7749 9.14417 15.7749Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M9.42953 18.1382C9.84462 18.1382 10.1811 17.8017 10.1811 17.3866C10.1811 16.9715 9.84462 16.635 9.42953 16.635C9.01444 16.635 8.67794 16.9715 8.67794 17.3866C8.67794 17.8017 9.01444 18.1382 9.42953 18.1382Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M6.76347 17.696C7.385 17.696 7.88884 17.1922 7.88884 16.5706C7.88884 15.9491 7.385 15.4453 6.76347 15.4453C6.14195 15.4453 5.6381 15.9491 5.6381 16.5706C5.6381 17.1922 6.14195 17.696 6.76347 17.696Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M13.4835 13.7358C13.8535 13.7358 14.1534 13.4359 14.1534 13.0659C14.1534 12.696 13.8535 12.3961 13.4835 12.3961C13.1136 12.3961 12.8137 12.696 12.8137 13.0659C12.8137 13.4359 13.1136 13.7358 13.4835 13.7358Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M11.9589 12.0156C12.4968 12.0156 12.9329 11.5795 12.9329 11.0416C12.9329 10.5037 12.4968 10.0676 11.9589 10.0676C11.421 10.0676 10.9849 10.5037 10.9849 11.0416C10.9849 11.5795 11.421 12.0156 11.9589 12.0156Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M11.2341 14.2918C11.6492 14.2918 11.9857 13.9553 11.9857 13.5402C11.9857 13.1251 11.6492 12.7886 11.2341 12.7886C10.819 12.7886 10.4826 13.1251 10.4826 13.5402C10.4826 13.9553 10.819 14.2918 11.2341 14.2918Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M9.08388 12.8917C9.7054 12.8917 10.2092 12.3879 10.2092 11.7664C10.2092 11.1448 9.7054 10.641 9.08388 10.641C8.46235 10.641 7.95851 11.1448 7.95851 11.7664C7.95851 12.3879 8.46235 12.8917 9.08388 12.8917Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M16.6332 11.769C17.0032 11.769 17.3031 11.4691 17.3031 11.0992C17.3031 10.7292 17.0032 10.4293 16.6332 10.4293C16.2633 10.4293 15.9634 10.7292 15.9634 11.0992C15.9634 11.4691 16.2633 11.769 16.6332 11.769Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M15.9996 9.62143C16.5375 9.62143 16.9735 9.18536 16.9735 8.64745C16.9735 8.10953 16.5375 7.67346 15.9996 7.67346C15.4616 7.67346 15.0256 8.10953 15.0256 8.64745C15.0256 9.18536 15.4616 9.62143 15.9996 9.62143Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M14.3745 11.4287C14.7896 11.4287 15.1261 11.0922 15.1261 10.6771C15.1261 10.2621 14.7896 9.92555 14.3745 9.92555C13.9594 9.92555 13.6229 10.2621 13.6229 10.6771C13.6229 11.0922 13.9594 11.4287 14.3745 11.4287Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M13.0656 9.34009C13.6871 9.34009 14.1909 8.83625 14.1909 8.21472C14.1909 7.5932 13.6871 7.08935 13.0656 7.08935C12.444 7.08935 11.9402 7.5932 11.9402 8.21472C11.9402 8.83625 12.444 9.34009 13.0656 9.34009Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M20.2961 11.1582C20.666 11.1582 20.9659 10.8582 20.9659 10.4883C20.9659 10.1183 20.666 9.81843 20.2961 9.81843C19.9261 9.81843 19.6262 10.1183 19.6262 10.4883C19.6262 10.8582 19.9261 11.1582 20.2961 11.1582Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M20.6484 8.95435C21.1863 8.95435 21.6224 8.51829 21.6224 7.98037C21.6224 7.44245 21.1863 7.00639 20.6484 7.00639C20.1105 7.00639 19.6744 7.44245 19.6744 7.98037C19.6744 8.51829 20.1105 8.95435 20.6484 8.95435Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M18.3695 9.98452C18.7846 9.98452 19.1211 9.64802 19.1211 9.23293C19.1211 8.81784 18.7846 8.48135 18.3695 8.48135C17.9544 8.48135 17.6179 8.81784 17.6179 9.23293C17.6179 9.64802 17.9544 9.98452 18.3695 9.98452Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M18.1029 7.58375C18.7245 7.58375 19.2283 7.0799 19.2283 6.45838C19.2283 5.83685 18.7245 5.33301 18.1029 5.33301C17.4814 5.33301 16.9776 5.83685 16.9776 6.45838C16.9776 7.0799 17.4814 7.58375 18.1029 7.58375Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M23.9133 11.9955C24.2833 11.9955 24.5832 11.6956 24.5832 11.3256C24.5832 10.9556 24.2833 10.6557 23.9133 10.6557C23.5434 10.6557 23.2434 10.9556 23.2434 11.3256C23.2434 11.6956 23.5434 11.9955 23.9133 11.9955Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M25.1981 10.1172C25.736 10.1172 26.1721 9.68111 26.1721 9.14319C26.1721 8.60528 25.736 8.16921 25.1981 8.16921C24.6602 8.16921 24.2241 8.60528 24.2241 9.14319C24.2241 9.68111 24.6602 10.1172 25.1981 10.1172Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M22.6138 10.1801C23.0289 10.1801 23.3654 9.8436 23.3654 9.42851C23.3654 9.01342 23.0289 8.67692 22.6138 8.67692C22.1987 8.67692 21.8622 9.01342 21.8622 9.42851C21.8622 9.8436 22.1987 10.1801 22.6138 10.1801Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M23.4297 7.88783C24.0512 7.88783 24.555 7.38399 24.555 6.76246C24.555 6.14094 24.0512 5.63709 23.4297 5.63709C22.8082 5.63709 22.3043 6.14094 22.3043 6.76246C22.3043 7.38399 22.8082 7.88783 23.4297 7.88783Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M26.9344 14.1525C27.3044 14.1525 27.6043 13.8525 27.6043 13.4826C27.6043 13.1126 27.3044 12.8127 26.9344 12.8127C26.5645 12.8127 26.2645 13.1126 26.2645 13.4826C26.2645 13.8525 26.5645 14.1525 26.9344 14.1525Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M28.9574 12.9319C29.4953 12.9319 29.9314 12.4959 29.9314 11.9579C29.9314 11.42 29.4953 10.984 28.9574 10.984C28.4195 10.984 27.9834 11.42 27.9834 11.9579C27.9834 12.4959 28.4195 12.9319 28.9574 12.9319Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M26.4601 11.9847C26.8752 11.9847 27.2117 11.6482 27.2117 11.2332C27.2117 10.8181 26.8752 10.4816 26.4601 10.4816C26.0451 10.4816 25.7086 10.8181 25.7086 11.2332C25.7086 11.6482 26.0451 11.9847 26.4601 11.9847Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M28.2339 10.2082C28.8555 10.2082 29.3593 9.70439 29.3593 9.08287C29.3593 8.46134 28.8555 7.9575 28.2339 7.9575C27.6124 7.9575 27.1086 8.46134 27.1086 9.08287C27.1086 9.70439 27.6124 10.2082 28.2339 10.2082Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M28.8998 17.3021C29.2697 17.3021 29.5696 17.0022 29.5696 16.6323C29.5696 16.2623 29.2697 15.9624 28.8998 15.9624C28.5298 15.9624 28.2299 16.2623 28.2299 16.6323C28.2299 17.0022 28.5298 17.3021 28.8998 17.3021Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M31.3528 16.9726C31.8907 16.9726 32.3268 16.5365 32.3268 15.9986C32.3268 15.4607 31.8907 15.0246 31.3528 15.0246C30.8149 15.0246 30.3788 15.4607 30.3788 15.9986C30.3788 16.5365 30.8149 16.9726 31.3528 16.9726Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M29.3231 15.125C29.7382 15.125 30.0747 14.7885 30.0747 14.3734C30.0747 13.9583 29.7382 13.6218 29.3231 13.6218C28.908 13.6218 28.5715 13.9583 28.5715 14.3734C28.5715 14.7885 28.908 15.125 29.3231 15.125Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M31.7842 14.1899C32.4057 14.1899 32.9096 13.6861 32.9096 13.0645C32.9096 12.443 32.4057 11.9392 31.7842 11.9392C31.1627 11.9392 30.6589 12.443 30.6589 13.0645C30.6589 13.6861 31.1627 14.1899 31.7842 14.1899Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M29.5107 20.9649C29.8807 20.9649 30.1806 20.665 30.1806 20.2951C30.1806 19.9251 29.8807 19.6252 29.5107 19.6252C29.1408 19.6252 28.8408 19.9251 28.8408 20.2951C28.8408 20.665 29.1408 20.9649 29.5107 20.9649Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M32.02 21.6214C32.5579 21.6214 32.994 21.1854 32.994 20.6474C32.994 20.1095 32.5579 19.6735 32.02 19.6735C31.4821 19.6735 31.046 20.1095 31.046 20.6474C31.046 21.1854 31.4821 21.6214 32.02 21.6214Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M30.766 19.1202C31.1811 19.1202 31.5176 18.7837 31.5176 18.3686C31.5176 17.9535 31.1811 17.617 30.766 17.617C30.3509 17.617 30.0144 17.9535 30.0144 18.3686C30.0144 18.7837 30.3509 19.1202 30.766 19.1202Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M33.5419 19.2273C34.1635 19.2273 34.6673 18.7234 34.6673 18.1019C34.6673 17.4804 34.1635 16.9765 33.5419 16.9765C32.9204 16.9765 32.4166 17.4804 32.4166 18.1019C32.4166 18.7234 32.9204 19.2273 33.5419 19.2273Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M28.6747 24.5822C29.0447 24.5822 29.3446 24.2823 29.3446 23.9123C29.3446 23.5424 29.0447 23.2424 28.6747 23.2424C28.3048 23.2424 28.0049 23.5424 28.0049 23.9123C28.0049 24.2823 28.3048 24.5822 28.6747 24.5822Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M30.8571 26.1711C31.3951 26.1711 31.8311 25.735 31.8311 25.1971C31.8311 24.6592 31.3951 24.2231 30.8571 24.2231C30.3192 24.2231 29.8832 24.6592 29.8832 25.1971C29.8832 25.735 30.3192 26.1711 30.8571 26.1711Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M30.5704 23.3644C30.9855 23.3644 31.322 23.0279 31.322 22.6128C31.322 22.1977 30.9855 21.8612 30.5704 21.8612C30.1553 21.8612 29.8188 22.1977 29.8188 22.6128C29.8188 23.0279 30.1553 23.3644 30.5704 23.3644Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M33.2365 24.554C33.858 24.554 34.3619 24.0502 34.3619 23.4287C34.3619 22.8072 33.858 22.3033 33.2365 22.3033C32.615 22.3033 32.1111 22.8072 32.1111 23.4287C32.1111 24.0502 32.615 24.554 33.2365 24.554Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M26.5164 27.6033C26.8864 27.6033 27.1863 27.3034 27.1863 26.9335C27.1863 26.5635 26.8864 26.2636 26.5164 26.2636C26.1465 26.2636 25.8465 26.5635 25.8465 26.9335C25.8465 27.3034 26.1465 27.6033 26.5164 27.6033Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M28.041 29.9304C28.5789 29.9304 29.015 29.4944 29.015 28.9565C29.015 28.4185 28.5789 27.9825 28.041 27.9825C27.5031 27.9825 27.067 28.4185 27.067 28.9565C27.067 29.4944 27.5031 29.9304 28.041 29.9304Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M28.7658 27.2108C29.1809 27.2108 29.5174 26.8743 29.5174 26.4592C29.5174 26.0441 29.1809 25.7076 28.7658 25.7076C28.3507 25.7076 28.0142 26.0441 28.0142 26.4592C28.0142 26.8743 28.3507 27.2108 28.7658 27.2108Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M30.9174 29.3583C31.5389 29.3583 32.0428 28.8545 32.0428 28.233C32.0428 27.6114 31.5389 27.1076 30.9174 27.1076C30.2959 27.1076 29.792 27.6114 29.792 28.233C29.792 28.8545 30.2959 29.3583 30.9174 29.3583Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M23.3667 29.5687C23.7367 29.5687 24.0366 29.2688 24.0366 28.8988C24.0366 28.5288 23.7367 28.2289 23.3667 28.2289C22.9968 28.2289 22.6969 28.5288 22.6969 28.8988C22.6969 29.2688 22.9968 29.5687 23.3667 29.5687Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M24.0017 32.3257C24.5397 32.3257 24.9757 31.8897 24.9757 31.3518C24.9757 30.8139 24.5397 30.3778 24.0017 30.3778C23.4638 30.3778 23.0278 30.8139 23.0278 31.3518C23.0278 31.8897 23.4638 32.3257 24.0017 32.3257Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M25.6268 30.0737C26.0419 30.0737 26.3784 29.7372 26.3784 29.3221C26.3784 28.907 26.0419 28.5705 25.6268 28.5705C25.2117 28.5705 24.8752 28.907 24.8752 29.3221C24.8752 29.7372 25.2117 30.0737 25.6268 30.0737Z\"\n        fill=\"white\"\n      />\n      <path\n        d=\"M26.9357 32.9086C27.5573 32.9086 28.0611 32.4047 28.0611 31.7832C28.0611 31.1617 27.5573 30.6578 26.9357 30.6578C26.3142 30.6578 25.8104 31.1617 25.8104 31.7832C25.8104 32.4047 26.3142 32.9086 26.9357 32.9086Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n}\n\nexport function PolygonIcon() {\n  return (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_12985_7928)\">\n        <path\n          d=\"M20 40C31.0457 40 40 31.0457 40 20C40 8.95431 31.0457 0 20 0C8.95431 0 0 8.95431 0 20C0 31.0457 8.95431 40 20 40Z\"\n          fill=\"#8247E5\"\n        />\n        <path\n          d=\"M26.4962 15.7989C26.0322 15.5383 25.4356 15.5383 24.9053 15.7989L21.1932 17.9481L18.6742 19.3158L15.0284 21.4651C14.5644 21.7256 13.9678 21.7256 13.4375 21.4651L10.5871 19.7717C10.1231 19.5112 9.79164 18.9902 9.79164 18.404V15.1476C9.79164 14.6265 10.0568 14.1055 10.5871 13.7799L13.4375 12.1516C13.9015 11.8911 14.4981 11.8911 15.0284 12.1516L17.8788 13.845C18.3428 14.1055 18.6742 14.6265 18.6742 15.2127V17.3619L21.1932 15.9291V13.7147C21.1932 13.1937 20.928 12.6727 20.3977 12.347L15.0947 9.28596C14.6307 9.02545 14.0341 9.02545 13.5038 9.28596L8.06816 12.4122C7.53786 12.6727 7.27271 13.1937 7.27271 13.7147V19.8368C7.27271 20.3579 7.53786 20.8789 8.06816 21.2046L13.4375 24.2656C13.9015 24.5261 14.4981 24.5261 15.0284 24.2656L18.6742 22.1815L21.1932 20.7486L24.839 18.6645C25.303 18.404 25.8996 18.404 26.4299 18.6645L29.2803 20.2927C29.7443 20.5533 30.0757 21.0743 30.0757 21.6605V24.9169C30.0757 25.4379 29.8106 25.959 29.2803 26.2846L26.4962 27.9128C26.0322 28.1733 25.4356 28.1733 24.9053 27.9128L22.0549 26.2846C21.5909 26.0241 21.2594 25.5031 21.2594 24.9169V22.8328L18.7405 24.2656V26.4149C18.7405 26.9359 19.0057 27.4569 19.536 27.7826L24.9053 30.8436C25.3693 31.1041 25.9659 31.1041 26.4962 30.8436L31.8655 27.7826C32.3295 27.5221 32.661 27.001 32.661 26.4149V20.2276C32.661 19.7066 32.3958 19.1856 31.8655 18.8599L26.4962 15.7989Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_12985_7928\">\n          <rect width=\"40\" height=\"40\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\nexport function BscIcon() {\n  return (\n    <svg\n      width=\"41\"\n      height=\"40\"\n      viewBox=\"0 0 41 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_12985_1000)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M20.5 0C31.5465 0 40.5 8.95353 40.5 20C40.5 31.0465 31.5465 40 20.5 40C9.45353 40 0.5 31.0465 0.5 20C0.5 8.95353 9.45353 0 20.5 0Z\"\n          fill=\"#F0B90B\"\n        />\n        <path\n          d=\"M11.492 20.0001L11.5064 25.2886L16 27.9328V31.0289L8.8766 26.8511V18.4536L11.492 20.0001ZM11.492 14.7116V17.7934L8.875 16.2453V13.1636L11.492 11.6155L14.1218 13.1636L11.492 14.7116ZM17.8766 13.1636L20.4936 11.6155L23.1234 13.1636L20.4936 14.7116L17.8766 13.1636Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M13.3831 24.1924V21.0962L16 22.6443V25.7261L13.3831 24.1924ZM17.8766 29.0418L20.4936 30.5898L23.1234 29.0418V32.1235L20.4936 33.6716L17.8766 32.1235V29.0418ZM26.8766 13.1636L29.4936 11.6155L32.1234 13.1636V16.2453L29.4936 17.7934V14.7116L26.8766 13.1636ZM29.4936 25.2886L29.5081 20.0001L32.125 18.452V26.8495L25.0016 31.0273V27.9312L29.4936 25.2886Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M27.617 24.1923L25 25.726V22.6443L27.617 21.0962V24.1923Z\"\n          fill=\"white\"\n        />\n        <path\n          d=\"M27.617 15.8078L27.6315 18.9039L23.125 21.5482V26.8495L20.5081 28.3831L17.8911 26.8495V21.5482L13.3847 18.9039V15.8078L16.0129 14.2597L20.492 16.9168L24.9984 14.2597L27.6282 15.8078H27.617ZM13.3831 10.5209L20.4936 6.32861L27.617 10.5209L25 12.069L20.4936 9.41195L16 12.069L13.3831 10.5209Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_12985_1000\">\n          <rect\n            width=\"40\"\n            height=\"40\"\n            fill=\"white\"\n            transform=\"translate(0.5)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\n// eslint-disable-next-line\nexport function AvalancheIcon() {\n  return (\n    <svg\n      width=\"40\"\n      height=\"40\"\n      viewBox=\"0 0 40 40\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_12941_55236)\">\n        <path\n          d=\"M32.3352 6.86182H7.63794V29.3086H32.3352V6.86182Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M39.9868 20C39.9868 31.0311 31.0385 39.9734 20.0001 39.9734C8.96176 39.9734 0.0134277 31.0311 0.0134277 20C0.0134277 8.969 8.96176 0.0266113 20.0001 0.0266113C31.0385 0.0266113 39.9868 8.969 39.9868 20ZM14.3364 27.9484H10.4576C9.64253 27.9484 9.23993 27.9484 8.99444 27.7915C8.72929 27.6197 8.56727 27.3351 8.54763 27.021C8.53289 26.7317 8.73422 26.3783 9.13683 25.6717L18.7142 8.80148C19.1217 8.08509 19.3279 7.7269 19.5882 7.59443C19.868 7.45214 20.2019 7.45214 20.4818 7.59443C20.742 7.7269 20.9482 8.08509 21.3557 8.80148L23.3246 12.2362L23.3347 12.2537C23.7748 13.0222 23.998 13.412 24.0955 13.821C24.2035 14.2675 24.2035 14.7386 24.0955 15.1851C23.9973 15.5972 23.7764 15.9898 23.3295 16.7699L18.2988 25.657L18.2858 25.6797C17.8427 26.4546 17.6182 26.8474 17.307 27.1436C16.9682 27.4676 16.5607 27.7029 16.1139 27.8357C15.7063 27.9484 15.2497 27.9484 14.3364 27.9484ZM24.1318 27.9484H29.6898C30.5097 27.9484 30.9222 27.9484 31.1679 27.7867C31.433 27.6149 31.5998 27.3253 31.6147 27.0114C31.6288 26.7314 31.4319 26.3918 31.046 25.7263C31.0327 25.7036 31.0194 25.6805 31.0058 25.6571L28.2218 20.8976L28.1901 20.844C27.7989 20.1829 27.6014 19.8491 27.3478 19.72C27.0681 19.5777 26.7389 19.5777 26.4591 19.72C26.2038 19.8525 25.9976 20.2009 25.5901 20.9025L22.816 25.662L22.8065 25.6784C22.4004 26.3789 22.1974 26.729 22.212 27.0162C22.2317 27.3303 22.3937 27.6197 22.6588 27.7915C22.8994 27.9484 23.3119 27.9484 24.1318 27.9484Z\"\n          fill=\"#E84142\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_12941_55236\">\n          <rect width=\"40\" height=\"40\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n\n// eslint-disable-next-line\nexport function CosmosIcon() {\n  return (\n    <svg\n      width=\"45\"\n      height=\"44\"\n      viewBox=\"0 0 45 44\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g clipPath=\"url(#clip0_12985_3382)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M22.5 0.0422363C34.6269 0.0422363 44.4579 9.87306 44.4579 22C44.4579 34.1269 34.6269 43.9579 22.5 43.9579C10.3731 43.9579 0.542236 34.1269 0.542236 22C0.542236 9.87306 10.3731 0.0422363 22.5 0.0422363Z\"\n          fill=\"#171717\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M22.4578 9.33203C29.4541 9.33203 35.1257 15.0037 35.1257 22C35.1257 28.9963 29.4541 34.668 22.4578 34.668C15.4615 34.668 9.78979 28.9963 9.78979 22C9.78979 15.0037 15.4615 9.33203 22.4578 9.33203Z\"\n          fill=\"black\"\n        />\n        <path\n          opacity=\"0.67\"\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M22.845 3.79808C22.6705 3.63756 22.5805 3.63452 22.5654 3.63452C22.5502 3.63452 22.4602 3.63756 22.2858 3.79808C22.1068 3.96286 21.8927 4.24716 21.6621 4.68584C21.2018 5.56141 20.7613 6.88485 20.3815 8.59251C19.9545 10.5129 19.6172 12.8601 19.4043 15.4876C20.4324 15.9851 21.4896 16.5259 22.5651 17.1066C23.6408 16.5258 24.6982 15.9849 25.7265 15.4873C25.5136 12.86 25.1762 10.5128 24.7492 8.59251C24.3695 6.88485 23.9289 5.56141 23.4687 4.68584C23.238 4.24716 23.024 3.96286 22.845 3.79808ZM21.6653 17.5995C20.8755 17.1798 20.0974 16.7828 19.3355 16.4099C19.2777 17.2557 19.2328 18.1277 19.2015 19.0211C19.6045 18.7798 20.0133 18.5394 20.4277 18.3003C20.842 18.0612 21.2547 17.8276 21.6653 17.5995ZM18.5748 15.0927C19.1919 7.88761 20.7459 2.77515 22.5654 2.77515C24.3849 2.77515 25.9389 7.88748 26.5559 15.0924C33.1079 12.0241 38.315 10.813 39.2247 12.3877C40.1345 13.9625 36.4813 17.8636 30.5463 22.0001C36.4813 26.1366 40.1345 30.0377 39.2247 31.6125C38.315 33.1872 33.1079 31.9761 26.5559 28.9078C25.9389 36.1127 24.3849 41.225 22.5654 41.225C20.7459 41.225 19.1919 36.1126 18.5748 28.9075C12.0226 31.976 6.81526 33.1873 5.90549 31.6125C4.99571 30.0377 8.64887 26.1366 14.5839 22.0001C8.64887 17.8636 4.99571 13.9625 5.90549 12.3877C6.81526 10.8129 12.0226 12.0242 18.5748 15.0927ZM15.3412 21.4795C13.1705 19.9814 11.305 18.5156 9.85431 17.1858C8.56431 16.0033 7.63773 14.9602 7.10908 14.1241C6.84427 13.7051 6.70496 13.3777 6.65172 13.1405C6.59986 12.9095 6.64223 12.8303 6.64962 12.8176C6.65701 12.8048 6.70457 12.7284 6.93098 12.6577C7.1634 12.585 7.5169 12.5419 8.01246 12.5617C9.00151 12.6011 10.3688 12.8815 12.0385 13.4067C13.9162 13.9974 16.1189 14.879 18.5023 16.0085C18.4194 17.1469 18.3594 18.3322 18.3249 19.5531C17.2838 20.1936 16.2864 20.8383 15.3412 21.4795ZM15.3412 22.5207C13.1705 24.0188 11.305 25.4846 9.85431 26.8144C8.56431 27.9969 7.63773 29.04 7.10908 29.8761C6.84427 30.2951 6.70496 30.6225 6.65172 30.8597C6.59986 31.0907 6.64223 31.1698 6.64962 31.1826C6.65697 31.1954 6.70449 31.2718 6.93098 31.3425C7.1634 31.4152 7.5169 31.4582 8.01246 31.4385C9.00151 31.3991 10.3688 31.1187 12.0385 30.5934C13.9162 30.0028 16.1189 29.1212 18.5023 27.9917C18.4194 26.8533 18.3594 25.668 18.3249 24.447C17.2838 23.8065 16.2864 23.1619 15.3412 22.5207ZM18.3021 23.4219C17.5434 22.9481 16.8102 22.4731 16.1059 22.0001C16.8102 21.5271 17.5434 21.0521 18.3021 20.5783C18.2945 21.0478 18.2906 21.5219 18.2906 22.0001C18.2906 22.4783 18.2945 22.9524 18.3021 23.4219ZM19.1721 23.9578C19.1575 23.3146 19.15 22.6615 19.15 22.0001C19.15 21.3387 19.1575 20.6856 19.1721 20.0424C19.7221 19.7082 20.2842 19.3753 20.8572 19.0447C21.4304 18.7139 22.0003 18.3938 22.5651 18.0847C23.1299 18.3938 23.6998 18.7139 24.273 19.0447C24.8462 19.3754 25.4085 19.7085 25.9587 20.0428C25.9733 20.6859 25.9808 21.3388 25.9808 22.0001C25.9808 22.6613 25.9733 23.3143 25.9587 23.9574C25.4085 24.2917 24.8462 24.6248 24.273 24.9555C23.6998 25.2863 23.1299 25.6064 22.5651 25.9154C22.0003 25.6064 21.4304 25.2863 20.8572 24.9555C20.2842 24.6249 19.7221 24.292 19.1721 23.9578ZM19.2015 24.9791C19.2328 25.8725 19.2777 26.7444 19.3355 27.5903C20.0974 27.2174 20.8755 26.8203 21.6653 26.4007C21.2547 26.1726 20.842 25.939 20.4277 25.6999C20.0133 25.4608 19.6045 25.2204 19.2015 24.9791ZM22.5651 26.8936C21.4896 27.4743 20.4324 28.0151 19.4043 28.5126C19.6172 31.1401 19.9545 33.4873 20.3815 35.4076C20.7613 37.1153 21.2018 38.4388 21.6621 39.3144C21.8927 39.753 22.1068 40.0373 22.2858 40.2021C22.4602 40.3626 22.5502 40.3657 22.5654 40.3657C22.5805 40.3657 22.6705 40.3626 22.845 40.2021C23.024 40.0373 23.238 39.753 23.4687 39.3144C23.9289 38.4388 24.3695 37.1153 24.7492 35.4076C25.1762 33.4874 25.5136 31.1402 25.7265 28.5128C24.6982 28.0153 23.6408 27.4744 22.5651 26.8936ZM26.6285 27.992C29.0116 29.1214 31.2142 30.0029 33.0917 30.5934C34.7615 31.1187 36.1287 31.3991 37.1178 31.4385C37.6133 31.4582 37.9668 31.4152 38.1993 31.3425C38.4257 31.2718 38.4732 31.1954 38.4806 31.1826C38.488 31.1699 38.5304 31.0908 38.4785 30.8597C38.4253 30.6225 38.286 30.2951 38.0211 29.8761C37.4925 29.04 36.5659 27.9969 35.2759 26.8144C33.8252 25.4846 31.9597 24.0188 29.7891 22.5207C28.844 23.1618 27.8467 23.8063 26.8059 24.4467C26.7714 25.6679 26.7114 26.8534 26.6285 27.992ZM29.7891 21.4795C31.9597 19.9814 33.8252 18.5156 35.2759 17.1858C36.5659 16.0033 37.4925 14.9602 38.0211 14.1241C38.286 13.7051 38.4253 13.3777 38.4785 13.1405C38.5304 12.9094 38.488 12.8303 38.4806 12.8176C38.4732 12.8048 38.4257 12.7284 38.1993 12.6577C37.9668 12.585 37.6133 12.5419 37.1178 12.5617C36.1287 12.6011 34.7615 12.8815 33.0917 13.4067C31.2142 13.9973 29.0116 14.8788 26.6285 16.0082C26.7114 17.1468 26.7714 18.3323 26.8059 19.5535C27.8467 20.1939 28.844 20.8384 29.7891 21.4795ZM26.8286 20.5786C27.5872 21.0523 28.3202 21.5272 29.0243 22.0001C28.3202 22.473 27.5872 22.9479 26.8286 23.4215C26.8363 22.9522 26.8402 22.4782 26.8402 22.0001C26.8402 21.522 26.8363 21.048 26.8286 20.5786ZM25.9293 19.0214C25.898 18.1278 25.853 17.2557 25.7952 16.4096C25.0332 16.7827 24.2549 17.1797 23.4649 17.5995C23.8755 17.8276 24.2882 18.0612 24.7025 18.3003C25.1171 18.5395 25.5261 18.78 25.9293 19.0214ZM25.7952 27.5906C25.0332 27.2175 24.2549 26.8205 23.4649 26.4007C23.8755 26.1726 24.2882 25.939 24.7025 25.6999C25.1171 25.4607 25.5261 25.2202 25.9293 24.9788C25.898 25.8724 25.853 26.7445 25.7952 27.5906Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M10.2774 16.6161C11.0241 16.6161 11.6293 17.2216 11.6293 17.9686C11.6293 18.7156 11.0241 19.3212 10.2774 19.3212C9.53079 19.3212 8.92554 18.7156 8.92554 17.9686C8.92554 17.2216 9.53079 16.6161 10.2774 16.6161Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M31.7635 11.9844C32.5104 11.9844 33.116 12.5899 33.116 13.3369C33.116 14.084 32.5104 14.6895 31.7635 14.6895C31.0164 14.6895 30.4109 14.084 30.4109 13.3369C30.4109 12.5899 31.0164 11.9844 31.7635 11.9844Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M19.8411 33.2137C20.5881 33.2137 21.1937 33.819 21.1937 34.5657C21.1937 35.3123 20.5881 35.9176 19.8411 35.9176C19.0941 35.9176 18.4885 35.3123 18.4885 34.5657C18.4885 33.819 19.0941 33.2137 19.8411 33.2137Z\"\n          fill=\"white\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M22.4899 19.7C23.7546 19.7 24.7799 20.7252 24.7799 21.9899C24.7799 23.2546 23.7546 24.2799 22.4899 24.2799C21.2252 24.2799 20.2 23.2546 20.2 21.9899C20.2 20.7252 21.2252 19.7 22.4899 19.7Z\"\n          fill=\"white\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0_12985_3382\">\n          <rect\n            width=\"44\"\n            height=\"44\"\n            fill=\"white\"\n            transform=\"translate(0.5)\"\n          />\n        </clipPath>\n      </defs>\n    </svg>\n  );\n}\n","import { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Box, Button, Card, CardContent, Typography } from \"@mui/material\";\n\nimport { Checkbox } from \"..\";\n\nexport function ActionCard({\n  icon,\n  checked,\n  text,\n  textAdornment,\n  subtext,\n  onClick,\n  disabled = false,\n}: {\n  icon?: any;\n  checked?: boolean;\n  text: string;\n  textAdornment?: React.ReactNode;\n  subtext?: string;\n  onClick: () => void;\n  disabled?: boolean;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <Button\n      disableRipple\n      onClick={onClick}\n      style={{\n        padding: 0,\n        textTransform: \"none\",\n        border: `${theme.custom.colors.borderFull}`,\n        borderRadius: \"12px\",\n        background: theme.custom.colors.nav,\n        width: \"100%\",\n        opacity: disabled ? 0.5 : 1,\n      }}\n      disabled={disabled}\n    >\n      <Card\n        sx={{\n          p: 1,\n          color: theme.custom.colors.fontColor,\n          cursor: \"pointer\",\n          padding: \"16px\",\n          boxShadow: \"none\",\n          backgroundColor: \"transparent\",\n          width: \"100%\",\n        }}\n      >\n        <CardContent style={{ padding: 0 }}>\n          {icon || typeof checked !== \"undefined\" ? (\n            <Box sx={{ mb: 1, display: \"flex\" }}>\n              {icon}\n              {typeof checked !== \"undefined\" ? (\n                <Checkbox\n                  checked={checked}\n                  setChecked={onClick}\n                  style={{\n                    position: \"absolute\",\n                    right: \"18px\",\n                    top: icon ? \"18px\" : \"auto\",\n                  }}\n                />\n              ) : null}\n            </Box>\n          ) : null}\n          <Box\n            style={{\n              fontWeight: 500,\n              fontSize: \"16px\",\n              lineHeight: \"24px\",\n              textAlign: \"left\",\n            }}\n          >\n            {text}\n            {textAdornment}\n            {subtext ? (\n              <Typography\n                style={{\n                  fontSize: \"14px\",\n                  color: theme.custom.colors.fontColor3,\n                }}\n              >\n                {subtext}\n              </Typography>\n            ) : null}\n          </Box>\n        </CardContent>\n      </Card>\n    </Button>\n  );\n}\n","import { PrimaryButton, SecondaryButton } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nexport function BottomCard({\n  onButtonClick,\n  onCancelButtonClick,\n  buttonLabel,\n  buttonStyle,\n  buttonLabelStyle,\n  cancelButtonLabel,\n  cancelButtonStyle,\n  cancelButtonLabelStyle,\n  children,\n  topHalfStyle,\n  wrapperStyle,\n}: any) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        background: \"transparent\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        ...wrapperStyle,\n      }}\n    >\n      <div\n        style={{\n          height: \"100%\",\n          overflow: \"hidden\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          background: theme.custom.colors.background,\n          borderTopLeftRadius: \"12px\",\n          borderTopRightRadius: \"12px\",\n        }}\n      >\n        <div\n          style={{\n            flex: 1,\n            background: theme.custom.colors.drawerGradient,\n            ...topHalfStyle,\n          }}\n        >\n          {children}\n        </div>\n        <div\n          style={{\n            marginBottom: \"24px\",\n            marginLeft: \"12px\",\n            marginRight: \"12px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          {cancelButtonLabel ? (\n            <SecondaryButton\n              style={{\n                marginRight: \"8px\",\n                ...cancelButtonStyle,\n              }}\n              buttonLabelStyle={cancelButtonLabelStyle}\n              onClick={onCancelButtonClick}\n              label={cancelButtonLabel}\n            />\n          ) : null}\n          {buttonLabel ? (\n            <PrimaryButton\n              style={buttonStyle}\n              buttonLabelStyle={buttonLabelStyle}\n              onClick={onButtonClick}\n              label={buttonLabel}\n            />\n          ) : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, {\n  type CSSProperties,\n  type Dispatch,\n  type MutableRefObject,\n  type PropsWithChildren,\n  type SetStateAction,\n  useContext,\n} from \"react\";\nimport { EXTENSION_HEIGHT } from \"@coral-xyz/common\";\nimport { styles as makeStyles } from \"@coral-xyz/themes\";\nimport { Close } from \"@mui/icons-material\";\nimport { Button, Drawer, IconButton } from \"@mui/material\";\n\nimport { NAV_BAR_HEIGHT, NAV_BUTTON_WIDTH } from \"./Nav\";\n\nconst useStyles = makeStyles((theme) => ({\n  withDrawerNoHeader: {\n    height: EXTENSION_HEIGHT - NAV_BAR_HEIGHT,\n    padding: \"20px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  withDrawerContent: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  drawerRoot: {\n    top: `${NAV_BAR_HEIGHT}px !important`,\n    zIndex: \"2 !important\" as any,\n    flex: 1,\n  },\n  drawerPaper: {\n    height: \"100%\",\n    background: theme.custom.colors.backgroundBackdrop,\n  },\n  miniDrawerRoot: {\n    background: \"transparent\",\n    zIndex: \"1301 !important\" as any,\n    flex: 1,\n    \"& .MuiBackdrop-root\": {\n      opacity: 0.8,\n      background: `${theme.custom.colors.miniDrawerBackdrop} !important`,\n    },\n  },\n  miniDrawerPaper: {\n    backgroundColor: \"transparent\",\n    borderTopLeftRadius: \"12px\",\n    borderTopRightRadius: \"12px\",\n  },\n  closeDrawerButton: {\n    backgroundColor: theme.custom.colors.background,\n    width: \"100%\",\n  },\n  rightButtonIcon: {\n    color: theme.custom.colors.icon,\n  },\n  rightButtonLabel: {\n    display: \"flex\",\n    justifyContent: \"start\",\n  },\n}));\n\nexport function WithDrawer(\n  props: PropsWithChildren<{\n    backdropStyles?: CSSProperties;\n    openDrawer: boolean;\n    paperStyles?: CSSProperties;\n    setOpenDrawer: Dispatch<SetStateAction<boolean>>;\n  }>\n) {\n  const classes = useStyles();\n  const { backdropStyles, children, openDrawer, paperStyles, setOpenDrawer } =\n    props;\n  return (\n    <DrawerProvider setOpenDrawer={setOpenDrawer}>\n      <Drawer\n        anchor=\"bottom\"\n        open={openDrawer}\n        onClose={() => setOpenDrawer(false)}\n        classes={{\n          root: classes.drawerRoot,\n          paper: classes.drawerPaper,\n        }}\n        PaperProps={{\n          style: {\n            ...paperStyles,\n          },\n        }}\n        BackdropProps={{\n          style: {\n            ...backdropStyles,\n          },\n        }}\n        id=\"drawer\"\n      >\n        {children}\n      </Drawer>\n    </DrawerProvider>\n  );\n}\n\nexport function WithMiniDrawer(props: any) {\n  const classes = useStyles();\n  const {\n    children,\n    openDrawer,\n    setOpenDrawer,\n    paperAnchorBottom,\n    backdropProps,\n    modalProps,\n    paperProps,\n    onClose,\n  } = props;\n  return (\n    <DrawerProvider setOpenDrawer={setOpenDrawer}>\n      <Drawer\n        anchor=\"bottom\"\n        open={openDrawer}\n        onClose={() => (onClose ? onClose() : setOpenDrawer(false))}\n        classes={{\n          root: classes.miniDrawerRoot,\n          paper: classes.miniDrawerPaper,\n          paperAnchorBottom: paperAnchorBottom,\n        }}\n        BackdropProps={{\n          style: {\n            background: \"transparent\",\n          },\n          ...backdropProps,\n        }}\n        ModalProps={{\n          ...modalProps,\n        }}\n        PaperProps={{\n          ...paperProps,\n        }}\n      >\n        {children}\n      </Drawer>\n    </DrawerProvider>\n  );\n}\n\nexport function CloseButton({ onClick, buttonStyle }: any) {\n  const classes = useStyles();\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: `${NAV_BUTTON_WIDTH}px`,\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <IconButton\n        classes={{ root: classes.rightButtonLabel }}\n        disableRipple\n        style={{\n          padding: 0,\n          position: \"absolute\",\n          ...buttonStyle,\n        }}\n        onClick={onClick}\n        size=\"large\"\n      >\n        <Close className={classes.rightButtonIcon} />\n      </IconButton>\n    </div>\n  );\n}\n\nexport function WithDrawerNoHeader(props: any) {\n  const { children, openDrawer, setOpenDrawer } = props;\n  const classes = useStyles();\n  return (\n    <Drawer\n      BackdropProps={{\n        style: {\n          position: \"absolute\",\n          top: NAV_BAR_HEIGHT,\n          height: EXTENSION_HEIGHT - NAV_BAR_HEIGHT,\n        },\n      }}\n      anchor=\"bottom\"\n      open={openDrawer}\n      onClose={() => setOpenDrawer(false)}\n      classes={{\n        root: classes.drawerRoot,\n      }}\n    >\n      <div className={classes.withDrawerNoHeader}>\n        <div className={classes.withDrawerContent}>{children}</div>\n        {!props.skipFooter ? (\n          <Button\n            onClick={() => setOpenDrawer(false)}\n            variant=\"contained\"\n            className={classes.closeDrawerButton}\n          >\n            Close\n          </Button>\n        ) : null}\n      </div>\n    </Drawer>\n  );\n}\n\nexport function WithContaineredDrawer(\n  props: PropsWithChildren<{\n    backdropStyles?: CSSProperties;\n    containerRef: MutableRefObject<any>;\n    openDrawer: boolean;\n    paperStyles?: CSSProperties;\n    setOpenDrawer: Dispatch<SetStateAction<boolean>>;\n  }>\n) {\n  const {\n    children,\n    backdropStyles,\n    containerRef,\n    openDrawer,\n    setOpenDrawer,\n    paperStyles,\n  } = props;\n\n  return (\n    <Drawer\n      anchor=\"bottom\"\n      open={openDrawer}\n      onClose={() => setOpenDrawer(false)}\n      PaperProps={{\n        style: {\n          position: \"absolute\",\n          ...paperStyles,\n        },\n      }}\n      BackdropProps={{\n        style: {\n          position: \"absolute\",\n          ...backdropStyles,\n        },\n      }}\n      ModalProps={{\n        container: containerRef.current,\n        style: { position: \"absolute\" },\n        disableAutoFocus: true,\n      }}\n    >\n      {children}\n    </Drawer>\n  );\n}\n\ntype DrawerContext = {\n  close: () => void;\n};\nconst _DrawerContext = React.createContext<DrawerContext | null>(null);\n\nfunction DrawerProvider({ children, setOpenDrawer }: any) {\n  const close = () => setOpenDrawer(false);\n  return (\n    <_DrawerContext.Provider\n      value={{\n        close,\n      }}\n    >\n      {children}\n    </_DrawerContext.Provider>\n  );\n}\n\nexport function useDrawerContext(): DrawerContext {\n  const ctx = useContext(_DrawerContext);\n  if (ctx === null) {\n    throw new Error(\"Context not available\");\n  }\n  return ctx;\n}\n","import React, { Suspense, useState } from \"react\";\nimport { Loading, LocalImage } from \"@coral-xyz/react-common\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { ArrowBack } from \"@mui/icons-material\";\nimport KeyboardArrowDownSharpIcon from \"@mui/icons-material/KeyboardArrowDownSharp\";\nimport VerifiedIcon from \"@mui/icons-material/Verified\";\nimport { IconButton, Typography } from \"@mui/material\";\n\nimport { Scrollbar } from \"./Scrollbar\";\n\nexport const NAV_BAR_HEIGHT = 56;\nexport const NAV_BUTTON_WIDTH = 38;\n\nconst useStyles = styles((theme) => ({\n  menuButtonContainer: {\n    width: `${NAV_BUTTON_WIDTH}px`,\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n  },\n  overviewLabel: {\n    fontSize: \"18px\",\n    fontWeight: 500,\n    color: theme.custom.colors.fontColor,\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    whiteSpace: \"nowrap\",\n    textAlign: \"center\",\n    lineHeight: \"24px\",\n  },\n  overviewLabelPrefix: {\n    color: theme.custom.colors.secondary,\n  },\n  backButton: {\n    padding: 0,\n    position: \"absolute\",\n    left: 0,\n    \"&:hover\": {\n      background: \"transparent !important\",\n    },\n  },\n}));\n\nexport function WithNav({\n  title,\n  navButtonLeft,\n  navButtonRight,\n  children,\n  navbarStyle = {},\n  navContentStyle = {},\n  notchViewComponent,\n  noScrollbars,\n  image,\n  onClick,\n  isVerified,\n}: {\n  title?: string;\n  navButtonLeft?: React.ReactNode;\n  navButtonRight?: React.ReactNode;\n  children?: React.ReactNode;\n  navbarStyle?: React.CSSProperties;\n  navContentStyle?: React.CSSProperties;\n  notchViewComponent?: React.ReactElement | null;\n  noScrollbars?: boolean;\n  image?: string;\n  onClick?: any;\n  isVerified?: boolean;\n}) {\n  return (\n    <>\n      <NavBar\n        notchViewComponent={notchViewComponent}\n        title={title || \"\"}\n        image={image}\n        isVerified={isVerified}\n        onClick={onClick}\n        navButtonLeft={navButtonLeft}\n        navButtonRight={navButtonRight}\n        style={navbarStyle}\n      />\n      <NavContent\n        style={navContentStyle}\n        noScrollbars={noScrollbars}\n        renderComponent={children}\n      />\n    </>\n  );\n}\n\nexport function NavBar({\n  title,\n  navButtonLeft,\n  navButtonRight,\n  style = {},\n  notchViewComponent,\n  image,\n  onClick,\n  isVerified,\n}: {\n  title: string;\n  image?: string;\n  onClick?: any;\n  navButtonLeft: React.ReactNode;\n  navButtonRight: React.ReactNode;\n  style?: any;\n  notchViewComponent?: React.ReactElement | null;\n  isVerified?: boolean;\n}) {\n  return (\n    <Suspense fallback={null}>\n      <div\n        style={{\n          display: \"flex\",\n          height: `${NAV_BAR_HEIGHT}px`,\n          position: \"relative\",\n          justifyContent: \"space-between\",\n          padding: \"10px 16px\",\n          ...style,\n        }}\n      >\n        <div style={{ position: \"relative\", width: \"100%\", display: \"flex\" }}>\n          <NavButton button={navButtonLeft} />\n          <CenterDisplay\n            image={image}\n            onClick={onClick}\n            isVerified={isVerified}\n            title={title}\n            notchViewComponent={notchViewComponent}\n          />\n          <NavButton button={navButtonRight} align=\"right\" />\n        </div>\n      </div>\n    </Suspense>\n  );\n}\n\nfunction NavButton({\n  button,\n  align = \"left\",\n}: {\n  button: React.ReactNode;\n  align?: \"left\" | \"right\";\n}) {\n  const alignment = { [align]: 0 };\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        ...alignment,\n      }}\n    >\n      {button ? button : <DummyButton />}\n    </div>\n  );\n}\n\nexport function NavBackButton({ onClick }: { onClick: () => void }) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        width: `${NAV_BUTTON_WIDTH}px`,\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        position: \"relative\",\n      }}\n    >\n      <IconButton\n        disableRipple\n        onClick={onClick}\n        className={classes.backButton}\n        size=\"large\"\n        data-testid=\"back-button\"\n      >\n        <ArrowBack style={{ color: theme.custom.colors.icon }} />\n      </IconButton>\n    </div>\n  );\n}\n\nexport function NavContent({\n  renderComponent,\n  style,\n  noScrollbars,\n}: {\n  renderComponent?: React.ReactNode;\n  noScrollbars?: boolean;\n  style?: any;\n}) {\n  const _style = {\n    flex: 1,\n    ...style,\n  };\n\n  return (\n    <div className=\"nav-content-style\" style={_style}>\n      {noScrollbars ? (\n        <Suspense fallback={<Loading />}>{renderComponent}</Suspense>\n      ) : (\n        <Scrollbar>\n          <Suspense fallback={<Loading />}>{renderComponent}</Suspense>\n        </Scrollbar>\n      )}\n    </div>\n  );\n}\n\nfunction CenterDisplay({\n  title,\n  notchViewComponent,\n  image,\n  onClick,\n  isVerified,\n}: {\n  title: string;\n  notchViewComponent?: React.ReactElement | null;\n  image?: string;\n  onClick?: any;\n  isVerified?: boolean;\n}) {\n  const [notchEnabled, setNotchEnabled] = useState(false);\n  const notchViewComponentWithProps = notchViewComponent\n    ? React.cloneElement(notchViewComponent, { setOpenDrawer: setNotchEnabled })\n    : null;\n\n  const theme = useCustomTheme();\n  const handleOpenDrawer = () => {\n    setNotchEnabled((x) => !x);\n  };\n\n  return (\n    <Suspense fallback={<div />}>\n      <div\n        style={{\n          userSelect: \"none\",\n          visibility: title ? undefined : \"hidden\",\n          overflow: \"hidden\",\n          maxWidth: `calc(100% - ${NAV_BUTTON_WIDTH * 2}px)`,\n          margin: \"0 auto\",\n          display: \"flex\",\n          alignItems: \"center\",\n          cursor: onClick ? \"pointer\" : \"default\",\n        }}\n        onClick={onClick ? onClick : () => {}}\n      >\n        {image ? (\n          <button\n            style={{\n              background: \"transparent\",\n              border: \"none\",\n              padding: 0,\n              margin: 0,\n              cursor: \"pointer\",\n              width: 25,\n              height: 25,\n              marginRight: 5,\n            }}\n            onClick={handleOpenDrawer}\n          >\n            <LocalImage\n              style={{\n                width: 25,\n                height: 25,\n                borderRadius: \"50%\",\n              }}\n              src={image}\n            />\n          </button>\n        ) : null}\n        <button\n          style={{\n            background: \"transparent\",\n            border: \"none\",\n            padding: 0,\n            margin: 0,\n            cursor: notchViewComponent ? \"pointer\" : \"default\",\n          }}\n          onClick={handleOpenDrawer}\n        >\n          <NavTitleLabel title={title} />\n        </button>\n        {notchViewComponent ? (\n          <KeyboardArrowDownSharpIcon\n            onClick={handleOpenDrawer}\n            style={{ cursor: \"pointer\", color: theme.custom.colors.fontColor }}\n          />\n        ) : null}\n        {notchEnabled && notchViewComponentWithProps ? (\n          <>{notchViewComponentWithProps}</>\n        ) : null}\n        {isVerified ? (\n          <VerifiedIcon\n            style={{\n              fontSize: 19,\n              marginLeft: 3,\n              color: theme.custom.colors.verified,\n            }}\n          />\n        ) : null}\n      </div>\n    </Suspense>\n  );\n}\n\nexport function NavTitleLabel({ title }: any) {\n  const classes = useStyles();\n  if (typeof title !== \"string\") {\n    return title;\n  }\n  const slashTitleComponents = title.split(\"/\");\n  const parenComponents = title.split(\"(\");\n  return slashTitleComponents.length === 2 ? (\n    <Typography className={classes.overviewLabel} title={title}>\n      <span className={classes.overviewLabelPrefix}>\n        {slashTitleComponents[0]} /\n      </span>\n      {slashTitleComponents[1]}\n    </Typography>\n  ) : parenComponents.length === 2 ? (\n    <Typography className={classes.overviewLabel} title={title}>\n      {parenComponents[0]}\n      <span className={classes.overviewLabelPrefix}>({parenComponents[1]}</span>\n    </Typography>\n  ) : (\n    <Typography className={classes.overviewLabel} title={title}>\n      {title}\n    </Typography>\n  );\n}\n\nexport function DummyButton() {\n  const classes = useStyles();\n  return <div className={classes.menuButtonContainer} />;\n}\n","import React, { type CSSProperties, useContext, useState } from \"react\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport { WithMotion } from \"../../../plugin/Component\";\n\nimport { NavBackButton, WithNav } from \"./Nav\";\n\nexport { WithMotion } from \"../../../plugin/Component\";\n\n/**\n * Ephemeral nav stack API for animating transitions between components on the\n * push/pop navigation stack.\n */\nexport function NavStackEphemeral({\n  initialRoute,\n  children,\n  options,\n  navButtonRight,\n  navButtonLeft,\n}: {\n  initialRoute: { name: string; title?: string; props?: any };\n  children: any;\n  options: NavStackOptions;\n  navButtonRight?: React.ReactNode;\n  navButtonLeft?: React.ReactNode;\n}) {\n  const isArray = children && children.length !== undefined;\n  const navScreens =\n    children === undefined ? [] : isArray ? children : [children];\n  return (\n    <NavStackProvider\n      initialRoute={initialRoute}\n      navButtonRight={navButtonRight}\n      navButtonLeft={navButtonLeft}\n    >\n      <NavStackInner navScreens={navScreens} options={options} />\n    </NavStackProvider>\n  );\n}\n\nfunction NavStackInner({\n  navScreens,\n  options,\n}: {\n  navScreens: any;\n  options: NavStackOptions;\n}) {\n  let {\n    isRoot,\n    activeRoute,\n    pop,\n    navButtonRight,\n    navButtonLeft,\n    navStyle,\n    title,\n  } = useNavigation();\n  const _navButtonLeft =\n    navButtonLeft && isRoot ? (\n      navButtonLeft\n    ) : isRoot ? null : (\n      <NavBackButton onClick={() => pop()} />\n    );\n  const activeScreen = navScreens.find(\n    (c: any) => c.props.name === activeRoute.name\n  );\n\n  let { title: titleDefault } = options({\n    route: activeRoute,\n  });\n  if (!title) {\n    title = titleDefault;\n  }\n  return (\n    <AnimatePresence initial={false}>\n      <WithMotion id={activeRoute.name} navAction={activeRoute.navAction}>\n        <WithNav\n          title={title}\n          navButtonLeft={_navButtonLeft}\n          navButtonRight={navButtonRight}\n          navbarStyle={navStyle}\n        >\n          {activeScreen.props.component({ ...(activeRoute.props ?? {}) })}\n        </WithNav>\n      </WithMotion>\n    </AnimatePresence>\n  );\n}\n\nfunction NavStackProvider({\n  initialRoute,\n  navButtonRight,\n  navButtonLeft,\n  children,\n}: any) {\n  const [stack, setStack] = useState([{ navAction: \"push\", ...initialRoute }]);\n  const [titleOverride, setTitleOverride] = useState(initialRoute.title);\n  const [navButtonRightOverride, setNavButtonRightOverride] =\n    useState<any>(navButtonRight);\n  const [navButtonLeftOverride, setNavButtonLeftOverride] =\n    useState<any>(navButtonLeft);\n  const [navStyleOverride, setNavStyleOverride] = useState<CSSProperties>({});\n\n  const push = (route: string, props: any) => {\n    setStack([...stack, { name: route, props, navAction: \"push\" }]);\n  };\n  const pop = (count?: number) => {\n    let newStack = [...stack];\n    newStack = newStack.slice(0, newStack.length - (count ?? 1));\n    newStack[newStack.length - 1][\"navAction\"] = \"pop\";\n    setStack(newStack);\n  };\n\n  const setOptions = ({\n    headerLeft,\n    headerTitle,\n    headerRight,\n    style,\n  }: {\n    headerLeft?: React.ReactElement | null;\n    headerTitle?: string | React.ReactElement;\n    headerRight?: React.ReactElement | null;\n    style?: CSSProperties;\n  }) => {\n    if (headerLeft !== undefined) {\n      setNavButtonLeftOverride(headerLeft);\n    }\n    if (headerTitle !== undefined) {\n      setTitleOverride(headerTitle);\n    }\n    if (headerRight !== undefined) {\n      setNavButtonRightOverride(headerRight);\n    }\n    if (style !== undefined) {\n      setNavStyleOverride(style);\n    }\n  };\n\n  return (\n    <_NavStackContext.Provider\n      value={{\n        activeRoute: stack[stack.length - 1],\n        push,\n        pop,\n        isRoot: stack.length === 1,\n        title: titleOverride,\n        navButtonRight: navButtonRightOverride,\n        navButtonLeft: navButtonLeftOverride,\n        navStyle: navStyleOverride,\n        setOptions,\n      }}\n    >\n      {children}\n    </_NavStackContext.Provider>\n  );\n}\n\ntype NavStackOptions = ({\n  route,\n}: {\n  route: { name: string; props?: any };\n}) => RoutedNavStackOptions;\ntype RoutedNavStackOptions = {\n  title: string;\n  rightNavButton?: any;\n  leftNavButton?: any;\n  style?: any;\n};\n\ntype NavStackContext = {\n  push: (route: string, props?: any) => void;\n  pop: (count?: number) => void;\n  isRoot: boolean;\n  title: string;\n\n  activeRoute: { name: string; props?: any; navAction?: \"push\" | \"pop\" };\n  navButtonRight: any;\n  navButtonLeft: any;\n  navStyle: CSSProperties;\n  setOptions: ({\n    headerLeft,\n    headerTitle,\n    headerRight,\n    style,\n  }: {\n    headerLeft?: React.ReactElement | null;\n    headerTitle?: string | React.ReactElement;\n    headerRight?: React.ReactElement | null;\n    style?: CSSProperties;\n  }) => void;\n};\n\nconst _NavStackContext = React.createContext<NavStackContext | null>(null);\n\nexport function useNavigation(): NavStackContext {\n  const ctx = useContext(_NavStackContext);\n  if (ctx === null) {\n    throw new Error(\"Context not available\");\n  }\n  return ctx;\n}\n\nexport function NavStackScreen({\n  // eslint-disable-next-line\n  name,\n  // eslint-disable-next-line\n  component,\n}: {\n  name: string;\n  component: (props: any) => React.ReactNode;\n}) {\n  return <></>;\n}\n","import { useState } from \"react\";\nimport type { ReactJSXElement } from \"@emotion/react/types/jsx-namespace\";\nimport { Menu } from \"@mui/material\";\n\nexport function RightClickMenu({\n  renderItems,\n  children,\n  className,\n  style,\n}: {\n  children: ReactJSXElement;\n  className?: string;\n  style?: React.StyleHTMLAttributes<\"div\">;\n  renderItems: (close: () => void) => ReactJSXElement | ReactJSXElement[];\n}) {\n  const [contextMenu, setContextMenu] = useState<{\n    mouseX: number;\n    mouseY: number;\n  } | null>(null);\n\n  const handleContextMenu = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setContextMenu(\n      contextMenu === null\n        ? {\n            mouseX: event.clientX + 2,\n            mouseY: event.clientY - 6,\n          }\n        : // repeated contextmenu when it is already open closes it with Chrome 84 on Ubuntu\n          // Other native context menus might behave different.\n          // With this behavior we prevent contextmenu from the backdrop to re-locale existing context menus.\n          null\n    );\n  };\n\n  const handleClose = () => {\n    setContextMenu(null);\n  };\n\n  return (\n    <div className={className} style={style} onContextMenu={handleContextMenu}>\n      {children}\n      <Menu\n        open={contextMenu !== null}\n        onClose={handleClose}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={\n          contextMenu !== null\n            ? { top: contextMenu.mouseY, left: contextMenu.mouseX }\n            : undefined\n        }\n      >\n        {renderItems(handleClose)}\n      </Menu>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n  useSearchParams,\n} from \"react-router-dom\";\nimport type { SearchParamsFor, SubscriptionType } from \"@coral-xyz/common\";\nimport {\n  BACKPACK_TEAM,\n  NAV_COMPONENT_MESSAGE_PROFILE,\n} from \"@coral-xyz/common\";\nimport {\n  ChatScreen,\n  Inbox,\n  ParentCommunicationManager,\n  ProfileScreen,\n  RequestsScreen,\n} from \"@coral-xyz/message-sdk\";\nimport { useBreakpoints } from \"@coral-xyz/react-common\";\nimport {\n  useDarkMode,\n  useDecodedSearchParams,\n  useNavigation,\n  useRedirectUrl,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { useUsersMetadata } from \"@coral-xyz/tamagui\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport { Apps } from \"../../Unlocked/Apps\";\nimport { Balances } from \"../../Unlocked/Balances\";\nimport { Notifications } from \"../../Unlocked/Balances/Notifications\";\nimport { RecentActivity } from \"../../Unlocked/Balances/RecentActivity\";\nimport { Token } from \"../../Unlocked/Balances/TokensWidget/Token\";\nimport { ChatDrawer } from \"../../Unlocked/Messages/ChatDrawer\";\nimport { MessageOptions } from \"../../Unlocked/Messages/MessageOptions\";\nimport { Nfts } from \"../../Unlocked/Nfts\";\nimport { NftsCollection } from \"../../Unlocked/Nfts/Collection\";\nimport { NftChat, NftsExperience } from \"../../Unlocked/Nfts/Experience\";\nimport { NftOptionsButton, NftsDetail } from \"../../Unlocked/Nfts/NftDetail\";\nimport { SettingsButton } from \"../../Unlocked/Settings\";\n\nimport { NavBackButton, WithNav } from \"./Nav\";\nimport { WithMotion } from \"./NavStack\";\nimport { Scrollbar } from \"./Scrollbar\";\nimport { XnftAppStack } from \"./XnftAppStack\";\n\nexport function Router() {\n  const location = useLocation();\n  const { isXs } = useBreakpoints();\n  return (\n    <AnimatePresence initial={false}>\n      <Routes location={location} key={location.pathname}>\n        <Route path=\"/balances\" element={<BalancesPage />} />\n        <Route path=\"/balances/token\" element={<TokenPage />} />\n        <Route path={\"/messages/*\"} element={<Messages />} />\n        <Route path=\"/apps\" element={<AppsPage />} />\n        <Route path=\"/nfts\" element={<NftsPage />} />\n        <Route path=\"/nfts/collection\" element={<NftsCollectionPage />} />\n        <Route path=\"/nfts/experience\" element={<NftsExperiencePage />} />\n        <Route path=\"/nfts/chat\" element={<NftsChatPage />} />\n        <Route path=\"/nfts/detail\" element={<NftsDetailPage />} />\n        {!isXs ? (\n          <>\n            <Route path=\"/notifications\" element={<NotificationsPage />} />\n            <Route path=\"/recent-activity\" element={<RecentActivityPage />} />\n          </>\n        ) : null}\n        {/*\n          Auto-lock functionality is dependent on checking if the URL contains\n          \"xnft\", if this changes then please verify that it still works\n          */}\n        <Route path=\"/xnft/:xnftAddress/*\" element={<XnftAppStack />} />\n        <Route path=\"/xnft/:xnftAddress\" element={<XnftAppStack />} />\n        {isXs ? (\n          <Route path=\"*\" element={<RedirectXs />} />\n        ) : (\n          <Route path=\"*\" element={<Redirect />} />\n        )}\n      </Routes>\n    </AnimatePresence>\n  );\n}\n\nexport function NotificationsPage() {\n  return <NavScreen component={<Notifications />} />;\n}\n\nexport function RecentActivityPage() {\n  return <NavScreen component={<RecentActivity />} />;\n}\n\nexport function Redirect() {\n  let url = useRedirectUrl();\n  return <Navigate to={url} replace />;\n}\n\n// We use a separate redirect for the xs size because some routes, e.g., /notifications\n// and /recent-activity don't exist on the xs size--for xs, they are ephemeral drawers,\n// for larger screens they are normal routes.\nexport function RedirectXs() {\n  let url = useRedirectUrl();\n  if (url.startsWith(\"/notifications\") || url.startsWith(\"/recent-activity\")) {\n    return <Navigate to=\"/balances\" replace />;\n  }\n  return <Navigate to={url} replace />;\n}\n\nfunction BalancesPage() {\n  return <NavScreen component={<Balances />} />;\n}\n\nfunction NftsPage() {\n  return <NavScreen noScrollbars component={<Nfts />} />;\n}\n\nfunction NftsChatPage() {\n  const { props } = useDecodedSearchParams();\n  return <NavScreen component={<NftChat {...props} />} />;\n}\n\nfunction NftsExperiencePage() {\n  const { props } = useDecodedSearchParams();\n  return <NavScreen component={<NftsExperience {...props} />} />;\n}\n\nfunction NftsCollectionPage() {\n  const { props } = useDecodedSearchParams();\n  return (\n    <NavScreen\n      /* @ts-expect-error TS2322: Property 'id' is missing in type '{}' but required in type '{ id: string; }' */\n      component={<NftsCollection {...props} />}\n    />\n  );\n}\n\nfunction NftsDetailPage() {\n  const { props } = useDecodedSearchParams();\n  return (\n    <NavScreen\n      /* @ts-expect-error TS2322: Property 'nftId' is missing in type '{}' but required in type '{ nftId: string; }'. */\n      component={<NftsDetail {...props} />}\n    />\n  );\n}\n\nfunction Messages() {\n  const { push, pop } = useNavigation();\n  const { isXs } = useBreakpoints();\n\n  useEffect(() => {\n    ParentCommunicationManager.getInstance().setNativePush(push);\n    ParentCommunicationManager.getInstance().setNativePop(pop);\n  }, []);\n\n  if (!isXs) {\n    return <FullChatPage />;\n  }\n\n  return <MessageNativeInner />;\n}\n\nfunction MessageNativeInner() {\n  const isDarkMode = useDarkMode();\n  const hash = location.hash.slice(1);\n  const { uuid } = useUser();\n  const { props } = useDecodedSearchParams<any>();\n  const { isXs } = useBreakpoints();\n\n  if (hash.startsWith(\"/messages/requests\")) {\n    return <NavScreen noMotion component={<RequestsScreen />} />;\n  }\n\n  if (hash.startsWith(\"/messages/chat\")) {\n    return (\n      <NavScreen\n        noMotion\n        component={\n          <ChatScreen\n            isDarkMode={isDarkMode}\n            userId={props.userId}\n            uuid={uuid}\n            username={props.username}\n          />\n        }\n      />\n    );\n  }\n\n  if (hash.startsWith(\"/messages/groupchat\")) {\n    return (\n      <NavScreen\n        noMotion\n        component={<NftChat collectionId={props.id} {...props} />}\n      />\n    );\n  }\n\n  if (hash.startsWith(\"/messages/profile\")) {\n    return (\n      <NavScreen noMotion component={<ProfileScreen userId={props.userId} />} />\n    );\n  }\n\n  if (!isXs) {\n    return <div />;\n  }\n\n  return <NavScreen noMotion component={<Inbox />} />;\n}\n\nfunction FullChatPage() {\n  const { props } = useDecodedSearchParams<any>();\n  const [userId, setRefresh] = useState(props.userId);\n  const [collectionId, setCollectionIdRefresh] = useState(props.id);\n\n  useEffect(() => {\n    if (props.userId !== userId) {\n      console.error(\"Setting refresh\");\n      setRefresh(props.userId);\n    }\n  }, [props.userId]);\n\n  useEffect(() => {\n    if (props.id !== collectionId) {\n      setCollectionIdRefresh(props.id);\n    }\n  }, [props.id]);\n\n  return (\n    <div style={{ height: \"100%\", display: \"flex\" }}>\n      <div style={{ width: \"365px\" }}>\n        <Scrollbar>\n          <Inbox />\n        </Scrollbar>\n      </div>\n      <div\n        style={{\n          position: \"relative\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n        }}\n      >\n        <MessageNativeInner />\n      </div>\n    </div>\n  );\n}\n\nfunction AppsPage() {\n  return <NavScreen component={<Apps />} />;\n}\n\nfunction TokenPage() {\n  const { props } = useDecodedSearchParams<SearchParamsFor.Token>();\n  return <NavScreen component={<Token {...props} />} />;\n}\n\nfunction NavScreen({\n  component,\n  noScrollbars,\n  noMotion,\n}: {\n  noScrollbars?: boolean;\n  component: React.ReactNode;\n  messageProps?: {\n    type: SubscriptionType;\n    remoteUuid?: string;\n    room?: string;\n  };\n  noMotion?: boolean;\n}) {\n  const { title, isRoot, pop } = useNavigation();\n\n  const {\n    style,\n    navButtonLeft,\n    navButtonRight,\n    notchViewComponent,\n    image,\n    onClick,\n    isVerified,\n  } = useNavBar();\n\n  const _navButtonLeft = navButtonLeft ? (\n    navButtonLeft\n  ) : isRoot ? null : (\n    <NavBackButton onClick={() => pop()} />\n  );\n\n  if (noMotion) {\n    return (\n      <NavScreenInner\n        title={title}\n        image={image}\n        onClick={onClick}\n        notchViewComponent={notchViewComponent}\n        navButtonLeft={_navButtonLeft}\n        navButtonRight={navButtonRight}\n        navbarStyle={style}\n        noScrollbars={noScrollbars}\n        isVerified={isVerified}\n        component={component}\n      />\n    );\n  }\n  return (\n    <WithMotionWrapper>\n      <NavScreenInner\n        title={title}\n        image={image}\n        onClick={onClick}\n        notchViewComponent={notchViewComponent}\n        navButtonLeft={_navButtonLeft}\n        navButtonRight={navButtonRight}\n        navbarStyle={style}\n        noScrollbars={noScrollbars}\n        isVerified={isVerified}\n        component={component}\n      />\n    </WithMotionWrapper>\n  );\n}\n\nfunction NavScreenInner({\n  title,\n  image,\n  onClick,\n  notchViewComponent,\n  navButtonLeft,\n  navButtonRight,\n  navbarStyle,\n  noScrollbars,\n  isVerified,\n  component,\n}: any) {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      }}\n    >\n      <WithNav\n        title={title}\n        image={image}\n        onClick={onClick}\n        notchViewComponent={notchViewComponent}\n        navButtonLeft={navButtonLeft}\n        navButtonRight={navButtonRight}\n        navbarStyle={navbarStyle}\n        noScrollbars={noScrollbars}\n        isVerified={isVerified}\n      >\n        {component}\n      </WithNav>\n    </div>\n  );\n}\n\nfunction WithMotionWrapper({ children }: { children: any }) {\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const navAction = searchParams.get(\"nav\");\n\n  return (\n    <WithMotion id={location.pathname} navAction={navAction}>\n      {children}\n    </WithMotion>\n  );\n}\n\nfunction useNavBar() {\n  let { isRoot, push } = useNavigation();\n  const pathname = useLocation().pathname;\n  const theme = useCustomTheme();\n  const { props }: any = useDecodedSearchParams(); // TODO: fix type\n  const { isXs } = useBreakpoints();\n  const profileUser = useUsersMetadata({ remoteUserIds: [props?.userId] });\n  const image: string | undefined =\n    props.image ?? profileUser[props?.userId]?.image;\n\n  let navButtonLeft = null as any;\n  let navButtonRight = null as any;\n\n  let navStyle = {\n    fontSize: \"18px\",\n  } as React.CSSProperties;\n\n  if (pathname === \"/messages/chat\" || pathname === \"/messages/groupchat\") {\n    navStyle.background = theme.custom.colors.chatFadeGradientStart;\n  }\n\n  if (isRoot) {\n    navButtonRight = isXs ? <SettingsButton /> : undefined;\n    navButtonLeft = (\n      <div style={{ display: \"flex\" }}>\n        <Typography\n          style={{\n            userSelect: \"none\",\n            fontSize: \"18px\",\n            color: theme.custom.colors.fontColor,\n            fontWeight: 600,\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          {pathname.startsWith(\"/balances\")\n            ? \"Balances\"\n            : pathname.startsWith(\"/apps\")\n            ? \"Applications\"\n            : pathname.startsWith(\"/messages\") && !isXs\n            ? \"\"\n            : pathname.startsWith(\"/messages\")\n            ? \"Messages\"\n            : pathname.startsWith(\"/nfts\")\n            ? \"Collectibles\"\n            : pathname.startsWith(\"/notifications\")\n            ? \"Notifications\"\n            : \"Recent Activity\"}\n        </Typography>\n      </div>\n    );\n  } else if (pathname === \"/balances/token\") {\n    navButtonRight = null;\n  } else if (pathname === \"/nfts/detail\") {\n    navButtonRight = <NftOptionsButton />;\n  } else if (pathname === \"/messages/chat\") {\n    navButtonRight = <MessageOptions />;\n  }\n\n  let onClick;\n  if (pathname === \"/messages/chat\") {\n    onClick = () => {\n      push({\n        title: `@${props.username}`,\n        componentId: NAV_COMPONENT_MESSAGE_PROFILE,\n        componentProps: {\n          userId: props.userId,\n        },\n      });\n    };\n  }\n\n  const notchViewComponent =\n    pathname === \"/nfts/chat\" || pathname === \"/messages/groupchat\" ? (\n      <ChatDrawer image={image} setOpenDrawer={() => {}} />\n    ) : null;\n\n  return {\n    navButtonRight,\n    navButtonLeft,\n    style: navStyle,\n    notchViewComponent,\n    image:\n      pathname === \"/messages/chat\"\n        ? image\n        : pathname === \"/messages/groupchat\" && props.id === \"backpack-chat\"\n        ? \"https://user-images.githubusercontent.com/321395/206757416-a80e662a-0ccc-41cc-a20f-ff397755d47f.png\"\n        : pathname === \"/messages/groupchat\"\n        ? image\n        : undefined,\n    isVerified:\n      (pathname === \"/messages/groupchat\" && props.id === \"backpack-chat\") ||\n      (pathname === \"/messages/chat\" && BACKPACK_TEAM.includes(props.userId)),\n    onClick,\n  };\n}\n","export { ScrollBarImpl as Scrollbar } from \"../../../plugin/Component\";\n","import { useLocation } from \"react-router-dom\";\nimport {\n  BACKPACK_FEATURE_XNFT,\n  TAB_APPS,\n  TAB_BALANCES,\n  TAB_MESSAGES,\n  TAB_NFTS,\n  TAB_NOTIFICATIONS,\n  TAB_RECENT_ACTIVITY,\n  UI_RPC_METHOD_NAVIGATION_ACTIVE_TAB_UPDATE,\n  UI_RPC_METHOD_NAVIGATION_TO_ROOT,\n} from \"@coral-xyz/common\";\nimport { useUnreadGlobal } from \"@coral-xyz/db\";\nimport {\n  BalancesIcon,\n  GridIcon,\n  ImageIcon,\n  MessageBubbleIcon,\n  useBreakpoints,\n} from \"@coral-xyz/react-common\";\nimport {\n  useAuthenticatedUser,\n  useBackgroundClient,\n  useTab,\n} from \"@coral-xyz/recoil\";\nimport { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport FormatListBulletedRoundedIcon from \"@mui/icons-material/FormatListBulletedRounded\";\nimport { Tab, Tabs } from \"@mui/material\";\nimport Badge from \"@mui/material/Badge\";\n\nimport { AvatarPopoverButton } from \"../../Unlocked/Settings/AvatarPopover\";\nimport { NotificationIconWithBadge } from \"../NotificationIconWithBadge\";\n\nconst TAB_HEIGHT = 64;\n\nconst useStyles = makeStyles((theme) => ({\n  tabXs: {\n    opacity: \"1 !important\",\n    height: `${TAB_HEIGHT}px`,\n    \"&:hover\": {\n      background: \"transparent !important\",\n      \"& svg\": {\n        \"& path\": {\n          fill: `${theme.custom.colors.brandColor} !important`,\n        },\n      },\n    },\n  },\n  tab: {\n    opacity: \"1 !important\",\n    minWidth: \"74px\",\n    width: \"74px\",\n    marginTop: \"16px\",\n    \"&:hover\": {\n      background: \"transparent !important\",\n      \"& svg\": {\n        \"& path\": {\n          fill: `${theme.custom.colors.brandColor} !important`,\n        },\n      },\n    },\n    \"& .MuiTabs-flexContainer\": {\n      height: \"100%\",\n      width: \"100%\",\n    },\n  },\n  tabRoot: {\n    height: \"100%\",\n    minWidth: \"74px\",\n    width: \"74px\",\n    backgroundColor: theme.custom.colors.nav,\n    borderRight: `${theme.custom.colors.borderFull}`,\n    \"& .MuiTabs-flexContainer\": {\n      height: \"100%\",\n      width: \"100%\",\n    },\n  },\n  tabRootXs: {\n    height: `${TAB_HEIGHT}px`,\n    minHeight: `${TAB_HEIGHT}px`,\n    backgroundColor: theme.custom.colors.nav,\n    borderTop: `${theme.custom.colors.borderFull}`,\n    boxShadow: theme.custom.colors.tabBarBoxShadow,\n  },\n  tabIndicator: {\n    color: \"none\",\n  },\n  activeTab: {},\n}));\n\nexport function WithTabs(props: any) {\n  const location = useLocation();\n  const { isXs } = useBreakpoints();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: isXs ? \"column\" : \"row-reverse\",\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      }}\n    >\n      <div style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}>\n        {props.children}\n      </div>\n      {!location.pathname.startsWith(\"/xnft/\") &&\n      location.pathname !== \"/nfts/experience\" &&\n      location.pathname !== \"/nfts/chat\" &&\n      (!isXs || location.pathname !== \"/messages/chat\") &&\n      (!isXs || location.pathname !== \"/messages/groupchat\") &&\n      (!isXs || location.pathname !== \"/messages/profile\") ? (\n        <TabBar />\n      ) : null}\n    </div>\n  );\n}\n\nfunction TabBar() {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const tab = useTab();\n  const background = useBackgroundClient();\n  const { isXs } = useBreakpoints();\n\n  const onTabClick = async (tabValue: string) => {\n    if (tabValue === tab) {\n      await background.request({\n        method: UI_RPC_METHOD_NAVIGATION_TO_ROOT,\n        params: [],\n      });\n    } else {\n      await background.request({\n        method: UI_RPC_METHOD_NAVIGATION_ACTIVE_TAB_UPDATE,\n        params: [tabValue],\n      });\n    }\n  };\n\n  return tab === \"\" ? null : (\n    <Tabs\n      orientation={isXs ? \"horizontal\" : \"vertical\"}\n      value={tab}\n      variant=\"fullWidth\"\n      classes={{\n        root: isXs ? classes.tabRootXs : classes.tabRoot,\n        indicator: classes.tabIndicator,\n      }}\n      TabIndicatorProps={{\n        style: {\n          display: \"none\",\n        },\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: isXs ? \"row\" : \"column\",\n          justifyContent: \"space-between\",\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: isXs ? \"row\" : \"column\",\n            width: isXs ? \"100%\" : undefined,\n            justifyContent: isXs ? \"space-between\" : undefined,\n            marginTop: !isXs ? \"12px\" : undefined,\n          }}\n        >\n          <Tab\n            onClick={() => onTabClick(TAB_BALANCES)}\n            value={TAB_BALANCES}\n            disableRipple\n            className={`${isXs ? classes.tabXs : classes.tab} ${\n              tab === TAB_BALANCES ? classes.activeTab : \"\"\n            }`}\n            icon={\n              <BalancesIcon\n                fill={\n                  tab === TAB_BALANCES\n                    ? theme.custom.colors.brandColor\n                    : theme.custom.colors.icon\n                }\n                style={{\n                  width: \"20px\",\n                  height: \"20px\",\n                }}\n              />\n            }\n          />\n          {BACKPACK_FEATURE_XNFT ? (\n            <Tab\n              onClick={() => onTabClick(TAB_APPS)}\n              value={TAB_APPS}\n              disableRipple\n              className={isXs ? classes.tabXs : classes.tab}\n              icon={\n                <GridIcon\n                  fill={\n                    tab === TAB_APPS\n                      ? theme.custom.colors.brandColor\n                      : theme.custom.colors.icon\n                  }\n                  style={{\n                    width: \"20px\",\n                    height: \"20px\",\n                  }}\n                />\n              }\n            />\n          ) : null}\n          <Tab\n            onClick={() => onTabClick(TAB_NFTS)}\n            value={TAB_NFTS}\n            disableRipple\n            className={`${isXs ? classes.tabXs : classes.tab} ${\n              tab === TAB_NFTS ? classes.activeTab : \"\"\n            }`}\n            icon={\n              <ImageIcon\n                fill={\n                  tab === TAB_NFTS\n                    ? theme.custom.colors.brandColor\n                    : theme.custom.colors.icon\n                }\n                style={{\n                  width: \"20px\",\n                  height: \"20px\",\n                }}\n              />\n            }\n          />\n          <Tab\n            onClick={() => onTabClick(TAB_MESSAGES)}\n            value={TAB_MESSAGES}\n            disableRipple\n            className={`${isXs ? classes.tabXs : classes.tab} ${\n              tab === TAB_MESSAGES ? classes.activeTab : \"\"\n            }`}\n            icon={<LocalMessageIcon />}\n          />\n          {!isXs ? (\n            <>\n              <Tab\n                onClick={() => onTabClick(TAB_NOTIFICATIONS)}\n                value={TAB_NOTIFICATIONS}\n                disableRipple\n                className={`${isXs ? classes.tabXs : classes.tab} ${\n                  tab === TAB_MESSAGES ? classes.activeTab : \"\"\n                }`}\n                icon={\n                  <NotificationIconWithBadge\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      color:\n                        tab === TAB_NOTIFICATIONS\n                          ? theme.custom.colors.brandColor\n                          : theme.custom.colors.icon,\n                    }}\n                  />\n                }\n              />\n              <Tab\n                onClick={() => onTabClick(TAB_RECENT_ACTIVITY)}\n                value={TAB_RECENT_ACTIVITY}\n                disableRipple\n                className={`${isXs ? classes.tabXs : classes.tab} ${\n                  tab === TAB_MESSAGES ? classes.activeTab : \"\"\n                }`}\n                icon={\n                  <FormatListBulletedRoundedIcon\n                    style={{\n                      width: \"28px\",\n                      height: \"28px\",\n                      color:\n                        tab === TAB_RECENT_ACTIVITY\n                          ? theme.custom.colors.brandColor\n                          : theme.custom.colors.icon,\n                    }}\n                  />\n                }\n              />\n            </>\n          ) : null}\n        </div>\n        {!isXs ? (\n          <div\n            style={{\n              marginBottom: \"16px\",\n            }}\n          >\n            <AvatarPopoverButton\n              imgStyle={{\n                width: \"38px\",\n                height: \"38px\",\n                borderRadius: \"20px\",\n              }}\n              buttonStyle={{\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n              }}\n            />\n          </div>\n        ) : null}\n      </div>\n    </Tabs>\n  );\n}\n\nfunction LocalMessageIcon() {\n  const theme = useCustomTheme();\n  const tab = useTab();\n  const authenticatedUser = useAuthenticatedUser();\n\n  const messagesUnread = useUnreadGlobal(\n    authenticatedUser ? authenticatedUser.uuid : null\n  );\n\n  return (\n    <>\n      {!messagesUnread ? (\n        <MessageBubbleIcon\n          sx={{\n            width: \"20px\",\n            height: \"20px\",\n            color:\n              tab === TAB_MESSAGES\n                ? theme.custom.colors.brandColor\n                : theme.custom.colors.icon,\n          }}\n        />\n      ) : (\n        <Badge\n          sx={{\n            \"& .MuiBadge-badge\": {\n              padding: 0,\n              fontSize: 12,\n              height: 12,\n              width: 12,\n              minWidth: 12,\n              border: \"2px solid white\",\n              borderRadius: \"50%\",\n              backgroundColor: \"#E33E3F\",\n              paddingBottom: \"2px\",\n            },\n          }}\n          badgeContent={\" \"}\n          color=\"secondary\"\n        >\n          <MessageBubbleIcon\n            sx={{\n              width: \"20px\",\n              height: \"20px\",\n              color:\n                tab === TAB_MESSAGES\n                  ? theme.custom.colors.brandColor\n                  : theme.custom.colors.icon,\n            }}\n          />\n        </Badge>\n      )}\n    </>\n  );\n}\n","import React, { Suspense, useEffect, useState } from \"react\";\nimport { useLocation, useParams, useSearchParams } from \"react-router-dom\";\nimport { Loading } from \"@coral-xyz/react-common\";\nimport { useClosePlugin } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { motion } from \"framer-motion\";\n\nimport { PluginApp } from \"../../Unlocked/Apps/Plugin\";\n\nexport function XnftAppStack() {\n  let { xnftAddress } = useParams();\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const navAction = searchParams.get(\"nav\");\n  const theme = useCustomTheme();\n  const deepXnftPath = location.pathname.split(xnftAddress ?? \"\")[1] ?? \"\";\n\n  return (\n    <motion.div\n      key={xnftAddress}\n      style={{\n        background: theme.custom.colors.background,\n        filter: \"drop-shadow(5px 5px 10px #666)\",\n        position: \"relative\",\n        height: \"100%\",\n        minHeight: \"600px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n      }}\n      variants={XNFT_MOTION}\n      initial={navAction === \"pop\" ? {} : \"initial\"}\n      animate=\"animate\"\n      exit={navAction === \"push\" ? {} : \"exit\"}\n    >\n      <PluginApp xnftAddress={xnftAddress} deepXnftPath={deepXnftPath} />\n    </motion.div>\n  );\n}\n\nconst XNFT_MOTION = {\n  initial: {\n    opacity: 0,\n    transform: \"translateY(100px)\",\n  },\n  animate: {\n    opacity: 1,\n    transition: { delay: 0.09 },\n    transform: \"translateY(0px)\",\n  },\n  exit: {\n    transition: { delay: 0.09, duration: 0.1 },\n    opacity: 0,\n    transform: \"translateY(100px)\",\n  },\n};\n","import { useUnreadCount } from \"@coral-xyz/recoil\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport { Badge } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nconst badgeStyle = {\n  \"& .MuiBadge-badge\": {\n    color: \"white\",\n    backgroundColor: \"#E33E3F\",\n    height: 16,\n    minWidth: 16,\n  },\n};\nconst useStyles = makeStyles(() => ({\n  badge: {\n    fontSize: 10,\n  },\n}));\n\nexport const NotificationIconWithBadge = ({ style }: { style: any }) => {\n  const unreadCount = useUnreadCount();\n  const classes = useStyles();\n\n  if (!unreadCount) {\n    return <NotificationsIcon style={style} />;\n  }\n\n  return (\n    <Badge\n      sx={badgeStyle}\n      badgeContent={unreadCount}\n      classes={{ badge: classes.badge }}\n    >\n      <NotificationsIcon style={style} />\n    </Badge>\n  );\n};\n","import type { FunctionComponent } from \"react\";\nimport { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport Button, { type ButtonProps } from \"@mui/material/Button\";\nimport Popover, { type PopoverProps } from \"@mui/material/Popover\";\n\nconst useStyles = makeStyles((theme) => ({\n  popOverRoot: {\n    \"& .css-1y04bq4\": {\n      backgroundColor: theme.custom.colors.background,\n    },\n  },\n}));\n\nexport const PopoverMenu: FunctionComponent<PopoverProps> = ({\n  children,\n  ...rest\n}) => {\n  const theme = useCustomTheme();\n  const classes = useStyles(theme);\n\n  return (\n    <Popover className={classes.popOverRoot} {...rest}>\n      <div\n        style={{\n          width: \"100%\",\n          background: theme.custom.colors.background,\n          padding: 1,\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 2,\n        }}\n      >\n        {children}\n      </div>\n    </Popover>\n  );\n};\n\ntype GroupProps = {\n  children?: React.ReactNode;\n};\n\nexport const PopoverMenuItemGroup: FunctionComponent<GroupProps> = ({\n  children,\n}) => {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        background: theme.custom.colors.nav,\n        borderRadius: 2,\n        padding: \"2px 0\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const PopoverMenuItem: FunctionComponent<ButtonProps> = ({\n  children,\n  style,\n  ...rest\n}) => {\n  const theme = useCustomTheme();\n  return (\n    <Button\n      disableRipple\n      style={{\n        textTransform: \"none\",\n        color: theme.custom.colors.fontColor,\n        fontSize: \"14px\",\n        padding: \"8px 16px\",\n        display: \"inline\",\n        ...style,\n      }}\n      {...rest}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>{children}</div>\n    </Button>\n  );\n};\n\nexport default {\n  Group: PopoverMenuItemGroup,\n  Item: PopoverMenuItem,\n  Root: PopoverMenu,\n};\n","import { List, ListItem, PushDetail } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\n\nexport function SettingsList({\n  style,\n  menuItems,\n  textStyle,\n  borderColor,\n  className,\n}: {\n  style?: React.CSSProperties;\n  textStyle?: React.CSSProperties;\n  borderColor?: string;\n  menuItems: {\n    [key: string]: {\n      onClick: () => void;\n      detail?: React.ReactNode;\n      style?: React.CSSProperties;\n      classes?: any;\n      button?: boolean;\n      icon?: any;\n      label?: string;\n      allowOnclickPropagation?: boolean;\n    };\n  };\n  className?: string;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <List\n      className={className}\n      style={{\n        border: `${theme.custom.colors.borderFull}`,\n        borderRadius: \"12px\",\n        marginTop: \"16px\",\n        ...style,\n      }}\n    >\n      {Object.entries(menuItems).map(([key, val]: any, i, { length }) => {\n        let label = val.label ?? key;\n        if (label === \"Solana\") {\n          label = \"Eclipse\";\n        }\n\n        return (\n          <ListItem\n            key={key}\n            id={key}\n            isFirst={i === 0}\n            isLast={i === length - 1}\n            onClick={() => val.onClick()}\n            style={{\n              height: \"44px\",\n              padding: \"10px\",\n              ...val.style,\n            }}\n            button={val.button === undefined ? true : val.button}\n            classes={val.classes}\n            detail={val.detail ?? <PushDetail />}\n            borderColor={borderColor}\n            allowOnclickPropagation={val.allowOnclickPropagation}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                alignItems: \"center\",\n              }}\n            >\n              {val.icon\n                ? val.icon({\n                    style: {\n                      color: theme.custom.colors.icon,\n                      height: \"24px\",\n                      width: \"24px\",\n                      marginRight: \"8px\",\n                    },\n                    fill: theme.custom.colors.icon,\n                  })\n                : null}\n              <Typography style={{ fontWeight: 500, ...textStyle }}>\n                {label}\n              </Typography>\n            </div>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import { toDisplayBalance } from \"@coral-xyz/common\";\nimport { ProxyImage } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Typography } from \"@mui/material\";\nimport type { BigNumber } from \"ethers\";\n\n//\n// Displays token amount header with logo.\n//\nexport const TokenAmountHeader: React.FC<{\n  style?: React.CSSProperties;\n  token: {\n    logo?: string;\n    ticker?: string;\n    decimals: number;\n  };\n  amount: BigNumber;\n  displayLogo?: boolean;\n}> = ({ style, token, amount, displayLogo = true }) => {\n  const theme = useCustomTheme();\n\n  const formattedAmount = toDisplayBalance(amount, token.decimals, false);\n  const maxChars = displayLogo ? 10 : 12;\n  const maybeTruncatedAmount =\n    formattedAmount.length > maxChars\n      ? formattedAmount.slice(0, maxChars) + \"...\"\n      : formattedAmount;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        ...style,\n      }}\n    >\n      {/* Dummy padding to center flex content */}\n      <div style={{ flex: 1 }} />\n      {displayLogo ? <div\n        style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            marginRight: \"8px\",\n          }}\n        >\n        <ProxyImage\n          src={token.logo}\n          style={{\n              width: \"32px\",\n              height: \"32px\",\n              borderRadius: \"16px\",\n            }}\n          removeOnError\n          />\n      </div> : null}\n      <Typography\n        style={{\n          color: theme.custom.colors.fontColor,\n          fontWeight: 500,\n          fontSize: \"30px\",\n          lineHeight: \"36px\",\n          textAlign: \"center\",\n          display: \"flex\",\n        }}\n      >\n        {maybeTruncatedAmount}\n        <span\n          style={{ marginLeft: \"8px\", color: theme.custom.colors.secondary }}\n        >\n          {token.ticker}\n        </span>\n      </Typography>\n      {/* Dummy padding to center flex content */}\n      <div style={{ flex: 1 }} />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { TextInput } from \"@coral-xyz/react-common\";\nimport type { BigNumber } from \"ethers\";\nimport { ethers } from \"ethers\";\n\nimport type { TextField } from \"./\";\n\nexport function TokenInputField({\n  decimals,\n  ...props\n}: {\n  decimals: number;\n} & React.ComponentProps<typeof TextField>) {\n  const [focused, setFocused] = useState(false);\n  const [inputValue, setInputValue] = useState<string | null>(null);\n\n  // Clear input value (fall back to value prop) if focus changes\n  useEffect(() => {\n    setInputValue(null);\n  }, [focused]);\n\n  // Truncate token input fields to the native decimals of the token to prevent\n  // floats\n  const handleTokenInput = (\n    amount: string,\n    decimals: number,\n    setValue: (amount: BigNumber | null) => void\n  ) => {\n    if (amount !== \"\") {\n      const decimalIndex = amount.indexOf(\".\");\n      // Restrict the input field to the same amount of decimals as the token\n      const truncatedAmount =\n        decimalIndex >= 0\n          ? amount.substring(0, decimalIndex) +\n            amount.substring(decimalIndex, decimalIndex + decimals + 1)\n          : amount;\n      setInputValue(truncatedAmount);\n      setValue(ethers.utils.parseUnits(truncatedAmount, decimals));\n    } else {\n      setInputValue(null);\n      setValue(null);\n    }\n  };\n\n  // Don't interfere with the input field value while it is being typed in,\n  // use local component state for the value if the input field is focused\n  let value;\n  if (focused && inputValue) {\n    value = inputValue;\n  } else if (props.value) {\n    value = ethers.utils.formatUnits(props.value, decimals);\n  } else {\n    value = \"\";\n  }\n\n  return (\n    <TextInput\n      {...props}\n      margin=\"none\"\n      value={value}\n      // Override default TextField setValue with function to truncate decimal inputs\n      setValue={(e: any) => {\n        handleTokenInput(\n          e.target.value.replace(\"-\", \"\"),\n          decimals,\n          props.setValue\n        );\n      }}\n      inputProps={{\n        ...props.inputProps,\n        onFocus: () => setFocused(true),\n        onBlur: () => setFocused(false),\n      }}\n    />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { FixedSizeList as WindowedList } from \"react-window\";\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport { TextInput } from \"@coral-xyz/react-common\";\nimport type { useBlockchainTokensSorted } from \"@coral-xyz/recoil\";\nimport {\n  blockchainBalancesSorted,\n  useAllWalletsDisplayed,\n  useBlockchainConnectionUrl,\n  useLoader,\n} from \"@coral-xyz/recoil\";\nimport { styles } from \"@coral-xyz/themes\";\nimport { Skeleton } from \"@mui/material\";\n\nimport {\n  BalancesTable,\n  BalancesTableCell,\n  BalancesTableContent,\n  BalancesTableHead,\n  BalancesTableRow,\n} from \"../Unlocked/Balances\";\n\nexport type Token = ReturnType<typeof useBlockchainTokensSorted>[number];\n\nconst useStyles = styles(() => ({\n  searchField: {\n    marginLeft: \"12px\",\n    marginRight: \"12px\",\n    marginTop: \"16px\",\n    marginBottom: \"16px\",\n    width: \"inherit\",\n    display: \"flex\",\n    \"& .MuiOutlinedInput-root\": {\n      \"& input\": {\n        paddingTop: 0,\n        paddingBottom: 0,\n      },\n    },\n  },\n  skeleton: {\n    background: \"rgba(0,0,0,0.15)\",\n  },\n}));\n\nexport function SearchableTokenTables({\n  onClickRow,\n  customFilter = () => true,\n}: {\n  onClickRow: (blockchain: Blockchain, token: Token) => void;\n  customFilter: (token: Token) => boolean;\n}) {\n  const classes = useStyles();\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  return (\n    <>\n      <TextInput\n        className={classes.searchField}\n        placeholder=\"Search\"\n        value={searchFilter}\n        setValue={(e) => setSearchFilter(e.target.value)}\n        inputProps={{\n          style: {\n            height: \"48px\",\n          },\n        }}\n      />\n      <TokenTables\n        searchFilter={searchFilter}\n        onClickRow={onClickRow}\n        customFilter={customFilter}\n      />\n    </>\n  );\n}\n\nexport function SearchableTokenTable({\n  onClickRow,\n  tokenAccounts,\n  customFilter = () => true,\n}: {\n  onClickRow: (blockchain: Blockchain, token: Token) => void;\n  tokenAccounts?: ReturnType<typeof useBlockchainTokensSorted>;\n  customFilter: (token: Token) => boolean;\n}) {\n  const classes = useStyles();\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  return (\n    <>\n      <TextInput\n        className={classes.searchField}\n        placeholder=\"Search\"\n        value={searchFilter}\n        setValue={(e) => setSearchFilter(e.target.value)}\n        inputProps={{\n          style: {\n            height: \"48px\",\n          },\n        }}\n      />\n      <TokenTables\n        onClickRow={onClickRow}\n        tokenAccounts={tokenAccounts}\n        searchFilter={searchFilter}\n        customFilter={customFilter}\n      />\n    </>\n  );\n}\n\nexport function TokenTables({\n  onClickRow,\n  tokenAccounts,\n  searchFilter = \"\",\n  customFilter = () => true,\n}: {\n  onClickRow: (blockchain: Blockchain, token: Token, publicKey: string) => void;\n  publicKey?: string;\n  searchFilter?: string;\n  tokenAccounts?: ReturnType<typeof useBlockchainTokensSorted>;\n  customFilter?: (token: Token) => boolean;\n}) {\n  const wallets = useAllWalletsDisplayed();\n  return (\n    <>\n      {wallets.map(\n        (wallet: {\n          blockchain: Blockchain;\n          publicKey: string;\n          type: string;\n          name: string;\n        }) => (\n          <WalletTokenTable\n            key={wallet.publicKey.toString()}\n            onClickRow={onClickRow}\n            searchFilter={searchFilter}\n            customFilter={customFilter}\n            wallet={wallet}\n            tokenAccounts={tokenAccounts}\n          />\n        )\n      )}\n    </>\n  );\n}\n\nexport function WalletTokenTable({\n  onClickRow,\n  tokenAccounts,\n  wallet,\n  searchFilter = \"\",\n  customFilter = () => true,\n}: {\n  onClickRow: (blockchain: Blockchain, token: Token, publicKey: string) => void;\n  wallet: { name: string; publicKey: string; blockchain: Blockchain };\n  tokenAccounts?: ReturnType<typeof useBlockchainTokensSorted>;\n  searchFilter?: string;\n  customFilter?: (token: Token) => boolean;\n}) {\n  const blockchain = wallet.blockchain;\n  const connectionUrl = useBlockchainConnectionUrl(blockchain);\n  const loader = useLoader(\n    blockchainBalancesSorted({\n      publicKey: wallet.publicKey.toString(),\n      blockchain,\n    }),\n    [],\n    [wallet.publicKey, connectionUrl]\n  );\n\n  const [_tokenAccounts, , isLoading] = tokenAccounts\n    ? [tokenAccounts, \"hasValue\"]\n    : loader;\n\n  const [search, setSearch] = useState(searchFilter);\n\n  const searchLower = search.toLowerCase();\n  const tokenAccountsFiltered = _tokenAccounts\n    .filter(\n      (t: any) =>\n        t.name &&\n        (t.name.toLowerCase().startsWith(searchLower) ||\n          t.ticker.toLowerCase().startsWith(searchLower))\n    )\n    .filter(customFilter);\n\n  useEffect(() => {\n    setSearch(searchFilter);\n  }, [searchFilter]);\n\n  const useVirtualization = tokenAccountsFiltered.length > 100;\n  // Note: if this fixed height changes in react-xnft-renderer it'll need to be changed here\n  const rowHeight = 68;\n  const headerHeight = 36;\n  // If using virtualization, restrict the table height to 6 rows with an internal scrollbar\n  const tableStyle = useVirtualization\n    ? {\n        height:\n          headerHeight +\n          Math.min(tokenAccountsFiltered.length, 6) * rowHeight +\n          \"px\",\n      }\n    : {};\n\n  return (\n    <BalancesTable style={tableStyle}>\n      <BalancesTableHead wallet={wallet} />\n      <BalancesTableContent\n        style={\n          useVirtualization ? { height: `calc(100% - ${headerHeight}px)` } : {}\n        }\n      >\n        {isLoading ? (\n          <SkeletonRows />\n        ) : useVirtualization ? (\n          <AutoSizer>\n            {({ height, width }: { height: number; width: number }) => {\n              return (\n                <WindowedList\n                  height={height}\n                  width={width}\n                  itemCount={tokenAccountsFiltered.length}\n                  itemSize={rowHeight}\n                  itemData={{\n                    tokenList: tokenAccountsFiltered,\n                    blockchain,\n                    onClickRow: (token: Token) =>\n                      onClickRow(\n                        blockchain,\n                        token,\n                        wallet.publicKey.toString()\n                      ),\n                  }}\n                  overscanCount={12}\n                >\n                  {WindowedTokenRowRenderer}\n                </WindowedList>\n              );\n            }}\n          </AutoSizer>\n        ) : (\n          <>\n            {tokenAccountsFiltered.map((token: any) => (\n              <TokenRow\n                key={token.address}\n                token={token}\n                onClick={(token) =>\n                  onClickRow(blockchain, token, wallet.publicKey.toString())\n                }\n              />\n            ))}\n          </>\n        )}\n      </BalancesTableContent>\n    </BalancesTable>\n  );\n}\n\nconst SkeletonRows = () => {\n  const classes = useStyles();\n  return (\n    <BalancesTableRow>\n      <div\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <Skeleton\n          variant=\"circular\"\n          width={40}\n          height={40}\n          className={classes.skeleton}\n        />\n        <div style={{ marginLeft: \"5px\", width: \"50%\" }}>\n          <Skeleton\n            width=\"50%\"\n            height={40}\n            className={classes.skeleton}\n            style={{ marginTop: \"-6px\" }}\n          />\n          <Skeleton\n            width=\"80%\"\n            height={20}\n            className={classes.skeleton}\n            style={{ marginTop: \"-6px\" }}\n          />\n        </div>\n      </div>\n    </BalancesTableRow>\n  );\n};\n\n//\n// Token row renderer if virtualization is used for the table.\n// Cuts down on rerenders.\n//\nconst WindowedTokenRowRenderer = ({\n  index,\n  data,\n  style,\n}: {\n  index: number;\n  data: any;\n  style: any;\n}) => {\n  const token = data.tokenList[index];\n  return (\n    <TokenRow\n      key={token.mint}\n      token={token}\n      onClick={() => data.onClickRow(token)}\n      style={style}\n    />\n  );\n};\n\n//\n// Displays an individual token row in the table\n//\nexport function TokenRow({\n  onClick,\n  token,\n  style,\n}: {\n  onClick: (token: Token) => void;\n  token: Token;\n  style?: any;\n}) {\n  let subtitle = token.ticker;\n  if (token.displayBalance) {\n    subtitle = `${token.displayBalance.toLocaleString()} ${subtitle}`;\n  }\n  return (\n    <BalancesTableRow onClick={() => onClick(token)} style={style}>\n      <BalancesTableCell\n        props={{\n          icon: token.logo,\n          title: token.name,\n          subtitle,\n          usdValue: token.usdBalance,\n          balanceChange: token.recentUsdBalanceChange,\n        }}\n      />\n    </BalancesTableRow>\n  );\n}\n","// TODO: remove the following line\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useRef, useState } from \"react\";\nimport {\n  PrimaryButton,\n  SecondaryButton,\n  SmallInput,\n} from \"@coral-xyz/react-common\";\nimport { useDeveloperMode, useEthereumFeeData } from \"@coral-xyz/recoil\";\nimport {\n  HOVER_OPACITY,\n  styles as makeStyles,\n  useCustomTheme,\n} from \"@coral-xyz/themes\";\nimport ArrowDropDown from \"@mui/icons-material/ArrowDropDown\";\nimport { Button, Skeleton, TextField, Typography } from \"@mui/material\";\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { ethers } from \"ethers\";\n\nimport { WithMiniDrawer } from \"./Layout/Drawer\";\nimport { SettingsList } from \"./Settings/List\";\nimport { CloseButton } from \"./ApproveTransactionDrawer\";\n\nconst useStyles = makeStyles((theme: any) => ({\n  chip: {\n    padding: \"4px 16px\",\n    textTransform: \"capitalize\",\n    borderRadius: \"16px\",\n  },\n  primaryChip: {\n    borderColor: theme.custom.colors.primaryButton,\n    backgroundColor: theme.custom.colors.primaryButton,\n    color: theme.custom.colors.primaryButtonTextColor,\n    \"&:hover\": {\n      opacity: HOVER_OPACITY,\n      background: `${theme.custom.colors.primaryButton} !important`,\n      backgroundColor: `${theme.custom.colors.primaryButton} !important,`,\n    },\n  },\n  secondaryChip: {\n    borderColor: theme.custom.colors.secondaryButton,\n    backgroundColor: theme.custom.colors.secondaryButton,\n    color: theme.custom.colors.secondaryButtonTextColor,\n    \"&:hover\": {\n      opacity: HOVER_OPACITY,\n      background: `${theme.custom.colors.secondaryButton} !important`,\n      backgroundColor: `${theme.custom.colors.secondaryButton} !important,`,\n    },\n  },\n  backgroundChip: {\n    borderColor: theme.custom.colors.background,\n    backgroundColor: theme.custom.colors.background,\n    color: theme.custom.colors.secondaryButtonTextColor,\n    \"&:hover\": {\n      opacity: HOVER_OPACITY,\n      background: `${theme.custom.colors.background} !important`,\n      backgroundColor: `${theme.custom.colors.background} !important,`,\n    },\n  },\n  listRoot: {\n    \"& .MuiTypography-root\": {\n      fontSize: \"14px\",\n    },\n  },\n  inputRoot: {\n    border: `${theme.custom.colors.borderFull}`,\n    background: theme.custom.colors.background,\n    color: theme.custom.colors.secondary,\n    borderRadius: \"8px\",\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: \"8px\",\n      \"& fieldset\": {\n        border: \"none\",\n      },\n    },\n    \"& .MuiInputBase-input\": {\n      color: theme.custom.colors.fontColor,\n      borderRadius: \"8px\",\n      fontSize: \"14px\",\n      fontWeight: 700,\n      paddingRight: \"8px\",\n    },\n    \"& .MuiInputAdornment-root\": {\n      color: theme.custom.colors.secondary,\n      fontWeight: 500,\n      minWidth: \"12px\",\n      fontSize: \"14px\",\n    },\n    \"&:hover\": {\n      backgroundColor: theme.custom.colors.primary,\n    },\n  },\n}));\n\ntype TransactionMode = \"normal\" | \"fast\" | \"degen\" | \"custom\";\n\nexport function TransactionData({\n  transactionData,\n  menuItems,\n  menuItemClasses,\n}: {\n  transactionData: any;\n  menuItems: any;\n  menuItemClasses?: any;\n}) {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const {\n    loading,\n    network,\n    networkFee,\n    networkFeeUsd,\n    transactionOverrides,\n    setTransactionOverrides,\n    simulationError,\n  } = transactionData;\n  const [ethSettingsDrawerOpen, setEthSettingsDrawerOpen] = useState(false);\n  const [mode, setMode] = useState<TransactionMode>(\"normal\");\n  const developerMode = useDeveloperMode();\n\n  // The default transaction data that appears on all transactions\n  const defaultMenuItems = {\n    Network: {\n      onClick: () => {},\n      detail: <Typography>{network}</Typography>,\n      button: false,\n      classes: menuItemClasses,\n    },\n    \"Network Fee\": {\n      onClick: () => {},\n      detail: loading ? (\n        <Skeleton width={150} />\n      ) : (\n        <Typography>\n          {networkFee} {network === \"Ethereum\" ? \"ETH\" : \"SOL\"}\n        </Typography>\n      ),\n      button: false,\n      classes: menuItemClasses,\n    },\n    ...(network === \"Ethereum\"\n      ? {\n          Speed: {\n            onClick: () => setEthSettingsDrawerOpen(true),\n            detail: (\n              <Button\n                disableRipple\n                disableElevation\n                className={`${classes.chip} ${classes.backgroundChip}`}\n                disabled={loading}\n              >\n                {mode} <ArrowDropDown />\n              </Button>\n            ),\n            button: false,\n            classes: menuItemClasses,\n          },\n        }\n      : {}),\n    ...(network === \"Eclipse\" && developerMode\n      ? {\n          \"Max Compute units\": {\n            onClick: () => {},\n            detail: (\n              <SmallInput\n                disabled={transactionData.solanaFeeConfig?.disabled}\n                placeholder=\"Compute units\"\n                value={\n                  transactionData.solanaFeeConfig?.config?.computeUnits.toString() ||\n                  0\n                }\n                onChange={(e: any) => {\n                  const computeUnits = parseInt(e.target.value || \"0\");\n                  if (\n                    computeUnits < 0 ||\n                    computeUnits > 1200000 ||\n                    isNaN(parseInt(e.target.value))\n                  ) {\n                    return;\n                  }\n                  const updatedValue = {\n                    ...(transactionData.solanaFeeConfig?.config || {}),\n                    computeUnits: computeUnits,\n                  };\n                  transactionData.setSolanaFeeConfig((x: any) => ({\n                    config: updatedValue,\n                    disabled: x.disabled,\n                  }));\n                }}\n              />\n            ),\n            button: false,\n            classes: menuItemClasses,\n          },\n          \"Priority fee (micro lamports)\": {\n            onClick: () => {},\n            detail: (\n              <SmallInput\n                disabled={transactionData.solanaFeeConfig?.disabled}\n                placeholder=\"Priority fee\"\n                value={\n                  transactionData.solanaFeeConfig.config?.priorityFee?.toString() ||\n                  0\n                }\n                onChange={(e: any) => {\n                  const priorityFee = parseInt(e.target.value || \"0\");\n                  if (priorityFee < 0 || isNaN(parseInt(e.target.value))) {\n                    return;\n                  }\n                  const updatedValue = {\n                    ...(transactionData.solanaFeeConfig?.config || {}),\n                    priorityFee: BigInt(priorityFee),\n                  };\n                  transactionData.setSolanaFeeConfig((x: any) => ({\n                    disabled: x.disabled,\n                    config: updatedValue,\n                  }));\n                }}\n              />\n            ),\n            button: false,\n            classes: menuItemClasses,\n          },\n          \"Max Priority fee\": {\n            onClick: () => {},\n            detail: (\n              <Typography>\n                {transactionData.solanaFeeConfig?.config?.computeUnits\n                  ? transactionData.solanaFeeConfig?.config?.computeUnits *\n                    (Number(\n                      transactionData.solanaFeeConfig?.config?.priorityFee\n                    ) /\n                      LAMPORTS_PER_SOL /\n                      1000000 || 0)\n                  : 0}{\" \"}\n                SOL\n              </Typography>\n            ),\n            button: false,\n            classes: menuItemClasses,\n          },\n        }\n      : {}),\n  };\n\n  return (\n    <>\n      <SettingsList\n        className={classes.listRoot}\n        menuItems={{ ...menuItems, ...defaultMenuItems }}\n        style={{\n          margin: 0,\n          overflowY: \"auto\",\n          maxHeight: \"40vh\",\n        }}\n        textStyle={{\n          color: theme.custom.colors.secondary,\n        }}\n      />\n      {simulationError ? (\n        <Typography\n          style={{\n            color: theme.custom.colors.negative,\n            marginTop: \"8px\",\n            textAlign: \"center\",\n            fontSize: \"14px\",\n          }}\n        >\n          This transaction is unlikely to succeed.\n        </Typography>\n      ) : null}\n      {network === \"Ethereum\" && !loading ? (\n        <EthereumSettingsDrawer\n          mode={mode}\n          setMode={setMode}\n          transactionOverrides={transactionOverrides}\n          setTransactionOverrides={setTransactionOverrides}\n          networkFeeUsd={networkFeeUsd}\n          openDrawer={ethSettingsDrawerOpen}\n          setOpenDrawer={setEthSettingsDrawerOpen}\n        />\n      ) : null}\n    </>\n  );\n}\n\nexport function EthereumSettingsDrawer({\n  mode,\n  setMode,\n  transactionOverrides,\n  setTransactionOverrides,\n  networkFeeUsd,\n  openDrawer,\n  setOpenDrawer,\n}: any) {\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const feeData = useEthereumFeeData();\n  const [maxFeePerGas, setMaxFeePerGas] = useState(\n    ethers.utils.formatUnits(transactionOverrides.maxFeePerGas, 9)\n  );\n  const [maxPriorityFeePerGas, setMaxPriorityFeePerGas] = useState(\n    ethers.utils.formatUnits(transactionOverrides.maxPriorityFeePerGas, 9)\n  );\n  const [gasLimit, setGasLimit] = useState(transactionOverrides.gasLimit);\n  const [nonce, setNonce] = useState(transactionOverrides.nonce);\n  const [editingGas, setEditingGas] = useState(false);\n  const [editingNonce, setEditingNonce] = useState(false);\n  // Dont update transaction overrides on first render as they are already set\n  // from the compient props\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n      return;\n    }\n    if (mode === \"normal\") {\n      setTransactionOverrides({\n        ...transactionOverrides,\n        maxFeePerGas: feeData.maxFeePerGas,\n        maxPriorityFeePerGas: feeData.maxPriorityFeePerGas,\n        nonce,\n      });\n    } else if (mode === \"fast\") {\n      setTransactionOverrides({\n        ...transactionOverrides,\n        // Add 10% for fast mode\n        maxFeePerGas: feeData.maxFeePerGas.add(\n          feeData.maxFeePerGas.mul(10).div(100)\n        ),\n        maxPriorityFeePerGas: feeData.maxPriorityFeePerGas.add(\n          feeData.maxPriorityFeePerGas.mul(10).div(100)\n        ),\n        nonce,\n      });\n    } else if (mode === \"degen\") {\n      setTransactionOverrides({\n        ...transactionOverrides,\n        // Add 50% for degen mode\n        maxFeePerGas: feeData.maxFeePerGas.add(\n          feeData.maxFeePerGas.mul(50).div(100)\n        ),\n        maxPriorityFeePerGas: feeData.maxPriorityFeePerGas.add(\n          feeData.maxPriorityFeePerGas.mul(50).div(100)\n        ),\n        nonce,\n      });\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    setEditingGas(mode === \"custom\");\n  }, [mode]);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleEsc);\n    return () => {\n      document.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, [editingGas, editingNonce]);\n\n  // Escape handler that closes edit modes if they are active, otherwise closes\n  // the entire drawer.\n  const handleEsc = (event: KeyboardEvent) => {\n    if (event.key === \"Escape\") {\n      event.preventDefault();\n      if (editingGas) {\n        setEditingGas(false);\n      } else if (editingNonce) {\n        setEditingNonce(false);\n      } else {\n        setOpenDrawer(false);\n      }\n    }\n  };\n\n  const handleSave = () => {\n    setTransactionOverrides({\n      ...transactionOverrides,\n      maxFeePerGas: ethers.utils.parseUnits(maxFeePerGas, 9),\n      maxPriorityFeePerGas: ethers.utils.parseUnits(maxPriorityFeePerGas, 9),\n      gasLimit,\n      nonce,\n    });\n    setEditingNonce(false);\n    setEditingGas(false);\n  };\n\n  const menuItemBase = {\n    onClick: () => {},\n    button: false,\n  };\n\n  const nonceEditOnClick = !editingGas;\n  const gasEditOnClick = mode === \"custom\" && !editingNonce && !editingGas;\n\n  const menuItems = {\n    \"Max base fee\": {\n      detail: editingGas ? (\n        <TextField\n          className={classes.inputRoot}\n          variant=\"outlined\"\n          margin=\"dense\"\n          size=\"small\"\n          InputLabelProps={{\n            shrink: false,\n            style: {\n              backgroundColor: theme.custom.colors.nav,\n            },\n          }}\n          value={maxFeePerGas}\n          onChange={(e) => setMaxFeePerGas(e.target.value)}\n        />\n      ) : (\n        <ValueWithUnit\n          value={ethers.utils.formatUnits(transactionOverrides.maxFeePerGas, 9)}\n          unit=\"Gwei\"\n          containerProps={{\n            style: { cursor: gasEditOnClick ? \"pointer\" : \"inherit\" },\n            onClick: () => {\n              if (gasEditOnClick) setEditingGas(true);\n            },\n          }}\n        />\n      ),\n      ...menuItemBase,\n    },\n    \"Priority fee\": {\n      detail: editingGas ? (\n        <TextField\n          className={classes.inputRoot}\n          variant=\"outlined\"\n          margin=\"dense\"\n          size=\"small\"\n          InputLabelProps={{\n            shrink: false,\n            style: {\n              backgroundColor: theme.custom.colors.nav,\n            },\n          }}\n          value={maxPriorityFeePerGas}\n          onChange={(e) => setMaxPriorityFeePerGas(e.target.value)}\n        />\n      ) : (\n        <ValueWithUnit\n          value={ethers.utils.formatUnits(\n            transactionOverrides.maxPriorityFeePerGas,\n            9\n          )}\n          unit=\"Gwei\"\n          containerProps={{\n            style: { cursor: gasEditOnClick ? \"pointer\" : \"inherit\" },\n            onClick: () => {\n              if (gasEditOnClick) setEditingGas(true);\n            },\n          }}\n        />\n      ),\n      ...menuItemBase,\n    },\n    \"Gas limit\": {\n      detail: editingGas ? (\n        <TextField\n          className={classes.inputRoot}\n          variant=\"outlined\"\n          margin=\"dense\"\n          size=\"small\"\n          InputLabelProps={{\n            shrink: false,\n            style: {\n              backgroundColor: theme.custom.colors.nav,\n            },\n          }}\n          value={gasLimit}\n          onChange={(e) => setGasLimit(e.target.value)}\n        />\n      ) : (\n        <Typography\n          style={{ cursor: gasEditOnClick ? \"pointer\" : \"inherit\" }}\n          onClick={() => {\n            if (gasEditOnClick) setEditingGas(true);\n          }}\n        >\n          {transactionOverrides.gasLimit.toString()}\n        </Typography>\n      ),\n      ...menuItemBase,\n    },\n    Nonce: {\n      detail: editingNonce ? (\n        <TextField\n          className={classes.inputRoot}\n          variant=\"outlined\"\n          margin=\"dense\"\n          size=\"small\"\n          InputLabelProps={{\n            shrink: false,\n            style: {\n              backgroundColor: theme.custom.colors.nav,\n            },\n          }}\n          value={nonce}\n          type=\"number\"\n          onChange={(e) => setNonce(e.target.value)}\n        />\n      ) : (\n        <Typography\n          style={{ cursor: nonceEditOnClick ? \"pointer\" : \"inherit\" }}\n          onClick={() => {\n            if (nonceEditOnClick) setEditingNonce(true);\n          }}\n        >\n          {transactionOverrides.nonce}\n        </Typography>\n      ),\n      ...menuItemBase,\n    },\n    \"Max transaction fee\": {\n      detail: <Typography>${networkFeeUsd}</Typography>,\n      ...menuItemBase,\n    },\n  };\n  return (\n    <WithMiniDrawer\n      openDrawer={openDrawer}\n      setOpenDrawer={setOpenDrawer}\n      paperProps={{\n        style: {\n          height: \"100%\",\n        },\n      }}\n      modalProps={{\n        style: {\n          background: \"#18181b80\",\n        },\n        disableEscapeKeyDown: true,\n      }}\n    >\n      <div\n        onClick={() => setOpenDrawer(false)}\n        style={{\n          height: \"50px\",\n          zIndex: 1,\n          backgroundColor: \"transparent\",\n        }}\n      >\n        <CloseButton\n          onClick={() => setOpenDrawer(false)}\n          style={{\n            marginTop: \"28px\",\n            marginLeft: \"24px\",\n            zIndex: 1,\n          }}\n        />\n      </div>\n      <div\n        style={{\n          borderTopLeftRadius: \"12px\",\n          borderTopRightRadius: \"12px\",\n          borderTop: \"1pt solid \" + theme.custom.colors.borderColor,\n          height: \"100%\",\n          background: theme.custom.colors.background,\n        }}\n      >\n        <div\n          style={{\n            height: \"100%\",\n            borderTopLeftRadius: \"12px\",\n            borderTopRightRadius: \"12px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              flexDirection: \"column\",\n              paddingBottom: \"24px\",\n              height: \"100%\",\n            }}\n          >\n            <div>\n              <Typography\n                style={{\n                  color: theme.custom.colors.fontColor,\n                  fontWeight: 500,\n                  fontSize: \"18px\",\n                  lineHeight: \"24px\",\n                  textAlign: \"center\",\n                  paddingTop: \"24px\",\n                }}\n              >\n                Advanced Settings\n              </Typography>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  margin: \"24px 16px 0 16px\",\n                }}\n              >\n                {[\"normal\", \"fast\", \"degen\", \"custom\"].map((m) => (\n                  <ModeChip\n                    key={m}\n                    mode={m as TransactionMode}\n                    currentMode={mode}\n                    setMode={setMode}\n                    disabled={editingNonce}\n                  />\n                ))}\n              </div>\n              <div style={{ margin: \"24px 16px\" }}>\n                <SettingsList\n                  className={classes.listRoot}\n                  menuItems={menuItems}\n                  style={{\n                    margin: 0,\n                  }}\n                  textStyle={{\n                    color: theme.custom.colors.secondary,\n                  }}\n                />\n              </div>\n            </div>\n            <div style={{ margin: \"0 16px\" }}>\n              {(mode === \"custom\" && editingGas) || editingNonce ? (\n                <PrimaryButton\n                  style={{ marginBottom: \"12px\" }}\n                  label=\"Save\"\n                  onClick={handleSave}\n                />\n              ) : null}\n              <SecondaryButton\n                label=\"Close\"\n                onClick={() => setOpenDrawer(false)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </WithMiniDrawer>\n  );\n}\n\n// Note we don't use the MUI Button component because it currently doesn't\n// have any way to disable the ripple.\nfunction ModeChip({\n  mode,\n  currentMode,\n  setMode,\n  disabled,\n}: {\n  mode: TransactionMode;\n  currentMode: TransactionMode;\n  setMode: (mode: TransactionMode) => void;\n  disabled?: boolean;\n}) {\n  const classes = useStyles();\n  return (\n    <Button\n      disableRipple\n      disableElevation\n      onClick={() => setMode(mode)}\n      className={`${classes.chip} ${\n        mode === currentMode && !disabled\n          ? classes.primaryChip\n          : classes.secondaryChip\n      }`}\n      size=\"small\"\n      disabled={disabled}\n    >\n      {mode}\n    </Button>\n  );\n}\n\nexport function ValueWithUnit({\n  value,\n  unit,\n  containerProps,\n}: {\n  value: string;\n  unit: string;\n  containerProps?: any;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      {...containerProps}\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        width: \"50%\",\n        ...(containerProps.style ? containerProps.style : {}),\n      }}\n    >\n      <Typography>{value}</Typography>\n      <Typography style={{ color: theme.custom.colors.secondary }}>\n        {unit}\n      </Typography>\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-no-useless-fragment */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Blockchain,\n  UI_RPC_METHOD_KEYRING_ACTIVE_WALLET_UPDATE,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport {\n  HardwareIcon,\n  List,\n  ListItem,\n  MnemonicIcon,\n  SecretKeyIcon,\n} from \"@coral-xyz/react-common\";\nimport {\n  getBlockchainLogo,\n  useActiveWallet,\n  useAllWallets,\n  useBackgroundClient,\n  useDehydratedWallets,\n  usePrimaryWallets,\n} from \"@coral-xyz/recoil\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Add, ExpandMore, MoreHoriz } from \"@mui/icons-material\";\nimport ContentCopyIcon from \"@mui/icons-material/ContentCopy\";\nimport InfoIcon from \"@mui/icons-material/Info\";\nimport { Box, Button, Grid, Tooltip, Typography } from \"@mui/material\";\nimport type { SxProps, Theme } from \"@mui/material/styles\";\n\nimport {\n  EthereumIconOnboarding as EthereumIcon,\n  SolanaIconOnboarding as SolanaIcon,\n} from \"../common/Icon\";\nimport { ActionCard } from \"../common/Layout/ActionCard\";\nimport { useDrawerContext, WithMiniDrawer } from \"../common/Layout/Drawer\";\nimport {\n  NavStackEphemeral,\n  NavStackScreen,\n  useNavigation,\n} from \"../common/Layout/NavStack\";\nimport {\n  AddConnectPreview,\n  AddConnectWalletMenu,\n} from \"../Unlocked/Settings/AddConnectWallet\";\nimport {\n  CreateMnemonic,\n  CreateOrImportMnemonic,\n} from \"../Unlocked/Settings/AddConnectWallet/CreateMnemonic\";\nimport { ImportMenu } from \"../Unlocked/Settings/AddConnectWallet/ImportMenu\";\nimport {\n  ImportMnemonic,\n  ImportMnemonicAutomatic,\n} from \"../Unlocked/Settings/AddConnectWallet/ImportMnemonic\";\nimport { ImportSecretKey } from \"../Unlocked/Settings/AddConnectWallet/ImportSecretKey\";\nimport { RemoveWallet } from \"../Unlocked/Settings/YourAccount/EditWallets/RemoveWallet\";\nimport { RenameWallet } from \"../Unlocked/Settings/YourAccount/EditWallets/RenameWallet\";\nimport { WalletDetail } from \"../Unlocked/Settings/YourAccount/EditWallets/WalletDetail\";\nimport {\n  ShowPrivateKey,\n  ShowPrivateKeyWarning,\n} from \"../Unlocked/Settings/YourAccount/ShowPrivateKey\";\n\nimport { Scrollbar } from \"./Layout/Scrollbar\";\nimport { WithCopyTooltip } from \"./WithCopyTooltip\";\n\nconst useStyles = styles((theme) => ({\n  addressButton: {\n    padding: 0,\n    color: theme.custom.colors.secondary,\n    textTransform: \"none\",\n    fontWeight: 500,\n    lineHeight: \"24px\",\n    fontSize: \"14px\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n      \"& svg\": {\n        visibility: \"visible\",\n      },\n    },\n  },\n}));\n\nexport function WalletDrawerButton({\n  wallet,\n  style,\n}: {\n  wallet: { name: string; publicKey: string };\n  style?: React.CSSProperties;\n}) {\n  const { setOpen } = useWalletDrawerContext();\n  return (\n    <WalletButton\n      wallet={wallet}\n      onClick={(e: any) => {\n        e.stopPropagation();\n        setOpen(true);\n      }}\n      style={style}\n    />\n  );\n}\n\nfunction WalletButton({\n  wallet,\n  onClick,\n  style,\n}: {\n  wallet: { name: string; publicKey: string };\n  onClick: (e: any) => void;\n  style?: React.CSSProperties;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n\n  const onCopy = async () => {\n    setTooltipOpen(true);\n    setTimeout(() => setTooltipOpen(false), 1000);\n    await navigator.clipboard.writeText(wallet.publicKey.toString());\n  };\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginLeft: \"8px\",\n        ...style,\n      }}\n    >\n      <Button disableRipple className={classes.addressButton} onClick={onClick}>\n        {wallet.name}\n        <ExpandMore\n          style={{\n            width: \"18px\",\n            color: theme.custom.colors.icon,\n          }}\n        />\n      </Button>\n      <WithCopyTooltip tooltipOpen={tooltipOpen}>\n        <Button\n          disableRipple\n          style={{\n            display: \"flex\",\n            padding: 0,\n            minWidth: \"16px\",\n          }}\n          className={classes.addressButton}\n          onClick={async (e) => {\n            e.stopPropagation();\n            await onCopy();\n          }}\n        >\n          <ContentCopyIcon\n            style={{\n              width: \"16px\",\n            }}\n          />\n        </Button>\n      </WithCopyTooltip>\n    </div>\n  );\n}\n\nexport function WalletDrawerNavStack({\n  openDrawer,\n  setOpenDrawer,\n  filter,\n}: {\n  openDrawer: boolean;\n  setOpenDrawer: (b: boolean) => void;\n  filter?: (w: {\n    blockchain: Blockchain;\n    publicKey: string;\n    name: string;\n  }) => boolean;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <WithMiniDrawer\n      openDrawer={openDrawer}\n      setOpenDrawer={setOpenDrawer}\n      paperProps={{\n        sx: {\n          height: \"90%\",\n          background: theme.custom.colors.backgroundBackdrop,\n        },\n      }}\n      backdropProps={{\n        style: {\n          opacity: 0.8,\n          background: \"#18181b\",\n        },\n      }}\n    >\n      <div\n        style={{\n          height: \"100%\",\n          background: theme.custom.colors.backgroundBackdrop,\n        }}\n      >\n        <Scrollbar>\n          <WalletNavStack filter={filter} />\n        </Scrollbar>\n      </div>\n    </WithMiniDrawer>\n  );\n}\n\nfunction WalletNavStack({\n  filter,\n}: {\n  filter?: (w: {\n    blockchain: Blockchain;\n    publicKey: string;\n    name: string;\n  }) => boolean;\n}) {\n  return (\n    <NavStackEphemeral\n      initialRoute={{ name: \"root\" }}\n      options={() => ({ title: \"\" })}\n    >\n      <NavStackScreen\n        name=\"root\"\n        component={(props: any) => (\n          <AllWalletsList filter={filter} {...props} />\n        )}\n      />\n      <NavStackScreen\n        name=\"add-connect-wallet\"\n        component={(props: any) => <AddConnectWalletMenu {...props} />}\n      />\n      <NavStackScreen\n        name=\"edit-wallets-wallet-detail\"\n        component={(props: any) => <WalletDetail {...props} />}\n      />\n      <NavStackScreen\n        name=\"edit-wallets-remove\"\n        component={(props: any) => <RemoveWallet {...props} />}\n      />\n      <NavStackScreen\n        name=\"edit-wallets-rename\"\n        component={(props: any) => <RenameWallet {...props} />}\n      />\n      <NavStackScreen\n        name=\"edit-wallets-add-connect-preview\"\n        component={(props: any) => <AddConnectPreview {...props} />}\n      />\n      <NavStackScreen\n        name=\"edit-wallets-blockchain-selector\"\n        component={(props: any) => <WalletListBlockchainSelector {...props} />}\n      />\n      <NavStackScreen\n        name=\"create-or-import-mnemonic\"\n        component={(props: any) => <CreateOrImportMnemonic {...props} />}\n      />\n      <NavStackScreen\n        name=\"set-and-sync-mnemonic\"\n        component={(props: any) => <ImportMnemonicAutomatic {...props} />}\n      />\n      <NavStackScreen\n        name=\"import-wallet\"\n        component={(props: any) => <ImportMenu {...props} />}\n      />\n      <NavStackScreen\n        name=\"create-mnemonic\"\n        component={(props: any) => <CreateMnemonic {...props} />}\n      />\n\n      <NavStackScreen\n        name=\"import-from-mnemonic\"\n        component={(props: any) => <ImportMnemonic {...props} />}\n      />\n      <NavStackScreen\n        name=\"import-from-secret-key\"\n        component={(props: any) => <ImportSecretKey {...props} />}\n      />\n      <NavStackScreen\n        name=\"show-private-key-warning\"\n        component={(props: any) => <ShowPrivateKeyWarning {...props} />}\n      />\n      <NavStackScreen\n        name=\"show-private-key\"\n        component={(props: any) => <ShowPrivateKey {...props} />}\n      />\n    </NavStackEphemeral>\n  );\n}\n\nexport function AllWalletsList({ filter }: { filter?: (w: any) => boolean }) {\n  const nav = useNavigation();\n  const activeWallet = useActiveWallet();\n  const wallets = useAllWallets().filter(filter ? filter : () => true);\n  const activeWallets = wallets.filter((w) => !w.isCold);\n  const coldWallets = wallets.filter((w) => w.isCold);\n\n  // Dehydrated public keys are keys that exist on the server but cannot be\n  // used on the client as we don't have signing data, e.g. mnemonic, private\n  // key or ledger derivation path\n  const dehydratedWallets = useDehydratedWallets().map((w: any) => ({\n    ...w,\n    name: \"\", // TODO server side does not sync wallet names\n    type: \"dehydrated\",\n  }));\n\n  useEffect(() => {\n    nav.setOptions({\n      headerTitle: \"Wallets\",\n      headerRight: <WalletSettingsButton />,\n    });\n    return () => {\n      nav.setOptions({ headerRight: null });\n    };\n  }, []);\n\n  return (\n    <_WalletList\n      activeWallet={activeWallet}\n      activeWallets={activeWallets.concat(dehydratedWallets)}\n      coldWallets={coldWallets}\n    />\n  );\n}\n\nfunction WalletSettingsButton() {\n  const theme = useCustomTheme();\n  const { push } = useNavigation();\n  return (\n    <Button\n      onClick={() => {\n        push(\"edit-wallets-add-connect-preview\");\n      }}\n      disableElevation\n      disableRipple\n      style={{\n        minWidth: \"24px\",\n        width: \"24px\",\n        height: \"24px\",\n      }}\n    >\n      <Add\n        style={{\n          color: theme.custom.colors.icon,\n        }}\n      />\n    </Button>\n  );\n}\n\nexport function WalletListBlockchainSelector() {\n  const nav = useNavigation();\n  useEffect(() => {\n    nav.setOptions({ headerTitle: \"Select a network\" });\n  }, [nav]);\n\n  const onClick = (blockchain: Blockchain) => {\n    nav.push(\"add-connect-wallet\", {\n      blockchain,\n    });\n  };\n\n  return (\n    <Box style={{ padding: \"0 16px 16px\", marginTop: 12 }}>\n      <Grid container spacing={1.5}>\n        <Grid item xs={6}>\n          <ActionCard\n            icon={<EthereumIcon />}\n            text=\"Ethereum\"\n            onClick={() => onClick(Blockchain.ETHEREUM)}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <ActionCard\n            icon={<SolanaIcon />}\n            text=\"Eclipse\"\n            onClick={() => onClick(Blockchain.SOLANA)}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nfunction _WalletList({\n  activeWallet,\n  activeWallets,\n  coldWallets,\n}: {\n  activeWallet: any;\n  activeWallets: any;\n  coldWallets: any;\n}) {\n  const { close } = useDrawerContext();\n  const background = useBackgroundClient();\n  const theme = useCustomTheme();\n\n  const onChange = async (w: {\n    publicKey: string;\n    blockchain: string;\n    name: string;\n    type: string;\n  }) => {\n    await background.request({\n      method: UI_RPC_METHOD_KEYRING_ACTIVE_WALLET_UPDATE,\n      params: [w.publicKey.toString(), w.blockchain],\n    });\n  };\n\n  return (\n    <div\n      style={{\n        paddingTop: 0,\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          padding: \"16px\",\n          paddingTop: \"0px\",\n          flex: 1,\n        }}\n      >\n        {activeWallets.length === 0 ? (\n          <div\n            style={{\n              backgroundColor: theme.custom.colors.nav,\n              padding: \"16px\",\n              borderRadius: \"10px\",\n            }}\n          >\n            <Typography\n              style={{\n                color: theme.custom.colors.icon,\n                textAlign: \"center\",\n                fontWeight: 500,\n              }}\n            >\n              No active wallets found\n            </Typography>\n          </div>\n        ) : (\n          <WalletList\n            wallets={activeWallets}\n            clickWallet={async (wallet) => {\n              if (wallet.type !== \"dehydrated\") {\n                await onChange(wallet);\n                close();\n              }\n            }}\n            style={{\n              borderRadius: \"10px\",\n              overflow: \"hidden\",\n              marginLeft: 0,\n              marginRight: 0,\n            }}\n            selectedWalletPublicKey={activeWallet.publicKey}\n          />\n        )}\n      </div>\n      {coldWallets.length > 0 ? (\n        <div\n          style={{\n            background: theme.custom.colorsInverted.background,\n            padding: \"16px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <div\n              style={{\n                marginBottom: \"12px\",\n                display: \"flex\",\n              }}\n            >\n              <Typography\n                style={{\n                  fontWeight: 500,\n                  color: theme.custom.colorsInverted.fontColor,\n                  fontSize: \"14px\",\n                  lineHeight: \"20px\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                }}\n              >\n                Disabled app signing\n              </Typography>\n              <Tooltip\n                placement=\"bottom\"\n                arrow\n                title={\"These wallets can't sign for apps.\"}\n                componentsProps={{\n                  tooltip: {\n                    sx: {\n                      width: \"250px\",\n                      fontSize: \"14px\",\n                      bgcolor: theme.custom.colorsInverted.copyTooltipColor,\n                      color: theme.custom.colorsInverted.copyTooltipTextColor,\n                      \"& .MuiTooltip-arrow\": {\n                        color: theme.custom.colorsInverted.copyTooltipColor,\n                      },\n                    },\n                  },\n                }}\n              >\n                <InfoIcon\n                  style={{\n                    width: \"16px\",\n                    marginLeft: \"5px\",\n                    color: theme.custom.colorsInverted.secondary,\n                  }}\n                />\n              </Tooltip>\n            </div>\n          </div>\n          <WalletList\n            inverted\n            wallets={coldWallets}\n            clickWallet={async (wallet) => {\n              if (wallet.type !== \"dehydrated\") {\n                await onChange(wallet);\n                close();\n              }\n            }}\n            style={{\n              borderRadius: \"10px\",\n              overflow: \"hidden\",\n              marginLeft: 0,\n              marginRight: 0,\n            }}\n            selectedWalletPublicKey={activeWallet.publicKey}\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport function WalletList({\n  wallets,\n  clickWallet,\n  style,\n  selectedWalletPublicKey,\n  inverted,\n}: {\n  wallets: Array<{\n    name: string;\n    publicKey: string;\n    type: string;\n    blockchain: Blockchain;\n    isCold?: boolean;\n  }>;\n  clickWallet: (w: {\n    name: string;\n    publicKey: string;\n    type: string;\n    blockchain: Blockchain;\n  }) => void;\n  style: React.CSSProperties;\n  selectedWalletPublicKey?: string;\n  inverted?: boolean;\n}) {\n  return (\n    <List style={style} inverted={inverted}>\n      {wallets.map(\n        (\n          wallet: {\n            name: string;\n            publicKey: string;\n            type: string;\n            blockchain: Blockchain;\n            isCold?: boolean;\n          },\n          idx: number\n        ) => {\n          const isFirst = idx === 0;\n          const isLast = idx === wallets.length - 1;\n          // TODO: isSelected styling.\n          const isSelected =\n            false &&\n            selectedWalletPublicKey !== undefined &&\n            selectedWalletPublicKey === wallet.publicKey.toString();\n          return (\n            <WalletListItem\n              inverted={inverted}\n              key={idx}\n              wallet={wallet}\n              isSelected={isSelected}\n              isFirst={isFirst}\n              isLast={isLast}\n              onClick={clickWallet}\n            />\n          );\n        }\n      )}\n    </List>\n  );\n}\n\nexport function WalletListItem({\n  wallet,\n  isSelected,\n  isFirst,\n  isLast,\n  onClick,\n  inverted,\n}: {\n  wallet: {\n    name: string;\n    publicKey: string;\n    type: string;\n    blockchain: Blockchain;\n    isCold?: boolean;\n  };\n  isSelected: boolean;\n  isFirst: boolean;\n  isLast: boolean;\n  onClick: (wallet: {\n    name: string;\n    publicKey: string;\n    type: string;\n    blockchain: Blockchain;\n  }) => void;\n  inverted?: boolean;\n}) {\n  const primaryWallets = usePrimaryWallets();\n  const isPrimary = primaryWallets.find((x) => x.publicKey === wallet.publicKey)\n    ? true\n    : false;\n  const theme = useCustomTheme();\n  const nav = useNavigation();\n  const { publicKey, name, blockchain, type } = wallet;\n  return (\n    <ListItem\n      inverted={inverted}\n      key={publicKey.toString()}\n      onClick={() => onClick(wallet)}\n      isFirst={isFirst}\n      isLast={isLast}\n      disableBottomBorder\n      style={{\n        padding: \"12px\",\n        height: \"72px\",\n        marginBottom: isLast ? 0 : \"8px\",\n        borderRadius: \"10px\",\n        border: isSelected\n          ? `solid 2px ${\n              inverted\n                ? theme.custom.colorsInverted.secondary\n                : theme.custom.colors.secondary\n            }`\n          : type === \"dehydrated\"\n          ? `solid 2px ${theme.custom.colors.borderRedMed}`\n          : isPrimary\n          ? `solid 2px linear-gradient(129.99deg, #3EECB8 0%, #A372FE 50%, #FE7D4A 100%), linear-gradient(0deg, #FFFFFF, #FFFFFF)`\n          : \"none\",\n      }}\n      button={type !== \"dehydrated\"}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          width: \"100%\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              width: \"32px\",\n              height: \"100%\",\n              marginRight: \"8px\",\n            }}\n          >\n            <NetworkIcon\n              blockchain={blockchain}\n              style={{\n                maxWidth: \"19px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n              marginRight: \"4px\",\n            }}\n          >\n            <StackedWalletAddress\n              name={name}\n              publicKey={publicKey}\n              type={type}\n              isSelected={isSelected}\n              inverted={inverted}\n              isPrimary={isPrimary}\n            />\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n          }}\n        >\n          <div\n            style={{\n              marginRight: \"4px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            {type === \"dehydrated\" ? (\n              <RecoverButton\n                inverted={inverted}\n                onClick={() => {\n                  nav.push(\"add-connect-wallet\", {\n                    blockchain: wallet.blockchain,\n                    publicKey: wallet.publicKey,\n                    isRecovery: true,\n                  });\n                }}\n              />\n            ) : (\n              <CopyButton\n                inverted={inverted}\n                onClick={async () => {\n                  await navigator.clipboard.writeText(publicKey);\n                }}\n              />\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            <EditWalletsButton\n              inverted={inverted}\n              onClick={() => {\n                nav.push(\"edit-wallets-wallet-detail\", {\n                  ...wallet,\n                });\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n}\n\nfunction WalletListButtonBase({\n  onClick,\n  inverted,\n  sx,\n  children,\n}: {\n  onClick: (e: any) => void;\n  inverted?: boolean;\n  sx?: SxProps<Theme>;\n  children: React.ReactElement;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <Button\n      disableElevation\n      disableRipple\n      variant=\"contained\"\n      sx={{\n        padding: \"4px 12px\",\n        textTransform: \"none\",\n        color: inverted\n          ? theme.custom.colorsInverted.fontColor\n          : theme.custom.colors.fontColor,\n        backgroundColor: inverted\n          ? theme.custom.colorsInverted.bg2\n          : theme.custom.colors.bg2,\n        \"&:hover\": {\n          backgroundColor: inverted\n            ? `${theme.custom.colorsInverted.walletCopyButtonHover} !important`\n            : `${theme.custom.colors.walletCopyButtonHover} !important`,\n        },\n        ...sx,\n      }}\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n}\n\nfunction CopyButton({\n  onClick,\n  inverted,\n}: {\n  onClick: () => void;\n  inverted?: boolean;\n}) {\n  const [isCopying, setIsCopying] = useState(false);\n  return (\n    <WalletListButtonBase\n      onClick={(e: any) => {\n        e.stopPropagation();\n        setIsCopying(true);\n        setTimeout(() => setIsCopying(false), 1000);\n        onClick();\n      }}\n      inverted={inverted}\n    >\n      <>{isCopying ? \"Copied!\" : \"Copy\"}</>\n    </WalletListButtonBase>\n  );\n}\n\nfunction EditWalletsButton({\n  onClick,\n  inverted,\n}: {\n  onClick: () => void;\n  inverted?: boolean;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <WalletListButtonBase\n      onClick={(e: any) => {\n        e.stopPropagation();\n        onClick();\n      }}\n      inverted={inverted}\n      sx={{\n        padding: \"4px\",\n        minWidth: \"32px\",\n      }}\n    >\n      <MoreHoriz\n        style={{\n          color: theme.custom.colors.icon,\n        }}\n      />\n    </WalletListButtonBase>\n  );\n}\n\nfunction RecoverButton({\n  onClick,\n  inverted,\n}: {\n  onClick: () => void;\n  inverted?: boolean;\n}) {\n  return (\n    <WalletListButtonBase\n      onClick={(e: any) => {\n        e.stopPropagation();\n        onClick();\n      }}\n      inverted={inverted}\n    >\n      <>Recover</>\n    </WalletListButtonBase>\n  );\n}\n\nexport function StackedWalletAddress({\n  publicKey,\n  name,\n  type,\n  isSelected = false,\n  inverted,\n  isPrimary,\n}: {\n  publicKey: string;\n  name: string;\n  type: string;\n  isSelected?: boolean;\n  inverted?: boolean;\n  isPrimary?: boolean;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <div>\n      <div style={{ display: \"flex\" }}>\n        <Typography\n          style={{\n            fontSize: \"16px\",\n            fontWeight: isSelected ? 600 : 500,\n            color: type === \"dehydrated\" ? theme.custom.colors.negative : \"\",\n          }}\n        >\n          {type === \"dehydrated\" ? \"Not recovered\" : name}\n        </Typography>\n        {type !== \"dehydrated\" && isPrimary ? (\n          <Typography\n            style={{\n              marginLeft: \"4px\",\n              fontSize: \"14px\",\n              fontWeight: 500,\n              color: inverted\n                ? theme.custom.colorsInverted.secondary\n                : theme.custom.colors.secondary,\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n            }}\n          >\n            (primary)\n          </Typography>\n        ) : null}\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          height: \"24px\",\n        }}\n      >\n        <WalletTypeIcon\n          type={type}\n          fill={\n            inverted\n              ? isSelected\n                ? theme.custom.colorsInverted.secondary\n                : undefined\n              : isSelected\n              ? theme.custom.colors.secondary\n              : undefined\n          }\n        />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Typography\n            style={{\n              color: inverted\n                ? theme.custom.colorsInverted.secondary\n                : theme.custom.colors.secondary,\n              fontSize: \"14px\",\n            }}\n          >\n            {walletAddressDisplay(publicKey)}\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction WalletTypeIcon({ type, fill }: { type: string; fill?: string }) {\n  const style = { padding: \"5px\" };\n  switch (type) {\n    case \"imported\":\n      return <SecretKeyIcon fill={fill} style={style} />;\n    case \"hardware\":\n      return <HardwareIcon fill={fill} style={style} />;\n    case \"derived\":\n      return <MnemonicIcon fill={fill} style={style} />;\n    default:\n      return null;\n  }\n}\n\nexport function ImportTypeBadge({ type }: { type: string }) {\n  const theme = useCustomTheme();\n  return type === \"derived\" ? (\n    <></>\n  ) : (\n    <div\n      style={{\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\",\n        paddingTop: \"2px\",\n        paddingBottom: \"2px\",\n        backgroundColor: theme.custom.colors.bg2,\n        height: \"20px\",\n        borderRadius: \"10px\",\n      }}\n    >\n      <Typography\n        style={{\n          color: theme.custom.colors.fontColor,\n          fontSize: \"12px\",\n          lineHeight: \"16px\",\n          fontWeight: 600,\n        }}\n      >\n        {type === \"imported\" ? \"IMPORTED\" : \"HARDWARE\"}\n      </Typography>\n    </div>\n  );\n}\n\nfunction NetworkIcon({\n  blockchain,\n  style,\n}: {\n  blockchain: Blockchain;\n  style?: React.CSSProperties;\n}) {\n  const blockchainLogo = getBlockchainLogo(blockchain);\n  return <img src={blockchainLogo} style={style} />;\n}\n\ntype WalletDrawerContext = {\n  open: boolean;\n  setOpen: any;\n};\n\nconst _WalletDrawerContext = React.createContext<WalletDrawerContext | null>(\n  null\n);\n\nexport function WalletDrawerProvider({ children }: any) {\n  const [open, setOpen] = useState(false);\n  return (\n    <_WalletDrawerContext.Provider\n      value={{\n        open,\n        setOpen,\n      }}\n    >\n      <>\n        {children}\n        <WalletDrawerNavStack openDrawer={open} setOpenDrawer={setOpen} />\n      </>\n    </_WalletDrawerContext.Provider>\n  );\n}\n\nexport function useWalletDrawerContext(): WalletDrawerContext {\n  const ctx = useContext(_WalletDrawerContext);\n  if (ctx === null) {\n    throw new Error(\"Context not available\");\n  }\n  return ctx;\n}\n","import { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Tooltip } from \"@mui/material\";\n\nexport function WithCopyTooltip({ children, tooltipOpen, title }: any) {\n  const theme = useCustomTheme();\n  return (\n    <Tooltip\n      arrow\n      title={title ?? \"Copied\"}\n      open={tooltipOpen}\n      disableFocusListener\n      disableHoverListener\n      disableTouchListener\n      componentsProps={{\n        tooltip: {\n          sx: {\n            fontSize: \"14px\",\n            bgcolor: theme.custom.colors.copyTooltipColor,\n            color: theme.custom.colors.copyTooltipTextColor,\n            \"& .MuiTooltip-arrow\": {\n              color: theme.custom.colors.copyTooltipColor,\n            },\n          },\n        },\n        popper: {\n          sx: {\n            // Hack: Without this, the root container of the app widens by 15 px,\n            //       when the tooltip displays.\n            position: \"fixed\",\n          },\n        },\n      }}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n","import { walletAddressDisplay } from \"@coral-xyz/common\";\nimport { useDarkMode } from \"@coral-xyz/recoil\";\nimport type { CustomTheme } from \"@coral-xyz/themes\";\nimport { styles as makeStyles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { Box, Button, Checkbox as _Checkbox, Typography } from \"@mui/material\";\nimport type { BigNumber } from \"ethers\";\nimport { ethers } from \"ethers\";\n\nimport { TextField } from \"../../plugin/Component\";\n\nexport { walletAddressDisplay } from \"@coral-xyz/common\";\nexport { TextField };\n\nconst useStyles = makeStyles((theme: CustomTheme) => ({\n  header: {\n    color: theme.custom.colors.fontColor,\n    fontSize: \"24px\",\n    fontWeight: 500,\n    lineHeight: \"32px\",\n  },\n  checkBox: {\n    color: theme.custom.colors.primaryButton,\n    width: \"18px\",\n    height: \"18px\",\n    \"&.Mui-disabled\": {\n      opacity: 0.5,\n    },\n  },\n  checkBoxRoot: {\n    padding: 0,\n  },\n  checkBoxChecked: {\n    color: `${theme.custom.colors.primaryButton} !important`,\n    background: \"white\",\n  },\n  darkCheckboxChecked: {\n    color: `white !important`,\n    background: `${theme.custom.colors.smallTextColor} !important`,\n  },\n  subtext: {\n    color: theme.custom.colors.subtext,\n  },\n  checkFormButton: {\n    display: \"flex\",\n    marginTop: \"8px\",\n    \"&:hover\": {\n      backgroundColor: \"transparent !important\",\n      background: \"transparent !important\",\n      opacity: 0.8,\n    },\n  },\n}));\n\nexport function WalletAddress({ publicKey, name, style, nameStyle }: any) {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        ...style,\n      }}\n    >\n      <Typography style={{ ...nameStyle, marginRight: \"8px\" }}>\n        {name}\n      </Typography>\n      {publicKey ? (\n        <Typography style={{ color: theme.custom.colors.secondary }}>\n          ({walletAddressDisplay(publicKey)})\n        </Typography>\n      ) : null}\n    </div>\n  );\n}\n\nexport function TokenInputField({\n  decimals,\n  ...props\n}: {\n  decimals: number;\n} & React.ComponentProps<typeof TextField>) {\n  // Truncate token input fields to the native decimals of the token to prevent\n  // floats\n  const handleTokenInput = (\n    amount: string,\n    decimals: number,\n    setValue: (\n      displayAmount: string | null,\n      nativeAmount: BigNumber | null\n    ) => void\n  ) => {\n    if (amount !== \"\") {\n      const decimalIndex = amount.indexOf(\".\");\n      const truncatedAmount =\n        decimalIndex >= 0\n          ? amount.substring(0, decimalIndex) +\n            amount.substring(decimalIndex, decimalIndex + decimals + 1)\n          : amount;\n      setValue(\n        truncatedAmount,\n        ethers.utils.parseUnits(truncatedAmount, decimals)\n      );\n    } else {\n      setValue(null, null);\n    }\n  };\n\n  return (\n    <TextField\n      {...props}\n      // Override default TextField setValue with function to truncate decimal inputs\n      setValue={(amount: string) => {\n        handleTokenInput(amount, decimals, props.setValue);\n      }}\n    />\n  );\n}\n\nexport function SubtextParagraph({\n  children,\n  style,\n  onClick,\n}: {\n  children: any;\n  onClick?: any;\n  style?: React.CSSProperties;\n}) {\n  const classes = useStyles();\n  return (\n    <p\n      className={classes.subtext}\n      style={{ fontWeight: 500, marginTop: \"8px\", ...style }}\n      onClick={onClick}\n    >\n      {children}\n    </p>\n  );\n}\n\nexport function Header({\n  text,\n  style = {},\n}: {\n  text: string;\n  style?: React.CSSProperties;\n}) {\n  const classes = useStyles();\n  return (\n    <Typography className={classes.header} style={style}>\n      {text}\n    </Typography>\n  );\n}\n\nexport function HeaderIcon({\n  icon,\n  style,\n}: {\n  icon: any;\n  style?: React.CSSProperties;\n}) {\n  return (\n    <Box\n      style={{\n        display: \"block\",\n        height: \"56px\",\n        width: \"56px\",\n        margin: \"8px auto 16px auto\",\n        ...style,\n      }}\n    >\n      {icon}\n    </Box>\n  );\n}\n\nexport function Checkbox({\n  checked,\n  setChecked = () => {},\n  ...checkboxProps\n}: {\n  checked: boolean;\n  setChecked?: (value: boolean) => void;\n} & React.ComponentProps<typeof _Checkbox>) {\n  const classes = useStyles();\n  const isDark = useDarkMode();\n  return (\n    <_Checkbox\n      disableRipple\n      className={classes.checkBox}\n      checked={checked}\n      onChange={() => setChecked(!checked)}\n      classes={{\n        checked: isDark ? classes.darkCheckboxChecked : classes.checkBoxChecked,\n        root: classes.checkBoxRoot,\n      }}\n      {...checkboxProps}\n    />\n  );\n}\n\nexport function CheckboxForm({\n  checked,\n  setChecked,\n  label,\n}: {\n  checked: boolean;\n  setChecked: (value: boolean) => void;\n  label: string | React.ReactNode;\n}) {\n  const classes = useStyles();\n  return (\n    <Button\n      className={classes.checkFormButton}\n      style={{\n        padding: 0,\n        textTransform: \"none\",\n      }}\n      onClick={() => setChecked(!checked)}\n      disableRipple\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Checkbox\n          checked={checked}\n          setChecked={setChecked}\n          sx={{ padding: 0 }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n          marginLeft: \"10px\",\n        }}\n      >\n        <Typography className={classes.subtext}>{label}</Typography>\n      </div>\n    </Button>\n  );\n}\n","import type { ChannelAppUiClient } from \"@coral-xyz/common\";\nimport {\n  buildFullFeatureGatesMap,\n  UI_RPC_METHOD_SET_FEATURE_GATES,\n} from \"@coral-xyz/common\";\n\nconst FEATURE_GATE_URL = \"https://feature-gates.xnfts.dev\";\n\nexport const refreshFeatureGates = async (background: ChannelAppUiClient) => {\n  try {\n    const res = await fetch(`${FEATURE_GATE_URL}/gates`);\n    const json = await res.json();\n    if (!json.gates) throw new Error(json.message);\n    const gates = buildFullFeatureGatesMap(json.gates);\n    await background.request({\n      method: UI_RPC_METHOD_SET_FEATURE_GATES,\n      params: [gates],\n    });\n  } catch (e) {\n    console.warn(\n      `Error while refreshing feature gates, falling back to defaults`\n    );\n  }\n};\n","import { useState } from \"react\";\n\nexport const useSteps = () => {\n  const [step, setStep] = useState(0);\n  const nextStep = () => setStep(step + 1);\n  const prevStep = () => {\n    if (step > 0) setStep(step - 1);\n  };\n\n  return {\n    step,\n    setStep,\n    nextStep,\n    prevStep,\n  };\n};\n","import { BACKEND_API_URL } from \"@coral-xyz/common\";\n\nconst BACKPACK_NOTIFICATION_PUBKEY =\n  \"BJ6je9D4-ZJUH1yxTCRT01ILw07-YZcpAEk5hxpnPnEXJJ8WjE9BYf_fTPXNGRM1yw5C1CZQaCFmUX0gujpf67E\";\n\nexport const urlB64ToUint8Array = (base64String: any) => {\n  const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding).replace(/-/g, \"+\").replace(/_/g, \"/\");\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n};\n\nexport const registerNotificationServiceWorker = () => {\n  return navigator.serviceWorker.ready.then(\n    async (serviceWorkerRegistration) => {\n      // This will be called only once when the service worker is installed for first time.\n      const applicationServerKey = urlB64ToUint8Array(\n        BACKPACK_NOTIFICATION_PUBKEY\n      );\n      const options = { applicationServerKey, userVisibleOnly: true };\n      return serviceWorkerRegistration.pushManager.subscribe(options);\n    }\n  );\n};\n\nexport const unregisterNotificationServiceWorker = () => {\n  return navigator.serviceWorker.ready.then(\n    async (serviceWorkerRegistration) => {\n      const applicationServerKey = urlB64ToUint8Array(\n        BACKPACK_NOTIFICATION_PUBKEY\n      );\n      const sub = await serviceWorkerRegistration.pushManager.getSubscription();\n      if (sub && sub.options.applicationServerKey === applicationServerKey) {\n        await sub.unsubscribe();\n      }\n    }\n  );\n};\n\nexport const hasActiveSubscription = async (): Promise<boolean> => {\n  const response = await fetch(\n    `${BACKEND_API_URL}/notifications/subscriptions`\n  );\n  const json = await response.json();\n  return json.auth_notification_subscriptions\n    ? json.auth_notification_subscriptions.length > 0\n    : false;\n};\n\nexport const deleteSubscription = async () => {\n  const response = await fetch(`${BACKEND_API_URL}/notifications`, {\n    method: \"DELETE\",\n  });\n  return response.json();\n};\n\nexport const saveSubscription = async (subscription: any) => {\n  const response = await fetch(`${BACKEND_API_URL}/notifications/register`, {\n    method: \"post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ subscription }),\n  });\n  return response.json();\n};\n","// TODO: We should remove this dependency somehow\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { TextareaAutosize as MuiTextArea } from \"@mui/base\";\nimport { Button as MuiButton, TextField as MuiTextField } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\n\nimport { MOTION_VARIANTS } from \"../app/Router\";\n\nconst useStyles = styles((theme) => ({\n  textAreaInput: {\n    fontWeight: 500,\n    borderRadius: \"12px\",\n    fontSize: \"16px\",\n    lineHeight: \"24px\",\n    padding: \"16.5px 14px\",\n    font: \"inherit\",\n    background: theme.custom.colors.textBackground,\n    border: `2pt solid ${theme.custom.colors.textBackground}`,\n    \"&:hover\": {\n      border: `2pt solid ${theme.custom.colors.primaryButton}`,\n    },\n    \"&:focus\": {\n      border: `2pt solid ${theme.custom.colors.primaryButton}`,\n      outline: \"none\",\n    },\n  },\n  textFieldInputColorEmpty: {\n    color: theme.custom.colors.textPlaceholder,\n  },\n  textFieldInputColor: {\n    color: theme.custom.colors.fontColor2,\n  },\n  textFieldRoot: {\n    \"& .MuiOutlinedInput-root\": {\n      background: theme.custom.colors.textBackground,\n      borderRadius: \"12px\",\n      \"& fieldset\": {\n        border: `${theme.custom.colors.borderFull}`,\n      },\n      \"&:hover fieldset\": {\n        border: `solid 2pt ${theme.custom.colors.primaryButton}`,\n      },\n      \"&.Mui-focused fieldset\": {\n        border: `solid 2pt ${theme.custom.colors.primaryButton} !important`,\n        borderColor: `${theme.custom.colors.primaryButton} !important`,\n      },\n    },\n  },\n  textRootError: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        border: `solid 2pt ${theme.custom.colors.negative} !important`,\n      },\n      \"&.Mui-focused fieldset\": {\n        border: `solid 2pt ${theme.custom.colors.negative} !important`,\n        borderColor: `${theme.custom.colors.negative} !important`,\n      },\n    },\n  },\n}));\n\nexport function TextArea({\n  maxRows,\n  minRows,\n  value,\n  setValue,\n  placeholder,\n  style,\n  className = \"\",\n}: any) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  className =\n    className +\n    `${classes.textAreaInput} ${\n      value ? classes.textFieldInputColor : classes.textFieldInputColorEmpty\n    }\n    `;\n\n  const textColor = value\n    ? theme.custom.colors.textPlaceholder\n    : theme.custom.colors.fontColor2;\n\n  return (\n    <MuiTextArea\n      maxRows={maxRows}\n      minRows={minRows}\n      onChange={(e) => setValue(e.target.value)}\n      placeholder={placeholder}\n      style={{\n        width: \"100%\",\n        color: textColor,\n        ...style,\n      }}\n      value={value}\n      className={className}\n    />\n  );\n}\n\nexport function TextField({\n  placeholder,\n  type,\n  value,\n  setValue,\n  rootClass,\n  startAdornment,\n  endAdornment,\n  isError,\n  inputProps,\n  disabled,\n  autoFocus,\n  rows,\n  select,\n  children,\n  style,\n}: any) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const textColor = value\n    ? theme.custom.colors.textPlaceholder\n    : theme.custom.colors.fontColor2;\n\n  return (\n    <MuiTextField\n      sx={{\n        fontWeight: 500,\n        borderRadius: \"12px\",\n        fontSize: \"16px\",\n        lineHeight: \"24px\",\n      }}\n      autoFocus={autoFocus}\n      multiline={!!rows}\n      rows={rows}\n      disabled={disabled}\n      placeholder={placeholder}\n      variant=\"outlined\"\n      margin=\"dense\"\n      required\n      fullWidth\n      type={type}\n      inputProps={{\n        ...inputProps,\n        style: {\n          ...(inputProps?.style || {}),\n          color: textColor,\n        },\n      }}\n      classes={{\n        root: `${isError ? classes.textRootError : \"\"} ${\n          classes.textFieldRoot\n        } ${rootClass ?? \"\"}`,\n      }}\n      InputLabelProps={{\n        shrink: false,\n        style: {\n          borderRadius: \"12px\",\n        },\n      }}\n      InputProps={{\n        startAdornment,\n        endAdornment,\n      }}\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      select={select}\n      children={children}\n      style={style}\n    />\n  );\n}\n\nexport function _Button({ id, props, style, childrenRenderer }: any) {\n  return (\n    <__Button\n      id={id}\n      props={props}\n      style={style}\n      childrenRenderer={childrenRenderer}\n      onClick={props.onClick}\n    />\n  );\n}\n\nexport function Button({ id, props, style, onClick, children }: any) {\n  return (\n    <__Button\n      id={id}\n      props={props}\n      style={style}\n      children={children}\n      onClick={onClick}\n    />\n  );\n}\n\nexport function __Button({ onClick, style, children }: any) {\n  const theme = useCustomTheme();\n  return (\n    <MuiButton\n      disableElevation\n      variant=\"contained\"\n      disableRipple\n      style={{\n        borderRadius: \"12px\",\n        width: \"100px\",\n        textTransform: \"none\",\n        backgroundColor: theme.custom.colors.nav,\n        ...style,\n      }}\n      onClick={onClick}\n    >\n      {children}\n    </MuiButton>\n  );\n}\n\nexport function ScrollBarImpl(props: any) {\n  const theme = useCustomTheme();\n\n  return (\n    <>\n      <Scrollbars\n        style={{ width: \"100%\", height: \"100%\" }}\n        renderTrackHorizontal={(props: any) => (\n          <div {...props} className=\"track-horizontal\" />\n        )}\n        renderTrackVertical={(props: any) => (\n          <div\n            style={{ backgroundColor: theme.custom.colors.scrollbarTrack }}\n            {...props}\n            className=\"track-vertical\"\n          />\n        )}\n        renderThumbHorizontal={(props: any) => (\n          <div {...props} className=\"thumb-horizontal\" />\n        )}\n        renderThumbVertical={(props: any) => (\n          <div\n            style={{ backgroundColor: theme.custom.colors.scrollbarThumb }}\n            {...props}\n            className=\"thumb-vertical\"\n          />\n        )}\n        renderView={(props: any) => <div {...props} className=\"view\" />}\n        autoHide\n        thumbMinSize={30}\n        {...props}\n      />\n      <style>\n        {`\n          .track-vertical {\n            background: ${theme.custom.colors.scrollbarTrack};\n          }\n          .track-vertical .thumb-vertical {\n            background-color: ${theme.custom.colors.scrollbarThumb};\n          }\n\t\t\t\t`}\n      </style>\n    </>\n  );\n}\n\nexport function WithMotion({ children, id, navAction }: any) {\n  return (\n    <motion.div\n      key={id}\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n      }}\n      variants={MOTION_VARIANTS}\n      initial={!navAction || navAction === \"tab\" ? {} : \"initial\"}\n      animate={!navAction || navAction === \"tab\" ? {} : \"animate\"}\n      exit={!navAction || navAction === \"tab\" ? {} : \"exit\"}\n    >\n      {children}\n    </motion.div>\n  );\n}\n","import { PushDetail } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nimport { ActionRow } from \"./ActionRow\";\n\nexport const GroupIdentifier = ({ name }: { name: string }) => {\n  const theme = useCustomTheme();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        marginBottom: 4,\n      }}\n    >\n      <div style={{ color: theme.custom.colors.icon }}>{name}</div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <PushDetail style={{ width: \"22px\" }} />\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { TextInput } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\nimport { useStyles } from \"./styles\";\n\nexport const SpotlightSearchBar = ({\n  searchFilter,\n  setSearchFilter,\n}: {\n  searchFilter: string;\n  setSearchFilter: any;\n}) => {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n\n  return (\n    <TextInput\n      autoFocus\n      className={classes.searchField}\n      placeholder=\"Search\"\n      startAdornment={\n        <SearchIcon sx={{ color: theme.custom.colors.icon, mr: \"10px\" }} />\n      }\n      value={searchFilter}\n      setValue={async (e) => {\n        const prefix = e.target.value;\n        setSearchFilter(prefix);\n      }}\n      inputProps={{\n        style: {\n          height: \"48px\",\n        },\n      }}\n    />\n  );\n};\n","import { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Divider } from \"@mui/material\";\n\nimport { SpotlightContacts } from \"./SpotlightContacts\";\nimport { SpotlightGroups } from \"./SpotlightGroups\";\nimport { SpotlightNfts } from \"./SpotlightNfts\";\nimport { SpotlightTokens } from \"./SpotlightTokens\";\nimport { SpotlightXnfts } from \"./SpotlightXnfts\";\nimport { useSearchedContacts } from \"./useSearchedContacts\";\nimport { useSearchedGroupsCollections } from \"./useSearchedGroups\";\nimport { useSearchedNfts } from \"./useSearchedNfts\";\nimport { useSearchedTokens } from \"./useSearchedTokens\";\nimport { useSearchedXnfts } from \"./useSearchedXnfts\";\nimport { getCurrentCounter } from \"./utils\";\n\nexport const SearchBody = ({\n  searchFilter,\n  arrowIndex,\n  setOpen,\n  setSelectedContact,\n}: {\n  searchFilter: string;\n  arrowIndex: number;\n  setOpen: any;\n  setSelectedContact: any;\n}) => {\n  const theme = useCustomTheme();\n  const contacts = useSearchedContacts(searchFilter);\n  const groups = useSearchedGroupsCollections(searchFilter);\n  const nfts = useSearchedNfts(searchFilter);\n  const xnfts = useSearchedXnfts(searchFilter);\n  const tokens = useSearchedTokens(searchFilter);\n  const allResultsLength =\n    contacts.length +\n    groups.length +\n    nfts.length +\n    xnfts.length +\n    tokens.length;\n  const currentCounter = getCurrentCounter(arrowIndex, allResultsLength);\n\n  if (!searchFilter) return <div />;\n\n  const rows = [\n    {\n      component: (\n        <div>\n          <SpotlightContacts\n            selectedIndex={\n              currentCounter < contacts.length ? currentCounter : null\n            }\n            contacts={contacts}\n            setSelectedContact={setSelectedContact}\n          />\n        </div>\n      ),\n      count: contacts.length,\n      isFirst: contacts.length > 0,\n    },\n    {\n      component: (\n        <div>\n          <SpotlightGroups\n            selectedIndex={\n              currentCounter >= contacts.length &&\n              currentCounter < contacts.length + groups.length\n                ? currentCounter - contacts.length\n                : null\n            }\n            groups={groups}\n            setOpen={setOpen}\n          />\n        </div>\n      ),\n      count: groups.length,\n      isFirst: contacts.length === 0 && groups.length > 0,\n    },\n    {\n      component: (\n        <div>\n          <SpotlightNfts\n            selectedIndex={\n              currentCounter >= contacts.length + groups.length &&\n              currentCounter < contacts.length + groups.length + nfts.length\n                ? currentCounter - contacts.length - groups.length\n                : null\n            }\n            nfts={nfts}\n            setOpen={setOpen}\n          />\n        </div>\n      ),\n      count: nfts.length,\n      isFirst: contacts.length === 0 && groups.length === 0 && nfts.length > 0,\n    },\n    {\n      component: (\n        <div>\n          <SpotlightXnfts\n            selectedIndex={\n              currentCounter >= contacts.length + groups.length + nfts.length &&\n              currentCounter <\n                contacts.length + groups.length + nfts.length + xnfts.length\n                ? currentCounter - contacts.length - groups.length - nfts.length\n                : null\n            }\n            xnfts={xnfts}\n            setOpen={setOpen}\n          />\n        </div>\n      ),\n      count: xnfts.length,\n      isFirst:\n        contacts.length === 0 &&\n        groups.length === 0 &&\n        nfts.length === 0 &&\n        xnfts.length > 0,\n    },\n    {\n      component: (\n        <div>\n          <SpotlightTokens\n            selectedIndex={\n              currentCounter >=\n                contacts.length + groups.length + nfts.length + xnfts.length &&\n              currentCounter <\n                contacts.length +\n                  groups.length +\n                  nfts.length +\n                  xnfts.length +\n                  tokens.length\n                ? currentCounter -\n                  contacts.length -\n                  groups.length -\n                  nfts.length -\n                  xnfts.length\n                : null\n            }\n            tokens={tokens}\n            setOpen={setOpen}\n          />\n        </div>\n      ),\n      count: tokens.length,\n      isFirst:\n        contacts.length === 0 &&\n        groups.length === 0 &&\n        nfts.length === 0 &&\n        xnfts.length === 0 &&\n        tokens.length > 0,\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        padding: 16,\n      }}\n    >\n      {rows.map((row) => (\n        <>\n          {row.count > 0 && !row.isFirst ? (\n            <Divider\n              style={{\n                backgroundColor: theme.custom.colors.nav,\n                marginTop: 12,\n                marginBottom: 12,\n              }}\n            />\n          ) : null}\n          {row.component}\n        </>\n      ))}\n    </div>\n  );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport {\n  Blockchain,\n  NAV_COMPONENT_MESSAGE_CHAT,\n  NAV_COMPONENT_MESSAGE_GROUP_CHAT,\n  NAV_COMPONENT_NFT_DETAIL,\n  NAV_COMPONENT_TOKEN,\n  toTitleCase,\n} from \"@coral-xyz/common\";\nimport {\n  showSpotlight,\n  useActiveWallet,\n  useBlockchainConnectionUrl,\n  useBreakpoints,\n  useKeyringStoreState,\n  useNavigation,\n  useOpenPlugin,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Divider } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport { useRecoilState } from \"recoil\";\n\nimport { Scrollbar } from \"../components/common/Layout/Scrollbar\";\n\nimport { SpotlightSearchBar } from \"./SearchBar\";\nimport { SearchBody } from \"./SearchBody\";\nimport { useSearchedContacts } from \"./useSearchedContacts\";\nimport { useSearchedGroupsCollections } from \"./useSearchedGroups\";\nimport { useSearchedNfts } from \"./useSearchedNfts\";\nimport { useSearchedTokens } from \"./useSearchedTokens\";\nimport { useSearchedXnfts } from \"./useSearchedXnfts\";\nimport { getCurrentCounter } from \"./utils\";\n\nconst style = {\n  //  boxShadow: 24,\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n};\n\nexport const Spotlight = () => {\n  const [open, setOpen] = useRecoilState(showSpotlight);\n  const keyringState = useKeyringStoreState();\n  const [arrowIndex, setArrowIndex] = useState(0);\n\n  useEffect(() => {\n    function keyDownTextField(e: any) {\n      if (keyringState !== \"unlocked\") {\n        return;\n      }\n      if (e.key === \"k\" && e.metaKey) {\n        setOpen((o) => !o);\n        e.preventDefault();\n      }\n      if (e.which === 27 || e.keyCode === 27) {\n        setOpen(false);\n      }\n      if (e.which === 38) {\n        setArrowIndex((x) => x - 1);\n      } else if (e.which === 40) {\n        setArrowIndex((x) => x + 1);\n      }\n    }\n    document.addEventListener(\"keydown\", keyDownTextField);\n\n    return () => {\n      document.removeEventListener(\"keydown\", keyDownTextField);\n    };\n  }, [keyringState]);\n\n  return (\n    <Modal\n      slotProps={{\n        backdrop: {\n          style: {\n            backdropFilter: \"blur(6px)\",\n          },\n        },\n      }}\n      open={open}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n        }}\n      >\n        <div\n          style={{\n            zIndex: 1,\n            paddingLeft: \"16px\",\n            paddingRight: \"16px\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            height: \"56px\",\n            display: \"flex\",\n          }}\n          onClick={() => setOpen(false)}\n        />\n        <div style={{ flex: 1 }}>\n          <Box\n            sx={{ ...style }}\n            style={{\n              height: \"100%\",\n            }}\n            onClick={() => setOpen(false)}\n          >\n            <SpotlightInner setOpen={setOpen} arrowIndex={arrowIndex} />\n          </Box>\n        </div>\n        <div\n          style={{\n            zIndex: 1,\n            paddingLeft: \"16px\",\n            paddingRight: \"16px\",\n            paddingTop: \"10px\",\n            paddingBottom: \"10px\",\n            height: \"56px\",\n            display: \"flex\",\n          }}\n          onClick={() => setOpen(false)}\n        />\n      </div>\n    </Modal>\n  );\n};\n\nfunction SpotlightInner({\n  arrowIndex,\n  setOpen,\n}: {\n  arrowIndex: number;\n  setOpen: any;\n}) {\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  const contacts = useSearchedContacts(searchFilter);\n  const groups = useSearchedGroupsCollections(searchFilter);\n  const nfts = useSearchedNfts(searchFilter);\n  const xnfts = useSearchedXnfts(searchFilter);\n  const tokens = useSearchedTokens(searchFilter);\n  const allResultsLength =\n    contacts.length +\n    groups.length +\n    nfts.length +\n    xnfts.length +\n    tokens.length;\n  const { push, toRoot } = useNavigation();\n  const activeWallet = useActiveWallet();\n  const connectionUrl = useBlockchainConnectionUrl(activeWallet.blockchain);\n  const theme = useCustomTheme();\n  const { isXs } = useBreakpoints();\n  const openPlugin = useOpenPlugin();\n\n  const setSelectedContact = (contact: any) => {\n    push({\n      title: `@${contact?.username}`,\n      componentId: NAV_COMPONENT_MESSAGE_CHAT,\n      componentProps: {\n        userId: contact?.uuid,\n        id: contact?.uuid,\n        username: contact?.username,\n      },\n    });\n    setOpen(false);\n  };\n\n  return (\n    <div\n      onKeyDown={(e) => {\n        if (e.keyCode === 13) {\n          const currentCounter = getCurrentCounter(\n            arrowIndex,\n            allResultsLength\n          );\n          const selectedContactIndex =\n            currentCounter < contacts.length ? currentCounter : null;\n          const selectedGroupChatIndex =\n            currentCounter >= contacts.length &&\n            currentCounter - contacts.length < groups.length\n              ? currentCounter - contacts.length\n              : null;\n          const selectedNFtChatIndex =\n            currentCounter >= contacts.length + groups.length &&\n            currentCounter - contacts.length - groups.length < nfts.length\n              ? currentCounter - contacts.length - groups.length\n              : null;\n          const selectedXnftChatIndex =\n            currentCounter >= contacts.length + groups.length + nfts.length &&\n            currentCounter - contacts.length - groups.length - nfts.length <\n              xnfts.length\n              ? currentCounter - contacts.length - groups.length - nfts.length\n              : null;\n          const selectedTokenIndex =\n            currentCounter >=\n              contacts.length + groups.length + nfts.length + xnfts.length &&\n            currentCounter -\n              contacts.length -\n              groups.length -\n              nfts.length -\n              xnfts.length <\n              tokens.length\n              ? currentCounter -\n                contacts.length -\n                groups.length -\n                nfts.length -\n                xnfts.length\n              : null;\n\n          if (selectedContactIndex || selectedContactIndex === 0) {\n            const contact = contacts[selectedContactIndex];\n            push({\n              title: `@${contact?.username}`,\n              componentId: NAV_COMPONENT_MESSAGE_CHAT,\n              componentProps: {\n                userId: contact?.uuid,\n                id: contact?.uuid,\n                username: contact?.username,\n              },\n            });\n            setOpen(false);\n            return;\n          }\n          if (selectedGroupChatIndex || selectedGroupChatIndex === 0) {\n            const group = groups[selectedGroupChatIndex];\n            push({\n              title: group?.name,\n              componentId: NAV_COMPONENT_MESSAGE_GROUP_CHAT,\n              componentProps: {\n                fromInbox: true,\n                id: group.collectionId,\n                title: group?.name,\n              },\n            });\n            setOpen(false);\n            return;\n          }\n          if (selectedNFtChatIndex || selectedNFtChatIndex === 0) {\n            const nft = nfts[selectedNFtChatIndex];\n            push({\n              title: nft?.name,\n              componentId: NAV_COMPONENT_NFT_DETAIL,\n              componentProps: {\n                nftId: nft.id,\n                publicKey: activeWallet.publicKey,\n                connectionUrl,\n              },\n            });\n            setOpen(false);\n            return;\n          }\n          if (selectedXnftChatIndex || selectedXnftChatIndex === 0) {\n            const xnft = xnfts[selectedXnftChatIndex];\n            setOpen(false);\n            openPlugin(xnft.publicKey);\n          }\n          if (selectedTokenIndex || selectedTokenIndex === 0) {\n            const token = tokens[selectedTokenIndex];\n            push({\n              title: `${toTitleCase(Blockchain.SOLANA)} / ${token.name}`,\n              componentId: NAV_COMPONENT_TOKEN,\n              componentProps: {\n                blockchain: \"solana\",\n                tokenAddress: token.address,\n                publicKey: activeWallet.publicKey,\n              },\n            });\n            setOpen(false);\n            return;\n          }\n        }\n      }}\n      style={{\n        // @ts-ignore\n        boxShadow: 24,\n        height: searchFilter.trim() !== \"\" ? \"100%\" : undefined,\n        background: theme.custom.colors.backgroundBackdrop,\n        borderRadius: \"12px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: isXs ? 343 : 500,\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n      }}\n      onClick={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n      }}\n    >\n      <SpotlightSearchBar\n        searchFilter={searchFilter}\n        setSearchFilter={setSearchFilter}\n      />\n      {searchFilter.trim() !== \"\" ? (\n        <>\n          <Divider\n            style={{\n              backgroundColor: theme.custom.colors.nav,\n            }}\n          />\n          <div style={{ flex: 1 }}>\n            <Scrollbar>\n              <SearchBody\n                arrowIndex={arrowIndex}\n                searchFilter={searchFilter}\n                setOpen={setOpen}\n                setSelectedContact={setSelectedContact}\n              />\n            </Scrollbar>\n          </div>\n        </>\n      ) : null}\n    </div>\n  );\n}\n","import { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Box } from \"@mui/material\";\n\nimport { SELECTED_BLUE } from \"./colors\";\n\nexport function SpotlightCell({\n  selected,\n  onClick,\n  children,\n}: {\n  selected: boolean;\n  onClick: any;\n  children: any;\n}) {\n  const theme = useCustomTheme();\n  return (\n    <Box\n      style={{\n        display: \"flex\",\n        padding: 12,\n        background: selected ? SELECTED_BLUE : \"\",\n        borderRadius: 8,\n        color: theme.custom.colors.fontColor,\n        cursor: \"pointer\",\n      }}\n      sx={{\n        \"&:hover\": {\n          background: SELECTED_BLUE,\n        },\n      }}\n      onClick={onClick}\n    >\n      {children}\n    </Box>\n  );\n}\n","import { UserIcon } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nimport { GroupIdentifier } from \"./GroupIdentifier\";\nimport { SpotlightCell } from \"./SpotlightCell\";\n\nexport const SpotlightContacts = ({\n  contacts,\n  selectedIndex,\n  setSelectedContact,\n}: {\n  selectedIndex: number | null;\n  contacts: {\n    username: string;\n    image: string;\n    uuid: string;\n  }[];\n  setSelectedContact: any;\n}) => {\n  if (!contacts.length) return null;\n  return (\n    <div>\n      <GroupIdentifier name=\"Friends\" />\n      {contacts.map((contact, index) => (\n        <SpotlightContact\n          selected={selectedIndex === index}\n          contact={contact}\n          setSelectedContact={setSelectedContact}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport function SpotlightContact({\n  contact,\n  selected,\n  setSelectedContact,\n}: {\n  contact: {\n    username: string;\n    image: string;\n    uuid: string;\n  };\n  selected: boolean;\n  setSelectedContact: any;\n}) {\n  return (\n    <SpotlightCell\n      selected={selected}\n      onClick={() => {\n        setSelectedContact(contact);\n      }}\n    >\n      <UserIcon size={55} image={contact.image} />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {contact.username}\n      </div>\n    </SpotlightCell>\n  );\n}\n","import { NAV_COMPONENT_MESSAGE_GROUP_CHAT } from \"@coral-xyz/common\";\nimport { UserIcon } from \"@coral-xyz/react-common\";\nimport { useNavigation } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nimport { GroupIdentifier } from \"./GroupIdentifier\";\nimport { SpotlightCell } from \"./SpotlightCell\";\n\nexport const SpotlightGroups = ({\n  groups,\n  selectedIndex,\n  setOpen,\n}: {\n  groups: {\n    name: string;\n    image: string;\n    collectionId: string;\n  }[];\n  selectedIndex: number | null;\n  setOpen: any;\n}) => {\n  if (!groups.length) return null;\n  return (\n    <div>\n      <GroupIdentifier name=\"Group chats\" />\n      {groups.map((group, index) => (\n        <SpotlightGroup\n          group={group}\n          selected={selectedIndex === index}\n          setOpen={setOpen}\n        />\n      ))}\n    </div>\n  );\n};\n\nfunction SpotlightGroup({\n  group,\n  selected,\n  setOpen,\n}: {\n  group: { name: string; image: string; collectionId: string };\n  selected: boolean;\n  setOpen: any;\n}) {\n  const { push, toRoot } = useNavigation();\n\n  return (\n    <SpotlightCell\n      selected={selected}\n      onClick={() => {\n        push({\n          title: group?.name,\n          componentId: NAV_COMPONENT_MESSAGE_GROUP_CHAT,\n          componentProps: {\n            fromInbox: true,\n            id: group.collectionId,\n            title: group?.name,\n          },\n        });\n        setOpen(false);\n      }}\n    >\n      <UserIcon size={55} image={group.image} />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {group.name}\n      </div>\n    </SpotlightCell>\n  );\n}\n","import { NAV_COMPONENT_NFT_DETAIL } from \"@coral-xyz/common\";\nimport { UserIcon } from \"@coral-xyz/react-common\";\nimport {\n  useActiveWallet,\n  useBlockchainConnectionUrl,\n  useNavigation,\n} from \"@coral-xyz/recoil\";\n\nimport { GroupIdentifier } from \"./GroupIdentifier\";\nimport { SpotlightCell } from \"./SpotlightCell\";\n\nexport const SpotlightNfts = ({\n  nfts,\n  selectedIndex,\n  setOpen,\n}: {\n  nfts: { name: string; image: string; id: string }[];\n  selectedIndex: number | null;\n  setOpen: any;\n}) => {\n  if (!nfts.length) return null;\n  return (\n    <div>\n      <GroupIdentifier name=\"Collectibles\" />\n      {nfts.map((nft, index) => (\n        <SpotlightNft\n          selected={selectedIndex === index}\n          nft={nft}\n          setOpen={setOpen}\n        />\n      ))}\n    </div>\n  );\n};\n\nfunction SpotlightNft({\n  nft,\n  selected,\n  setOpen,\n}: {\n  nft: { name: string; image: string; id: string };\n  selected: boolean;\n  setOpen: any;\n}) {\n  const activeWallet = useActiveWallet();\n  const connectionUrl = useBlockchainConnectionUrl(activeWallet.blockchain);\n  const { push } = useNavigation();\n\n  return (\n    <SpotlightCell\n      selected={selected}\n      onClick={() => {\n        push({\n          title: nft?.name,\n          componentId: NAV_COMPONENT_NFT_DETAIL,\n          componentProps: {\n            nftId: nft.id,\n            publicKey: activeWallet.publicKey,\n            connectionUrl,\n          },\n        });\n        setOpen(false);\n      }}\n    >\n      <UserIcon size={55} image={nft.image} />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {nft.name}\n      </div>\n    </SpotlightCell>\n  );\n}\n","import {\n  Blockchain,\n  NAV_COMPONENT_TOKEN,\n  toTitleCase,\n} from \"@coral-xyz/common\";\nimport { UserIcon } from \"@coral-xyz/react-common\";\nimport { useActiveWallet, useNavigation } from \"@coral-xyz/recoil\";\n\nimport { GroupIdentifier } from \"./GroupIdentifier\";\nimport { SpotlightCell } from \"./SpotlightCell\";\n\nexport const SpotlightTokens = ({\n  selectedIndex,\n  tokens,\n  setOpen,\n}: {\n  selectedIndex: number | null;\n  tokens: { image: string; id: string; name: string; address: string }[];\n  setOpen: any;\n}) => {\n  if (!tokens.length) return null;\n  return (\n    <div>\n      <GroupIdentifier name=\"Tokens\" />\n      {tokens.map((token, index) => (\n        <SpotlightToken\n          selected={selectedIndex === index}\n          token={token}\n          setOpen={setOpen}\n        />\n      ))}\n    </div>\n  );\n};\n\nfunction SpotlightToken({\n  selected,\n  token,\n  setOpen,\n}: {\n  selected: boolean;\n  token: { image: string; id: string; name: string; address: string };\n  setOpen: any;\n}) {\n  const { push } = useNavigation();\n  const activeWallet = useActiveWallet();\n\n  return (\n    <SpotlightCell\n      selected={selected}\n      onClick={() => {\n        push({\n          title: `${toTitleCase(Blockchain.SOLANA)} / ${token.name}`,\n          componentId: NAV_COMPONENT_TOKEN,\n          componentProps: {\n            blockchain: \"solana\",\n            tokenAddress: token.address,\n            publicKey: activeWallet.publicKey,\n          },\n        });\n        setOpen(false);\n      }}\n    >\n      <UserIcon size={55} image={token.image} />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {token.name}\n      </div>\n    </SpotlightCell>\n  );\n}\n","import { UserIcon } from \"@coral-xyz/react-common\";\nimport { useOpenPlugin } from \"@coral-xyz/recoil\";\n\nimport { GroupIdentifier } from \"./GroupIdentifier\";\nimport { SpotlightCell } from \"./SpotlightCell\";\n\nexport function SpotlightXnfts({\n  xnfts,\n  selectedIndex,\n  setOpen,\n}: {\n  xnfts: Array<any>;\n  selectedIndex: number | null;\n  setOpen: any;\n}) {\n  if (!xnfts.length) return null;\n  return (\n    <div>\n      <GroupIdentifier name=\"Applications\" />\n      {xnfts.map((xnft, index) => (\n        <SpotlightXnft\n          selected={selectedIndex === index}\n          xnft={xnft}\n          setOpen={setOpen}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction SpotlightXnft({\n  xnft,\n  selected,\n  setOpen,\n}: {\n  xnft: any;\n  selected: boolean;\n  setOpen: any;\n}) {\n  const openPlugin = useOpenPlugin();\n\n  return (\n    <SpotlightCell\n      selected={selected}\n      onClick={() => {\n        setOpen(false);\n        openPlugin(xnft.publicKey);\n      }}\n    >\n      <UserIcon size={55} image={xnft.image} />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {xnft.name}\n      </div>\n    </SpotlightCell>\n  );\n}\n","export const SELECTED_BLUE = \"rgba(76, 148, 255, 0.65)\";\n","import { styles } from \"@coral-xyz/themes\";\n\nexport const useStyles = styles((theme) => ({\n  searchField: {\n    marginTop: 0,\n    marginBottom: 0,\n    width: \"inherit\",\n    display: \"flex\",\n    \"& .MuiOutlinedInput-root\": {\n      border: \"none !important\",\n      background: \"transparent\",\n      \"& input\": {\n        paddingTop: 4,\n        paddingBottom: 4,\n      },\n      \"& fieldset\": {\n        border: \"none !important\",\n      },\n    },\n  },\n  icon: {\n    background: theme.custom.colors.textBackground,\n  },\n  iconInner: {\n    background: theme.custom.colors.fontColor,\n  },\n  topImage: {\n    maxWidth: \"25vw\",\n  },\n  horizontalCenter: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  container: {\n    marginLeft: \"16px\",\n    marginRight: \"16px\",\n  },\n  roundBtn: {\n    marginLeft: 8,\n    borderRadius: 20,\n    width: 20,\n    height: 20,\n    cursor: \"pointer\",\n    background: \"#FFFFFF\",\n    border: \"2px solid #F0F0F2\",\n    fontSize: 10,\n  },\n  add: {\n    width: 17,\n    paddingBottom: 6,\n    paddingRight: 1,\n  },\n  iconCircular: {\n    width: \"32px\",\n    height: \"32px\",\n    borderRadius: \"16px\",\n    marginRight: \"8px\",\n    color: theme.custom.colors.positive,\n  },\n  iconCircularBig: {\n    width: \"40px\",\n    height: \"40px\",\n    borderRadius: \"16px\",\n    marginRight: \"8px\",\n    color: theme.custom.colors.positive,\n  },\n  hoverParent: {\n    \"&:hover $hoverChild, & .Mui-focused $hoverChild\": {\n      visibility: \"visible\",\n    },\n  },\n  hoverChild: {\n    visibility: \"hidden\",\n  },\n  text: {\n    color: theme.custom.colors.fontColor2,\n  },\n  smallText: {\n    fontSize: 12,\n    color: theme.custom.colors.fontColor2,\n  },\n  userText: {\n    fontSize: 16,\n    marginTop: 4,\n    color: theme.custom.colors.fontColor2,\n  },\n  userTextSmall: {\n    fontSize: 14,\n    color: theme.custom.colors.fontColor2,\n  },\n  timestamp: {\n    fontSize: 14,\n    minWidth: 60,\n    color: theme.custom.colors.fontColor2,\n  },\n  smallTitle: {\n    color: theme.custom.colors.smallTextColor,\n    fontWeight: 600,\n  },\n  smallSubTitle: {\n    color: theme.custom.colors.smallTextColor,\n    fontWeight: 500,\n  },\n  contactIconOuter: {\n    background: theme.custom.colors.textBorder,\n  },\n  menuItem: {\n    fontWeight: 400,\n    fontSize: 14,\n    color: theme.custom.colors.fontColor,\n    padding: \"12px 16px\",\n  },\n  menu: {\n    \"& .MuiList-root\": {\n      padding: 0,\n    },\n    paddingTop: 0,\n    paddingBottom: 0,\n    minWidth: 184,\n    color: theme.custom.colors.fontColor,\n  },\n}));\n","import { useContacts } from \"@coral-xyz/db\";\nimport { useUser } from \"@coral-xyz/recoil\";\n\nexport const useSearchedContacts = (searchFilter: string) => {\n  const { uuid } = useUser();\n  const contacts = useContacts(uuid);\n\n  return contacts\n    .filter((x) =>\n      x.remoteUsername?.toLowerCase().includes(searchFilter?.toLowerCase())\n    )\n    .map((x) => ({\n      username: x.remoteUsername,\n      image: x.remoteUserImage,\n      uuid: x.remoteUserId,\n    }));\n};\n","import { useGroupCollections, useUser } from \"@coral-xyz/recoil\";\n\nexport const useSearchedGroupsCollections = (searchFilter: string) => {\n  const { uuid } = useUser();\n  const collections = useGroupCollections({ uuid });\n\n  return collections\n    .filter((x) => x.name?.toLowerCase()?.includes(searchFilter.toLowerCase()))\n    .map((x) => ({\n      name: x.name || \"\",\n      image: x.image || \"\",\n      collectionId: x.collectionId || \"\",\n    }));\n};\n","import type { Nft } from \"@coral-xyz/common\";\nimport { Blockchain } from \"@coral-xyz/common\";\nimport { nftsByOwner, useActiveSolanaWallet } from \"@coral-xyz/recoil\";\nimport { useRecoilValueLoadable } from \"recoil\";\n\nexport const useSearchedNfts = (searchFilter: string) => {\n  const activeSolWallet = useActiveSolanaWallet();\n  const { contents, state }: any = useRecoilValueLoadable(\n    nftsByOwner({\n      publicKey: activeSolWallet?.publicKey,\n      blockchain: Blockchain.SOLANA,\n    })\n  );\n\n  if (state === \"loading\" || state === \"hasError\") {\n    return [];\n  }\n\n  return contents\n    .filter(\n      (x: Nft) =>\n        x &&\n        (x.name?.toLowerCase()?.includes(searchFilter.toLowerCase()) ||\n          x.collectionName?.toLowerCase()?.includes(searchFilter.toLowerCase()))\n    )\n    .map((x: Nft) => ({\n      name: x.name || \"\",\n      image: x.imageUrl || \"\",\n      id: x.id || \"\",\n    }));\n};\n","import { Blockchain } from \"@coral-xyz/common\";\nimport {\n  blockchainBalancesSorted,\n  useActiveSolanaWallet,\n  useLoader,\n} from \"@coral-xyz/recoil\";\n\nexport const useSearchedTokens = (searchFilter: string) => {\n  const activeSolWallet = useActiveSolanaWallet();\n\n  const [tokenAccounts, , isLoading] = useLoader(\n    blockchainBalancesSorted({\n      publicKey: activeSolWallet?.publicKey,\n      blockchain: Blockchain.SOLANA,\n    }),\n    [],\n    [activeSolWallet]\n  );\n\n  if (isLoading) {\n    //TODO: adda skeletons here\n    return [];\n  }\n\n  return tokenAccounts\n    .filter(\n      (x) => x && x.name?.toLowerCase().includes(searchFilter.toLowerCase())\n    )\n    .map((x) => ({\n      name: x.name || \"\",\n      id: x.mint || \"\",\n      image: x.logo || \"\",\n      address: x.address || \"\",\n    }));\n};\n","import {\n  useActiveSolanaWallet,\n  useSolanaConnectionUrl,\n  xnfts,\n} from \"@coral-xyz/recoil\";\nimport { useRecoilValueLoadable } from \"recoil\";\n\nexport const useSearchedXnfts = (searchFilter: string) => {\n  const activeSolWallet = useActiveSolanaWallet();\n  const connectionUrl = useSolanaConnectionUrl();\n  const { contents, state }: any = useRecoilValueLoadable(\n    xnfts({\n      publicKey: activeSolWallet?.publicKey,\n      connectionUrl,\n    })\n  );\n\n  if (state === \"loading\" || state === \"hasError\") {\n    return [];\n  }\n  return contents\n    .filter((x: any) =>\n      x.title?.toLowerCase()?.includes(searchFilter.toLowerCase())\n    )\n    .map((x: any) => ({\n      name: x.title || \"\",\n      image: x.iconUrl || \"\",\n      id: x.id || \"\",\n      publicKey: x.install.account.xnft.toString(),\n    }));\n};\n","export const getCurrentCounter = (\n  arrowIndex: number,\n  allResultsLength: number\n) => {\n  return arrowIndex >= 0\n    ? arrowIndex % allResultsLength\n    : (arrowIndex +\n        -1 * Math.ceil(arrowIndex / allResultsLength) * allResultsLength) %\n        allResultsLength;\n};\n","import type { SolanaFeeConfig } from \"@coral-xyz/common\";\nimport {\n  Blockchain,\n  deserializeLegacyTransaction,\n  deserializeTransaction,\n} from \"@coral-xyz/common\";\nimport { ComputeBudgetProgram } from \"@solana/web3.js\";\nimport { ethers } from \"ethers\";\n\nconst { base58: bs58 } = ethers.utils;\n\nexport const sanitizeTransactionWithFeeConfig = (\n  txStr: string,\n  blockchain: Blockchain,\n  feeConfig?: { disabled: boolean; config: SolanaFeeConfig }\n) => {\n  if (\n    blockchain === Blockchain.SOLANA &&\n    feeConfig &&\n    feeConfig?.config.priorityFee &&\n    !feeConfig.disabled\n  ) {\n    let tx = deserializeTransaction(txStr);\n\n    if (tx.version === \"legacy\") {\n      return txStr;\n    }\n\n    const transaction = deserializeLegacyTransaction(txStr);\n    const modifyComputeUnits = ComputeBudgetProgram.setComputeUnitLimit({\n      units: feeConfig.config.computeUnits,\n    });\n\n    const addPriorityFee = ComputeBudgetProgram.setComputeUnitPrice({\n      microLamports: feeConfig.config.priorityFee,\n    });\n\n    transaction.add(modifyComputeUnits);\n    transaction.add(addPriorityFee);\n    return bs58.encode(\n      transaction.serialize({\n        requireAllSignatures: false,\n        verifySignatures: false,\n      })\n    );\n  } else {\n    return txStr;\n  }\n};\n","import * as bs58 from \"bs58\";\nimport { pbkdf2 } from \"crypto\";\nimport { randomBytes, secretbox } from \"tweetnacl\";\n\n// An encrypted secret with associated metadata required for decryption.\nexport type SecretPayload = {\n  ciphertext: string;\n  nonce: string;\n  salt: string;\n  kdf: string;\n  iterations: number;\n  digest: string;\n};\n\nexport async function encrypt(\n  plaintext: string,\n  password: string\n): Promise<SecretPayload> {\n  const salt = randomBytes(16);\n  const kdf = \"pbkdf2\";\n  const iterations = 100000;\n  const digest = \"sha256\";\n  const key = await deriveEncryptionKey(password, salt, iterations, digest);\n  const nonce = randomBytes(secretbox.nonceLength);\n  const ciphertext = secretbox(Buffer.from(plaintext), nonce, key);\n  return {\n    ciphertext: bs58.encode(ciphertext),\n    nonce: bs58.encode(nonce),\n    kdf,\n    salt: bs58.encode(salt),\n    iterations,\n    digest,\n  };\n}\n\nexport async function decrypt(\n  cipherObj: SecretPayload,\n  password: string\n): Promise<string> {\n  const {\n    ciphertext: encodedCiphertext,\n    nonce: encodedNonce,\n    salt: encodedSalt,\n    iterations,\n    digest,\n  } = cipherObj;\n  const ciphertext = bs58.decode(encodedCiphertext);\n  const nonce = bs58.decode(encodedNonce);\n  const salt = bs58.decode(encodedSalt);\n  const key = await deriveEncryptionKey(password, salt, iterations, digest);\n  const plaintext = secretbox.open(ciphertext, nonce, key);\n  if (!plaintext) {\n    throw new Error(\"Incorrect password\");\n  }\n  const decodedPlaintext = Buffer.from(plaintext).toString();\n  return decodedPlaintext;\n}\n\nasync function deriveEncryptionKey(\n  password: string,\n  salt: Uint8Array,\n  iterations: number,\n  digest: string\n): Promise<Buffer> {\n  return new Promise((resolve, reject) =>\n    pbkdf2(\n      password,\n      salt,\n      iterations,\n      secretbox.keyLength,\n      digest,\n      (err, key) => (err ? reject(err) : resolve(key))\n    )\n  );\n}\n","import { BrowserRuntimeCommon } from \"@coral-xyz/common\";\n\nexport class LocalStorageDb {\n  static async get(key: string): Promise<any> {\n    return await BrowserRuntimeCommon.getLocalStorage(key);\n  }\n\n  static async set(key: string, value: any): Promise<void> {\n    await BrowserRuntimeCommon.setLocalStorage(key, value);\n  }\n\n  static async reset(): Promise<void> {\n    await BrowserRuntimeCommon.clearLocalStorage();\n  }\n}\n","import type { FEATURE_GATES_MAP } from \"@coral-xyz/common\";\n\nimport { LocalStorageDb } from \"./db\";\n\nconst KEY_FEATURE_GATES_STORE = \"feature-gates-store\";\n\nexport async function getFeatureGates(): Promise<FEATURE_GATES_MAP> {\n  return await LocalStorageDb.get(KEY_FEATURE_GATES_STORE);\n}\n\nexport async function setFeatureGates(gates: FEATURE_GATES_MAP) {\n  await LocalStorageDb.set(KEY_FEATURE_GATES_STORE, gates);\n}\n","// This \"store\" module defines all the persistent model objects for the storage\n// layer of the app.\n\nimport { LocalStorageDb } from \"./db\";\n\nexport * from \"./db\";\nexport * from \"./feature-gates\";\nexport * from \"./isCold\";\nexport * from \"./keyname\";\nexport * from \"./keyring\";\nexport * from \"./navigation\";\nexport * from \"./preferences\";\nexport * from \"./usernames\";\nexport * from \"./xnft-preferences\";\n\nexport function reset() {\n  return LocalStorageDb.reset();\n}\n","import { LocalStorageDb } from \"./db\";\n\nconst KEY_IS_COLD_STORE = \"is-cold-store\";\n\n/**\n * Persistent model for the naming of wallet keys.\n */\nexport type IsColdKeys = {\n  [publicKeyStr: string]: boolean;\n};\n\nexport async function setIsCold(publicKey: string, isCold?: boolean) {\n  let keynames = await LocalStorageDb.get(key());\n  if (!keynames) {\n    keynames = {};\n  }\n  keynames[publicKey] = isCold;\n  await LocalStorageDb.set(KEY_IS_COLD_STORE, keynames);\n}\n\nexport async function getIsCold(publicKey: string): Promise<boolean> {\n  const isColdKeys = await LocalStorageDb.get(key());\n  const isCold = isColdKeys?.[publicKey];\n  if (!isCold) {\n    return false;\n  }\n  return isCold;\n}\n\nfunction key() {\n  return `${KEY_IS_COLD_STORE}`;\n}\n","import { LocalStorageDb } from \"./db\";\n\nconst KEY_KEYNAME_STORE = \"keyname-store\";\n\n/**\n * Persistent model for the naming of wallet keys.\n */\nexport type Keyname = {\n  [publicKeyStr: string]: string;\n};\n\nexport async function setKeyname(publicKey: string, name: string) {\n  let keynames = await LocalStorageDb.get(key());\n  if (!keynames) {\n    keynames = {};\n  }\n  keynames[publicKey] = name;\n  await LocalStorageDb.set(KEY_KEYNAME_STORE, keynames);\n}\n\nexport async function getKeyname(publicKey: string): Promise<string> {\n  const names = await LocalStorageDb.get(key());\n  const name = names[publicKey];\n  if (!name) {\n    throw Error(`unable to find name for key: ${publicKey.toString()}`);\n  }\n  return name;\n}\n\nfunction key() {\n  return `${KEY_KEYNAME_STORE}`;\n}\n\nexport const DefaultKeyname = {\n  defaultDerived(index: number): string {\n    return `Wallet ${index}`;\n  },\n  defaultImported(index: number): string {\n    return `Imported Wallet ${index}`;\n  },\n  defaultLedger(index: number): string {\n    return `Ledger ${index}`;\n  },\n};\n","import type { Blockchain, BlockchainKeyringJson } from \"@coral-xyz/common\";\n\nimport type { SecretPayload } from \"../keyring/crypto\";\nimport * as crypto from \"../keyring/crypto\";\n\nimport { LocalStorageDb } from \"./db\";\nimport { runMigrationsIfNeeded } from \"./migrations\";\n\nconst KEY_KEYRING_STORE = \"keyring-store\";\n\n/**\n * Persistent model for the keyring store json. This is encrypted and decrypted\n * before reading to/from local storage.\n */\nexport type KeyringStoreJson = {\n  users: {\n    [uuid: string]: UserKeyringJson;\n  };\n  lastUsedTs: number;\n};\n\nexport type UserKeyringJson = {\n  uuid: string;\n  username: string;\n  activeBlockchain: Blockchain;\n  mnemonic?: string;\n  blockchains: {\n    [blockchain: string]: BlockchainKeyringJson;\n  };\n};\n\n// The keyring store should only ever be accessed through this method.\n//\n// Note: this method reserves the right to mutate `userInfo`. This is required\n//       for example, for the 510 migration, where a UUID doesn't exist and\n//       so the migration needs to get and fetch it--and set it on the\n//       `userInfo` object for use elsewhere.\nexport async function getKeyringStore(userInfo: {\n  uuid: string;\n  password: string;\n}): Promise<KeyringStoreJson> {\n  await runMigrationsIfNeeded(userInfo);\n  const json = await getKeyringStore_NO_MIGRATION(userInfo.password);\n  return json;\n}\n\nexport async function getKeyringStore_NO_MIGRATION(password: string) {\n  const ciphertextPayload = await getKeyringCiphertext();\n  if (ciphertextPayload === undefined || ciphertextPayload === null) {\n    throw new Error(\"keyring store not found on disk\");\n  }\n  const plaintext = await crypto.decrypt(ciphertextPayload, password);\n  const json = JSON.parse(plaintext);\n  return json;\n}\n\nexport async function setKeyringStore(\n  json: KeyringStoreJson,\n  password: string\n): Promise<void> {\n  const plaintext = JSON.stringify(json);\n  const ciphertext = await crypto.encrypt(plaintext, password!);\n  await setKeyringCiphertext(ciphertext);\n}\n\n// Never call this externally. Only exported for migrations.\nexport async function getKeyringCiphertext(): Promise<SecretPayload> {\n  return await LocalStorageDb.get(KEY_KEYRING_STORE);\n}\n\nasync function setKeyringCiphertext(ciphertext: SecretPayload) {\n  await LocalStorageDb.set(KEY_KEYRING_STORE, ciphertext);\n}\n\nexport async function doesCiphertextExist(): Promise<boolean> {\n  const ciphertext = await getKeyringCiphertext();\n  return ciphertext !== undefined && ciphertext !== null;\n}\n","import { BACKPACK_CONFIG_VERSION, getLogger } from \"@coral-xyz/common\";\n\nimport { LocalStorageDb } from \"../db\";\nimport { migrate_0_2_0_510 } from \"../migrations/migrate_0_2_0_510\";\nimport { migrate_0_2_0_2408 } from \"../migrations/migrate_0_2_0_2408\";\nimport { getWalletData_DEPRECATED } from \"../preferences\";\n\nconst logger = getLogger(\"background/migrations\");\n\n/**\n * Entrypoint to migrations. This function itself is idempotent. However,\n * we make no guarantee that the migration itself succeeds. If it does not,\n * we will detect it and throw an error, in which case it's expected for the\n * user to reonboard.\n *\n * Steps to add a new migration:\n *\n *   - update the LATEST_MIGRATION_BUILD number\n *   - append a new `runMigration` function in the block of code below,\n *     with the migration build number dependent on the previous one.\n */\nexport async function runMigrationsIfNeeded(userInfo: {\n  uuid: string;\n  password: string;\n}) {\n  try {\n    await _runMigrationsIfNeeded(userInfo);\n  } catch (err) {\n    // Note: the UI currently assumes this string format.\n    throw new Error(`migration failed: ${err.toString()}`);\n  }\n}\n\nasync function _runMigrationsIfNeeded(userInfo: {\n  uuid: string;\n  password: string;\n}) {\n  const LATEST_MIGRATION_BUILD = 2408; // Update this everytime a migration is added.\n  const lastMigration = await getMigration();\n\n  logger.debug(\"starting migrations with last migration\", lastMigration);\n  if (BACKPACK_CONFIG_VERSION === \"development\") {\n    const migrationLog = await getMigrationLog();\n    logger.debug(\"migration log:\", migrationLog);\n  }\n\n  //\n  // If we've already migrated to the latest build, then exit.\n  //\n  if (\n    lastMigration?.state === \"finalized\" &&\n    lastMigration?.build === LATEST_MIGRATION_BUILD\n  ) {\n    logger.debug(\"already migrated, early exit\");\n    return;\n  }\n\n  //\n  // If a migration step terminated early, then we're in a corrupt state, so\n  // exit with an error.\n  //\n  if (lastMigration !== undefined && lastMigration?.state === \"start\") {\n    throw new Error(\"migration failed, please re-install Backpack\");\n  }\n\n  logger.debug(\"running all migrations\");\n\n  //\n  // Execute all migrations, if needed.\n  //\n  // Note that the conditional for the first migration is unique because\n  // there was not previously a migration storage field. And so we hack together\n  // the condition with fields we know to be true. All other migrations\n  // are simply dependent on the last migration being the previous one.\n  //\n  if (\n    lastMigration === undefined &&\n    (await getWalletData_DEPRECATED()) !== undefined\n  ) {\n    await runMigration(510, async () => {\n      await migrate_0_2_0_510(userInfo);\n    });\n  }\n  if ((await getMigration())?.build === 510) {\n    await runMigration(2408, async () => {\n      await migrate_0_2_0_2408(userInfo);\n    });\n  }\n\n  //\n  // Set the last migration as finalized.\n  //\n  const finalMigration = await getMigration();\n  if (\n    finalMigration === undefined ||\n    finalMigration?.build !== LATEST_MIGRATION_BUILD ||\n    finalMigration?.state !== \"finalized\"\n  ) {\n    await setMigration({\n      build: LATEST_MIGRATION_BUILD,\n      state: \"finalized\",\n    });\n  }\n\n  if (BACKPACK_CONFIG_VERSION === \"development\") {\n    const migrationLog = await getMigrationLog();\n    logger.debug(\"migration log:\", migrationLog);\n  }\n  logger.debug(\"migration success\");\n}\n\nasync function runMigration(build: number, fn: () => Promise<void>) {\n  logger.debug(`running migration ${build}`);\n  await setMigration({\n    build,\n    state: \"start\",\n  });\n  await fn();\n  await setMigration({\n    build,\n    state: \"end\",\n  });\n  logger.debug(`migration ${build} was a success`);\n}\n\n/**\n * Migrations are setup with two pieces of data.\n *\n * 1) The latest migration. This stores the build number for the last migration\n *    alongside its state.\n * 2) A linear log of all migrations ever executed for this local client.\n *    This is provided mostly for debugging purposes, as it maintains a\n *    history of all migration state transitions.\n */\n\nconst STORE_MIGRATION_KEY = \"last-migration\";\nconst STORE_MIGRATION_LOG_KEY = \"migration-log\";\n\ntype Migration = {\n  build: number;\n  state: \"start\" | \"end\" | \"finalized\";\n};\n\nasync function getMigration(): Promise<Migration | undefined> {\n  const data = await LocalStorageDb.get(STORE_MIGRATION_KEY);\n  return data;\n}\n\nasync function setMigration(m: Migration) {\n  await LocalStorageDb.set(STORE_MIGRATION_KEY, m);\n  await pushMigrationLog(m);\n}\n\nasync function getMigrationLog(): Promise<Array<Migration> | undefined> {\n  return await LocalStorageDb.get(STORE_MIGRATION_LOG_KEY);\n}\n\nasync function pushMigrationLog(m: Migration) {\n  let log = await getMigrationLog();\n  if (log === undefined) {\n    log = [];\n  }\n  log.push(m);\n  await LocalStorageDb.set(STORE_MIGRATION_LOG_KEY, log);\n}\n","// Migration: 0.2.0-latest-beta-2408.\n//\n// We make a best effort to migrate gracefully. This is not atomic.\n//\n// In the event of failure, the user must re-onboard.\n\nimport type { Blockchain } from \"@coral-xyz/common\";\nimport {\n  legacyBip44ChangeIndexed,\n  legacyBip44Indexed,\n  legacySolletIndexed,\n  nextIndicesFromPaths,\n} from \"@coral-xyz/common\";\n\nimport { getKeyringStore_NO_MIGRATION, setKeyringStore } from \"../keyring\";\n\nexport async function migrate_0_2_0_2408(userInfo: {\n  uuid: string;\n  password: string;\n}) {\n  const { password } = userInfo;\n\n  //\n  // Get the current keyring store.\n  //\n  const json = await getKeyringStore_NO_MIGRATION(password);\n\n  //\n  // Update it to the new format.\n  //\n  for (const [user, userData] of Object.entries(json.users)) {\n    for (const [blockchain, blockchainKeyring] of Object.entries(\n      // @ts-ignore\n      userData.blockchains\n    )) {\n      // Migrate hd keyring\n      // Remaps old style DerivationPath and accountIndices to a flat array\n      // of derivation paths\n      // @ts-ignore\n      let hdKeyring = blockchainKeyring.hdKeyring;\n      if (hdKeyring && hdKeyring.accountIndices !== undefined) {\n        const derivationPaths = hdKeyring.accountIndices.map((i: number) => {\n          if (hdKeyring.derivationPath === \"bip44\") {\n            return legacyBip44Indexed(blockchain as Blockchain, i);\n          } else if (hdKeyring.derivationPath === \"bip44-change\") {\n            return legacyBip44ChangeIndexed(blockchain as Blockchain, i);\n          } else {\n            return legacySolletIndexed(i);\n          }\n        });\n        const { accountIndex, walletIndex } =\n          nextIndicesFromPaths(derivationPaths);\n        json.users[user].blockchains[blockchain].hdKeyring = {\n          mnemonic: hdKeyring.mnemonic,\n          seed: hdKeyring.seed,\n          derivationPaths,\n          accountIndex,\n          walletIndex,\n        };\n      }\n\n      // Migrate ledger keyring\n      // @ts-ignore\n      let ledgerKeyring = blockchainKeyring.ledgerKeyring;\n      if (ledgerKeyring.derivationPaths !== undefined) {\n        const walletDescriptors = ledgerKeyring.derivationPaths.map(\n          (d: { path: string; account: number; publicKey: string }) => {\n            let derivationPath: string;\n            if (d.path === \"bip44\") {\n              derivationPath = legacyBip44Indexed(\n                blockchain as Blockchain,\n                d.account\n              );\n            } else if (d.path === \"bip44-change\") {\n              derivationPath = legacyBip44ChangeIndexed(\n                blockchain as Blockchain,\n                d.account\n              );\n            } else {\n              derivationPath = legacySolletIndexed(d.account);\n            }\n            return {\n              derivationPath,\n              publicKey: d.publicKey,\n            };\n          }\n        );\n        json.users[user].blockchains[blockchain].ledgerKeyring = {\n          walletDescriptors,\n        };\n      }\n    }\n  }\n\n  //\n  // Save the new format.\n  //\n  await setKeyringStore(json, password);\n}\n","import type { Blockchain } from \"@coral-xyz/common\";\nimport {\n  BACKEND_API_URL,\n  defaultPreferences,\n  getLogger,\n} from \"@coral-xyz/common\";\n\nimport * as crypto from \"../../keyring/crypto\";\nimport type { KeyringStoreJson } from \"../keyring\";\nimport { getKeyringCiphertext, setKeyringStore } from \"../keyring\";\nimport {\n  getWalletData_DEPRECATED,\n  setWalletData_DEPRECATED,\n  setWalletDataForUser,\n} from \"../preferences\";\nimport { getUserData, setUserData } from \"../usernames\";\n\nconst logger = getLogger(\"migrations/0_2_0_510\");\n\n// Migration: 0.2.0-latest-beta-510.\n//\n// We make a best effort to migrate gracefully. This is neither atomic nor\n// idempotent.\n//\n// In the event of failure, the user must re-onboard.\nexport async function migrate_0_2_0_510(userInfo: {\n  uuid: string;\n  password: string;\n}) {\n  const username = await migrateWalletData_0_2_0_510(userInfo);\n  await migrateUserData_0_2_0_510(userInfo, username);\n  await migrateKeyringStore_0_2_0_510(userInfo, username);\n}\n\n// Migration:\n//\n//  - moves the wallet data object to a user specfic location.\n//  - clears out the old global wallet data object.\nasync function migrateWalletData_0_2_0_510(userInfo: {\n  uuid: string;\n  password: string;\n}): Promise<string> {\n  const walletData = await getWalletData_DEPRECATED();\n\n  if (!walletData) {\n    logger.error(\"wallet data not found on disk\");\n    throw new Error(\"wallet data not found\");\n  }\n\n  const username = walletData.username;\n  if (!username) {\n    logger.error(\"wallet username not found on disk\");\n    throw new Error(\"wallet data not found\");\n  }\n\n  if (!userInfo.uuid) {\n    const resp = await fetch(`${BACKEND_API_URL}/users/${username}`);\n    const json = await resp.json();\n    userInfo.uuid = json.id;\n  }\n\n  // Write the username specific data.\n  await setWalletDataForUser(userInfo.uuid, {\n    ...defaultPreferences(),\n    ...walletData,\n  });\n\n  // Clear the old data.\n  await setWalletData_DEPRECATED(undefined);\n\n  return username;\n}\n\n// Migration:\n//\n// - creates the UserData storage field.\nasync function migrateUserData_0_2_0_510(\n  userInfo: { uuid: string; password: string },\n  username: string\n) {\n  let invariantViolation = false;\n  try {\n    await getUserData();\n    invariantViolation = true;\n  } catch {\n    // expect err\n  }\n\n  if (invariantViolation) {\n    throw new Error(\"getUserdata had unexpected data\");\n  }\n\n  const activeUser = {\n    username,\n    uuid: userInfo.uuid,\n    jwt: \"\",\n  };\n  await setUserData({\n    activeUser,\n    users: [activeUser],\n  });\n}\n\n// Migration:\n//\n//   - moves the keyring store from the older single user format to the new\n//     multi user format.\nexport async function migrateKeyringStore_0_2_0_510(\n  userInfo: {\n    uuid: string;\n    password: string;\n  },\n  username: string\n) {\n  const { uuid, password } = userInfo;\n  const ciphertextPayload = await getKeyringCiphertext();\n  if (ciphertextPayload === undefined || ciphertextPayload === null) {\n    logger.error(\"keyring store not found on disk\");\n    return;\n  }\n\n  const plaintext = await crypto.decrypt(ciphertextPayload, password);\n  const oldJson = JSON.parse(plaintext);\n\n  if (oldJson.username) {\n    logger.error(\"keyring store already migrated\");\n    return;\n  }\n\n  const { mnemonic, blockchains, lastUsedTs } = oldJson;\n\n  const newJson: KeyringStoreJson = {\n    users: Object.fromEntries([\n      [\n        uuid,\n        {\n          uuid,\n          username,\n          mnemonic,\n          activeBlockchain: Object.keys(blockchains)[0] as Blockchain,\n          blockchains,\n        },\n      ],\n    ]),\n    lastUsedTs,\n  };\n\n  await setKeyringStore(newJson, password);\n}\n","import { TAB_NOTIFICATIONS, TAB_RECENT_ACTIVITY } from \"@coral-xyz/common\";\n\nimport { LocalStorageDb } from \"./db\";\n\nconst STORE_KEY_NAV = \"nav-store7\";\n\n/**\n * Persistent model for extension navigation urls.\n */\nexport type Nav = {\n  activeTab: string;\n  data: { [navId: string]: NavData };\n};\n\nexport type NavData = {\n  id: string;\n  urls: Array<any>;\n};\n\nexport async function getNav(): Promise<Nav | undefined> {\n  const nav = await LocalStorageDb.get(STORE_KEY_NAV);\n\n  if (!nav) {\n    return nav;\n  }\n\n  let needsMigration = false;\n\n  if (nav[TAB_NOTIFICATIONS] === undefined) {\n    needsMigration = true;\n    nav[TAB_NOTIFICATIONS] = {\n      id: TAB_NOTIFICATIONS,\n      urls: [],\n    };\n  }\n  if (nav[TAB_RECENT_ACTIVITY] === undefined) {\n    needsMigration = true;\n    nav[TAB_RECENT_ACTIVITY] = {\n      id: TAB_RECENT_ACTIVITY,\n      urls: [],\n    };\n  }\n\n  if (needsMigration) {\n    await setNav(nav);\n  }\n\n  return nav;\n}\n\nexport async function setNav(nav: Nav) {\n  await LocalStorageDb.set(STORE_KEY_NAV, nav);\n}\n","import type {\n  DeprecatedWalletDataDoNotUse,\n  Preferences,\n} from \"@coral-xyz/common\";\n\nimport { LocalStorageDb } from \"./db\";\n\nconst STORE_KEY_WALLET_DATA = \"wallet-data\";\n\nexport async function getWalletDataForUser(uuid: string): Promise<Preferences> {\n  const data = await LocalStorageDb.get(key(uuid));\n  if (data === undefined) {\n    throw new Error(`wallet data for user ${uuid} is undefined`);\n  }\n  return data;\n}\n\nexport async function setWalletDataForUser(uuid: string, data?: Preferences) {\n  await LocalStorageDb.set(key(uuid), data);\n}\n\nexport async function getWalletData_DEPRECATED(): Promise<\n  DeprecatedWalletDataDoNotUse | undefined\n> {\n  const data = await LocalStorageDb.get(STORE_KEY_WALLET_DATA);\n  return data;\n}\n\nexport async function setWalletData_DEPRECATED(\n  data: undefined | DeprecatedWalletDataDoNotUse\n) {\n  await LocalStorageDb.set(STORE_KEY_WALLET_DATA, data);\n}\n\nfunction key(uuid: string): string {\n  return `${STORE_KEY_WALLET_DATA}_${uuid}`;\n}\n","import { LocalStorageDb } from \"./db\";\n\nconst STORE_KEY_USER_DATA = \"user-data\";\n\ntype UserData = {\n  activeUser: User;\n  users: Array<User>;\n};\n\nexport type User = {\n  username: string;\n  uuid: string;\n  jwt: string;\n};\n\nexport async function getActiveUser(): Promise<User> {\n  const data = await getUserData();\n  return data.activeUser;\n}\n\nexport async function setActiveUser(activeUser: User) {\n  const data = await LocalStorageDb.get(STORE_KEY_USER_DATA);\n  if (data == undefined || data == null) {\n    await LocalStorageDb.set(STORE_KEY_USER_DATA, {\n      activeUser,\n      users: [activeUser],\n    });\n  } else {\n    let isNew = !data.users.some((u: any) => u.uuid === activeUser.uuid);\n    const users = isNew ? data.users.concat([activeUser]) : data.users;\n    await LocalStorageDb.set(STORE_KEY_USER_DATA, {\n      activeUser,\n      users,\n    });\n  }\n}\n\nexport async function getUserData(): Promise<UserData> {\n  const data = await LocalStorageDb.get(STORE_KEY_USER_DATA);\n  if (data === undefined) {\n    throw new Error(\"user data not found\");\n  }\n  return data;\n}\n\n/**\n * Used to update users in storage. This is primarily used for updating the\n * cached JWT value, but may be used if usernames are made immutable in the\n * future.\n */\nexport async function setUser(\n  uuid: string,\n  updateData: Partial<User>\n): Promise<User> {\n  const data = await LocalStorageDb.get(STORE_KEY_USER_DATA);\n  const user = data.users.find((u: User) => u.uuid === uuid);\n  const updatedUser = {\n    ...user,\n    ...updateData,\n  };\n  await LocalStorageDb.set(STORE_KEY_USER_DATA, {\n    activeUser: data.activeUser.uuid === uuid ? updatedUser : data.activeUser,\n    users: data.users\n      .filter((u: User) => u.uuid !== uuid)\n      .concat([updatedUser]),\n  });\n  return updatedUser;\n}\n\nexport async function setUserData(data: UserData) {\n  await LocalStorageDb.set(STORE_KEY_USER_DATA, data);\n}\n","import type { XnftPreferenceStore } from \"@coral-xyz/common\";\n\nimport { LocalStorageDb } from \"./db\";\n\nconst KEY_XNFT_PREFERENCES_STORE = \"xnft-preferences-store\";\n\nexport async function getXnftPreferencesForUser(\n  uuid: string\n): Promise<XnftPreferenceStore> {\n  return await LocalStorageDb.get(key(uuid));\n}\n\nexport async function setXnftPreferencesForUser(\n  uuid: string,\n  preferences: XnftPreferenceStore\n) {\n  await LocalStorageDb.set(key(uuid), preferences);\n}\n\nfunction key(uuid: string): string {\n  return `${KEY_XNFT_PREFERENCES_STORE}_${uuid}`;\n}\n","import { deriveEthereumPrivateKey, EthereumHdKeyringFactory, EthereumKeyringFactory, EthereumLedgerKeyringFactory, } from \"@coral-xyz/blockchain-evm\";\nimport { BlockchainKeyring } from \"@coral-xyz/blockchain-keyring\";\nimport { deriveSolanaPrivateKey, SolanaHdKeyringFactory, SolanaKeyringFactory, SolanaLedgerKeyringFactory, } from \"@coral-xyz/blockchain-solana\";\nimport { Blockchain } from \"@coral-xyz/common\";\nimport { mnemonicToSeedSync } from \"bip39\";\nexport function hdFactoryForBlockchain(blockchain) {\n    return {\n        [Blockchain.SOLANA]: new SolanaHdKeyringFactory(),\n        [Blockchain.ETHEREUM]: new EthereumHdKeyringFactory(),\n    }[blockchain];\n}\nexport function keyringForBlockchain(blockchain) {\n    return {\n        [Blockchain.SOLANA]: new BlockchainKeyring(new SolanaHdKeyringFactory(), new SolanaKeyringFactory(), new SolanaLedgerKeyringFactory()),\n        [Blockchain.ETHEREUM]: new BlockchainKeyring(new EthereumHdKeyringFactory(), new EthereumKeyringFactory(), new EthereumLedgerKeyringFactory()),\n    }[blockchain];\n}\nexport function mnemonicPathToPrivateKey(blockchain, mnemonic, derivationPath) {\n    const seed = mnemonicToSeedSync(mnemonic);\n    if (blockchain === Blockchain.ETHEREUM) {\n        return deriveEthereumPrivateKey(seed, derivationPath);\n    }\n    else if (blockchain === Blockchain.SOLANA) {\n        return Buffer.from(deriveSolanaPrivateKey(seed, derivationPath)).toString(\"hex\");\n    }\n    throw new Error(\"invalid blockchain\");\n}\n//# sourceMappingURL=index.js.map","export * from \"./keyring\";\nexport * from \"./util\";\n//# sourceMappingURL=index.js.map","import { LedgerKeyringBase } from \"@coral-xyz/blockchain-keyring\";\nimport { Blockchain, getIndexedPath, LEDGER_METHOD_ETHEREUM_SIGN_MESSAGE, LEDGER_METHOD_ETHEREUM_SIGN_TRANSACTION, nextIndicesFromPaths, } from \"@coral-xyz/common\";\nimport { mnemonicToSeedSync, validateMnemonic } from \"bip39\";\nimport { ethers } from \"ethers\";\nimport { deriveEthereumWallet } from \"../util\";\nexport class EthereumKeyringFactory {\n    init(secretKeys) {\n        const wallets = secretKeys.map((secretKey) => {\n            return new ethers.Wallet(secretKey);\n        });\n        return new EthereumKeyring(wallets);\n    }\n    fromJson(payload) {\n        const wallets = payload.secretKeys.map((secret) => {\n            return new ethers.Wallet(Buffer.from(secret, \"hex\").toString());\n        });\n        return new EthereumKeyring(wallets);\n    }\n}\nexport class EthereumKeyring {\n    constructor(wallets) {\n        this.wallets = wallets;\n    }\n    publicKeys() {\n        return this.wallets.map((w) => w.address);\n    }\n    deletePublicKey(publicKey) {\n        this.wallets = this.wallets.filter((w) => w.address !== publicKey);\n    }\n    importSecretKey(secretKey) {\n        const wallet = new ethers.Wallet(secretKey);\n        this.wallets.push(wallet);\n        return wallet.address;\n    }\n    exportSecretKey(address) {\n        const wallet = this.wallets.find((w) => w.address === address);\n        return wallet ? wallet.privateKey : null;\n    }\n    async signTransaction(serializedTx, signerAddress) {\n        const wallet = this.wallets.find((w) => w.address === signerAddress);\n        if (!wallet) {\n            throw new Error(`unable to find ${signerAddress.toString()}`);\n        }\n        const tx = ethers.utils.parseTransaction(ethers.utils.hexlify(serializedTx));\n        return await wallet.signTransaction(tx);\n    }\n    async signMessage(message, signerAddress) {\n        const wallet = this.wallets.find((w) => w.address === signerAddress);\n        if (!wallet) {\n            throw new Error(`unable to find ${signerAddress.toString()}`);\n        }\n        return await wallet.signMessage(message.toString());\n    }\n    toJson() {\n        return {\n            // Private keys, just using the Solana secret key nomenclature\n            secretKeys: this.wallets.map((w) => Buffer.from(w.privateKey).toString(\"hex\")),\n        };\n    }\n}\nexport class EthereumHdKeyringFactory {\n    init(mnemonic, derivationPaths) {\n        if (!validateMnemonic(mnemonic)) {\n            throw new Error(\"Invalid seed words\");\n        }\n        const seed = mnemonicToSeedSync(mnemonic);\n        return new EthereumHdKeyring({\n            mnemonic,\n            seed,\n            derivationPaths,\n        });\n    }\n    // @ts-ignore\n    fromJson({ mnemonic, seed, derivationPaths, accountIndex, walletIndex, }) {\n        return new EthereumHdKeyring({\n            mnemonic,\n            seed: Buffer.from(seed, \"hex\"),\n            derivationPaths,\n            accountIndex,\n            walletIndex,\n        });\n    }\n}\nexport class EthereumHdKeyring extends EthereumKeyring {\n    constructor({ mnemonic, seed, derivationPaths, accountIndex, walletIndex, }) {\n        const wallets = derivationPaths.map((d) => deriveEthereumWallet(seed, d));\n        super(wallets);\n        this.mnemonic = mnemonic;\n        this.seed = seed;\n        this.derivationPaths = derivationPaths;\n        this.accountIndex = accountIndex;\n        this.walletIndex = walletIndex;\n    }\n    deletePublicKey(publicKey) {\n        const index = this.wallets.findIndex((w) => w.address === publicKey);\n        if (index < 0) {\n            return;\n        }\n        this.derivationPaths = this.derivationPaths\n            .slice(0, index)\n            .concat(this.derivationPaths.slice(index + 1));\n        super.deletePublicKey(publicKey);\n    }\n    nextDerivationPath(offset = 1) {\n        this.ensureIndices();\n        const derivationPath = getIndexedPath(Blockchain.ETHEREUM, this.accountIndex, this.walletIndex + offset);\n        if (this.derivationPaths.includes(derivationPath)) {\n            // This key is already included for some reason, try again with\n            // incremented walletIndex\n            return this.nextDerivationPath(offset + 1);\n        }\n        return { derivationPath, offset };\n    }\n    deriveNextKey() {\n        const { derivationPath, offset } = this.nextDerivationPath();\n        // Save the offset to the wallet index\n        this.walletIndex += offset;\n        const publicKey = this.addDerivationPath(derivationPath);\n        return {\n            publicKey,\n            derivationPath,\n        };\n    }\n    addDerivationPath(derivationPath) {\n        const wallet = ethers.Wallet.fromMnemonic(this.mnemonic, derivationPath);\n        if (!this.derivationPaths.includes(derivationPath)) {\n            // Don't persist duplicate public keys\n            this.derivationPaths.push(derivationPath);\n            this.wallets.push(wallet);\n        }\n        return wallet.address;\n    }\n    ensureIndices() {\n        // If account index and wallet index don't exist, make a best guess based\n        // on the existing derivation paths for the keyring\n        if (this.accountIndex === undefined || this.walletIndex === undefined) {\n            const { accountIndex, walletIndex } = nextIndicesFromPaths(this.derivationPaths);\n            if (!this.accountIndex)\n                this.accountIndex = accountIndex;\n            if (!this.walletIndex)\n                this.walletIndex = walletIndex;\n        }\n    }\n    // @ts-ignore\n    toJson() {\n        return {\n            mnemonic: this.mnemonic,\n            seed: this.seed.toString(\"hex\"),\n            derivationPaths: this.derivationPaths,\n            accountIndex: this.accountIndex,\n            walletIndex: this.walletIndex,\n        };\n    }\n}\nexport class EthereumLedgerKeyringFactory {\n    init(walletDescriptors) {\n        return new EthereumLedgerKeyring(walletDescriptors, Blockchain.ETHEREUM);\n    }\n    fromJson(obj) {\n        return new EthereumLedgerKeyring(obj.walletDescriptors, Blockchain.ETHEREUM);\n    }\n}\nexport class EthereumLedgerKeyring extends LedgerKeyringBase {\n    async signTransaction(serializedTx, publicKey) {\n        const walletDescriptor = this.walletDescriptors.find((p) => p.publicKey === publicKey);\n        if (!walletDescriptor) {\n            throw new Error(\"ledger public key not found\");\n        }\n        const tx = ethers.utils.parseTransaction(ethers.utils.hexlify(serializedTx));\n        return await this.request({\n            method: LEDGER_METHOD_ETHEREUM_SIGN_TRANSACTION,\n            params: [tx, walletDescriptor.derivationPath],\n        });\n    }\n    async signMessage(msg, publicKey) {\n        const walletDescriptor = this.walletDescriptors.find((p) => p.publicKey === publicKey);\n        if (!walletDescriptor) {\n            throw new Error(\"ledger public key not found\");\n        }\n        return await this.request({\n            method: LEDGER_METHOD_ETHEREUM_SIGN_MESSAGE,\n            params: [msg, walletDescriptor.derivationPath],\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","import { ethers } from \"ethers\";\nexport function deriveEthereumWallet(seed, derivationPath) {\n    const privateKey = deriveEthereumPrivateKey(seed, derivationPath);\n    return new ethers.Wallet(privateKey);\n}\nexport function deriveEthereumPrivateKey(seed, derivationPath) {\n    const hdNode = ethers.utils.HDNode.fromSeed(seed);\n    const child = hdNode.derivePath(derivationPath);\n    return child.privateKey;\n}\n//# sourceMappingURL=util.js.map","import * as store from \"@coral-xyz/background/src/backend/store\";\nimport { DefaultKeyname } from \"@coral-xyz/background/src/backend/store\";\nimport { getLogger } from \"@coral-xyz/common\";\nimport * as bs58 from \"bs58\";\nconst logger = getLogger(\"background/backend/keyring\");\n// Represents key data for a single blockchain network, e.g., solana or ethereum.\nexport class BlockchainKeyring {\n    constructor(hdKeyringFactory, keyringFactory, ledgerKeyringFactory) {\n        this.hdKeyringFactory = hdKeyringFactory;\n        this.keyringFactory = keyringFactory;\n        this.ledgerKeyringFactory = ledgerKeyringFactory;\n    }\n    publicKeys() {\n        const hdPublicKeys = this.hdKeyring ? this.hdKeyring.publicKeys() : [];\n        const importedPublicKeys = this.importedKeyring\n            ? this.importedKeyring.publicKeys()\n            : [];\n        const ledgerPublicKeys = this.ledgerKeyring\n            ? this.ledgerKeyring.publicKeys()\n            : [];\n        return {\n            hdPublicKeys,\n            importedPublicKeys,\n            ledgerPublicKeys,\n        };\n    }\n    /**\n     * Set up a new blockchain keyring.\n     */\n    async init(keyringInit) {\n        if (Object.values(this.publicKeys()).flat().length > 0) {\n            throw new Error(\"keyring already initialised\");\n        }\n        let newAccounts = [];\n        if (\"mnemonic\" in keyringInit) {\n            // Don't accept `true` for mnemonic initialisation\n            if (typeof keyringInit.mnemonic !== \"string\") {\n                throw new Error(\"invalid mnemonic\");\n            }\n            newAccounts = await this.initHdKeyring(keyringInit.mnemonic, keyringInit.signedWalletDescriptors.map((s) => s.derivationPath));\n            this.ledgerKeyring = this.ledgerKeyringFactory.init([]);\n            this.importedKeyring = this.keyringFactory.init([]);\n        }\n        else if (\"privateKey\" in keyringInit) {\n            // Init using private key\n            this.ledgerKeyring = this.ledgerKeyringFactory.init([]);\n            this.importedKeyring = this.keyringFactory.init([keyringInit.privateKey]);\n            const name = DefaultKeyname.defaultImported(1);\n            await store.setKeyname(keyringInit.publicKey, name);\n            newAccounts = [[name, keyringInit.publicKey]];\n        }\n        else {\n            // Init using ledger\n            this.ledgerKeyring = this.ledgerKeyringFactory.init(keyringInit.signedWalletDescriptors);\n            this.importedKeyring = this.keyringFactory.init([]);\n            for (const [index, walletDescriptor,] of keyringInit.signedWalletDescriptors.entries()) {\n                const name = DefaultKeyname.defaultLedger(index + 1);\n                await store.setKeyname(walletDescriptor.publicKey, name);\n                await store.setIsCold(walletDescriptor.publicKey, true);\n                newAccounts.push([walletDescriptor.publicKey, name]);\n            }\n        }\n        this.activeWallet = Object.values(this.publicKeys()).flat()[0];\n        this.deletedWallets = [];\n        return newAccounts;\n    }\n    /**\n     * Utility method to init a hd keyring on a blockchain keyring.\n     * This is used when initialising by mnemonic, but it is also used when the\n     * user initialised with a private key or ledger and they later want to add\n     * a mnemonic.\n     */\n    async initHdKeyring(mnemonic, derivationPaths) {\n        // Initialize keyrings.\n        this.hdKeyring = this.hdKeyringFactory.init(mnemonic, derivationPaths);\n        this.activeWallet = this.hdKeyring.publicKeys()[0];\n        // Persist a given name for this wallet.\n        const newAccounts = [];\n        for (const [index, publicKey] of this.hdKeyring.publicKeys().entries()) {\n            const name = DefaultKeyname.defaultDerived(index + 1);\n            await store.setKeyname(publicKey, name);\n            newAccounts.push([publicKey, name]);\n        }\n        return newAccounts;\n    }\n    /**\n     * Export a private key for the given public key. If the public key is found\n     * on the hd keyring it exports the secret key from there, otherwise it looks\n     * on the imported keyring.\n     */\n    exportSecretKey(pubkey) {\n        var _a, _b;\n        let sk = (_a = this.hdKeyring) === null || _a === void 0 ? void 0 : _a.exportSecretKey(pubkey);\n        if (sk) {\n            return sk;\n        }\n        sk = (_b = this.importedKeyring) === null || _b === void 0 ? void 0 : _b.exportSecretKey(pubkey);\n        if (sk) {\n            return sk;\n        }\n        throw new Error(`unable to find keypair for ${pubkey}`);\n    }\n    mnemonic() {\n        return this.hdKeyring.mnemonic;\n    }\n    nextDerivationPath(keyring) {\n        if (keyring === \"hd\") {\n            return this.hdKeyring.nextDerivationPath();\n        }\n        else {\n            return this.ledgerKeyring.nextDerivationPath();\n        }\n    }\n    async deriveNextKey() {\n        const { publicKey, derivationPath } = this.hdKeyring.deriveNextKey();\n        // Save a default name.\n        const name = DefaultKeyname.defaultDerived(this.hdKeyring.publicKeys().length);\n        await store.setKeyname(publicKey, name);\n        return { publicKey, derivationPath, name };\n    }\n    async addDerivationPath(derivationPath) {\n        if (!this.hdKeyring) {\n            throw new Error(\"hd keyring not initialised\");\n        }\n        const publicKey = this.hdKeyring.addDerivationPath(derivationPath);\n        // Save a default name.\n        const name = DefaultKeyname.defaultDerived(this.hdKeyring.publicKeys().length);\n        await store.setKeyname(publicKey, name);\n        return {\n            publicKey,\n            name,\n        };\n    }\n    async importSecretKey(secretKey, name) {\n        const pubkey = this.importedKeyring.importSecretKey(secretKey).toString();\n        if (!name || name.length === 0) {\n            name = DefaultKeyname.defaultImported(this.importedKeyring.publicKeys().length);\n        }\n        await store.setKeyname(pubkey, name);\n        return [pubkey, name];\n    }\n    getActiveWallet() {\n        return this.activeWallet;\n    }\n    async activeWalletUpdate(newWallet) {\n        this.activeWallet = newWallet;\n    }\n    async keyDelete(publicKey) {\n        const keyring = this.getKeyring(publicKey);\n        if (!keyring) {\n            logger.error(`unable to find key to delete in keyring store: ${publicKey}`);\n            throw new Error(\"public key not found\");\n        }\n        keyring.deletePublicKey(publicKey);\n    }\n    toJson() {\n        if (!this.importedKeyring || !this.ledgerKeyring) {\n            throw new Error(\"blockchain keyring is locked\");\n        }\n        return {\n            hdKeyring: this.hdKeyring ? this.hdKeyring.toJson() : undefined,\n            importedKeyring: this.importedKeyring.toJson(),\n            ledgerKeyring: this.ledgerKeyring.toJson(),\n            activeWallet: this.activeWallet,\n            deletedWallets: this.deletedWallets,\n        };\n    }\n    fromJson(json) {\n        const { hdKeyring, importedKeyring, ledgerKeyring, activeWallet, deletedWallets, } = json;\n        this.hdKeyring = hdKeyring\n            ? this.hdKeyringFactory.fromJson(hdKeyring)\n            : undefined;\n        this.importedKeyring = this.keyringFactory.fromJson(importedKeyring);\n        this.ledgerKeyring = this.ledgerKeyringFactory.fromJson(ledgerKeyring);\n        this.activeWallet = activeWallet;\n        this.deletedWallets = deletedWallets;\n    }\n    //\n    // For Solana txMsg is a Message, i.e. not a full transaction.\n    // Ref https://docs.solana.com/developing/programming-model/transactions#message-format\n    // For Ethereum txMsg is the full transaction, base58 encoded to keep the argument types same.\n    //\n    async signTransaction(txMsg, walletAddress) {\n        const keyring = this.getKeyring(walletAddress);\n        const msg = Buffer.from(bs58.decode(txMsg));\n        return keyring.signTransaction(msg, walletAddress);\n    }\n    async signMessage(msg, walletAddress) {\n        const keyring = this.getKeyring(walletAddress);\n        const msgBuffer = Buffer.from(bs58.decode(msg));\n        return keyring.signMessage(msgBuffer, walletAddress);\n    }\n    getKeyring(publicKey) {\n        for (const keyring of [\n            this.hdKeyring,\n            this.importedKeyring,\n            this.ledgerKeyring,\n        ]) {\n            if (keyring && keyring.publicKeys().find((k) => k === publicKey)) {\n                return keyring;\n            }\n        }\n        throw new Error(\"no keyring for public key\");\n    }\n    hasPublicKey(publicKey) {\n        try {\n            this.getKeyring(publicKey);\n            return true;\n        }\n        catch {\n            return false;\n        }\n    }\n    hasHdKeyring() {\n        return !!this.hdKeyring;\n    }\n}\n//# sourceMappingURL=blockchain.js.map","export * from \"./blockchain\";\nexport * from \"./ledger\";\nexport * from \"./types\";\n//# sourceMappingURL=index.js.map","import { generateUniqueId, getIndexedPath, isValidEventOrigin, LEDGER_INJECTED_CHANNEL_REQUEST, LEDGER_INJECTED_CHANNEL_RESPONSE, nextIndicesFromPaths, } from \"@coral-xyz/common\";\nexport class LedgerKeyringBase {\n    constructor(walletDescriptors, blockchain) {\n        this.walletDescriptors = walletDescriptors;\n        this.blockchain = blockchain;\n    }\n    deletePublicKey(publicKey) {\n        this.walletDescriptors = this.walletDescriptors.filter((x) => x.publicKey !== publicKey);\n    }\n    async add(walletDescriptor) {\n        const found = this.walletDescriptors.find((x) => x.publicKey === walletDescriptor.publicKey);\n        if (found) {\n            throw new Error(\"ledger account already exists\");\n        }\n        this.walletDescriptors.push(walletDescriptor);\n    }\n    publicKeys() {\n        return this.walletDescriptors.map((x) => x.publicKey);\n    }\n    exportSecretKey() {\n        throw new Error(\"ledger keyring cannot export secret keys\");\n    }\n    importSecretKey() {\n        throw new Error(\"ledger keyring cannot import secret keys\");\n    }\n    nextDerivationPath(offset = 1) {\n        const derivationPaths = this.walletDescriptors.map((w) => w.derivationPath);\n        const { accountIndex, walletIndex } = nextIndicesFromPaths(derivationPaths.filter(Boolean));\n        const derivationPath = getIndexedPath(this.blockchain, accountIndex, walletIndex + offset);\n        if (derivationPaths.includes(derivationPath)) {\n            // This key is already included for some reason, try again with\n            // incremented walletIndex\n            return this.nextDerivationPath(offset + 1);\n        }\n        return { derivationPath, offset };\n    }\n    toString() {\n        return JSON.stringify({\n            walletDescriptors: this.walletDescriptors,\n        });\n    }\n    toJson() {\n        return {\n            walletDescriptors: this.walletDescriptors,\n        };\n    }\n    async request(req) {\n        return new Promise((resolve, reject) => {\n            const id = generateUniqueId();\n            responseResolvers[id] = { resolve, reject };\n            const msg = {\n                type: LEDGER_INJECTED_CHANNEL_REQUEST,\n                detail: {\n                    id,\n                    ...req,\n                },\n            };\n            postMessageToIframe(msg, true);\n        });\n    }\n}\n/**\n * Send message from service worker to iframe\n * @param message object with message data\n */\nexport const postMessageToIframe = (message, requiresFocus = false) => {\n    globalThis.clients\n        .matchAll({\n        frameType: \"top-level\",\n        includeUncontrolled: true,\n        type: \"window\",\n        visibilityState: \"visible\",\n    })\n        .then((clients) => {\n        clients.forEach((client) => {\n            if (!requiresFocus || client.focused) {\n                client.postMessage(message);\n            }\n        });\n    });\n};\n// This code runs inside a ServiceWorker, so the message listener below must be\n// created immediately. That's why `responseResolvers` is in the file's global scope.\nconst responseResolvers = {};\n// Handle receiving postMessages\nself.addEventListener(\"message\", (msg) => {\n    try {\n        if (!isValidEventOrigin(msg)) {\n            return;\n        }\n        if (msg.data.type !== LEDGER_INJECTED_CHANNEL_RESPONSE) {\n            return;\n        }\n        const { data: { detail }, } = msg;\n        const { id, result, error } = detail;\n        const resolver = responseResolvers[id];\n        if (!resolver) {\n            // Why does this get thrown?\n            throw new Error(`resolver not found for request id: ${id}`);\n        }\n        const { resolve, reject } = resolver;\n        delete responseResolvers[id];\n        if (error) {\n            reject(error);\n        }\n        resolve(result);\n    }\n    catch (err) {\n        console.error(err);\n    }\n});\n//# sourceMappingURL=ledger.js.map","export {};\n//# sourceMappingURL=types.js.map","export * from \"./keyring\";\nexport * from \"./util\";\n//# sourceMappingURL=index.js.map","import { LedgerKeyringBase } from \"@coral-xyz/blockchain-keyring\";\nimport { Blockchain, getIndexedPath, LEDGER_METHOD_SOLANA_SIGN_MESSAGE, LEDGER_METHOD_SOLANA_SIGN_TRANSACTION, nextIndicesFromPaths, } from \"@coral-xyz/common\";\nimport { Keypair, PublicKey } from \"@solana/web3.js\";\nimport { mnemonicToSeedSync, validateMnemonic } from \"bip39\";\nimport { ethers } from \"ethers\";\nimport nacl from \"tweetnacl\";\nimport { deriveSolanaKeypair } from \"../util\";\nconst { base58 } = ethers.utils;\nexport class SolanaKeyringFactory {\n    init(secretKeys) {\n        const keypairs = secretKeys.map((secret) => Keypair.fromSecretKey(Buffer.from(secret, \"hex\")));\n        return new SolanaKeyring(keypairs);\n    }\n    fromJson(payload) {\n        const keypairs = payload.secretKeys.map((secret) => Keypair.fromSecretKey(Buffer.from(secret, \"hex\")));\n        return new SolanaKeyring(keypairs);\n    }\n}\nclass SolanaKeyring {\n    constructor(keypairs) {\n        this.keypairs = keypairs;\n    }\n    publicKeys() {\n        return this.keypairs.map((kp) => kp.publicKey.toString());\n    }\n    deletePublicKey(publicKey) {\n        this.keypairs = this.keypairs.filter((kp) => kp.publicKey.toString() !== publicKey);\n    }\n    // `address` is the key on the keyring to use for signing.\n    async signTransaction(tx, address) {\n        const pubkey = new PublicKey(address);\n        const kp = this.keypairs.find((kp) => kp.publicKey.equals(pubkey));\n        if (!kp) {\n            throw new Error(`unable to find ${address.toString()}`);\n        }\n        return base58.encode(nacl.sign.detached(new Uint8Array(tx), kp.secretKey));\n    }\n    async signMessage(tx, address) {\n        // TODO: this shouldn't blindly sign. We should check some\n        //       type of unique prefix that asserts this isn't a\n        //       real transaction.\n        return this.signTransaction(tx, address);\n    }\n    exportSecretKey(address) {\n        const pubkey = new PublicKey(address);\n        const kp = this.keypairs.find((kp) => kp.publicKey.equals(pubkey));\n        if (!kp) {\n            return null;\n        }\n        return base58.encode(kp.secretKey);\n    }\n    importSecretKey(secretKey) {\n        const kp = Keypair.fromSecretKey(Buffer.from(secretKey, \"hex\"));\n        this.keypairs.push(kp);\n        return kp.publicKey.toString();\n    }\n    toJson() {\n        return {\n            secretKeys: this.keypairs.map((kp) => Buffer.from(kp.secretKey).toString(\"hex\")),\n        };\n    }\n}\nexport class SolanaHdKeyringFactory {\n    init(mnemonic, derivationPaths, accountIndex, walletIndex) {\n        if (!validateMnemonic(mnemonic)) {\n            throw new Error(\"Invalid seed words\");\n        }\n        return new SolanaHdKeyring({\n            mnemonic,\n            seed: mnemonicToSeedSync(mnemonic),\n            derivationPaths,\n            accountIndex,\n            walletIndex,\n        });\n    }\n    fromJson({ mnemonic, seed, derivationPaths, accountIndex, walletIndex, }) {\n        return new SolanaHdKeyring({\n            mnemonic,\n            seed: Buffer.from(seed, \"hex\"),\n            derivationPaths,\n            accountIndex,\n            walletIndex,\n        });\n    }\n}\nclass SolanaHdKeyring extends SolanaKeyring {\n    constructor({ mnemonic, seed, derivationPaths, accountIndex, walletIndex, }) {\n        const keypairs = derivationPaths.map((d) => deriveSolanaKeypair(seed, d));\n        super(keypairs);\n        this.mnemonic = mnemonic;\n        this.seed = seed;\n        this.derivationPaths = derivationPaths;\n        this.accountIndex = accountIndex;\n        this.walletIndex = walletIndex;\n    }\n    deletePublicKey(publicKey) {\n        const index = this.keypairs.findIndex((kp) => kp.publicKey.toString() === publicKey);\n        if (index < 0) {\n            return;\n        }\n        this.derivationPaths = this.derivationPaths\n            .slice(0, index)\n            .concat(this.derivationPaths.slice(index + 1));\n        super.deletePublicKey(publicKey);\n    }\n    nextDerivationPath(offset = 1) {\n        this.ensureIndices();\n        const derivationPath = getIndexedPath(Blockchain.SOLANA, this.accountIndex, this.walletIndex + offset);\n        if (this.derivationPaths.includes(derivationPath)) {\n            // This key is already included for some reason, try again with\n            // incremented walletIndex\n            return this.nextDerivationPath(offset + 1);\n        }\n        return { derivationPath, offset };\n    }\n    deriveNextKey() {\n        const { derivationPath, offset } = this.nextDerivationPath();\n        // Save the offset to the wallet index\n        this.walletIndex += offset;\n        const publicKey = this.addDerivationPath(derivationPath);\n        return {\n            publicKey,\n            derivationPath,\n        };\n    }\n    addDerivationPath(derivationPath) {\n        const keypair = deriveSolanaKeypair(this.seed, derivationPath);\n        if (!this.derivationPaths.includes(derivationPath)) {\n            // Don't persist duplicate public keys\n            this.keypairs.push(keypair);\n            this.derivationPaths.push(derivationPath);\n        }\n        return keypair.publicKey.toString();\n    }\n    // TODO duplicated in the evm keyring\n    ensureIndices() {\n        // If account index and wallet index don't exist, make a best guess based\n        // on the existing derivation paths for the keyring\n        if (this.accountIndex === undefined || this.walletIndex === undefined) {\n            const { accountIndex, walletIndex } = nextIndicesFromPaths(this.derivationPaths);\n            if (!this.accountIndex)\n                this.accountIndex = accountIndex;\n            if (!this.walletIndex)\n                this.walletIndex = walletIndex;\n        }\n    }\n    toJson() {\n        return {\n            mnemonic: this.mnemonic,\n            seed: this.seed.toString(\"hex\"),\n            derivationPaths: this.derivationPaths,\n            accountIndex: this.accountIndex,\n            walletIndex: this.walletIndex,\n        };\n    }\n}\nexport class SolanaLedgerKeyringFactory {\n    init(walletDescriptors) {\n        return new SolanaLedgerKeyring(walletDescriptors, Blockchain.SOLANA);\n    }\n    fromJson(obj) {\n        return new SolanaLedgerKeyring(obj.walletDescriptors, Blockchain.SOLANA);\n    }\n}\nexport class SolanaLedgerKeyring extends LedgerKeyringBase {\n    async signTransaction(tx, publicKey) {\n        const walletDescriptor = this.walletDescriptors.find((p) => p.publicKey === publicKey);\n        if (!walletDescriptor) {\n            throw new Error(\"ledger address not found\");\n        }\n        return await this.request({\n            method: LEDGER_METHOD_SOLANA_SIGN_TRANSACTION,\n            params: [\n                base58.encode(tx),\n                walletDescriptor.derivationPath.replace(\"m/\", \"\"),\n            ],\n        });\n    }\n    async signMessage(msg, publicKey) {\n        const walletDescriptor = this.walletDescriptors.find((p) => p.publicKey === publicKey);\n        if (!walletDescriptor) {\n            throw new Error(\"ledger public key not found\");\n        }\n        return await this.request({\n            method: LEDGER_METHOD_SOLANA_SIGN_MESSAGE,\n            params: [\n                base58.encode(msg),\n                walletDescriptor.derivationPath.replace(\"m/\", \"\"),\n            ],\n        });\n    }\n}\n//# sourceMappingURL=index.js.map","import { Keypair } from \"@solana/web3.js\";\nimport * as bip32 from \"bip32\";\nimport { derivePath } from \"ed25519-hd-key\";\nimport nacl from \"tweetnacl\";\n// Returns the account Keypair for the given seed and derivation path.\nexport function deriveSolanaKeypair(seed, derivationPath) {\n    const secret = deriveSolanaPrivateKey(seed, derivationPath);\n    return Keypair.fromSecretKey(secret);\n}\nexport function deriveSolanaPrivateKey(seed, derivationPath) {\n    let derivedSeed;\n    if (derivationPath.startsWith(\"501'\")) {\n        // Sollet deprecated path\n        derivedSeed = bip32.fromSeed(seed).derivePath(derivationPath).privateKey;\n    }\n    else {\n        derivedSeed = derivePath(derivationPath, seed.toString(\"hex\")).key;\n    }\n    return nacl.sign.keyPair.fromSeed(derivedSeed).secretKey;\n}\n//# sourceMappingURL=util.js.map","import { useCustomTheme } from \"@coral-xyz/themes\";\n\nimport { BarterUi } from \"./components/barter/BarterUi\";\nimport { useChatContext } from \"./components/ChatContext\";\n\nexport const MessagePluginRenderer = () => {\n  const { openPlugin } = useChatContext();\n  const { roomId } = useChatContext();\n  const theme = useCustomTheme();\n  if (!openPlugin) {\n    return <div />;\n  }\n\n  return (\n    <>{openPlugin.type === \"barter\" ? <BarterUi roomId={roomId} /> : null}</>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BACKEND_API_URL,\n  Blockchain,\n  toDisplayBalance,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport {\n  List,\n  ListItem,\n  MaxLabel,\n  PrimaryButton,\n  SecondaryButton,\n  TextFieldLabel,\n  TextInput,\n  toast,\n  useBreakpoints,\n} from \"@coral-xyz/react-common\";\nimport {\n  blockchainTokenData,\n  useActiveSolanaWallet,\n  useAnchorContext,\n  useBackgroundClient,\n  useLoader,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\nimport { TextField } from \"@mui/material\";\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\n\nimport { createEscrow } from \"../utils/secure-transfer/secureTransfer\";\n\nimport { CheckMark } from \"./barter/CheckMark\";\nimport { ExplorerLink, RemoteNftWithSuspense } from \"./barter/SwapPage\";\nimport { NftStickerPlugin } from \"./plugins/NftStickerPlugin\";\nimport { useChatContext } from \"./ChatContext\";\n\nexport const AboveMessagePluginRenderer = ({\n  sendMessage,\n  setAboveMessagePlugin,\n  setPluginMenuOpen,\n}) => {\n  const { aboveMessagePlugin } = useChatContext();\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        background: theme.custom.colors.bg3,\n        borderRadius: 12,\n        boxShadow: `0px 4px 6px -1px rgba(0, 0, 0, 0.1), 0px 2px 4px -1px rgba(0, 0, 0, 0.06)`,\n      }}\n    >\n      {aboveMessagePlugin.type === \"secure-transfer\" ? (\n        <SecureTransferPlugin\n          sendMessage={sendMessage}\n          setAboveMessagePlugin={setAboveMessagePlugin}\n        />\n      ) : null}\n      {aboveMessagePlugin.type === \"nft-sticker\" ? (\n        <AboveNftStickerPlugin setPluginMenuOpen={setPluginMenuOpen} />\n      ) : null}\n    </div>\n  );\n};\n\nfunction AboveNftStickerPlugin({ setPluginMenuOpen }) {\n  return (\n    <div>\n      <NftStickerPlugin setPluginMenuOpen={setPluginMenuOpen} />\n    </div>\n  );\n}\n\nfunction SecureTransferPlugin({ sendMessage, setAboveMessagePlugin }) {\n  const { provider, connection } = useAnchorContext();\n  const { remoteUserId } = useChatContext();\n  const background = useBackgroundClient();\n  const { publicKey } = useActiveSolanaWallet();\n  const [publicKeysLoading, setPublicKeysLoading] = useState(true);\n  const [publicKeys, setPublicKeys] = useState<string[]>([]);\n  const theme = useCustomTheme();\n  const [selectedPublicKey, setSelectedPublickey] = useState(\"\");\n  const [amount, setAmount] = useState(\"0\");\n  const [submitting, setSubmitting] = useState(false);\n  const [token] = useLoader(\n    blockchainTokenData({\n      publicKey,\n      blockchain: Blockchain.SOLANA,\n      tokenAddress: publicKey,\n    }),\n    null\n  );\n\n  const refreshUserPubkeys = async (remoteUserId) => {\n    setPublicKeysLoading(true);\n    try {\n      const res = await fetch(\n        `${BACKEND_API_URL}/users/userById?remoteUserId=${remoteUserId}`\n      );\n      const data = await res.json();\n      const publicKeys = data.user.publicKeys\n        .filter((x) => x.blockchain === Blockchain.SOLANA)\n        .map((x) => x.publicKey);\n      setPublicKeys(publicKeys);\n      setSelectedPublickey(publicKeys[0]);\n    } catch (e) {\n      console.error(e);\n    }\n    setPublicKeysLoading(false);\n  };\n\n  useEffect(() => {\n    if (remoteUserId) {\n      refreshUserPubkeys(remoteUserId);\n    }\n  }, [remoteUserId]);\n\n  return (\n    <div\n      style={{\n        background: theme.custom.colors.invertedPrimary,\n        padding: 10,\n        borderRadius: 12,\n        marginBottom: 3,\n      }}\n    >\n      {/*<div style={{display: \"flex\", marginBottom: 5, height: 20}}>*/}\n      {/*    {publicKeysLoading && <div style={{display: \"flex\", marginRight: 4}}> <div style={{display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", marginRight: 3}}> <FiberManualRecordIcon style={{fontSize: 15, color: \"yellow\", marginTop: 2}} /> </div> <div style={{color: theme.custom.colors.background}}> Loading public key </div> </div>}*/}\n      {/*</div>*/}\n      <div style={{ marginBottom: 10 }}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            padding: 5,\n            fontSize: 13,\n          }}\n        >\n          <div style={{ color: theme.custom.colors.background }}>Amount</div>\n          <div\n            style={{ color: theme.custom.colors.background, cursor: \"pointer\" }}\n            onClick={() => {\n              setAmount(\n                (\n                  parseInt(token?.nativeBalance?.toString() || \"0\") /\n                  LAMPORTS_PER_SOL\n                ).toString()\n              );\n            }}\n          >\n            Max:{\" \"}\n            {token?.nativeBalance\n              ? toDisplayBalance(token?.nativeBalance, token?.decimals || 0)\n              : \"-\"}\n          </div>\n        </div>\n        <TextField\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              \"& fieldset\": {\n                borderColor: theme.custom.colors.invertedSecondary,\n                borderRadius: 6,\n              },\n              \"&:hover fieldset\": {\n                borderColor: theme.custom.colors.invertedSecondary,\n              },\n              \"&.Mui-focused fieldset\": {\n                borderColor: \"#4C94FF\",\n              },\n            },\n            input: {\n              padding: \"12px 12px\",\n              color: theme.custom.colors.background,\n              background: theme.custom.colors.invertedSecondary,\n              borderRadius: 6,\n            },\n          }}\n          fullWidth\n          margin=\"none\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n      </div>\n      <SecondaryButton\n        label={\n          !publicKeysLoading && !selectedPublicKey\n            ? \"User doesn't have an active pubkey set\"\n            : submitting\n            ? \"Sending Secure transfer...\"\n            : \"Secure transfer SOL\"\n        }\n        disabled={publicKeysLoading || !selectedPublicKey || submitting}\n        onClick={async () => {\n          if (\n            !selectedPublicKey ||\n            !publicKeys.includes(selectedPublicKey) ||\n            !amount\n          ) {\n            return;\n          }\n          setSubmitting(true);\n          try {\n            const { signature, counter, escrow } = await createEscrow(\n              provider,\n              background,\n              connection,\n              // @ts-ignore\n              amount,\n              new PublicKey(publicKey),\n              new PublicKey(selectedPublicKey)\n            );\n            sendMessage(\"Secure transfer\", \"secure-transfer\", {\n              signature,\n              counter,\n              escrow,\n              current_state: \"pending\",\n            });\n            toast.success(\"\", `Created secure transfer for ${amount} SOL`);\n          } catch (e) {\n            console.error(e);\n          }\n          setSubmitting(false);\n          setAboveMessagePlugin(\"\");\n        }}\n      />\n    </div>\n  );\n}\n","import { LegacyRef, useEffect, useRef, useState } from \"react\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport GifIcon from \"@mui/icons-material/Gif\";\nimport { IconButton } from \"@mui/material\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport const Attachment = ({\n  buttonStyle,\n  onMediaSelect,\n}: {\n  buttonStyle: any;\n  onMediaSelect: any;\n}) => {\n  const theme = useCustomTheme();\n  const hiddenInputRef = useRef<any>();\n\n  useEffect(() => {\n    if (hiddenInputRef && hiddenInputRef.current) {\n      hiddenInputRef.current.onchange = () => {\n        const selectedFile = hiddenInputRef.current.files[0];\n        onMediaSelect(selectedFile);\n      };\n    }\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <IconButton\n        size=\"small\"\n        sx={{\n          color: theme.custom.colors.icon,\n          \"&:hover\": {\n            background: `${theme.custom.colors.avatarIconBackground} !important`,\n          },\n        }}\n        style={buttonStyle}\n        onClick={async (e) => {\n          hiddenInputRef.current.click();\n        }}\n      >\n        {\" \"}\n        <Tooltip title=\"Attach\">\n          <AttachFileIcon\n            style={{ color: theme.custom.colors.icon, fontSize: 20 }}\n          />\n        </Tooltip>\n        <input\n          onClick={(e) => {\n            // @ts-ignore\n            e.target.value = null;\n          }}\n          ref={hiddenInputRef}\n          type=\"file\"\n          id=\"hiddenAttachment\"\n          style={{ display: \"none\" }}\n          accept=\".mp4,.png,.jpg,.jpeg\"\n        />\n      </IconButton>\n    </div>\n  );\n};\n","import { BACKEND_API_URL, sendFriendRequest } from \"@coral-xyz/common\";\nimport { toast } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport InfoIcon from \"@mui/icons-material/Info\";\n\nimport { useChatContext } from \"./ChatContext\";\nimport { useStyles } from \"./styles\";\n\nexport const Banner = () => {\n  const {\n    areFriends,\n    requested,\n    remoteUserId,\n    spam,\n    blocked,\n    setRequested,\n    setSpam,\n    remoteRequested,\n    remoteUsername,\n    reconnecting,\n  } = useChatContext();\n  const classes = useStyles();\n\n  if (reconnecting) {\n    return (\n      <TextBanner\n        fixed\n        type=\"danger\"\n        title=\"Network connection error\"\n      />\n    );\n  }\n\n  if (spam) {\n    return (\n      <TextBanner\n        type=\"danger\"\n        title=\"You marked this account as spam\"\n        buttonText=\"Undo\"\n        onClick={async () => {\n          await fetch(`${BACKEND_API_URL}/friends/spam`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ to: remoteUserId, spam: false }),\n          });\n          setSpam(false);\n        }}\n      />\n    );\n  }\n\n  if (blocked) {\n    return (\n      <TextBanner type=\"normal\" title=\"You have blocked this account\" />\n    );\n  }\n\n  if (areFriends) {\n    return <div />;\n  }\n\n  if (requested) {\n    return <TextBanner type=\"disabled\" title=\"Friend requested\" />;\n  }\n\n  return (\n    <div>\n      {!areFriends ? <div\n        className={`${classes.noContactBanner} ${classes.horizontalCenter} ${classes.text}`}\n        >\n        {!requested ? <div\n          className={classes.strongText}\n          style={{ cursor: \"pointer\", marginRight: 25 }}\n          onClick={async () => {\n                await sendFriendRequest({\n                  to: remoteUserId,\n                  sendRequest: true,\n                });\n                setRequested(true);\n                toast.success(\n                  remoteRequested ? `` : \"\",\n                  remoteRequested\n                    ? `You and ${remoteUsername} are now connected`\n                    : `We'll let ${remoteUsername} know you want to connect`\n                );\n              }}\n            >\n          {remoteRequested ? \"Accept Friend Request\" : \"Add to Friends\"}\n        </div> : null}\n        <div\n          className={classes.strongText}\n          style={{ cursor: \"pointer\" }}\n          onClick={async () => {\n              await fetch(`${BACKEND_API_URL}/friends/spam`, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ to: remoteUserId, spam: true }),\n              });\n              setSpam(true);\n              toast.success(\"Spam\", \"Marked user as spam\");\n            }}\n          >\n          Mark as Spam\n        </div>\n        <br />\n      </div> : null}\n    </div>\n  );\n};\n\nfunction TextBanner({\n  title,\n  buttonText,\n  onClick,\n  type,\n  fixed = false,\n}: {\n  title: String;\n  buttonText?: string;\n  onClick?: () => void;\n  type: \"danger\" | \"normal\" | \"disabled\";\n  fixed?: boolean;\n}) {\n  const theme = useCustomTheme();\n  const classes = useStyles({ type });\n  return (\n    <div\n      style={{\n        marginBottom: \"12px\",\n        ...(fixed ? { position: \"absolute\", top: 0, width: \"100%\" } : {}),\n      }}\n    >\n      <div\n        className={`${classes.noContactBanner} ${classes.horizontalCenter} ${classes.text}`}\n        style={{\n          color:\n            type === \"disabled\" ? theme.custom.colors.fontColor3 : \"inherit\",\n          fontSize: 14,\n        }}\n      >\n        {\" \"}\n        {type !== \"disabled\" ? <InfoIcon\n          style={{\n              color:\n                type === \"danger\"\n                  ? theme.custom.colors.negative\n                  : theme.custom.colors.fontColor,\n              marginRight: 5,\n            }}\n          /> : null}{\" \"}\n        <div style={{ marginTop: type !== \"disabled\" ? 1 : 0 }}>\n          {title}\n          {buttonText ? <div\n            style={{ marginLeft: 10, cursor: \"pointer\" }}\n            onClick={onClick}\n            >\n            {buttonText}\n          </div> : null}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { BarterIcon } from \"@coral-xyz/react-common\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { IconButton } from \"@mui/material\";\n\nimport { useChatContext } from \"./ChatContext\";\n\nexport const useStyles = styles((theme) => ({}));\n\nexport const Barter = ({ buttonStyle }: any) => {\n  const theme = useCustomTheme();\n  const { setOpenPlugin } = useChatContext();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <IconButton\n        size=\"small\"\n        sx={{\n          color: theme.custom.colors.icon,\n          \"&:hover\": {\n            background: `${theme.custom.colors.avatarIconBackground} !important`,\n          },\n        }}\n        style={buttonStyle}\n        onClick={(e) => {\n          setOpenPlugin((p) =>\n            p.type === \"barter\"\n              ? { type: \"\", metadata: {} }\n              : { type: \"barter\", metadata: {} }\n          );\n        }}\n      >\n        {\" \"}\n        <BarterIcon fill={theme.custom.colors.icon} />{\" \"}\n      </IconButton>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport type {\n  EnrichedMessageWithMetadata,\n  MessageKind,\n  MessageMetadata,\n  SubscriptionType,\n  UserMetadata,\n} from \"@coral-xyz/common\";\n\nimport type { AboveMessagePlugin } from \"./ChatRoom\";\n\nexport type MessagePlugins =\n  | {\n      type: \"barter\";\n      metadata: {\n        barterId?: string;\n      };\n    }\n  | {\n      type: \"\";\n      metadata: {};\n    };\n\ntype ChatContext = {\n  setActiveReply: any;\n  activeReply: {\n    parent_client_generated_uuid: string | null;\n    text: string;\n    parent_username: string;\n    parent_message_author_uuid: string;\n  };\n  roomId: string;\n  chats: EnrichedMessageWithMetadata[];\n  userId: string;\n  loading: boolean;\n  username: string;\n  areFriends: boolean;\n  requested: boolean;\n  remoteRequested: boolean;\n  remoteUserId: string;\n  type: SubscriptionType;\n  blocked?: boolean;\n  spam?: boolean;\n  setRequested?: any;\n  setSpam?: any;\n  setBlocked?: any;\n  isDarkMode: boolean;\n  remoteUsername?: string;\n  reconnecting: boolean;\n  nftMint?: string;\n  publicKey?: string;\n  usersMetadata: { [key: string]: UserMetadata };\n  openPlugin: MessagePlugins;\n  setOpenPlugin: any;\n  aboveMessagePlugin: AboveMessagePlugin;\n  setAboveMessagePlugin: React.Dispatch<\n    React.SetStateAction<AboveMessagePlugin>\n  >;\n  selectedFile: any;\n  setSelectedFile: any;\n  uploadingFile: boolean;\n  setUploadingFile: any;\n  inputRef: any;\n  selectedMediaKind: any;\n  setSelectedMediaKind: any;\n  uploadedImageUri: any;\n  setUploadedImageUri: any;\n  sendMessage: (\n    messageTxt: string,\n    messageKind?: MessageKind,\n    messageMetadata?: MessageMetadata\n  ) => void;\n};\n\ninterface ChatContextWithChildren extends ChatContext {\n  children: any;\n}\n\nexport const _ChatContext = React.createContext<ChatContext | null>(null);\n\nexport function ChatProvider(props: ChatContextWithChildren) {\n  return (\n    <_ChatContext.Provider\n      value={{\n        setActiveReply: props.setActiveReply,\n        activeReply: props.activeReply,\n        roomId: props.roomId,\n        chats: props.chats,\n        userId: props.userId,\n        loading: props.loading,\n        username: props.username,\n        areFriends: props.areFriends,\n        requested: props.requested,\n        remoteUserId: props.remoteUserId,\n        type: props.type,\n        spam: props.spam,\n        blocked: props.blocked,\n        setRequested: props.setRequested,\n        setSpam: props.setSpam,\n        setBlocked: props.setBlocked,\n        isDarkMode: props.isDarkMode,\n        remoteRequested: props.remoteRequested,\n        remoteUsername: props.remoteUsername,\n        reconnecting: props.reconnecting,\n        nftMint: props.nftMint,\n        publicKey: props.publicKey,\n        usersMetadata: props.usersMetadata,\n        openPlugin: props.openPlugin,\n        setOpenPlugin: props.setOpenPlugin,\n        aboveMessagePlugin: props.aboveMessagePlugin,\n        setAboveMessagePlugin: props.setAboveMessagePlugin,\n        selectedFile: props.selectedFile,\n        setSelectedFile: props.setSelectedFile,\n        uploadingFile: props.uploadingFile,\n        setUploadingFile: props.setUploadingFile,\n        inputRef: props.inputRef,\n        selectedMediaKind: props.selectedMediaKind,\n        setSelectedMediaKind: props.setSelectedMediaKind,\n        uploadedImageUri: props.uploadedImageUri,\n        setUploadedImageUri: props.setUploadedImageUri,\n        sendMessage: props.sendMessage,\n      }}\n    >\n      {props.children}\n    </_ChatContext.Provider>\n  );\n}\n\nexport function useChatContext(): ChatContext {\n  const ctx = useContext(_ChatContext);\n  if (!ctx) {\n    throw new Error(\"context not found\");\n  }\n  return ctx;\n}\n","import { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport type {\n  MessageKind,\n  MessageMetadata,\n  SubscriptionType,\n} from \"@coral-xyz/common\";\nimport { CHAT_MESSAGES, SUBSCRIBE } from \"@coral-xyz/common\";\nimport { createEmptyFriendship } from \"@coral-xyz/db\";\nimport { useUser } from \"@coral-xyz/recoil\";\nimport {\n  refreshChatsFor,\n  refreshUpdatesFor,\n  SignalingManager,\n  useChatsWithMetadata,\n} from \"@coral-xyz/tamagui\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { MessagePluginRenderer } from \"../MessagePluginRenderer\";\nimport { PLUGIN_HEIGHT_PERCENTAGE } from \"../utils/constants\";\n\nimport type { MessagePlugins } from \"./ChatContext\";\nimport { ChatProvider } from \"./ChatContext\";\nimport { FullScreenChat } from \"./FullScreenChat\";\n\ninterface ChatRoomProps {\n  roomId: string;\n  userId: string;\n  mode?: \"fullscreen\" | \"minimized\";\n  type: SubscriptionType;\n  username: string;\n  remoteUsername?: string;\n  areFriends?: boolean;\n  requested?: boolean;\n  remoteUserId?: string;\n  blocked?: boolean;\n  remoteRequested?: boolean;\n  spam?: boolean;\n  setRequested?: any;\n  setSpam?: any;\n  setBlocked?: any;\n  isDarkMode: boolean;\n  nftMint?: string;\n  publicKey?: string;\n}\n\nexport type AboveMessagePlugin =\n  | {\n      type: \"secure-transfer\";\n      metadata: {};\n    }\n  | {\n      type: \"nft-sticker\";\n      metadata: {\n        // mint: string;\n      };\n    }\n  | {\n      type: \"\";\n      metadata: {};\n    };\n\nexport const ChatRoom = ({\n  roomId,\n  userId,\n  username,\n  remoteUsername,\n  type = \"collection\",\n  mode = \"fullscreen\",\n  areFriends = true,\n  requested = false,\n  remoteUserId,\n  blocked,\n  spam,\n  setRequested,\n  setSpam,\n  setBlocked,\n  isDarkMode,\n  remoteRequested = false,\n  nftMint,\n  publicKey,\n}: ChatRoomProps) => {\n  const [reconnecting, setReconnecting] = useState(false);\n  const existingChatRef = useRef<any>();\n  const { uuid } = useUser();\n  const [scrollFromBottom, setScrollFromBottom] = useState<null | number>(null);\n  // TODO: Make state propogte from outside the state since this'll be expensive\n  const [activeReply, setActiveReply] = useState({\n    parent_username: \"\",\n    parent_client_generated_uuid: null,\n    parent_message_author_uuid: \"\",\n    text: \"\",\n  });\n  const { chats, usersMetadata } = useChatsWithMetadata({ room: roomId, type });\n  const [refreshing, setRefreshing] = useState(true);\n  const [messageRef, setMessageRef] = useState<any>(null);\n  const [jumpToBottom, setShowJumpToBottom] = useState(false);\n  const [localUnreadCount, setLocalUnreadCount] = useState(0);\n  const [openPlugin, setOpenPlugin] = useState<MessagePlugins>({\n    type: \"\",\n    metadata: {},\n  });\n  const [aboveMessagePlugin, setAboveMessagePlugin] =\n    useState<AboveMessagePlugin>({ type: \"\", metadata: {} });\n  const [selectedFile, setSelectedFile] = useState<any>(null);\n  const [uploadingFile, setUploadingFile] = useState(false);\n  const [selectedMediaKind, setSelectedMediaKind] = useState<\"image\" | \"video\">(\n    \"image\"\n  );\n  const [uploadedImageUri, setUploadedImageUri] = useState(\"\");\n  const inputRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (roomId) {\n      setRefreshing(true);\n      refreshChatsFor(userId, roomId, type, nftMint, publicKey)\n        .then(() => {\n          setRefreshing(false);\n        })\n        .catch((e) => {\n          setRefreshing(false);\n        });\n\n      refreshUpdatesFor(userId, roomId, type, nftMint || \"\", publicKey).catch(\n        (e) => {\n          console.error(`error while updating `);\n          console.error(e);\n        }\n      );\n    }\n  }, [roomId, userId, type]);\n\n  useEffect(() => {\n    if (roomId) {\n      SignalingManager.getInstance().send({\n        type: SUBSCRIBE,\n        payload: {\n          type,\n          room: roomId,\n          mint: nftMint,\n          publicKey,\n        },\n      });\n    }\n    return () => {};\n  }, [roomId]);\n\n  useEffect(() => {\n    if (\n      existingChatRef.current &&\n      JSON.stringify(chats) === JSON.stringify(existingChatRef.current)\n    ) {\n      return;\n    }\n    if (chats && chats.length) {\n      SignalingManager.getInstance().debouncedUpdateLastRead(\n        chats[chats.length - 1],\n        publicKey,\n        nftMint\n      );\n    }\n    if (\n      existingChatRef.current &&\n      existingChatRef.current[0]?.client_generated_uuid !==\n        chats[0]?.client_generated_uuid\n    ) {\n      // a message was added to the top\n      //@ts-ignore\n      const element = messageRef?.container?.children?.[0];\n      if (element) {\n        setScrollFromBottom(element.scrollHeight - (element.scrollTop || 100));\n      }\n    }\n\n    //@ts-ignore\n    const scrollContainer = messageRef?.container?.children?.[0];\n    let counter = chats ? chats?.length - 1 : 0;\n    if (\n      scrollContainer &&\n      existingChatRef.current?.[existingChatRef.current.length - 1]\n        ?.client_generated_uuid !== chats[counter]?.client_generated_uuid\n    ) {\n      if (\n        scrollContainer.scrollHeight -\n          scrollContainer.scrollTop -\n          scrollContainer.clientHeight >\n        10\n      ) {\n        while (counter > 0) {\n          if (\n            existingChatRef.current?.[existingChatRef.current.length - 1]\n              ?.client_generated_uuid === chats[counter]?.client_generated_uuid\n          ) {\n            break;\n          }\n          if (chats[counter].from_http_server) {\n            // only websocket messages should appear as unread\n            break;\n          }\n          if (chats[counter].uuid === uuid) {\n            break;\n          }\n\n          counter--;\n        }\n\n        setLocalUnreadCount((x) => x + chats.length - 1 - counter);\n      }\n    }\n    existingChatRef.current = chats;\n  }, [chats]);\n\n  useLayoutEffect(() => {\n    if (scrollFromBottom || scrollFromBottom === 0) {\n      //@ts-ignore\n      const element = messageRef?.container?.children?.[0];\n      if (element) {\n        element.scrollTop = element.scrollHeight - scrollFromBottom;\n      }\n    }\n    setScrollFromBottom(null);\n  }, [scrollFromBottom, chats]);\n\n  const sendMessage = async (\n    messageTxt,\n    messageKind: MessageKind = \"text\",\n    messageMetadata?: MessageMetadata\n  ) => {\n    if (selectedFile && uploadingFile) {\n      return;\n    }\n    if (messageTxt || selectedFile) {\n      if (selectedFile) {\n        messageKind = \"media\";\n        messageMetadata = {\n          media_kind: selectedMediaKind,\n          media_link: uploadedImageUri,\n        };\n        setSelectedFile(null);\n      }\n      const client_generated_uuid = uuidv4();\n      if (chats.length === 0 && type === \"individual\") {\n        // If it's the first time the user is interacting,\n        // create an in memory friendship\n        await createEmptyFriendship(uuid, remoteUserId || \"\", {\n          last_message_sender: uuid,\n          last_message_timestamp: new Date().toISOString(),\n          last_message:\n            messageKind === \"gif\"\n              ? \"GIF\"\n              : messageKind === \"secure-transfer\"\n              ? \"Secure Transfer\"\n              : messageKind === \"media\"\n              ? \"Media\"\n              : messageTxt,\n          last_message_client_uuid: client_generated_uuid,\n          remoteUsername: remoteUsername,\n          id: roomId,\n        });\n        SignalingManager.getInstance().onUpdateRecoil({\n          type: \"friendship\",\n        });\n      }\n      SignalingManager.getInstance()?.send({\n        type: CHAT_MESSAGES,\n        payload: {\n          messages: [\n            {\n              client_generated_uuid: client_generated_uuid,\n              message: messageTxt,\n              message_kind: messageKind,\n              message_metadata: messageMetadata,\n              parent_client_generated_uuid:\n                activeReply.parent_client_generated_uuid\n                  ? activeReply.parent_client_generated_uuid\n                  : undefined,\n              //@ts-ignore\n              parent_message_author_username:\n                activeReply.parent_client_generated_uuid\n                  ? activeReply.parent_username?.slice(1)\n                  : undefined,\n              //@ts-ignore\n              parent_message_text: activeReply.parent_client_generated_uuid\n                ? activeReply.text\n                : undefined,\n              parent_message_author_uuid:\n                activeReply.parent_message_author_uuid,\n            },\n          ],\n          type: type,\n          room: roomId,\n        },\n      });\n\n      /**\n       * Why timeout?\n       *\n       * If we dont add timeout, the user will be scrolled to the last message at\n       * that time, since the message sent by the user will be newly added.\n       * So we need to add delay for scroll.\n       */\n      const timeoutId = setTimeout(() => {\n        messageRef?.scrollToBottom?.();\n        clearTimeout(timeoutId);\n      }, 10);\n\n      setActiveReply({\n        parent_username: \"\",\n        parent_client_generated_uuid: null,\n        text: \"\",\n        parent_message_author_uuid: \"\",\n      });\n      inputRef.current.setValue(\"\");\n    }\n  };\n\n  return (\n    <ChatProvider\n      activeReply={activeReply}\n      setActiveReply={setActiveReply}\n      loading={!chats || (chats.length === 0 && refreshing)}\n      roomId={roomId}\n      chats={chats || []}\n      userId={userId}\n      username={username}\n      areFriends={areFriends}\n      requested={requested}\n      remoteRequested={remoteRequested}\n      remoteUserId={remoteUserId || \"\"}\n      type={type}\n      spam={spam}\n      blocked={blocked}\n      setRequested={setRequested}\n      setSpam={setSpam}\n      setBlocked={setBlocked}\n      isDarkMode={isDarkMode}\n      remoteUsername={remoteUsername}\n      reconnecting={reconnecting}\n      nftMint={nftMint}\n      publicKey={publicKey}\n      usersMetadata={usersMetadata}\n      openPlugin={openPlugin}\n      setOpenPlugin={setOpenPlugin}\n      aboveMessagePlugin={aboveMessagePlugin}\n      setAboveMessagePlugin={setAboveMessagePlugin}\n      selectedFile={selectedFile}\n      setSelectedFile={setSelectedFile}\n      uploadingFile={uploadingFile}\n      setUploadingFile={setUploadingFile}\n      inputRef={inputRef}\n      selectedMediaKind={selectedMediaKind}\n      setSelectedMediaKind={setSelectedMediaKind}\n      uploadedImageUri={uploadedImageUri}\n      setUploadedImageUri={setUploadedImageUri}\n      sendMessage={sendMessage}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n          overflow: \"hidden\",\n        }}\n      >\n        <div\n          style={{\n            height: !openPlugin.type\n              ? \"100vh\"\n              : `${100 - PLUGIN_HEIGHT_PERCENTAGE}vh`,\n          }}\n        >\n          <FullScreenChat\n            setLocalUnreadCount={setLocalUnreadCount}\n            localUnreadCount={localUnreadCount}\n            jumpToBottom={jumpToBottom}\n            setShowJumpToBottom={setShowJumpToBottom}\n            messageRef={messageRef}\n            setMessageRef={setMessageRef}\n          />\n        </div>\n        <div>\n          <MessagePluginRenderer />\n        </div>\n      </div>\n    </ChatProvider>\n  );\n};\n","import { useState } from \"react\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport InsertEmoticonIcon from \"@mui/icons-material/InsertEmoticonRounded\";\nimport { IconButton } from \"@mui/material\";\nimport Popover from \"@mui/material/Popover\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport EmojiPicker, { Theme } from \"emoji-picker-react\";\n\nimport { useChatContext } from \"./ChatContext\";\n\nexport const EmojiPickerComponent = ({\n  setEmojiPicker,\n  emojiPicker,\n  setGifPicker,\n  buttonStyle,\n  inputRef,\n}) => {\n  const theme = useCustomTheme();\n  const [anchorEl, setAnchorEl] = useState<any | null>(null);\n  const { isDarkMode } = useChatContext();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Tooltip title=\"Emoji\">\n        <IconButton\n          size=\"small\"\n          sx={{\n            color: theme.custom.colors.icon,\n            \"&:hover\": {\n              background: `${theme.custom.colors.avatarIconBackground} !important`,\n            },\n          }}\n          style={buttonStyle}\n          onClick={(e) => {\n            setEmojiPicker((x) => !x);\n            if (!emojiPicker) {\n              setGifPicker(false);\n            }\n            setAnchorEl(e.currentTarget);\n          }}\n        >\n          {\" \"}\n          <InsertEmoticonIcon\n            style={{ color: theme.custom.colors.icon, fontSize: 20 }}\n          />{\" \"}\n        </IconButton>\n      </Tooltip>\n      <Popover\n        id=\"popover\"\n        open={emojiPicker}\n        anchorEl={anchorEl}\n        onClose={() => setEmojiPicker(false)}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n        style={{ marginBottom: 10 }}\n      >\n        <EmojiPicker\n          previewConfig={{ showPreview: false }}\n          theme={isDarkMode ? Theme.DARK : Theme.LIGHT}\n          height={400}\n          width=\"100%\"\n          onEmojiClick={(e) => {\n            inputRef.current.setValue(\n              `${inputRef.current.getTransformedValue()} ${e.emoji}`\n            );\n          }}\n        />\n      </Popover>\n    </div>\n  );\n};\n","import { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport TextsmsIcon from \"@mui/icons-material/Textsms\";\nimport { IconButton } from \"@mui/material\";\n\nimport { useStyles } from \"./styles\";\n\nexport const EmptyChat = () => {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n\n  return (\n    <div>\n      <div\n        className={classes.horizontalCenter}\n        style={{ marginBottom: 16, marginTop: 20 }}\n      >\n        <IconButton className={classes.contactIconOuter} size={\"large\"}>\n          <TextsmsIcon style={{ color: theme.custom.colors.fontColor }} />\n        </IconButton>\n      </div>\n      <div className={classes.horizontalCenter} style={{ marginBottom: 16 }}>\n        <div className={classes.smallTitle}>\n          This is the beginning of your chat history.\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport type { EnrichedMessageWithMetadata } from \"@coral-xyz/common\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { fetchMoreChatsFor } from \"@coral-xyz/tamagui\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\nimport FileUploadIcon from \"@mui/icons-material/FileUploadRounded\";\nimport { CircularProgress, Typography } from \"@mui/material\";\n\nimport { MessagePluginRenderer } from \"../MessagePluginRenderer\";\nimport { base64ToArrayBuffer } from \"../utils/imageUploadUtils\";\n\nimport { Banner } from \"./Banner\";\nimport { useChatContext } from \"./ChatContext\";\nimport { EmptyChat } from \"./EmptyChat\";\nimport { ChatMessages } from \"./Message\";\nimport { MessagesSkeleton } from \"./MessagesSkeleton\";\nimport { ScrollBarImpl } from \"./ScrollbarImpl\";\nimport { SendMessage } from \"./SendMessage\";\n\nexport const FullScreenChat = ({\n  setLocalUnreadCount,\n  messageRef,\n  setMessageRef,\n  jumpToBottom,\n  setShowJumpToBottom,\n  localUnreadCount,\n}) => {\n  const {\n    loading,\n    chats,\n    userId,\n    roomId,\n    type,\n    nftMint,\n    publicKey,\n    selectedFile,\n    setSelectedFile,\n    uploadingFile,\n    setUploadingFile,\n    selectedMediaKind,\n    setSelectedMediaKind,\n    uploadedImageUri,\n    setUploadedImageUri,\n  } = useChatContext();\n  const [autoScroll, setAutoScroll] = useState(true);\n  const theme = useCustomTheme();\n  const existingMessagesRef = useRef<EnrichedMessageWithMetadata[]>([]);\n  const [fetchingMoreChats, setFetchingMoreChats] = useState(false);\n  const [pluginMenuOpen, setPluginMenuOpen] = useState(false);\n\n  const { getRootProps, getInputProps, isDragAccept } = useDropzone({\n    onDrop: (files) => {\n      const selectedFile = files[0];\n      onMediaSelect(selectedFile);\n    },\n  });\n\n  useEffect(() => {\n    if (messageRef && autoScroll) {\n      if (\n        JSON.stringify(existingMessagesRef.current || []) !==\n        JSON.stringify(chats)\n      ) {\n        //@ts-ignore\n        messageRef?.scrollToBottom?.();\n        setTimeout(() => {\n          if (messageRef) {\n            //@ts-ignore\n            messageRef?.scrollToBottom?.();\n          }\n        }, 500);\n      }\n      existingMessagesRef.current = chats;\n    }\n  }, [chats, autoScroll]);\n\n  const uploadToS3 = async (selectedFile: string, selectedFileName: string) => {\n    try {\n      setUploadingFile(true);\n      const response = await fetch(`${BACKEND_API_URL}/s3/signedUrl`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          filename: selectedFileName,\n        }),\n      });\n\n      const json = await response.json();\n      await fetch(json.uploadUrl, {\n        method: \"PUT\",\n        body: base64ToArrayBuffer(selectedFile),\n      });\n      setUploadingFile(false);\n      setUploadedImageUri(json.url);\n    } catch (e) {\n      setUploadingFile(false);\n    }\n  };\n\n  const onMediaSelect = (file: File) => {\n    const fileType = file.type.split(\"/\")[0];\n\n    if (fileType === \"image\" || fileType === \"video\") {\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        setSelectedMediaKind(file.name.endsWith(\"mp4\") ? \"video\" : \"image\");\n        setSelectedFile(e.target?.result);\n        uploadToS3(e.target?.result as string, file.name);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  return (\n    <div\n      {...getRootProps({\n        onClick: (event) => event.stopPropagation(),\n        style: {\n          display: \"flex\",\n          flexFlow: \"column\",\n          height: \"100%\",\n          position: \"relative\",\n          background: theme.custom.colors.chatFadeGradient,\n        },\n      })}\n    >\n      {isDragAccept ? <DropzonePopup /> : null}\n      <div\n        id=\"messageContainer\"\n        style={{\n          height: \"calc(100% - 50px)\",\n        }}\n      >\n        <ScrollBarImpl\n          onScrollStop={async () => {\n            // @ts-ignore\n            const scrollContainer = messageRef?.container?.children?.[0];\n            if (scrollContainer) {\n              if (\n                scrollContainer.scrollHeight -\n                  scrollContainer.scrollTop -\n                  scrollContainer.clientHeight <=\n                1\n              ) {\n                setAutoScroll(true);\n                setShowJumpToBottom(false);\n                window.setTimeout(() => {\n                  setLocalUnreadCount(0);\n                }, 150);\n              } else {\n                // User has scrolled up, don't autoscroll as more messages come in.\n                if (autoScroll) {\n                  setAutoScroll(false);\n                }\n                if (\n                  scrollContainer.scrollHeight -\n                    scrollContainer.scrollTop -\n                    scrollContainer.clientHeight >\n                  500\n                ) {\n                  // user has scrolled way up, give them a way to come down\n                  setShowJumpToBottom(true);\n                }\n              }\n              if (scrollContainer.scrollTop === 0) {\n                setFetchingMoreChats(true);\n                try {\n                  await fetchMoreChatsFor(\n                    userId,\n                    roomId,\n                    type,\n                    nftMint,\n                    publicKey\n                  );\n                } catch (e) {\n                  console.error(e);\n                }\n                setFetchingMoreChats(false);\n              }\n            }\n          }}\n          setRef={setMessageRef}\n          height=\"calc(100% - 50px)\"\n        >\n          <div>\n            <div\n              style={{\n                paddingBottom: 20,\n                transform: pluginMenuOpen ? \"translate(0, -35px)\" : undefined,\n              }}\n            >\n              <input {...getInputProps()} />\n              <div>\n                {fetchingMoreChats ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      marginBottom: 3,\n                      marginTop: 3,\n                    }}\n                  >\n                    {\" \"}\n                    <CircularProgress size={20} />{\" \"}\n                  </div>\n                ) : null}\n                <Banner />\n                {loading ? <MessagesSkeleton /> : null}\n                {!loading && chats?.length === 0 ? <EmptyChat /> : null}\n                {!loading && chats?.length !== 0 ? <ChatMessages /> : null}\n              </div>\n            </div>\n          </div>\n        </ScrollBarImpl>\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: 70,\n          right: 0,\n          transition: \"visibility 0.1s\",\n          visibility: jumpToBottom ? \"visible\" : \"hidden\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row-reverse\",\n            marginRight: 10,\n          }}\n        >\n          <div\n            style={{\n              fontSize: 12,\n              fontWeight: 500,\n              display: \"inline-flex\",\n              cursor: \"pointer\",\n              padding: \"8px 12px 8px 16px\",\n              background: theme.custom.colors.invertedPrimary,\n              color: theme.custom.colors.background,\n              borderRadius: 16,\n            }}\n            onClick={() => messageRef?.scrollToBottom?.()}\n          >\n            {localUnreadCount\n              ? localUnreadCount === 1\n                ? \"1 unread message\"\n                : `${localUnreadCount} unread messages`\n              : \"Jump to bottom\"}{\" \"}\n            <ArrowDownwardIcon\n              style={{\n                color: theme.custom.colors.icon,\n                fontSize: 14,\n                marginTop: 2,\n                marginLeft: 2,\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      <div style={{ position: \"absolute\", bottom: 0, width: \"100%\" }}>\n        <SendMessage\n          uploadingFile={uploadingFile}\n          setUploadingFile={setUploadingFile}\n          selectedFile={selectedFile}\n          setSelectedFile={setSelectedFile}\n          onMediaSelect={onMediaSelect}\n          uploadedImageUri={uploadedImageUri}\n          selectedMediaKind={selectedMediaKind}\n          pluginMenuOpen={pluginMenuOpen}\n          setPluginMenuOpen={setPluginMenuOpen}\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction DropzonePopup() {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        background: `${theme.custom.colors.nav}85`,\n        backdropFilter: \"blur(20px)\",\n        zIndex: 50,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n          width: \"80%\",\n          textAlign: \"center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <FileUploadIcon\n          sx={{\n            color: theme.custom.colors.icon,\n            fontSize: \"38px\",\n            mb: \"8px\",\n          }}\n        />\n        <Typography\n          fontSize=\"24px\"\n          sx={{ color: theme.custom.colors.fontColor, mb: \"8px\" }}\n        >\n          Upload\n        </Typography>\n        <Typography sx={{ color: theme.custom.colors.fontColor3 }}>\n          Drop photos, GIFs, and videos anywhere to upload.\n        </Typography>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { TextInput } from \"@coral-xyz/react-common\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { GiphyFetch } from \"@giphy/js-fetch-api\";\nimport { Carousel } from \"@giphy/react-components\";\nimport GifIcon from \"@mui/icons-material/GifBoxOutlined\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { IconButton, Tooltip } from \"@mui/material\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Popover from \"@mui/material/Popover\";\n\n// use @giphy/js-fetch-api to fetch gifs, instantiate with your api key\nconst gf = new GiphyFetch(\"SjZwwCn1e394TKKjrMJWb2qQRNcqW8ro\");\n\nlet debouncedTimer;\n\nexport const useStyles = styles((theme) => ({\n  searchField: {\n    width: \"inherit\",\n    display: \"flex\",\n    marginTop: 0,\n    \"& .MuiOutlinedInput-root\": {\n      \"& input\": {\n        paddingTop: 10,\n        paddingBottom: 10,\n      },\n    },\n  },\n}));\n\nexport const GifPicker = ({\n  setGifPicker,\n  gifPicker,\n  setEmojiPicker,\n  sendMessage,\n  buttonStyle,\n}: any) => {\n  const theme = useCustomTheme();\n  const [anchorEl, setAnchorEl] = useState<any | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [searchFilter, setSearchFilter] = useState(\"\");\n  const fetchGifs = (offset: number) =>\n    searchFilter\n      ? gf.search(searchFilter, { limit: 10, offset })\n      : gf.trending({ limit: 10, offset });\n  const classes = useStyles();\n\n  const refreshSearch = () => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 250);\n  };\n\n  const debouncedInit = () => {\n    clearTimeout(debouncedTimer);\n    debouncedTimer = setTimeout(() => {\n      refreshSearch();\n    }, 400);\n  };\n\n  useEffect(() => {\n    debouncedInit();\n  }, [searchFilter]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Tooltip title=\"GIF\">\n        <IconButton\n          size=\"small\"\n          sx={{\n            color: theme.custom.colors.icon,\n            \"&:hover\": {\n              background: `${theme.custom.colors.avatarIconBackground} !important`,\n            },\n          }}\n          style={buttonStyle}\n          onClick={(e) => {\n            setGifPicker((x) => !x);\n            if (!gifPicker) {\n              setEmojiPicker(false);\n            }\n            setAnchorEl(e.currentTarget);\n          }}\n        >\n          {\" \"}\n          <GifIcon\n            style={{ color: theme.custom.colors.icon, fontSize: 20 }}\n          />{\" \"}\n        </IconButton>\n      </Tooltip>\n      <Popover\n        id=\"popover2\"\n        open={gifPicker}\n        anchorEl={anchorEl}\n        onClose={() => setGifPicker(false)}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <div\n          style={{\n            maxWidth: 400,\n            background: theme.custom.colors.background,\n            padding: 5,\n          }}\n        >\n          <TextInput\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <SearchIcon style={{ color: theme.custom.colors.icon }} />\n              </InputAdornment>\n            }\n            placeholder=\"Search for GIFs\"\n            className={classes.searchField}\n            value={searchFilter}\n            setValue={(e) => setSearchFilter(e.target.value)}\n          />\n          {loading ? <div style={{ height: 100 }} /> : null}\n          {!loading ? <Carousel\n            onGifClick={(x, e) => {\n                  sendMessage(x.id, \"gif\");\n                  setGifPicker(false);\n                  e.preventDefault();\n                }}\n            gifHeight={100}\n            gutter={6}\n            fetchGifs={fetchGifs}\n              /> : null}\n        </div>\n      </Popover>\n    </div>\n  );\n};\n","export const ReplyIcon = ({ fill = \"#8F929E\" }) => {\n  return (\n    <svg\n      width=\"19\"\n      height=\"15\"\n      viewBox=\"0 0 19 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.025 14.1501C16.7083 14.1501 16.4416 14.0375 16.225 13.8121C16.0083 13.5875 15.9 13.3168 15.9 13.0001V10.0001C15.9 9.20015 15.6206 8.52515 15.062 7.97515C14.504 7.42515 13.825 7.15015 13.025 7.15015H4.14995L6.84995 9.82515C7.06662 10.0418 7.17095 10.3001 7.16295 10.6001C7.15428 10.9001 7.04162 11.1668 6.82495 11.4001C6.60828 11.6168 6.34162 11.7251 6.02495 11.7251C5.70828 11.7251 5.44162 11.6168 5.22495 11.4001L0.624951 6.80015C0.508284 6.68348 0.429284 6.55848 0.387951 6.42515C0.345951 6.29181 0.324951 6.15015 0.324951 6.00015C0.324951 5.85015 0.345951 5.70848 0.387951 5.57515C0.429284 5.44181 0.508284 5.31681 0.624951 5.20015L5.24995 0.575146C5.46662 0.358479 5.72928 0.254146 6.03795 0.262146C6.34595 0.270813 6.60828 0.383479 6.82495 0.600146C7.04162 0.816813 7.14995 1.08348 7.14995 1.40015C7.14995 1.71681 7.04162 1.98348 6.82495 2.20015L4.14995 4.85015H13.025C14.4583 4.85015 15.6749 5.35448 16.6749 6.36315C17.6749 7.37115 18.1749 8.58348 18.1749 10.0001V13.0001C18.1749 13.3168 18.0623 13.5875 17.837 13.8121C17.6123 14.0375 17.3416 14.1501 17.025 14.1501Z\"\n        fill={fill}\n      />\n    </svg>\n  );\n};\n","import { useState } from \"react\";\nimport { useBreakpoints } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport OpenInFullIcon from \"@mui/icons-material/OpenInFull\";\nimport { Modal } from \"@mui/material\";\n\nexport const MediaContent = ({\n  mediaLink,\n  mediaKind,\n}: {\n  mediaLink: string;\n  mediaKind: string;\n}) => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const theme = useCustomTheme();\n  const { isXs } = useBreakpoints();\n\n  return (\n    <>\n      {modalOpen && (\n        <Modal\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n          componentsProps={{\n            root: {\n              style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                padding: \"0 10px\",\n                height: \"100vh\",\n                gap: 4,\n              },\n            },\n            backdrop: {\n              style: {\n                background: \"rgba(24, 24, 27, 0.9)\",\n                backdropFilter: \"blur(5px)\",\n              },\n            },\n          }}\n        >\n          <>\n            <CloseIcon\n              style={{\n                color: theme.custom.colors.icon,\n                cursor: \"pointer\",\n                position: \"absolute\",\n                top: 10,\n                right: 10,\n              }}\n              onClick={() => setModalOpen(false)}\n            />\n            {mediaKind === \"video\" ? (\n              <video\n                style={{\n                  borderRadius: 5,\n                  objectFit: \"contain\",\n                  maxHeight: \"85vh\",\n                }}\n                controls={true}\n                src={mediaLink}\n              />\n            ) : (\n              <img\n                style={{\n                  borderRadius: 5,\n                  objectFit: \"contain\",\n                  maxHeight: \"85vh\",\n                  maxWidth: \"85vw\",\n                }}\n                src={mediaLink}\n              />\n            )}\n            <a\n              style={{\n                position: \"absolute\",\n                right: 10,\n                bottom: 10,\n              }}\n              href={mediaLink}\n              download=\"AwesomeImage.png\"\n            >\n              <DownloadIcon\n                style={{ color: theme.custom.colors.icon, cursor: \"pointer\" }}\n                onClick={() => setModalOpen(false)}\n              />\n            </a>\n          </>\n        </Modal>\n      )}\n      <div style={{ marginTop: 3, width: 1 }}>\n        {mediaKind === \"video\" ? (\n          <div style={{ display: \"flex\" }}>\n            <div style={{ position: \"relative\" }}>\n              <video\n                style={{\n                  height: !isXs ? 270 : 180,\n                  maxWidth: !isXs ? 375 : 250,\n                  borderRadius: 5,\n                }}\n                controls={true}\n                src={mediaLink}\n              />\n              <div\n                style={{\n                  cursor: \"pointer\",\n                  position: \"absolute\",\n                  right: \"0%\",\n                  top: \"0%\",\n                  bottom: \"0%\",\n                  margin: \"auto\",\n                }}\n                onClick={(e) => {\n                  setModalOpen(true);\n                  e.preventDefault();\n                }}\n              >\n                <OpenInFullIcon\n                  style={{ color: theme.custom.colors.icon, margin: 3 }}\n                />\n              </div>\n            </div>\n          </div>\n        ) : (\n          <img\n            onClick={() => setModalOpen(true)}\n            style={{\n              height: \"full\",\n              maxWidth: !isXs ? 375 : \"60vw\",\n              borderRadius: 5,\n              marginTop: 5,\n              objectFit: \"contain\",\n              cursor: \"pointer\",\n            }}\n            src={mediaLink}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport {\n  BACKEND_API_URL,\n  BACKPACK_TEAM,\n  Blockchain,\n  DELETE_MESSAGE,\n  NAV_COMPONENT_MESSAGE_PROFILE,\n  NEW_COLORS,\n} from \"@coral-xyz/common\";\nimport {\n  BackpackStaffIcon,\n  LocalImage,\n  SuccessButton,\n} from \"@coral-xyz/react-common\";\nimport {\n  blockchainTokenData,\n  SOL_LOGO_URI,\n  useActiveSolanaWallet,\n  useAnchorContext,\n  useBackgroundClient,\n  useLoader,\n  useNavigation,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport {\n  refreshIndividualChatsFor,\n  SignalingManager,\n} from \"@coral-xyz/tamagui\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { GiphyFetch } from \"@giphy/js-fetch-api\";\nimport { Gif as GifComponent } from \"@giphy/react-components\";\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport CallMadeIcon from \"@mui/icons-material/CallMade\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport DoneAllIcon from \"@mui/icons-material/DoneAll\";\nimport Info from \"@mui/icons-material/Info\";\nimport { Skeleton, Tooltip } from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\n\nimport {\n  cancel,\n  getSecureTransferState,\n  redeem,\n} from \"../utils/secure-transfer/secureTransfer\";\n\nimport { BarterModal } from \"./barter/BarterModal\";\nimport { BarterPoke } from \"./barter/BarterPoke\";\nimport { chatMessageInputId } from \"./messageInput/MessageInput\";\nimport { useChatContext } from \"./ChatContext\";\nimport { ReplyIcon } from \"./Icons\";\nimport { MediaContent } from \"./MediaContent\";\nimport { NftStickerRender } from \"./NftStickerRender\";\nimport { ParsedMessage } from \"./ParsedMessage\";\nimport { ReplyContainer } from \"./ReplyContainer\";\nimport { SimpleTransaction } from \"./SimpleTransaction\";\n\n// use @giphy/js-fetch-api to fetch gifs, instantiate with your api key\nconst gf = new GiphyFetch(\"SjZwwCn1e394TKKjrMJWb2qQRNcqW8ro\");\n\nconst useStyles = makeStyles((theme: any) =>\n  createStyles({\n    messageRow: {\n      display: \"flex\",\n    },\n    messageContainer: {\n      position: \"relative\",\n      marginLeft: \"10px\",\n      width: \"100%\",\n      textAlign: \"left\",\n      fontSize: \"14px\",\n      color: theme.custom.colors.fontColor,\n    },\n    messageContent: {\n      padding: 0,\n      margin: 0,\n    },\n    messageTimeStampRight: {\n      color: theme.custom.colors.secondary,\n      fontSize: 12,\n      lineHeight: \"15px\",\n      fontWeight: 500,\n      minWidth: 63,\n      display: \"flex\",\n      flexDirection: \"row-reverse\",\n      opacity: 0.5,\n    },\n    avatar: {\n      width: 32,\n      height: 32,\n      cursor: \"pointer\",\n      borderRadius: \"50%\",\n    },\n    messageLine: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      width: \"100%\",\n      color: theme.custom.colors.fontColor2,\n    },\n    displayName: {\n      fontWeight: 600,\n      marginLeft: \"10px\",\n      lineHeight: \"16px\",\n      fontSize: \"14px\",\n      fontColor: \"#4E5768\",\n    },\n    smallBtn: {\n      padding: \"2px 12px\",\n      borderRadius: 12,\n      cursor: \"pointer\",\n    },\n    messageLeftContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-start\",\n      padding: \"8px 19px\",\n    },\n    messageLeft: {\n      borderRadius: \"16px 16px 16px 0px\",\n      color: theme.custom.colors.fontColor4,\n      overflowWrap: \"break-word\",\n      fontSize: 14,\n    },\n    messageRightContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"flex-end\",\n      padding: \"8px 16px\",\n    },\n    messageRight: {\n      borderRadius: \"16px 16px 0px 16px\",\n      color: theme.custom.colors.background,\n      overflowWrap: \"break-word\",\n      fontSize: 14,\n    },\n    hoverParent: {\n      \"&:hover $hoverChild, & .Mui-focused $hoverChild\": {\n        visibility: \"visible\",\n      },\n    },\n    hoverChild: {\n      visibility: \"hidden\",\n    },\n    secureSendOuter: {\n      background: theme.custom.colors.invertedPrimary,\n      borderRadius: 16,\n      padding: \"8px 10px\",\n      color: theme.custom.colors.background,\n      minWidth: 230,\n      maxWidth: 400,\n    },\n    secureSendInner: {\n      background: theme.custom.colors.invertedSecondary,\n      borderRadius: 8,\n      padding: \"8px 16px\",\n      color: theme.custom.colors.background,\n    },\n  })\n);\n\nconst GifDemo = ({\n  id,\n  width,\n  height,\n  noLink,\n  borderRadius,\n  overlay,\n  ...other\n}: any) => {\n  const [gif, setGif] = useState<any>();\n\n  const fetch = useCallback(async () => {\n    const { data: gif } = await gf.gif(id);\n    setGif(gif);\n  }, [id]);\n\n  useEffect(() => {\n    fetch();\n  }, [fetch, id]);\n\n  return gif ? (\n    <GifComponent\n      onGifClick={(_, e) => e.preventDefault()}\n      key={`gif-${noLink}`}\n      tabIndex={1}\n      borderRadius={borderRadius}\n      gif={gif}\n      width={width}\n      height={height}\n      noLink={noLink}\n      overlay={overlay}\n      {...other}\n    />\n  ) : null;\n};\n\nexport const MessageLine = (props) => {\n  const { push } = useNavigation();\n  const { isDarkMode, roomId, type } = useChatContext();\n  const message = props.message ? props.message : \"\";\n  const timestamp = props.timestamp\n    ? new Date(parseInt(props.timestamp))\n    : new Date();\n  const { uuid } = useUser();\n\n  const photoURL = props.image;\n  const displayName = props.username;\n  const received = props.received;\n  const theme = useCustomTheme();\n  const sameUserMessage = props.sameUserMessage;\n\n  const classes = useStyles();\n  const { setActiveReply } = useChatContext();\n\n  function formatAMPM(date) {\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n    let ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return hours + \":\" + minutes + \" \" + ampm;\n  }\n\n  const openProfilePage = (props: { uuid: string }) => {\n    if (uuid === props.uuid) {\n      return;\n    }\n    push({\n      title: `@${displayName}`,\n      componentId: NAV_COMPONENT_MESSAGE_PROFILE,\n      componentProps: {\n        userId: props.uuid,\n      },\n    });\n  };\n\n  if (props.messageKind === \"barter-request\") {\n    return (\n      <BarterPoke sender={props.uuid} barterId={props.metadata?.barter_id} />\n    );\n  }\n\n  if (props.messageKind === \"barter\") {\n    return <BarterModal barterId={props.metadata?.barter_id} />;\n  }\n\n  return (\n    <div\n      className={classes.messageRow}\n      style={{\n        marginTop: sameUserMessage ? 0 : 8,\n        paddingLeft: sameUserMessage ? 32 : 0,\n      }}\n    >\n      {sameUserMessage ? (\n        <div\n          className={`${classes.messageContainer} ${classes.hoverParent}`}\n          style={{ display: \"flex\", paddingTop: \"4px\" }}\n        >\n          <div style={{ width: \"calc(100% - 80px)\" }}>\n            <div>\n              {props.parent_message_author_uuid ? (\n                <div>\n                  <ReplyContainer\n                    marginBottom={2}\n                    padding={0}\n                    parent_username={props.parent_message_author_username || \"\"}\n                    showCloseBtn={false}\n                    text={props.parent_message_text}\n                  />\n                </div>\n              ) : null}\n              <div style={{ display: \"flex\" }}>\n                <div>\n                  <p className={classes.messageContent}>\n                    {props.deleted ? (\n                      <DeletedMessage />\n                    ) : props.messageKind === \"gif\" ? (\n                      <div\n                        style={{\n                          height: 150,\n                          maxWidth: 220,\n                          overflow: \"hidden\",\n                        }}\n                      >\n                        <GifDemo id={message} height={150} />\n                      </div>\n                    ) : props.messageKind === \"secure-transfer\" ? (\n                      <SecureTransferElement\n                        messageId={props.messageId}\n                        senderUuid={props.uuid}\n                        escrow={props.metadata.escrow}\n                        counter={props.metadata.counter}\n                        currentState={props.metadata.current_state}\n                        remoteUsername={props.username}\n                        finalTxId={props.metadata.final_txn_signature}\n                      />\n                    ) : props.messageKind === \"transaction\" ? (\n                      <SimpleTransaction\n                        remoteUserId={props.uuid}\n                        message={message}\n                        txnSignature={props.metadata?.final_tx_signature}\n                      />\n                    ) : props.messageKind === \"media\" ? (\n                      <div>\n                        <MediaContent\n                          mediaLink={props.metadata?.media_link}\n                          mediaKind={props.metadata?.media_kind}\n                        />\n                        <ParsedMessage message={message} />\n                      </div>\n                    ) : props.messageKind === \"nft-sticker\" ? (\n                      <div>\n                        <NftStickerRender\n                          uuid={props.uuid}\n                          mint={props.metadata?.mint}\n                          displayName={displayName}\n                        />\n                      </div>\n                    ) : (\n                      <ParsedMessage message={message} />\n                    )}\n                  </p>\n                </div>\n                {!props.deleted ? (\n                  <div>\n                    {props.messageKind === \"text\" ? (\n                      <div\n                        style={{ display: \"flex\" }}\n                        className={classes.hoverChild}\n                      >\n                        <div\n                          style={{\n                            marginLeft: 10,\n                            marginTop: 3,\n                            cursor: \"pointer\",\n                            marginRight: 5,\n                          }}\n                          onClick={() => {\n                            setActiveReply({\n                              parent_client_generated_uuid:\n                                props.client_generated_uuid,\n                              text: message,\n                              parent_username: `@${props.username}`,\n                              parent_message_author_uuid: props.userId,\n                            });\n                            document\n                              .getElementById(chatMessageInputId)\n                              ?.focus();\n                          }}\n                        >\n                          <ReplyIcon fill={theme.custom.colors.icon} />\n                        </div>\n                        <div style={{ marginLeft: 3 }}>\n                          <DeleteIconInternal\n                            client_generated_uuid={props.client_generated_uuid}\n                            messageSender={props.uuid}\n                          />\n                        </div>\n                      </div>\n                    ) : (\n                      <div\n                        style={{ marginLeft: 5 }}\n                        className={classes.hoverChild}\n                      >\n                        {\" \"}\n                        <DeleteIconInternal\n                          client_generated_uuid={props.client_generated_uuid}\n                          messageSender={props.uuid}\n                        />{\" \"}\n                      </div>\n                    )}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <>\n          <div\n            style={{\n              paddingTop: 8,\n              width: 32,\n            }}\n          >\n            {photoURL ? (\n              <LocalImage\n                size={32}\n                onClick={() => openProfilePage({ uuid: props.uuid })}\n                alt={displayName}\n                className={classes.avatar}\n                style={{ width: 32, height: 32 }}\n                src={photoURL}\n              />\n            ) : (\n              <Skeleton\n                variant=\"circular\"\n                width={32}\n                height={32}\n                style={{\n                  minWidth: 32,\n                }}\n              />\n            )}\n          </div>\n          <div className={`${classes.messageLine} ${classes.hoverParent}`}>\n            <div style={{ width: \"calc(100% - 80px)\" }}>\n              <div\n                onClick={() => openProfilePage({ uuid: props.uuid })}\n                className={classes.displayName}\n                style={{\n                  display: \"inline-flex\",\n                  paddingBottom: \"4px\",\n                  color:\n                    props.colorIndex || props.colorIndex === 0\n                      ? NEW_COLORS[props.colorIndex || 0][\n                          isDarkMode ? \"dark\" : \"light\"\n                        ]\n                      : props.color,\n                  cursor: \"pointer\",\n                }}\n              >\n                {displayName ? (\n                  <div style={{ display: \"flex\" }}>\n                    <div>@{displayName} </div>{\" \"}\n                    {BACKPACK_TEAM.includes(props.uuid) ? (\n                      <BackpackStaffIcon />\n                    ) : null}\n                  </div>\n                ) : (\n                  <Skeleton\n                    width={50}\n                    height={16}\n                    style={{ marginTop: \"0px\" }}\n                  />\n                )}\n              </div>\n              <div\n                className={`${classes.messageContainer} ${classes.hoverParent}`}\n                style={{ display: \"flex\" }}\n              >\n                <div>\n                  {props.parent_message_author_uuid ? (\n                    <div style={{}}>\n                      <ReplyContainer\n                        marginBottom={0}\n                        padding={0}\n                        parent_username={\n                          props.parent_message_author_username || \"\"\n                        }\n                        showCloseBtn={false}\n                        text={props.parent_message_text}\n                      />\n                    </div>\n                  ) : null}\n                  <div>\n                    <p className={classes.messageContent}>\n                      {props.deleted ? (\n                        <DeletedMessage />\n                      ) : props.messageKind === \"gif\" ? (\n                        <div\n                          style={{\n                            height: 150,\n                            maxWidth: 220,\n                            overflow: \"hidden\",\n                          }}\n                        >\n                          <GifDemo id={message} height={150} />\n                        </div>\n                      ) : props.messageKind === \"secure-transfer\" ? (\n                        <SecureTransferElement\n                          messageId={props.messageId}\n                          senderUuid={props.uuid}\n                          escrow={props.metadata.escrow}\n                          counter={props.metadata.counter}\n                          currentState={props.metadata.current_state}\n                          remoteUsername={props.username}\n                          finalTxId={props.metadata.final_txn_signature}\n                        />\n                      ) : props.messageKind === \"transaction\" ? (\n                        <SimpleTransaction\n                          remoteUserId={props.uuid}\n                          message={message}\n                          txnSignature={props.metadata?.final_tx_signature}\n                        />\n                      ) : props.messageKind === \"nft-sticker\" ? (\n                        <div>\n                          <NftStickerRender\n                            mint={props.metadata?.mint}\n                            uuid={props.uuid}\n                            displayName={displayName}\n                          />\n                        </div>\n                      ) : props.messageKind === \"media\" ? (\n                        <div>\n                          <MediaContent\n                            mediaLink={props.metadata?.media_link}\n                            mediaKind={props.metadata?.media_kind}\n                          />\n\n                          <ParsedMessage message={message} />\n                        </div>\n                      ) : (\n                        <ParsedMessage message={message} />\n                      )}\n                    </p>\n                  </div>\n                </div>\n\n                {!props.deleted ? (\n                  <div\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                  >\n                    {props.messageKind === \"text\" ? (\n                      <div\n                        style={{ display: \"flex\" }}\n                        className={classes.hoverChild}\n                      >\n                        <div\n                          style={{\n                            marginLeft: 10,\n                            marginTop: 3,\n                            cursor: \"pointer\",\n                          }}\n                          className={classes.hoverChild}\n                          onClick={() => {\n                            setActiveReply({\n                              parent_client_generated_uuid:\n                                props.client_generated_uuid,\n                              text: message,\n                              parent_username: `@${props.username}`,\n                              parent_message_author_uuid: props.userId,\n                            });\n                            document\n                              .getElementById(chatMessageInputId)\n                              ?.focus();\n                          }}\n                        >\n                          <ReplyIcon fill={theme.custom.colors.icon} />\n                        </div>\n                        <div style={{ marginLeft: 3 }}>\n                          <DeleteIconInternal\n                            client_generated_uuid={props.client_generated_uuid}\n                            messageSender={props.uuid}\n                          />\n                        </div>\n                      </div>\n                    ) : (\n                      <div\n                        style={{ marginLeft: 5 }}\n                        className={classes.hoverChild}\n                      >\n                        {\" \"}\n                        <DeleteIconInternal\n                          client_generated_uuid={props.client_generated_uuid}\n                          messageSender={props.uuid}\n                        />{\" \"}\n                      </div>\n                    )}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n            <div style={{ minWidth: 63 }}>\n              <div className={classes.messageTimeStampRight}>\n                {formatAMPM(timestamp)}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row-reverse\",\n                  marginTop: 5,\n                }}\n              >\n                {received ? (\n                  <DoneAllIcon\n                    style={{\n                      fontSize: 13,\n                      color: \"green\",\n                    }}\n                  />\n                ) : (\n                  <DoneIcon\n                    style={{ color: theme.custom.colors.icon, fontSize: 13 }}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nfunction SecureTransferElement({\n  escrow,\n  senderUuid,\n  counter,\n  messageId,\n  currentState,\n  remoteUsername,\n  finalTxId,\n}: {\n  escrow: string;\n  senderUuid: string;\n  counter: number;\n  messageId: string;\n  currentState: \"pending\" | \"cancelled\" | \"redeemed\";\n  remoteUsername: string;\n  finalTxId: string;\n}) {\n  const [currentStateLocal, setCurrentStateLocal] = useState(currentState);\n  const [finalTxIdLocal, setFinalTxIdLocal] = useState(finalTxId);\n  const { username, uuid } = useUser();\n  const [loading, setLoading] = useState(true);\n  const { roomId } = useChatContext();\n  const { provider, connection } = useAnchorContext();\n  const activeSolanaWallet = useActiveSolanaWallet();\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  const background = useBackgroundClient();\n  const [actionButtonLoading, setActionButtonLoading] = useState(false);\n  const [escrowState, setEscrowState] = useState<null | {\n    amount: string;\n    sender: string;\n    receiver: string;\n  }>(null);\n\n  useEffect(() => {\n    if (!loading && !escrowState && currentStateLocal === \"pending\") {\n      refreshIndividualChatsFor(uuid, roomId, \"individual\", messageId);\n    }\n  }, [currentState, messageId, escrowState, loading]);\n\n  useEffect(() => {\n    setCurrentStateLocal(currentState);\n  }, [currentState]);\n\n  useEffect(() => {\n    if (finalTxId) {\n      setFinalTxIdLocal(finalTxId);\n    }\n  }, [finalTxId]);\n\n  const [token] = useLoader(\n    blockchainTokenData({\n      publicKey: activeSolanaWallet?.publicKey,\n      blockchain: Blockchain.SOLANA,\n      //@ts-ignore\n      tokenAddress: activeSolanaWallet?.publicKey,\n    }),\n    null\n  );\n  const init = async () => {\n    const state = await getSecureTransferState(provider, escrow);\n    setEscrowState(state);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    init();\n  }, [escrow]);\n\n  return (\n    <div className={classes.secureSendOuter} id=\"asdasd\">\n      {loading ? <div>Loading</div> : null}\n      {!loading && escrowState ? (\n        <div style={{ paddingLeft: 5, paddingRight: 5 }}>\n          {uuid === senderUuid ? (\n            <div\n              style={{\n                display: \"flex\",\n                color: theme.custom.colors.icon,\n                marginBottom: 5,\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  flexDirection: \"column\",\n                  marginRight: 3,\n                }}\n              >\n                <ArrowUpwardIcon\n                  style={{ color: theme.custom.colors.icon, fontSize: 15 }}\n                />\n              </div>\n              <div> Sending to @{remoteUsername}</div>\n            </div>\n          ) : (\n            <div\n              style={{\n                display: \"flex\",\n                color: theme.custom.colors.icon,\n                marginBottom: 5,\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  flexDirection: \"column\",\n                  marginRight: 3,\n                }}\n              >\n                <ArrowDownwardIcon\n                  style={{ color: theme.custom.colors.icon, fontSize: 15 }}\n                />\n              </div>\n              <div>Payment from @{remoteUsername}</div>\n            </div>\n          )}\n          <div className={classes.secureSendInner}>\n            <div style={{ fontSize: 30, display: \"flex\" }}>\n              $\n              <div>\n                {(\n                  ((token?.priceData?.usd || 0) *\n                    parseInt(escrowState.amount)) /\n                  LAMPORTS_PER_SOL\n                ).toFixed(2)}\n              </div>\n            </div>\n            <div style={{ display: \"flex\", marginTop: 3 }}>\n              <img\n                src={SOL_LOGO_URI}\n                style={{\n                  width: 20,\n                  height: 20,\n                  borderRadius: 8,\n                  marginRight: 5,\n                }}\n              />{\" \"}\n              <div> {parseInt(escrowState.amount) / LAMPORTS_PER_SOL}</div>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              paddingTop: 8,\n            }}\n          >\n            {uuid === senderUuid ? (\n              <div>\n                {!actionButtonLoading ? (\n                  <div\n                    style={{\n                      color: \"#F8C840\",\n                      background: \"rgba(206, 121, 7, 0.2)\",\n                      borderRadius: 16,\n                      padding: \"4px 10px\",\n                      display: \"flex\",\n                    }}\n                  >\n                    {/*<div style={{justifyContent: \"center\", flexDirection: \"column\", display: \"flex\"}}>*/}\n                    {/*  <AccessTimeIcon style={{ fontSize: 18 }} />*/}\n                    {/*</div>*/}\n                    <div\n                      style={{\n                        marginLeft: 5,\n                        justifyContent: \"center\",\n                        flexDirection: \"column\",\n                        display: \"flex\",\n                      }}\n                    >\n                      Waiting for {remoteUsername}\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            ) : null}\n            {uuid === senderUuid ? (\n              <>\n                {\" \"}\n                <div\n                  style={{\n                    color: theme.custom.colors.background,\n                    cursor: actionButtonLoading ? \"auto\" : \"pointer\",\n                    fontSize: 15,\n                    marginTop: 2,\n                  }}\n                  onClick={async () => {\n                    setActionButtonLoading(true);\n                    const txn = await cancel(\n                      provider,\n                      background,\n                      connection,\n                      new PublicKey(escrowState?.receiver || \"\"),\n                      new PublicKey(escrowState?.sender || \"\"),\n                      new PublicKey(escrow),\n                      counter\n                    );\n                    fetch(\n                      `${BACKEND_API_URL}/chat/message?type=individual&room=${roomId}`,\n                      {\n                        method: \"PUT\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          messageId,\n                          state: \"cancelled\",\n                          txn,\n                        }),\n                      }\n                    );\n                    setFinalTxIdLocal(txn);\n                    setCurrentStateLocal(\"cancelled\");\n                    setEscrowState(null);\n                    setActionButtonLoading(false);\n                  }}\n                >\n                  {!actionButtonLoading ? \"Cancel\" : \"Cancelling...\"}\n                </div>\n              </>\n            ) : (\n              <SuccessButton\n                style={{ height: 38 }}\n                onClick={async () => {\n                  setActionButtonLoading(true);\n                  try {\n                    const txn = await redeem(\n                      provider,\n                      background,\n                      connection,\n                      new PublicKey(escrowState.receiver),\n                      new PublicKey(escrowState.sender),\n                      new PublicKey(escrow),\n                      counter\n                    );\n                    fetch(\n                      `${BACKEND_API_URL}/chat/message?type=individual&room=${roomId}`,\n                      {\n                        method: \"PUT\",\n                        headers: {\n                          \"Content-Type\": \"application/json\",\n                        },\n                        body: JSON.stringify({\n                          messageId,\n                          state: \"redeemed\",\n                          txn,\n                        }),\n                      }\n                    );\n                    setFinalTxIdLocal(txn);\n                    setCurrentStateLocal(\"redeemed\");\n                    setEscrowState(null);\n                    setActionButtonLoading(false);\n                  } catch (e) {\n                    console.error(e);\n                    setActionButtonLoading(false);\n                  }\n                }}\n                label={!actionButtonLoading ? \"Accept\" : \"Accepting...\"}\n              />\n            )}\n          </div>\n        </div>\n      ) : null}\n      {!loading && !escrowState ? (\n        <div style={{ fontSize: 14 }}>\n          <div>\n            {currentStateLocal === \"redeemed\"\n              ? `Escrow redeemed by ${\n                  remoteUsername !== username ? \"you\" : remoteUsername\n                } `\n              : `Escrow cancelled by ${\n                  remoteUsername === username ? \"you\" : remoteUsername\n                }`}\n          </div>\n          <div style={{ display: \"flex\", flexDirection: \"row-reverse\" }}>\n            <div\n              className={classes.smallBtn}\n              style={{\n                display: \"flex\",\n                marginTop: 4,\n                padding: \"3px 7px\",\n                fontSize: 12,\n                background:\n                  currentStateLocal === \"redeemed\"\n                    ? \"rgba(17, 168, 0, 0.2)\"\n                    : \"rgba(241, 50, 54, 0.2)\",\n                color: currentStateLocal === \"redeemed\" ? \"#52D24C\" : \"#FF6269\",\n                marginLeft: 10,\n              }}\n              onClick={() =>\n                window.open(\n                  `https://explorer.solana.com/tx/${finalTxIdLocal}`,\n                  \"mywindow\"\n                )\n              }\n            >\n              <div>Txn </div>\n              <CallMadeIcon style={{ fontSize: 15 }} />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport function ChatMessages() {\n  const { chats, userId } = useChatContext();\n  const theme = useCustomTheme();\n\n  return (\n    <div style={{ paddingLeft: 18, paddingRight: 18 }}>\n      {chats.map((chat, index) => {\n        return (\n          <MessageLine\n            key={chat.client_generated_uuid}\n            received={chat.received}\n            sameUserMessage={\n              chats[index]?.uuid && index > 0 && index < chats.length\n                ? chats[index]?.uuid === chats[index - 1]?.uuid\n                : null\n            }\n            parent_message_author_username={chat.parent_message_author_username}\n            parent_message_text={chat.parent_message_text}\n            parent_message_author_uuid={chat.parent_message_author_uuid}\n            client_generated_uuid={chat.client_generated_uuid}\n            color={chat.color || theme.custom.colors.fontColor2}\n            colorIndex={chat.colorIndex}\n            timestamp={chat.created_at}\n            message={chat.message}\n            deleted={chat.deleted}\n            messageKind={chat.message_kind}\n            image={chat.image}\n            username={chat.username}\n            uuid={chat.uuid}\n            userId={chat.uuid}\n            metadata={chat.message_metadata}\n            messageId={chat.client_generated_uuid}\n          />\n        );\n      })}\n    </div>\n  );\n\n  return (\n    <div>\n      {chats.map((chat) => {\n        if (chat.uuid !== userId) {\n          return (\n            <MessageLeft\n              timestamp={chat.created_at}\n              key={chat.client_generated_uuid}\n              message={chat.message}\n              received={chat.received}\n              messageKind={chat.message_kind}\n              image={chat.image}\n              username={chat.username}\n              userId={chat.uuid}\n              client_generated_uuid={chat.client_generated_uuid}\n              parent_message_text={chat.parent_message_text}\n              parent_message_author_username={\n                \"\" //TODO: Flow this from userDB\n              }\n              parent_message_author_uuid={chat.parent_message_author_uuid}\n            />\n          );\n        }\n        return (\n          <MessageRight\n            timestamp={chat.created_at}\n            key={chat.client_generated_uuid}\n            message={chat.message}\n            received={chat.received}\n            userId={chat.uuid}\n            messageKind={chat.message_kind}\n            image={chat.image}\n            username={chat.username}\n            client_generated_uuid={chat.client_generated_uuid}\n            parent_message_text={chat.parent_message_text}\n            parent_message_author_username=\"\" // TODO: Flow this from user index db\n            parent_message_author_uuid={chat.parent_message_author_uuid}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nfunction MessageLeft(props) {\n  const classes = useStyles();\n  const message = props.message ? props.message : \"\";\n  const theme = useCustomTheme();\n  const { setActiveReply } = useChatContext();\n\n  return (\n    <>\n      {props.parent_message_author_uuid ? (\n        <div style={{ paddingLeft: 19, marginBottom: -10 }}>\n          <ReplyContainer\n            marginBottom={0}\n            padding={0}\n            parent_username={props.parent_message_author_username || \"\"}\n            showCloseBtn={false}\n            text={props.parent_message_text}\n          />\n        </div>\n      ) : null}\n      <div className={`${classes.messageLeftContainer} ${classes.hoverParent}`}>\n        <div\n          className={classes.messageLeft}\n          style={{\n            maxWidth: props.messageKind === \"gif\" ? 250 : 200,\n            background:\n              props.messageKind === \"gif\"\n                ? \"transparent\"\n                : theme.custom.colors.bg4,\n            padding: props.messageKind === \"gif\" ? \"0px 0px\" : \"8px 16px\",\n          }}\n        >\n          {props.messageKind === \"gif\" ? (\n            <GifDemo id={message} height={150} />\n          ) : (\n            message\n          )}\n        </div>\n        {!props.deleted && props.messageKind === \"text\" ? (\n          <div\n            style={{ marginLeft: 10, marginTop: 10, cursor: \"pointer\" }}\n            className={classes.hoverChild}\n            onClick={() => {\n              setActiveReply({\n                parent_client_generated_uuid: props.client_generated_uuid,\n                text: message,\n                parent_username: `@${props.username}`,\n                parent_message_author_uuid: props.userId,\n              });\n              document.getElementById(chatMessageInputId)?.focus();\n            }}\n          >\n            <ReplyIcon fill={theme.custom.colors.icon} />\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nfunction MessageRight(props) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const { setActiveReply } = useChatContext();\n  const message = props.message ? props.message : \"\";\n\n  return (\n    <>\n      {props.parent_message_author_uuid ? (\n        <div style={{ paddingLeft: 19, marginBottom: -10 }}>\n          <ReplyContainer\n            align=\"right\"\n            marginBottom={0}\n            padding={0}\n            parent_username={props.parent_message_author_username || \"\"}\n            showCloseBtn={false}\n            text={props.parent_message_text}\n          />\n        </div>\n      ) : null}\n      <div className={`${classes.messageRightContainer}`}>\n        <div\n          className={`${classes.hoverParent}`}\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"flex-start\",\n          }}\n        >\n          {!props.deleted && props.messageKind !== \"gif\" ? (\n            <div\n              style={{ marginRight: 10, marginTop: 10, cursor: \"pointer\" }}\n              className={classes.hoverChild}\n              onClick={() => {\n                setActiveReply({\n                  parent_client_generated_uuid: props.client_generated_uuid,\n                  text: message,\n                  parent_message_author_uuid: props.userId,\n                  parent_username: \"Yourself\",\n                });\n                document.getElementById(chatMessageInputId)?.focus();\n              }}\n            >\n              <ReplyIcon fill={theme.custom.colors.icon} />\n            </div>\n          ) : null}\n          <div\n            className={classes.messageRight}\n            style={{\n              maxWidth: props.messageKind === \"gif\" ? 250 : 200,\n              background:\n                props.messageKind === \"gif\"\n                  ? \"transparent\"\n                  : theme.custom.colors.fontColor2,\n              padding: props.messageKind === \"gif\" ? \"0px 0px\" : \"8px 16px\",\n            }}\n          >\n            {props.messageKind === \"gif\" ? (\n              <GifDemo id={message} width={250} />\n            ) : (\n              message\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction DeleteIconInternal({\n  client_generated_uuid,\n  messageSender,\n}: {\n  client_generated_uuid: string;\n  messageSender: string;\n}) {\n  const { roomId, type } = useChatContext();\n  const theme = useCustomTheme();\n  const { uuid } = useUser();\n\n  return (\n    <div>\n      {BACKPACK_TEAM.includes(uuid) ? (\n        <DeleteIcon\n          style={{ color: theme.custom.colors.icon, cursor: \"pointer\" }}\n          onClick={() => {\n            SignalingManager.getInstance().send({\n              type: DELETE_MESSAGE,\n              payload: {\n                client_generated_uuid: client_generated_uuid,\n                room: roomId,\n                type: type,\n              },\n            });\n          }}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nfunction DeletedMessage() {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        background: theme.custom.colors.background,\n        color: theme.custom.colors.icon,\n        borderRadius: 5,\n        display: \"inline-flex\",\n        padding: \"2px 6px\",\n        marginLeft: -6,\n        alignItems: \"center\",\n      }}\n    >\n      <span>Message removed</span>\n      <Tooltip title=\"This was probably spam\">\n        <Info\n          style={{\n            fontSize: \"1rem\",\n            marginLeft: 4,\n            color: theme.custom.colors.icon,\n          }}\n        />\n      </Tooltip>\n    </div>\n  );\n}\n","import { useCustomTheme } from \"@coral-xyz/themes\";\nimport { List, ListItem, Skeleton } from \"@mui/material\";\n\nexport function MessagesSkeleton() {\n  const theme = useCustomTheme();\n\n  return (\n    <>\n      <MessageSkeleton />\n      <MessageSkeleton />\n      <MessageSkeleton />\n      <MessageSkeleton />\n    </>\n  );\n}\n\nfunction MessageSkeleton() {\n  const theme = useCustomTheme();\n  return (\n    <div\n      onClick={() => {}}\n      style={{\n        paddingLeft: \"19px\",\n        paddingRight: \"19px\",\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        display: \"flex\",\n        height: \"68px\",\n        backgroundColor: theme.custom.colors.nav,\n        marginBottom: 10,\n      }}\n    >\n      <div\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ width: 40 }}>\n          <Skeleton variant=\"circular\" width={40} height={40} />\n        </div>\n        <div style={{ marginLeft: \"5px\", width: \"100%\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Skeleton width=\"40%\" height={20} style={{ marginTop: \"-6px\" }} />\n            <Skeleton width={30} height={20} style={{ marginTop: \"-6px\" }} />\n          </div>\n          <Skeleton width=\"70%\" height={20} style={{ marginTop: \"-6px\" }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { StickerIcon } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { IconButton, Tooltip } from \"@mui/material\";\n\nexport const NftSticker = ({\n  buttonStyle,\n  setAboveMessagePlugin,\n  setPluginMenuOpen,\n}: {\n  buttonStyle: any;\n  setAboveMessagePlugin: any;\n  setPluginMenuOpen: any;\n}) => {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Tooltip title=\"NFT stickers\">\n        <IconButton\n          onClick={() => {\n            setAboveMessagePlugin((x) =>\n              x.type === \"nft-sticker\"\n                ? {\n                    type: \"\",\n                    metadata: {},\n                  }\n                : { type: \"nft-sticker\", metadata: {} }\n            );\n          }}\n          size=\"small\"\n          sx={{\n            color: theme.custom.colors.icon,\n            cursor: \"pointer\",\n          }}\n          style={buttonStyle}\n        >\n          <StickerIcon fill={theme.custom.colors.icon} />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { useBreakpoints } from \"@coral-xyz/react-common\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport CheckIcon from \"@mui/icons-material/Check\";\n\nimport { RemoteNftWithSuspense } from \"./barter/SwapPage\";\nimport { useChatContext } from \"./ChatContext\";\n\nexport const useStyles = styles((theme) => ({\n  hoverParent: {\n    \"&:hover $hoverChild, & .Mui-focused $hoverChild\": {\n      visibility: \"visible\",\n    },\n  },\n  hoverChild: {\n    visibility: \"hidden\",\n  },\n}));\n\nexport const NftStickerRender = ({\n  mint,\n  uuid,\n  displayName,\n}: {\n  mint: string;\n  uuid: string;\n  displayName: string;\n}) => {\n  const classes = useStyles();\n  const { isXs } = useBreakpoints();\n  const theme = useCustomTheme();\n  const { remoteUsername } = useChatContext();\n  const [ownerVerified, setOwnerVerified] = useState(false);\n  const getDimensions = () => {\n    if (isXs) {\n      return 180;\n    }\n    return 250;\n  };\n\n  const validate = async (uuid, mint) => {\n    try {\n      const res = await fetch(\n        `${BACKEND_API_URL}/nft/validateOwner?ownerUuid=${uuid}&mint=${mint}`,\n        {\n          method: \"GET\",\n        }\n      );\n      const json = await res.json();\n      if (json.isOwner) {\n        setOwnerVerified(true);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    validate(uuid, mint);\n  }, [uuid, mint]);\n\n  return (\n    <div>\n      <div\n        style={{\n          position: \"relative\",\n          width: getDimensions(),\n          marginBottom: 10,\n          cursor: \"pointer\",\n        }}\n        className={classes.hoverParent}\n      >\n        <RemoteNftWithSuspense\n          dimension={getDimensions()}\n          onClick={() => {\n            window.open(`https://magiceden.io/item-details/${mint}`, \"_blank\");\n          }}\n          mint={mint}\n          rounded\n        />\n        {ownerVerified ? (\n          <div\n            style={{\n              position: \"absolute\",\n              top: -44,\n              width: \"100%\",\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n            className={classes.hoverChild}\n          >\n            <div\n              style={{\n                padding: \"8px 11px\",\n                background: theme.custom.colors.invertedPrimary,\n                color: theme.custom.colors.bg3,\n                display: \"inline-flex\",\n                borderRadius: 5,\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <CheckIcon style={{ color: \"#11A800\", marginRight: 10 }} />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <div style={{ fontWeight: 500, fontSize: 13 }}>\n                  {\" \"}\n                  @{displayName} owns this NFT{\" \"}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n","import {\n  NAV_COMPONENT_MESSAGE_CHAT,\n  NAV_COMPONENT_MESSAGE_PROFILE,\n  NEW_COLORS,\n  parseMessage,\n} from \"@coral-xyz/common\";\nimport { useDarkMode, useNavigation, useUser } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { Skeleton } from \"@mui/material\";\nimport Linkify from \"linkify-react\";\n\nimport { useChatContext } from \"./ChatContext\";\n\nexport function ParsedMessage({ message }) {\n  const { push } = useNavigation();\n  const parts = parseMessage(message);\n  const theme = useCustomTheme();\n  const { usersMetadata, type } = useChatContext();\n  const { uuid } = useUser();\n  const isDarkMode = useDarkMode();\n  return (\n    <>\n      {parts.map((part) => {\n        if (part.type === \"text\") {\n          return (\n            <span style={{ wordBreak: \"break-word\" }}>\n              {/*<Linkify*/}\n              {/*  options={{*/}\n              {/*    target: \"_blank\",*/}\n              {/*    render: {*/}\n              {/*      url: ({ attributes, content }) => {*/}\n              {/*        return (*/}\n              {/*          <a*/}\n              {/*            {...attributes}*/}\n              {/*            style={{ color: theme.custom.colors.linkColor }}*/}\n              {/*          >*/}\n              {/*            {content}*/}\n              {/*          </a>*/}\n              {/*        );*/}\n              {/*      },*/}\n              {/*    },*/}\n              {/*  }}*/}\n              {/*>*/}\n              {part.value}\n              {/*</Linkify>*/}\n            </span>\n          );\n        } else {\n          const user = usersMetadata[part.value];\n          if (user) {\n            const handle = `@${user.username}`;\n            return (\n              <span\n                onClick={() => {\n                  if (user.uuid === uuid) {\n                    return;\n                  }\n                  push({\n                    title: `@${user.username}`,\n                    componentId:\n                      type === \"individual\"\n                        ? NAV_COMPONENT_MESSAGE_PROFILE\n                        : NAV_COMPONENT_MESSAGE_CHAT,\n                    componentProps: {\n                      userId: user.uuid,\n                      title: `@${user.username}`,\n                    },\n                  });\n                }}\n                style={{\n                  cursor: \"pointer\",\n                  color:\n                    user.colorIndex || user.colorIndex === 0\n                      ? NEW_COLORS[user.colorIndex || 0][\n                          isDarkMode ? \"dark\" : \"light\"\n                        ]\n                      : user.color,\n                }}\n              >\n                {handle}\n              </span>\n            );\n          } else {\n            return (\n              <div style={{ display: \"flex\" }}>\n                <Skeleton\n                  style={{ marginTop: 3, marginLeft: 3, marginRight: 1 }}\n                  variant=\"circular\"\n                  width={15}\n                  height={15}\n                />\n                <Skeleton width={30} height={20} style={{ marginTop: \"0px\" }} />\n              </div>\n            );\n          }\n        }\n      })}\n    </>\n  );\n}\n","import Close from \"@mui/icons-material/Close\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\n\nimport { useChatContext } from \"./ChatContext\";\nimport { ParsedMessage } from \"./ParsedMessage\";\n\nconst useStyles = makeStyles((theme: any) =>\n  createStyles({\n    outerDiv: {\n      padding: 10,\n      background: theme.custom.colors.textBackground,\n      backdropFilter: \"blur(6px)\",\n    },\n    text: {\n      color: theme.custom.colors.fontColor2,\n    },\n    icon: {\n      color: theme.custom.colors.icon,\n      width: \"0.8em\",\n    },\n    replyTo: {\n      color: theme.custom.colors.fontColor3,\n      fontWeight: 500,\n      fontSize: 14,\n      marginBottom: 8,\n    },\n  })\n);\n\nexport const ReplyContainer = ({\n  parent_username,\n  text,\n  showCloseBtn,\n  marginBottom,\n  padding,\n  align = \"left\",\n}) => {\n  const { setActiveReply } = useChatContext();\n  const classes = useStyles();\n\n  return (\n    <div\n      style={{\n        marginBottom: marginBottom || 6,\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: align === \"left\" ? \"row\" : \"row-reverse\",\n        padding: padding,\n        paddingBottom: 0,\n      }}\n    >\n      <div>\n        <div className={classes.replyTo}>\n          Replying to{\" \"}\n          <span className={classes.text}>{parent_username || \"\"}</span>\n        </div>\n        <div\n          className={classes.text}\n          style={{\n            borderLeft: \"2px solid #DFE0E6\",\n            fontWeight: 400,\n            paddingLeft: 12,\n            lineHeight: 1.4,\n            fontSize: 14,\n          }}\n        >\n          <ParsedMessage message={text} />\n        </div>\n      </div>\n      {showCloseBtn && (\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={() => setActiveReply({ parent_client_generated_uuid: null })}\n        >\n          <Close className={classes.icon} />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Scrollbars } from \"react-custom-scrollbars\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nexport function ScrollBarImpl(props: any) {\n  const theme = useCustomTheme();\n  return (\n    <>\n      <Scrollbars\n        onScrollStop={props.onScrollStop}\n        ref={(e) => props.setRef?.(e)}\n        style={{\n          width: \"100%\",\n          height: props.height || \"100%\",\n          position: \"absolute\",\n        }}\n        renderTrackHorizontal={(props: any) => (\n          <div {...props} className=\"track-horizontal\" />\n        )}\n        renderTrackVertical={(props: any) => (\n          <div\n            style={{ backgroundColor: theme.custom.colors.scrollbarTrack }}\n            {...props}\n            className=\"track-vertical\"\n          />\n        )}\n        renderThumbHorizontal={(props: any) => (\n          <div {...props} className=\"thumb-horizontal\" />\n        )}\n        renderThumbVertical={(props: any) => (\n          <div\n            style={{ backgroundColor: theme.custom.colors.scrollbarThumb }}\n            {...props}\n            className=\"thumb-vertical\"\n          />\n        )}\n        renderView={(props: any) => <div {...props} className=\"view\" />}\n        autoHide\n        thumbMinSize={30}\n      >\n        {props.children}\n      </Scrollbars>\n      <style>\n        {`\n          .track-vertical {\n            background: ${theme.custom.colors.scrollbarTrack};\n          }\n          .track-vertical .thumb-vertical {\n            background-color: ${theme.custom.colors.scrollbarThumb};\n          }\n\t\t\t\t`}\n      </style>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  BACKEND_API_URL,\n  Blockchain,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport {\n  List,\n  ListItem,\n  MaxLabel,\n  PrimaryButton,\n  TextFieldLabel,\n  TextInput,\n  toast,\n} from \"@coral-xyz/react-common\";\nimport {\n  blockchainTokenData,\n  useActiveSolanaWallet,\n  useAnchorContext,\n  useBackgroundClient,\n  useLoader,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { IconButton } from \"@mui/material\";\nimport Backdrop from \"@mui/material/Backdrop\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport { LAMPORTS_PER_SOL, PublicKey } from \"@solana/web3.js\";\n\nimport { createEscrow } from \"../utils/secure-transfer/secureTransfer\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 320,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\nexport const SecureTransfer = ({\n  buttonStyle,\n  setAboveMessagePlugin,\n}: {\n  buttonStyle: any;\n  setAboveMessagePlugin: any;\n}) => {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <IconButton\n        size=\"small\"\n        sx={{\n          color: theme.custom.colors.icon,\n          cursor: \"pointer\",\n        }}\n        style={buttonStyle}\n      >\n        <AttachMoneyIcon\n          style={{ fontSize: 20 }}\n          onClick={() =>\n            setAboveMessagePlugin((x) =>\n              x.type === \"secure-transfer\"\n                ? { type: \"\", metadata: {} }\n                : { type: \"secure-transfer\", metadata: {} }\n            )\n          }\n        />\n      </IconButton>\n    </div>\n  );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport {\n  useActiveSolanaWallet,\n  useFeatureGates,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { useUsersMetadata } from \"@coral-xyz/tamagui\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport { CircularProgress, IconButton } from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\n\nimport { CustomAutoComplete, MessageInput } from \"./messageInput/MessageInput\";\nimport { MessageInputProvider } from \"./messageInput/MessageInputProvider\";\nimport { AboveMessagePluginRenderer } from \"./AboveMessagePluginRenderer\";\nimport { Attachment } from \"./Attachment\";\nimport { Barter } from \"./Barter\";\nimport { useChatContext } from \"./ChatContext\";\nimport { EmojiPickerComponent } from \"./EmojiPicker\";\nimport { GifPicker } from \"./GifPicker\";\nimport { NftSticker } from \"./NftSticker\";\nimport { ReplyContainer } from \"./ReplyContainer\";\nimport { SecureTransfer } from \"./SecureTransfer\";\n\nconst BARTER_ENABLED = true;\nconst SECURE_TRANSFER_ENABLED = false;\n\nconst useStyles = makeStyles((theme: any) =>\n  createStyles({\n    outerDiv: {\n      padding: 2,\n      background: theme.custom.colors.listItemHover,\n      backdropFilter: \"blur(6px)\",\n      borderRadius: 8,\n      margin: 12,\n    },\n    text: {\n      color: theme.custom.colors.fontColor2,\n    },\n    wrapText: {\n      width: \"100%\",\n    },\n    textFieldRoot: {\n      color: theme.custom.colors.secondary,\n      \"& .MuiOutlinedInput-root\": {\n        padding: 0,\n        \"border-top-right-radius\": 10,\n        \"border-top-left-radius\": 10,\n        \"& fieldset\": {\n          border: \"none\",\n        },\n      },\n      \"& .MuiInputBase-input\": {\n        padding: \"10px 12px 10px 12px\",\n        fontSize: \"15px\",\n      },\n    },\n    textFieldInputColorEmpty: {\n      color: theme.custom.colors.textPlaceholder,\n    },\n    textFieldInputColor: {\n      color: theme.custom.colors.fontColor2,\n    },\n    icon: {\n      color: theme.custom.colors.icon,\n    },\n    textInputRoot: {\n      \"border-top-right-radius\": 10,\n      \"border-top-left-radius\": 10,\n      color: theme.custom.colors.fontColor2,\n      fontWeight: 500,\n      borderRadius: \"12px\",\n      fontSize: \"16px\",\n      lineHeight: \"24px\",\n      \"& .MuiOutlinedInput-root\": {\n        \"& .Mui-focused .MuiOutlinedInput-notchedOutline\": {\n          outline: \"none\",\n        },\n        \"&:active\": {\n          outline: \"none\",\n        },\n        outline: \"none\",\n      },\n    },\n  })\n);\n\nexport const SendMessage = ({\n  uploadingFile,\n  setUploadingFile,\n  selectedFile,\n  setSelectedFile,\n  onMediaSelect,\n  selectedMediaKind,\n  uploadedImageUri,\n  pluginMenuOpen,\n  setPluginMenuOpen,\n}: {\n  onMediaSelect: any;\n  selectedMediaKind: \"video\" | \"image\";\n  uploadedImageUri: string;\n  selectedFile: string;\n  setSelectedFile: any;\n  uploadingFile: boolean;\n  setUploadingFile: any;\n  pluginMenuOpen: boolean;\n  setPluginMenuOpen: (val: boolean) => void;\n}) => {\n  const classes = useStyles();\n  const { uuid } = useUser();\n  const [emojiPicker, setEmojiPicker] = useState(false);\n  const [gifPicker, setGifPicker] = useState(false);\n  const featureGates = useFeatureGates();\n\n  const theme = useCustomTheme();\n  const activeSolanaWallet = useActiveSolanaWallet();\n  const {\n    setOpenPlugin,\n    aboveMessagePlugin,\n    setAboveMessagePlugin,\n    inputRef,\n    sendMessage,\n    remoteUserId,\n    remoteUsername,\n    activeReply,\n    type,\n    chats,\n  } = useChatContext();\n\n  const remoteUsers = useUsersMetadata({ remoteUserIds: [remoteUserId] });\n  const remoteUserImage = remoteUsers?.[0]?.image;\n\n  useEffect(() => {\n    function keyDownTextField(event) {\n      if (event.key === \"Enter\") {\n        event.preventDefault();\n        sendMessage(inputRef.current.getTransformedValue());\n        setEmojiPicker(false);\n      }\n      if (event.key === \"Escape\") {\n        event.preventDefault();\n        setEmojiPicker(false);\n        setGifPicker(false);\n      }\n    }\n\n    document.addEventListener(\"keydown\", keyDownTextField);\n\n    return () => {\n      document.removeEventListener(\"keydown\", keyDownTextField);\n    };\n  }, [\n    inputRef,\n    selectedFile,\n    uploadedImageUri,\n    selectedMediaKind,\n    activeReply,\n    chats,\n  ]);\n\n  const getOfflineMembers = () => {\n    if (type === \"individual\") {\n      return [\n        {\n          uuid: remoteUserId,\n          username: remoteUsername,\n          image: remoteUserImage,\n        },\n      ];\n    }\n    const userMap = {};\n    chats.map((x) => {\n      if (x.uuid !== uuid) {\n        userMap[x.uuid] = x;\n      }\n    });\n    return Object.keys(userMap).map((uuid) => userMap[uuid]);\n  };\n\n  return (\n    <MessageInputProvider\n      inputRef={inputRef}\n      offlineMembers={getOfflineMembers().slice(0, 5)}\n    >\n      <div className={classes.outerDiv}>\n        {selectedFile ? (\n          <div>\n            <div style={{ background: theme.custom.colors.bg3 }}>\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  flexDirection: \"row-reverse\",\n                }}\n              >\n                <HighlightOffIcon\n                  style={{\n                    color: theme.custom.colors.icon,\n                    cursor: \"pointer\",\n                    marginRight: 5,\n                    marginTop: 5,\n                  }}\n                  onClick={() => {\n                    setSelectedFile(null);\n                    setUploadingFile(false);\n                  }}\n                />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                {selectedMediaKind === \"image\" ? (\n                  <img\n                    style={{ maxHeight: 300, maxWidth: 300 }}\n                    src={selectedFile}\n                  />\n                ) : (\n                  <video\n                    style={{ maxHeight: 300, maxWidth: 300 }}\n                    controls\n                    src={selectedFile}\n                  />\n                )}\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  marginTop: 3,\n                }}\n              >\n                {uploadingFile ? (\n                  <>\n                    {\" \"}\n                    <div\n                      style={{\n                        marginRight: 5,\n                        color: theme.custom.colors.fontColor,\n                      }}\n                    >\n                      Uploading{\" \"}\n                    </div>\n                    <div>\n                      <CircularProgress size={20} color=\"secondary\" />{\" \"}\n                    </div>{\" \"}\n                  </>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        ) : null}\n        {activeReply.parent_client_generated_uuid ? (\n          <ReplyContainer\n            marginBottom={6}\n            padding={12}\n            parent_username={activeReply.parent_username || \"\"}\n            showCloseBtn\n            text={activeReply.text}\n          />\n        ) : null}\n        {aboveMessagePlugin ? (\n          <AboveMessagePluginRenderer\n            setPluginMenuOpen={setPluginMenuOpen}\n            sendMessage={sendMessage}\n            setAboveMessagePlugin={setAboveMessagePlugin}\n          />\n        ) : null}\n        <CustomAutoComplete />\n        <div style={{ display: \"flex\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              marginLeft: 5,\n            }}\n          >\n            <IconButton\n              disableRipple\n              size=\"small\"\n              sx={{\n                color: \"#555C6B\",\n                \"&:hover\": {\n                  backgroundColor: `${theme.custom.colors.hoverIconBackground} !important`,\n                },\n              }}\n              onClick={() => {\n                if (pluginMenuOpen) {\n                  setAboveMessagePlugin({\n                    type: \"\",\n                    metadata: {},\n                  });\n                }\n                setPluginMenuOpen(!pluginMenuOpen);\n              }}\n            >\n              {pluginMenuOpen ? (\n                <CloseIcon style={{ fontSize: 24 }} />\n              ) : (\n                <AddIcon style={{ fontSize: 24 }} />\n              )}\n            </IconButton>\n          </div>\n          <MessageInput onMediaSelect={onMediaSelect} setPluginMenuOpen={setPluginMenuOpen} />\n        </div>\n        {pluginMenuOpen ? (\n          <div style={{ display: \"flex\", marginLeft: 8, paddingBottom: 5 }}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n              }}\n            />\n            <EmojiPickerComponent\n              setEmojiPicker={setEmojiPicker}\n              emojiPicker={emojiPicker}\n              setGifPicker={setGifPicker}\n              inputRef={inputRef}\n              buttonStyle={{\n                height: \"28px\",\n              }}\n            />\n            <GifPicker\n              sendMessage={sendMessage}\n              setGifPicker={setGifPicker}\n              gifPicker={gifPicker}\n              setEmojiPicker={setEmojiPicker}\n              buttonStyle={{\n                height: \"28px\",\n              }}\n            />\n            <Attachment\n              onMediaSelect={onMediaSelect}\n              buttonStyle={{\n                height: \"28px\",\n              }}\n            />\n            {featureGates[\"STICKER_ENABLED\"] ? (\n              <NftSticker\n                buttonStyle={{\n                  height: \"28px\",\n                }}\n                setPluginMenuOpen={setPluginMenuOpen}\n                setAboveMessagePlugin={setAboveMessagePlugin}\n              />\n            ) : null}\n            {type === \"individual\" && featureGates[\"BARTER_ENABLED\"] ? (\n              <Barter\n                setOpenPlugin={setOpenPlugin}\n                onMediaSelect={onMediaSelect}\n                buttonStyle={{\n                  height: \"28px\",\n                }}\n              />\n            ) : null}\n            {SECURE_TRANSFER_ENABLED &&\n            activeSolanaWallet?.publicKey &&\n            type === \"individual\" ? (\n              <SecureTransfer\n                buttonStyle={{\n                  height: \"28px\",\n                }}\n                setAboveMessagePlugin={setAboveMessagePlugin}\n              />\n            ) : null}\n          </div>\n        ) : null}\n      </div>\n    </MessageInputProvider>\n  );\n};\n","import React, { Suspense, useEffect, useState } from \"react\";\nimport { Blockchain } from \"@coral-xyz/common\";\nimport {\n  SOL_LOGO_URI,\n  useSolanaCtx,\n  useTokenMetadata,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport { Skeleton } from \"@mui/material\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useChatContext } from \"./ChatContext\";\n\nconst useStyles = makeStyles((theme: any) =>\n  createStyles({\n    smallBtn: {\n      padding: \"2px 12px\",\n      borderRadius: 12,\n      cursor: \"pointer\",\n    },\n    sendOuter: {\n      background: theme.custom.colors.invertedPrimary,\n      borderRadius: 16,\n      marginTop: 4,\n      padding: \"12px 16px\",\n      color: theme.custom.colors.background,\n      maxWidth: 250,\n      minWidth: 220,\n    },\n    sendInner: {\n      background: theme.custom.colors.invertedSecondary,\n      borderRadius: 8,\n      padding: \"8px 16px\",\n      color: theme.custom.colors.background,\n    },\n  })\n);\n\nexport const SimpleTransaction = ({\n  txnSignature,\n  message,\n  remoteUserId,\n}: {\n  txnSignature: string;\n  message: string;\n  remoteUserId: string;\n}) => {\n  const { remoteUsername } = useChatContext();\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n  const solanaCtx = useSolanaCtx();\n  const [amount, setAmount] = useState(0);\n  const [tokenAddress, setTokenAddress] = useState(\"\");\n  const { uuid } = useUser();\n\n  const init = async () => {\n    setLoading(true);\n    try {\n      const parsedTxn = await solanaCtx.connection.getParsedTransactions([\n        txnSignature,\n      ]);\n      const transferIx = parsedTxn[0]?.transaction.message.instructions.find(\n        (ix) => {\n          return (\n            //@ts-ignore\n            ix?.parsed?.type === \"transferChecked\" ||\n            //@ts-ignore\n            ix?.parsed?.type === \"transfer\"\n          );\n        }\n      );\n      if (!transferIx) {\n        return;\n      }\n      //@ts-ignore\n      if (transferIx.parsed.info.mint) {\n        //@ts-ignore\n        setTokenAddress(transferIx.parsed.info.mint);\n        //@ts-ignore\n        setAmount(transferIx.parsed.info.tokenAmount.uiAmount);\n      } else {\n        // @ts-ignore\n        setAmount(transferIx?.parsed?.info?.lamports / LAMPORTS_PER_SOL);\n      }\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    init();\n  }, [txnSignature]);\n\n  return (\n    <div className={classes.sendOuter}>\n      <div>\n        <div style={{ marginBottom: 5, marginTop: 5 }}>\n          {\" \"}\n          {remoteUserId !== uuid\n            ? \"You Received\"\n            : `You sent @${remoteUsername}`}\n        </div>\n        {!loading && (\n          <>\n            {tokenAddress && (\n              <ParsedTransactionWithSuspense\n                message={message}\n                tokenAddress={tokenAddress}\n                amount={amount}\n              />\n            )}\n            {!tokenAddress && (\n              <ParsedSolTransaction message={message} amount={amount} />\n            )}\n          </>\n        )}\n        {loading && <TxSkeleton />}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: 10,\n          }}\n        >\n          <div\n            className={classes.smallBtn}\n            style={{\n              display: \"flex\",\n              padding: \"3px 7px\",\n              fontSize: 12,\n              background: \"rgba(17, 168, 0, 0.2)\",\n              color: \"#52D24C\",\n            }}\n          >\n            <CheckIcon style={{ fontSize: 16 }} />\n            <div style={{ marginLeft: 4, marginRight: 4, fontSize: 12 }}>\n              Paid\n            </div>\n          </div>\n          <div\n            onClick={() => {\n              window.open(\n                `https://explorer.solana.com/tx/${txnSignature}`,\n                \"mywindow\"\n              );\n            }}\n            style={{ display: \"flex\", cursor: \"pointer\", marginTop: 3 }}\n          >\n            <div>View</div>{\" \"}\n            <ArrowForwardIcon\n              style={{ fontSize: 15, marginLeft: 2, marginTop: 2 }}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction ParsedTransactionWithSuspense({ tokenAddress, amount, message }) {\n  return (\n    <Suspense fallback={<TxSkeleton />}>\n      <ParsedTransaction\n        tokenAddress={tokenAddress}\n        amount={amount}\n        message={message}\n      />\n    </Suspense>\n  );\n}\n\nfunction TxSkeleton() {\n  const theme = useCustomTheme();\n  return (\n    <div\n      onClick={() => {}}\n      style={{\n        paddingLeft: \"19px\",\n        paddingRight: \"19px\",\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        display: \"flex\",\n        backgroundColor: theme.custom.colors.invertedSecondary,\n        marginBottom: 10,\n      }}\n    >\n      <div\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          <Skeleton width=\"40%\" height={40} style={{ marginTop: \"-6px\" }} />\n        </div>\n\n        <div style={{ width: 90 }}>\n          <Skeleton width=\"80%\" height={20} style={{ marginTop: \"-6px\" }} />\n        </div>\n\n        <div style={{ width: \"100%\", display: \"flex\" }}>\n          <Skeleton\n            variant=\"circular\"\n            width={15}\n            height={15}\n            style={{ marginRight: 5 }}\n          />\n          <Skeleton width=\"70%\" height={20} style={{ marginTop: \"-3px\" }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ParsedTransaction({ tokenAddress, amount, message }) {\n  const tokenData = useTokenMetadata({\n    mintAddress: tokenAddress,\n    blockchain: Blockchain.SOLANA,\n  });\n  const theme = useCustomTheme();\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.sendInner}>\n        <div style={{ fontSize: 30, display: \"flex\" }}>\n          <div>{amount.toFixed(2)}</div>\n        </div>\n        {message && (\n          <div style={{ marginBottom: 10, color: theme.custom.colors.icon }}>\n            {message}\n          </div>\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            marginTop: 3,\n            color: theme.custom.colors.icon,\n          }}\n        >\n          <img\n            src={`https://swr.xnfts.dev/nft-data/metaplex-nft/${tokenAddress}/image`}\n            style={{\n              width: 20,\n              height: 20,\n              borderRadius: 8,\n              marginRight: 5,\n            }}\n          />{\" \"}\n          {/* @ts-ignore */}\n          <div>{tokenData?.ticker} on SOLANA</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ParsedSolTransaction({ amount, message }) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  return (\n    <div>\n      <div className={classes.sendInner}>\n        <div style={{ fontSize: 30, display: \"flex\" }}>\n          <div>{amount.toFixed(2)}</div>\n        </div>\n        {message && (\n          <div style={{ marginBottom: 10, color: theme.custom.colors.icon }}>\n            {message}\n          </div>\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            marginTop: 3,\n            color: theme.custom.colors.icon,\n          }}\n        >\n          <img\n            src={SOL_LOGO_URI}\n            style={{\n              width: 20,\n              height: 20,\n              borderRadius: 8,\n              marginRight: 5,\n            }}\n          />{\" \"}\n          <div>SOL on SOLANA</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useBreakpoints } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nexport const AbsolutelyNothingCard = () => {\n  const theme = useCustomTheme();\n  const { isXs } = useBreakpoints();\n\n  const getDimensions = () => {\n    if (isXs) {\n      return 140;\n    }\n    return 170;\n  };\n\n  return (\n    <div\n      style={{\n        color: theme.custom.colors.icon,\n        width: getDimensions(),\n        height: getDimensions(),\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        fontSize: 16,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          height: \"100%\",\n          border: `2px solid ${theme.custom.colors.icon}`,\n          borderRadius: 8,\n        }}\n      >\n        <div style={{ display: \"inline-flex\", justifyContent: \"center\" }}>\n          Absolutely nothing!\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useBreakpoints } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport { useBarterContext } from \"./BarterContext\";\n\nexport const AddAssetsCard = () => {\n  const { setSelectNft } = useBarterContext();\n  const theme = useCustomTheme();\n  const { isXs } = useBreakpoints();\n  const getDimensions = () => {\n    if (isXs) {\n      return 140;\n    }\n    return 170;\n  };\n\n  return (\n    <div\n      onClick={() => {\n        setSelectNft(true);\n      }}\n      style={{\n        cursor: \"pointer\",\n        background: theme.custom.colors.invertedBg4,\n        color: theme.custom.colors.icon,\n        width: getDimensions(),\n        height: getDimensions(),\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        fontSize: 16,\n        borderRadius: 8,\n        margin: isXs ? 4 : 12,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          height: \"100%\",\n        }}\n      >\n        <div style={{ display: \"inline-flex\", justifyContent: \"center\" }}>\n          <AddIcon />\n          <div>Add assets</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\n\ntype BarterContext = {\n  setSelectNft: any;\n  room: string;\n  barterId: number;\n};\n\ninterface ExtendedBarterContext extends BarterContext {\n  children: any;\n}\n\nexport const _BarterContext = React.createContext<BarterContext | null>(null);\n\nexport function BarterProvider(props: ExtendedBarterContext) {\n  return (\n    <_BarterContext.Provider\n      value={{\n        setSelectNft: props.setSelectNft,\n        room: props.room,\n        barterId: props.barterId,\n      }}\n    >\n      {props.children}\n    </_BarterContext.Provider>\n  );\n}\n\nexport function useBarterContext(): BarterContext {\n  const ctx = useContext(_BarterContext);\n  if (!ctx) {\n    throw new Error(\"context not found\");\n  }\n  return ctx;\n}\n","import { LocalImage } from \"@coral-xyz/react-common\";\nimport { useUser } from \"@coral-xyz/recoil\";\nimport { useUsersMetadata } from \"@coral-xyz/tamagui\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { createStyles, makeStyles } from \"@mui/styles\";\n\nimport { useChatContext } from \"../ChatContext\";\n\nconst useStyles = makeStyles((theme: any) =>\n  createStyles({\n    topDiv: {\n      display: \"flex\",\n    },\n    midDiv: {\n      flex: 1,\n      color: theme.custom.colors.background,\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: 16,\n    },\n    avatar: {\n      height: 32,\n      borderRadius: \"50%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      width: \"100%\",\n    },\n    title: {\n      flex: 1,\n      fontSize: 18,\n      padding: 10,\n      textAlign: \"center\",\n    },\n    icon: {\n      color: theme.custom.colors.icon,\n    },\n    iconOuter: {\n      cursor: \"pointer\",\n      paddingLeft: 5,\n    },\n  })\n);\n\nexport const BarterHeader = () => {\n  const classes = useStyles();\n  const { setOpenPlugin, remoteUserId } = useChatContext();\n  const { uuid } = useUser();\n\n  const remoteUsers = useUsersMetadata({ remoteUserIds: [remoteUserId, uuid] });\n  const remoteUserImage = remoteUsers?.[remoteUserId]?.image;\n  const localUserImage = remoteUsers?.[uuid]?.image;\n\n  return (\n    <div className={classes.topDiv}>\n      <div className={classes.midDiv}>\n        <div className={classes.iconOuter} onClick={() => setOpenPlugin(\"\")}>\n          <CloseIcon className={classes.icon} />\n        </div>\n        <div style={{ flex: 1 }}>\n          <div className={classes.avatar}>\n            <LocalImage\n              size={32}\n              style={{ width: 32, height: 32, borderRadius: \"50%\" }}\n              src={localUserImage}\n            />\n          </div>\n          <div className={classes.title}>Your offer</div>\n        </div>\n      </div>\n      <div className={classes.midDiv}>\n        <div style={{ flex: 1 }}>\n          <div className={classes.avatar}>\n            <LocalImage\n              size={32}\n              style={{ width: 32, height: 32, borderRadius: \"50%\" }}\n              src={remoteUserImage}\n            />\n          </div>\n          <div className={classes.title}>Their offer</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport type { BarterResponse } from \"@coral-xyz/common\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { SecondaryButton, SuccessButton } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport Box from \"@mui/material/Box\";\nimport Modal from \"@mui/material/Modal\";\nimport Typography from \"@mui/material/Typography\";\n\nimport { RemoteSelection } from \"./SwapPage\";\n\nconst style = {\n  position: \"absolute\" as const,\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nexport const BarterModal = ({ barterId }: { barterId: string }) => {\n  const [modal, setModal] = useState(false);\n  const theme = useCustomTheme();\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          background: \"#0057EB\",\n          borderRadius: 16,\n          color: \"white\",\n          fontWeight: 500,\n          fontSize: 14,\n          padding: 15,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            marginRight: 5,\n          }}\n        >\n          <div>You negotiated a barter. </div>\n        </div>\n        <div\n          style={{ color: theme.custom.colors.icon, cursor: \"pointer\" }}\n          onClick={() => setModal(true)}\n        >\n          {\" \"}\n          <b> VIEW </b>{\" \"}\n        </div>\n      </div>\n      {modal && (\n        <InternalModal modal={modal} setModal={setModal} barterId={barterId} />\n      )}\n    </>\n  );\n};\n\nfunction InternalModal({\n  barterId,\n  modal,\n  setModal,\n}: {\n  barterId: string;\n  modal: boolean;\n  setModal: any;\n}) {\n  const [barterState, setBarterState] = useState<BarterResponse | null>(null);\n  const theme = useCustomTheme();\n\n  const getBarter = async ({ barterId }: { barterId: string }) => {\n    const res = await fetch(`${BACKEND_API_URL}/barter/?barterId=${barterId}`, {\n      method: \"GET\",\n    });\n    const json = await res.json();\n    setBarterState(json.barter);\n  };\n\n  useEffect(() => {\n    getBarter({ barterId });\n  }, [barterId]);\n\n  return (\n    <Modal\n      aria-labelledby=\"transition-modal-title\"\n      aria-describedby=\"transition-modal-description\"\n      open={modal}\n      onClose={() => setModal(false)}\n      closeAfterTransition\n      BackdropProps={{\n        timeout: 500,\n      }}\n    >\n      <Box\n        sx={{\n          ...style,\n          background: theme.custom.colors.invertedTertiary,\n        }}\n      >\n        {!barterState && \"loading\"}\n        {barterState && (\n          <div style={{ display: \"flex\" }}>\n            <div\n              style={{\n                flex: 1,\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderRight: `1px solid ${theme.custom.colors.icon}`,\n              }}\n            >\n              <div\n                style={{\n                  fontSize: 20,\n                  padding: 10,\n                  color: theme.custom.colors.background,\n                }}\n              >\n                Your offer\n              </div>\n              <br />\n              <div style={{ height: \"100%\", flex: 1 }}>\n                <RemoteSelection selection={barterState?.localOffers || []} />\n              </div>\n              <div style={{ padding: 10 }}>\n                <SecondaryButton\n                  label={\"Execute\"}\n                  onClick={() => {\n                    // send request to contract\n                  }}\n                />\n              </div>\n            </div>\n            <div\n              style={{\n                flex: 1,\n                display: \"flex\",\n                flexDirection: \"column\",\n                borderLeft: `1px solid ${theme.custom.colors.icon}`,\n              }}\n            >\n              <div\n                style={{\n                  fontSize: 20,\n                  padding: 10,\n                  color: theme.custom.colors.background,\n                }}\n              >\n                Their offer\n              </div>\n              <br />\n              <div style={{ height: \"100%\", flex: 1 }}>\n                <RemoteSelection selection={barterState?.remoteOffers || []} />\n              </div>\n              <div style={{ padding: 10 }}>\n                <SecondaryButton\n                  label={\"Execute\"}\n                  onClick={() => {\n                    // send request to contract\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Box>\n    </Modal>\n  );\n}\n","import { useUser } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nimport { useChatContext } from \"../ChatContext\";\n\nexport function BarterPoke({\n  barterId,\n  sender,\n}: {\n  barterId: string;\n  sender: string;\n}) {\n  const { remoteUsername, setOpenPlugin } = useChatContext();\n  const { username, uuid } = useUser();\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <div\n        style={{\n          display: \"inline-flex\",\n          background: theme.custom.colors.linkColor,\n          padding: \"12px 16px\",\n          color: \"#fff\",\n          marginTop: 5,\n          borderRadius: 16,\n        }}\n      >\n        <div style={{ flex: 1 }}>\n          {sender === uuid\n            ? `You poked ${remoteUsername}`\n            : `${remoteUsername} wants to trade`}{\" \"}\n        </div>\n        <div\n          style={{\n            marginLeft: 10,\n            cursor: \"pointer\",\n            color: theme.custom.colors.icon,\n          }}\n          onClick={() => {\n            setOpenPlugin({\n              type: \"barter\",\n              metadata: {\n                barterId,\n              },\n            });\n          }}\n        >\n          View{\" \"}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport type { BarterOffers, BarterResponse } from \"@coral-xyz/common\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { Loading } from \"@coral-xyz/react-common\";\nimport { SignalingManager } from \"@coral-xyz/tamagui\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\n\nimport { PLUGIN_HEIGHT_PERCENTAGE } from \"../../utils/constants\";\nimport { useChatContext } from \"../ChatContext\";\nimport { ScrollBarImpl } from \"../ScrollbarImpl\";\n\nimport { BarterProvider } from \"./BarterContext\";\nimport { BarterHeader } from \"./BarterHeader\";\nimport { SelectPage } from \"./SelectPage\";\nimport { SwapPage } from \"./SwapPage\";\n\nexport const BarterUi = ({ roomId }: { roomId: string }) => {\n  const theme = useCustomTheme();\n  const [selectNft, setSelectNft] = useState(false);\n  const [barterState, setBarterState] = useState<BarterResponse | null>(null);\n  const { openPlugin, setOpenPlugin } = useChatContext();\n\n  const getActiveBarter = async (barterId: string) => {\n    try {\n      const res = await fetch(\n        barterId\n          ? `${BACKEND_API_URL}/barter/?barterId=${barterId}`\n          : `${BACKEND_API_URL}/barter/active?room=${roomId}&type=individual`,\n        {\n          method: \"GET\",\n        }\n      );\n      const json = await res.json();\n      setBarterState(json.barter);\n      SignalingManager.getInstance().onBarterUpdate = (updatedParams: {\n        barterId: number;\n        localOffers?: BarterOffers;\n        remoteOffers?: BarterOffers;\n      }) => {\n        if (updatedParams.barterId === json.barter.id) {\n          setBarterState((s) => ({\n            localOffers: updatedParams.localOffers || s?.localOffers || [],\n            remoteOffers: updatedParams.remoteOffers || s?.remoteOffers || [],\n            id: updatedParams.barterId,\n            state: s?.state || \"in_progress\",\n          }));\n        }\n      };\n      SignalingManager.getInstance().onBarterExecute = (props: {\n        barterId: number;\n      }) => {\n        if (props.barterId === json.barter.id) {\n          setOpenPlugin({ type: \"\", metadata: {} });\n        }\n      };\n    } catch (e) {\n      console.error(\"could not get active barter\");\n    }\n  };\n\n  useEffect(() => {\n    getActiveBarter(\n      openPlugin.type === \"barter\" ? openPlugin.metadata?.barterId ?? \"\" : \"\"\n    );\n  }, [openPlugin?.metadata]);\n\n  return (\n    <BarterProvider\n      barterId={barterState?.id || 0}\n      setSelectNft={setSelectNft}\n      room={roomId}\n    >\n      <div>\n        <ScrollBarImpl height={`${PLUGIN_HEIGHT_PERCENTAGE}vh`}>\n          <div\n            style={{\n              height: \"calc(100% - 56px)\",\n              background: theme.custom.colors.invertedTertiary,\n              overflow: \"scroll\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100%\",\n              }}\n            >\n              {!barterState ? (\n                <>\n                  <BarterHeader />\n                  <Loading />\n                </>\n              ) : null}\n              {barterState ? (\n                <>\n                  {!selectNft ? (\n                    <>\n                      <BarterHeader />\n                      <SwapPage\n                        localSelection={barterState?.localOffers || []}\n                        remoteSelection={barterState?.remoteOffers || []}\n                      />\n                    </>\n                  ) : null}\n                  {selectNft ? (\n                    <SelectPage\n                      setBarterState={setBarterState}\n                      currentSelection={barterState?.localOffers || []}\n                    />\n                  ) : null}\n                </>\n              ) : null}\n            </div>\n          </div>\n        </ScrollBarImpl>\n      </div>\n    </BarterProvider>\n  );\n};\n","import { Check } from \"@coral-xyz/react-common\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nexport const CheckMark = () => {\n  return (\n    <div\n      style={{\n        width: 25,\n        height: 25,\n        background: \"#4C94FF\",\n        borderRadius: 16,\n        border: \"2px solid #F0F0F2\",\n      }}\n    >\n      <CheckIcon\n        style={{ color: \"white\", marginTop: 2, fontSize: 15, marginLeft: 3 }}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport type { BarterOffers, Nft } from \"@coral-xyz/common\";\nimport { BACKEND_API_URL, Blockchain } from \"@coral-xyz/common\";\nimport {\n  Loading,\n  PrimaryButton,\n  ProxyImage,\n  SecondaryButton,\n  TextInput,\n  useBreakpoints,\n} from \"@coral-xyz/react-common\";\nimport type { TokenDataWithPrice } from \"@coral-xyz/recoil\";\nimport {\n  blockchainBalancesSorted,\n  nftsByOwner,\n  useActiveSolanaWallet,\n  useLoader,\n  useTokenMetadata,\n} from \"@coral-xyz/recoil\";\nimport { styled, useCustomTheme } from \"@coral-xyz/themes\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { Skeleton, TextField } from \"@mui/material\";\nimport { useRecoilValueLoadable } from \"recoil\";\n\nimport { useBarterContext } from \"./BarterContext\";\nimport { CheckMark } from \"./CheckMark\";\n\nexport function SelectPage({\n  currentSelection,\n  setBarterState,\n}: {\n  currentSelection: BarterOffers;\n  setBarterState: any;\n}) {\n  const { setSelectNft, room, barterId } = useBarterContext();\n  const [localSelection, setLocalSelection] =\n    useState<BarterOffers>(currentSelection);\n\n  const [activeTab, setActiveTab] = useState(\"nfts\");\n  const activeSolWallet = useActiveSolanaWallet();\n\n  const theme = useCustomTheme();\n\n  return (\n    <div style={{ flex: 1 }}>\n      <div\n        style={{\n          color: theme.custom.colors.background,\n          borderBottom: `1px solid ${theme.custom.colors.icon}`,\n          display: \"flex\",\n          marginTop: 10,\n          paddingTop: 16,\n        }}\n      >\n        <div\n          style={{\n            flex: 1,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginRight: 4,\n          }}\n        >\n          <div\n            style={{ cursor: \"pointer\", marginLeft: 15 }}\n            onClick={() => {\n              setSelectNft(false);\n            }}\n          >\n            <ArrowBackIcon />\n          </div>\n          <div\n            style={{\n              fontSize: 18,\n              cursor: \"pointer\",\n              borderBottom:\n                activeTab === \"nfts\"\n                  ? `2px solid ${theme.custom.colors.background}`\n                  : \"\",\n              fontWeight: 500,\n              paddingBottom: 16,\n            }}\n            onClick={() => setActiveTab(\"nfts\")}\n          >\n            Collectibles\n          </div>\n        </div>\n        <div\n          style={{\n            fontSize: 18,\n            cursor: \"pointer\",\n            flex: 1,\n            marginLeft: 4,\n            display: \"flex\",\n          }}\n        >\n          <div\n            style={{\n              borderBottom:\n                activeTab !== \"nfts\"\n                  ? `2px solid ${theme.custom.colors.background}`\n                  : \"\",\n              fontWeight: 500,\n              fontSize: 16,\n              paddingBottom: 16,\n            }}\n            onClick={() => setActiveTab(\"tokens\")}\n          >\n            Tokens\n          </div>\n        </div>\n      </div>\n      <div\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div>\n          {activeTab !== \"nfts\" ? (\n            <Tokens\n              localSelection={localSelection}\n              setLocalSelection={setLocalSelection}\n            />\n          ) : null}\n          {activeTab === \"nfts\" ? (\n            <Nfts\n              onSelect={(nft: Nft) => {\n                setLocalSelection((s: any) => {\n                  if (s.map((x) => x.mint).includes(nft.mint || \"\")) {\n                    return s.filter((x) => x.mint !== nft.mint);\n                  }\n                  return [\n                    ...s,\n                    {\n                      mint: nft.mint,\n                      publicKey: activeSolWallet.publicKey,\n                      amount: 1,\n                      type: \"NFT\",\n                    },\n                  ];\n                });\n              }}\n              localSelection={localSelection}\n              setLocalSelection={setLocalSelection}\n            />\n          ) : null}\n        </div>\n        <div style={{ justifyContent: \"center\", padding: 10 }}>\n          <SecondaryButton\n            fullWidth\n            label=\"Update Trade\"\n            onClick={async () => {\n              await fetch(\n                `${BACKEND_API_URL}/barter/active?room=${room}&type=individual`,\n                {\n                  method: \"POST\",\n                  headers: { \"Content-Type\": \"application/json\" },\n                  body: JSON.stringify({\n                    updatedOffer: localSelection,\n                    barterId,\n                  }),\n                }\n              );\n              setBarterState((state) => ({\n                ...state,\n                localOffers: localSelection,\n              }));\n              setSelectNft(false);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function NftsSkeleton() {\n  const { isXs } = useBreakpoints();\n\n  const getDimensions = () => {\n    if (isXs) {\n      return 80;\n    }\n    return 120;\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <NftSkeleton />\n      <NftSkeleton />\n      <NftSkeleton />\n      <NftSkeleton />\n    </div>\n  );\n}\n\nexport function NftSkeleton({\n  dimension,\n  rounded,\n}: {\n  dimension?: number;\n  rounded?: boolean;\n}) {\n  const { isXs } = useBreakpoints();\n\n  const getDimensions = () => {\n    if (isXs) {\n      return 80;\n    }\n    return 120;\n  };\n\n  return (\n    <Skeleton\n      variant=\"rectangular\"\n      height={dimension ?? getDimensions()}\n      width={dimension ?? getDimensions()}\n      style={{ margin: isXs ? 4 : 12, borderRadius: rounded ? \"50%\" : 0 }}\n    />\n  );\n}\n\nexport function Nfts({ localSelection, onSelect, rounded }: any) {\n  const activeSolWallet = useActiveSolanaWallet();\n  const { contents, state }: any = useRecoilValueLoadable(\n    nftsByOwner({\n      publicKey: activeSolWallet.publicKey,\n      blockchain: Blockchain.SOLANA,\n    })\n  );\n  // contents sometimes returns an empty array even if the user has nfts.\n  // This variable makes sure the loader shows up instead of `you dont have any nfts`\n  const [loadingThreshold, setloadingThreshold] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setloadingThreshold(false);\n    }, 1500);\n  }, []);\n\n  const theme = useCustomTheme();\n\n  if (state === \"loading\" || state === \"hasError\") {\n    return (\n      <div style={{ height: \"100%\", marginTop: 60 }}>\n        {\" \"}\n        <Loading />{\" \"}\n      </div>\n    );\n  }\n\n  if (!contents.length && loadingThreshold) {\n    return (\n      <div style={{ height: \"100%\", marginTop: 60 }}>\n        {\" \"}\n        <Loading />{\" \"}\n      </div>\n    );\n  }\n\n  if (!contents.length) {\n    return (\n      <div\n        style={{\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            fontSize: 18,\n            color: theme.custom.colors.fontColor,\n            marginTop: 80,\n          }}\n        >\n          You don't own any NFTs yet\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: 1 }}>\n          <div\n            style={{\n              color: theme.custom.colors.background,\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"center\",\n            }}\n          >\n            {contents?.map((nft) => (\n              <div>\n                <RenderNFT\n                  rounded={rounded}\n                  nft={nft}\n                  selected={localSelection\n                    .map((x) => x.mint)\n                    .includes(nft?.mint)}\n                  onSelect={onSelect}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Tokens({ localSelection, setLocalSelection }: any) {\n  const activeSolWallet = useActiveSolanaWallet();\n  const [tokenAccounts, , isLoading] = useLoader(\n    blockchainBalancesSorted({\n      publicKey: activeSolWallet.publicKey,\n      blockchain: Blockchain.SOLANA,\n    }),\n    [],\n    [activeSolWallet]\n  );\n  const theme = useCustomTheme();\n\n  if (isLoading) {\n    //TODO: adda skeletons here\n    return <div />;\n  }\n\n  return (\n    <div style={{ marginTop: 15, paddingLeft: 10, paddingRight: 10 }}>\n      <div\n        style={{\n          display: \"flex\",\n          fontSize: 14,\n          color: theme.custom.colors.icon,\n        }}\n      >\n        <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\" }}>\n          Name\n        </div>\n        <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\" }}>\n          Available\n        </div>\n        <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\" }}>\n          Trade amount\n        </div>\n      </div>\n      {tokenAccounts.map((tokenAccount) => (\n        <TokenSelector\n          amount={\n            localSelection.find((x) => x.mint === tokenAccount.mint)?.amount ||\n            0\n          }\n          setLocalSelection={setLocalSelection}\n          tokenAccount={tokenAccount}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction TokenSelector({\n  tokenAccount,\n  setLocalSelection,\n  amount,\n}: {\n  tokenAccount: TokenDataWithPrice;\n  setLocalSelection: any;\n  amount: string;\n}) {\n  const theme = useCustomTheme();\n  const activeSolWallet = useActiveSolanaWallet();\n\n  return (\n    <div\n      style={{\n        color: theme.custom.colors.background,\n        display: \"flex\",\n        fontSize: 16,\n        fontWeight: 500,\n        padding: 4,\n      }}\n    >\n      <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div style={{ display: \"flex\" }}>\n            <img\n              src={tokenAccount.logo}\n              style={{ width: 25, height: 25, marginRight: 4 }}\n            />\n            <div style={{ textOverflow: \"ellipses\" }}>\n              {tokenAccount.ticker}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div>{tokenAccount.displayBalance}</div>\n        </div>\n      </div>\n      <div style={{ flex: 1, display: \"flex\", justifyContent: \"center\" }}>\n        <TextField\n          sx={{\n            \"& .MuiOutlinedInput-root\": {\n              \"& fieldset\": {\n                borderColor: theme.custom.colors.bg4,\n                borderRadius: 6,\n              },\n              \"&:hover fieldset\": {\n                borderColor: theme.custom.colors.bg4,\n              },\n              \"&.Mui-focused fieldset\": {\n                borderColor: \"#4C94FF\",\n              },\n            },\n            input: {\n              padding: \"12px 12px\",\n              color: theme.custom.colors.background,\n            },\n          }}\n          value={amount}\n          onChange={(e) => {\n            const updatedValue = parseFloat(e.target.value);\n            if (isNaN(updatedValue) || updatedValue === 0) {\n              setLocalSelection((s) =>\n                s.filter((x) => x.mint !== tokenAccount.mint)\n              );\n            } else {\n              setLocalSelection((s) => {\n                return [\n                  ...s.filter((x) => x.mint !== tokenAccount.mint),\n                  {\n                    mint: tokenAccount.mint,\n                    publicKey: activeSolWallet.publicKey,\n                    amount: updatedValue,\n                    type: \"TOKEN\",\n                  },\n                ];\n              });\n            }\n          }}\n        />{\" \"}\n      </div>\n    </div>\n  );\n}\n\nfunction RenderNFT({\n  nft,\n  selected,\n  onSelect,\n  rounded = false,\n}: {\n  nft: Nft;\n  selected: boolean;\n  onSelect: any;\n  rounded?: boolean;\n}) {\n  const { isXs } = useBreakpoints();\n  const theme = useCustomTheme();\n\n  const getDimensions = () => {\n    if (isXs) {\n      return 72;\n    }\n    return 120;\n  };\n\n  return (\n    <div style={{ position: \"relative\", margin: isXs ? 4 : 12 }}>\n      <StyledProxyImage\n        onClick={() => {\n          onSelect(nft);\n        }}\n        style={{\n          width: getDimensions(),\n          height: getDimensions(),\n          borderRadius: rounded ? \"50%\" : 8,\n          boxShadow:\n            \"0px 4px 6px -1px rgba(0, 0, 0, 0.1), 0px 2px 4px -1px rgba(0, 0, 0, 0.06);\",\n          border: `3px solid ${theme.custom.colors.background}`,\n        }}\n        src={nft?.imageUrl}\n        removeOnError\n      />\n      {selected ? (\n        <div style={{ position: \"absolute\", right: 10, top: 8 }}>\n          {\" \"}\n          <CheckMark />{\" \"}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nconst StyledProxyImage = styled(ProxyImage)(({ theme }) => ({\n  \"&:hover\": {\n    border: `3px solid ${theme.custom.colors.avatarIconBackground}`,\n    cursor: \"pointer\",\n  },\n}));\n","import React, { Suspense } from \"react\";\nimport type { BarterOffers } from \"@coral-xyz/common\";\nimport { BACKEND_API_URL, Blockchain } from \"@coral-xyz/common\";\nimport {\n  ProxyImage,\n  SecondaryButton,\n  SuccessButton,\n  useBreakpoints,\n} from \"@coral-xyz/react-common\";\nimport { useTokenMetadata } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport CallMadeIcon from \"@mui/icons-material/CallMade\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { useChatContext } from \"../ChatContext\";\n\nimport { AbsolutelyNothingCard } from \"./AbsolutelyNothingCard\";\nimport { AddAssetsCard } from \"./AddAssetsCard\";\nimport { useBarterContext } from \"./BarterContext\";\nimport { NftSkeleton } from \"./SelectPage\";\n\nexport function SwapPage({\n  remoteSelection,\n  localSelection,\n  finalized,\n}: {\n  finalized?: boolean;\n  remoteSelection: BarterOffers;\n  localSelection: BarterOffers;\n}) {\n  const theme = useCustomTheme();\n  const { roomId, setOpenPlugin, remoteUsername, sendMessage } =\n    useChatContext();\n  const { barterId } = useBarterContext();\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <div style={{ flex: 1 }}>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          <div\n            style={{\n              flex: 1,\n              color: theme.custom.colors.background,\n              fontSize: 16,\n              fontWeight: 500,\n              borderRight: `2px solid ${theme.custom.colors.icon}`,\n            }}\n          >\n            <RemoteSelection selection={localSelection} />\n            {!finalized ? (\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <AddAssetsCard />\n              </div>\n            ) : null}\n          </div>\n          <div\n            style={{\n              flex: 1,\n              color: theme.custom.colors.background,\n              fontSize: 16,\n              fontWeight: 500,\n            }}\n          >\n            {remoteSelection.length === 0 ? (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <AbsolutelyNothingCard />\n              </div>\n            ) : null}\n            {remoteSelection.length !== 0 ? (\n              <RemoteSelection selection={remoteSelection} />\n            ) : null}\n          </div>\n        </div>\n      </div>\n      <div style={{ padding: 10 }}>\n        {remoteSelection.length === 0 ? (\n          <SecondaryButton\n            label={`Request @${remoteUsername} to add assets`}\n            onClick={async () => {\n              sendMessage(\"Barter request\", \"barter-request\", {\n                barter_id: barterId.toString(),\n              });\n              /*await fetch(\n                    `${BACKEND_API_URL}/barter/execute?room=${roomId}&type=individual`,\n                    {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: JSON.stringify({\n                            barterId,\n                            clientGeneratedUuid: uuidv4(),\n                        }),\n                    }\n                );\n                setOpenPlugin(\"\");*/\n            }}\n          />\n        ) : null}\n        {remoteSelection.length !== 0 ? (\n          <SecondaryButton\n            label=\"Approve trade\"\n            onClick={async () => {\n              await fetch(\n                `${BACKEND_API_URL}/barter/execute?room=${roomId}&type=individual`,\n                {\n                  method: \"POST\",\n                  headers: { \"Content-Type\": \"application/json\" },\n                  body: JSON.stringify({\n                    barterId,\n                    clientGeneratedUuid: uuidv4(),\n                  }),\n                }\n              );\n              setOpenPlugin(\"\");\n            }}\n          />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport function RemoteSelection({ selection }: { selection: BarterOffers }) {\n  return (\n    <div>\n      <RemoteNfts selection={selection.filter((x) => x.type === \"NFT\")} />\n      <RemoteTokens selection={selection.filter((x) => x.type === \"TOKEN\")} />\n    </div>\n  );\n}\n\nfunction RemoteNfts({ selection }: { selection: BarterOffers }) {\n  const theme = useCustomTheme();\n  const { isXs } = useBreakpoints();\n  const getDimensions = () => {\n    if (isXs) {\n      return 140;\n    }\n    return 170;\n  };\n\n  return (\n    <div\n      style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n    >\n      {selection.map((s) => (\n        <div>\n          <div\n            style={{\n              position: \"relative\",\n              margin: isXs ? 4 : 12,\n              padding: 10,\n              background: theme.custom.colors.invertedBg4,\n              borderRadius: 8,\n              width: getDimensions(),\n            }}\n          >\n            <RemoteNftWithSuspense mint={s.mint} />\n            <ExplorerLink mint={s.mint} />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport function ExplorerLink({ mint }: { mint: string }) {\n  const theme = useCustomTheme();\n\n  return (\n    <div\n      style={{\n        cursor: \"pointer\",\n        color: theme.custom.colors.icon,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n      onClick={() => {\n        window.open(`https://explorer.solana.com/address/${mint}`, \"_blank\");\n      }}\n    >\n      <div style={{ display: \"flex\" }}>\n        <div>View</div> <CallMadeIcon />\n      </div>\n    </div>\n  );\n}\n\nexport function RemoteNftWithSuspense({\n  mint,\n  dimension,\n  rounded = false,\n  onClick,\n}: {\n  mint: string;\n  dimension?: number;\n  rounded?: boolean;\n  onClick?: any;\n}) {\n  const theme = useCustomTheme();\n\n  return (\n    <Suspense fallback={<NftSkeleton rounded dimension={dimension} />}>\n      <RemoteNft\n        dimension={dimension}\n        onClick={onClick}\n        mint={mint}\n        rounded={rounded}\n      />\n    </Suspense>\n  );\n}\n\nexport function RemoteNft({\n  mint,\n  rounded,\n  onClick,\n  dimension,\n}: {\n  mint: string;\n  rounded?: boolean;\n  onClick?: any;\n  dimension?: number;\n}) {\n  const theme = useCustomTheme();\n  const tokenData = useTokenMetadata({\n    mintAddress: mint,\n    blockchain: Blockchain.SOLANA,\n  });\n\n  return (\n    <ProxyImage\n      onClick={onClick}\n      style={{\n        width: \"100%\",\n        height: dimension || \"\",\n        borderRadius: rounded ? \"50%\" : 8,\n        border: rounded ? `3px solid ${theme.custom.colors.bg3}` : \"\",\n        boxShadow:\n          \"0px 4px 6px -1px rgba(0, 0, 0, 0.1), 0px 2px 4px -1px rgba(0, 0, 0, 0.06)\",\n      }}\n      src={tokenData?.image}\n      removeOnError\n    />\n  );\n}\n\nfunction RemoteTokens({ selection }: { selection: BarterOffers }) {\n  return (\n    <div\n      style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\n    >\n      {selection.map((s) => (\n        <Suspense>\n          <RemoteToken mint={s.mint} amount={s.amount} />\n        </Suspense>\n      ))}\n    </div>\n  );\n}\n\nfunction RemoteToken({ mint, amount }: { mint: string; amount: number }) {\n  const tokenData = useTokenMetadata({\n    mintAddress: mint,\n    blockchain: Blockchain.SOLANA,\n  });\n  const theme = useCustomTheme();\n  const { isXs } = useBreakpoints();\n  const getDimensions = () => {\n    if (isXs) {\n      return 140;\n    }\n    return 170;\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        background: theme.custom.colors.invertedBg4,\n        padding: 8,\n        margin: isXs ? 4 : 12,\n        borderRadius: 8,\n        width: getDimensions(),\n      }}\n    >\n      <div style={{ display: \"flex\" }}>\n        <img\n          style={{ width: 25, height: 25, borderRadius: \"50%\" }}\n          src={tokenData?.image}\n        />\n      </div>\n      <div\n        style={{\n          color: theme.custom.colors.background,\n          fontSize: 12,\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          marginLeft: 5,\n        }}\n      >\n        <div>\n          {amount} {tokenData?.name}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useContext, useEffect, useMemo } from \"react\";\nimport { RichMentionsContext, RichMentionsInput } from \"react-rich-mentions\";\nimport { BACKPACK_TEAM } from \"@coral-xyz/common\";\nimport { BackpackStaffIcon } from \"@coral-xyz/react-common\";\nimport { useUsersMetadata } from \"@coral-xyz/tamagui\";\nimport { styles, useCustomTheme } from \"@coral-xyz/themes\";\nimport { CircularProgress } from \"@mui/material\";\n\nimport { useChatContext } from \"../ChatContext\";\n\nconst useStyles = styles(() => ({\n  input: {\n    \"&:hover\": {\n      cursor: \"text\",\n    },\n  },\n}));\n\nexport const chatMessageInputId = \"backpack-message-input\";\n\nexport function MessageInput({\n  setPluginMenuOpen,\n  autoFocus = true,\n  onMediaSelect\n}: {\n  setPluginMenuOpen: any;\n  autoFocus?: boolean;\n  onMediaSelect: any;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const { type, remoteUsername, activeReply } = useChatContext();\n  const { activeSearch } = useContext(RichMentionsContext);\n\n  const uploadFromClipboard = (e:React.ClipboardEvent<HTMLDivElement>):void => {\n    if(e.clipboardData.files.length > 0) {\n      let file = e.clipboardData.files[0];\n      onMediaSelect(file)\n    }\n  }\n\n  useEffect(() => {\n    if (autoFocus) {\n      const messageElement = document.getElementById(chatMessageInputId);\n\n      if (messageElement) {\n        messageElement.focus();\n      }\n    }\n  }, [autoFocus]);\n\n  return (\n    <div style={{ width: \"100%\", padding: 10 }}>\n      <RichMentionsInput\n        id={chatMessageInputId}\n        onKeyDown={(event) => {\n          if (event.key === \"Enter\" && activeSearch) {\n            event.stopPropagation();\n          }\n        }}\n        className={classes.input}\n        onClick={() => setPluginMenuOpen(false)}\n        onPaste={(e) => uploadFromClipboard(e)}\n        placeholder={\n          type === \"individual\"\n            ? `Message @${remoteUsername}`\n            : activeReply?.parent_username\n            ? \"Reply\"\n            : \"Write a message...\"\n        }\n        style={{\n          outline: \"0px solid transparent\",\n          color: theme.custom.colors.fontColor,\n          fontSize: \"14px\",\n          wordBreak: \"break-word\",\n        }}\n        defaultValue=\"\"\n      />\n    </div>\n  );\n}\n\nexport const CustomAutoComplete = () => {\n  const theme = useCustomTheme();\n  const { loading, results, activeSearch, selectItem, index } =\n    useContext(RichMentionsContext);\n  const cursor = index;\n\n  const shownResults = useMemo(() => results, [results]);\n\n  const users = useUsersMetadata({ remoteUserIds: results.map((r) => r.id) });\n\n  // if there are no users to show in mentions\n  if (activeSearch && !loading && shownResults?.length === 0) {\n    return null;\n  }\n\n  return (\n    <div\n      style={{\n        width: 180,\n        position: \"absolute\",\n        bottom: 44,\n        boxShadow: theme.custom.colors.boxShadow,\n        background: theme.custom.colors.bg3,\n        paddingTop: activeSearch && 8,\n        paddingBottom: activeSearch && 8,\n        borderRadius: 8,\n        backdropFilter: \"blur(20px)\",\n        overflow: \"hidden\",\n      }}\n    >\n      {shownResults.map((item, index) => (\n        <button\n          style={{\n            paddingLeft: 10,\n            paddingRight: 10,\n            paddingTop: 8,\n            paddingBottom: 8,\n            display: \"flex\",\n            cursor: \"pointer\",\n            width: \"100%\",\n            background:\n              index === cursor\n                ? theme.custom.colors.listItemHover\n                : \"transparent\",\n            color: theme.custom.colors.fontColor,\n            border: \"none\",\n            textAlign: \"left\",\n            alignItems: \"center\",\n          }}\n          key={item.ref}\n          onClick={() => {\n            selectItem(item);\n          }}\n        >\n          <img\n            style={{ height: 24, borderRadius: 12, marginRight: 8 }}\n            src={users[item.id]?.image}\n          />\n          <div style={{ fontSize: 14 }}>@{item.name}</div>\n          {BACKPACK_TEAM.includes(item.id) ? <BackpackStaffIcon /> : null}\n        </button>\n      ))}\n      {activeSearch !== \"\" &&\n      activeSearch &&\n      activeSearch.length !== 0 &&\n      loading ? (\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginBottom: 3,\n            marginTop: 3,\n          }}\n        >\n          {\" \"}\n          <CircularProgress size={20} />{\" \"}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { RichMentionsProvider } from \"react-rich-mentions\";\nimport { useLocation } from \"react-router-dom\";\nimport type { RemoteUserData } from \"@coral-xyz/common\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport {\n  useActiveSolanaWallet,\n  useDecodedSearchParams,\n} from \"@coral-xyz/recoil\";\n\nimport { useChatContext } from \"../ChatContext\";\n\nexport const MessageInputProvider = ({\n  inputRef,\n  children,\n  offlineMembers,\n}: {\n  inputRef: any;\n  children: any;\n  offlineMembers: any[];\n}) => {\n  const pathname = useLocation().pathname;\n  const { type, remoteUsername, remoteUserId } = useChatContext();\n  const { roomId } = useChatContext();\n  const { props }: any = useDecodedSearchParams();\n  const [rerender, setRender] = useState(false);\n  const configs: any = [\n    {\n      query: /@([a-zA-Z0-9_-]+)?/,\n      match: /<(@\\w+)\\|([^>]+)>/g,\n      matchDisplay: \"$1\",\n      customizeFragment: (fragment, final) => {\n        fragment.className = final ? \"final\" : \"pending\";\n      },\n      onMention: async (text) => {\n        const search = text.substr(1); // remove '@'\n        if (type === \"individual\") {\n          return offlineMembers\n            .map((x) => ({\n              name: x.username,\n              id: x.uuid,\n              ref: `<@${x.username}|u${x.uuid}>`,\n            }))\n            .filter((x) => x.name.includes(search));\n        }\n        if (search.length <= 1) {\n          return offlineMembers\n            .map((x) => ({\n              name: x.username,\n              id: x.uuid,\n              ref: `<@${x.username}|u${x.uuid}>`,\n            }))\n            .filter((x) => x.name.includes(search));\n        }\n        const response = await fetch(\n          `${BACKEND_API_URL}/nft/members?room=${\n            pathname === \"/messages/groupchat\" ? props.id : props.collectionId\n          }&mint=${props.nftMint}&type=collection&limit=${3}&prefix=${search}`,\n          {\n            method: \"GET\",\n          }\n        );\n        try {\n          const json = await response.json();\n          const members: RemoteUserData[] = json?.members || [];\n          return [\n            ...offlineMembers\n              .map((x) => ({\n                name: x.username,\n                id: x.uuid,\n                ref: `<@${x.username}|u${x.uuid}>`,\n              }))\n              .filter((x) => x.name.includes(search)),\n            ...members.map((x) => ({\n              name: x.username,\n              id: x.id,\n              ref: `<@${x.username}|u${x.id}>`,\n            })),\n          ];\n        } catch (e) {\n          console.error(e);\n          return [];\n        }\n      },\n    },\n  ];\n\n  useEffect(() => {\n    setRender(true);\n    setTimeout(() => {\n      setRender(false);\n    }, 10);\n  }, [roomId]);\n\n  if (rerender || (offlineMembers.length && !offlineMembers[0]?.username)) {\n    return <>{children}</>;\n  }\n\n  return (\n    <RichMentionsProvider configs={configs} getContext={inputRef}>\n      {children}\n    </RichMentionsProvider>\n  );\n};\n","import type { Nft } from \"@coral-xyz/common\";\nimport { useBreakpoints } from \"@coral-xyz/recoil\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport Info from \"@mui/icons-material/Info\";\nimport { Tooltip } from \"@mui/material\";\n\nimport { Nfts } from \"../barter/SelectPage\";\nimport { useChatContext } from \"../ChatContext\";\nimport { ScrollBarImpl } from \"../ScrollbarImpl\";\n\nexport const NftStickerPlugin = ({ setPluginMenuOpen }) => {\n  const { setOpenPlugin, setAboveMessagePlugin, sendMessage } =\n    useChatContext();\n  const theme = useCustomTheme();\n  const { isXs } = useBreakpoints();\n\n  return (\n    <div style={{ padding: isXs ? 10 : 20 }}>\n      <div style={{ display: \"flex\" }}>\n        <div\n          style={{\n            flex: 1,\n            display: \"flex\",\n            marginTop: 10,\n            paddingLeft: isXs ? 10 : 0,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              fontSize: 18,\n              color: theme.custom.colors.fontColor,\n            }}\n          >\n            NFT Stickers\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Tooltip title=\"Made from your NFTs\">\n              <Info\n                style={{\n                  fontSize: \"1.2rem\",\n                  marginLeft: 4,\n                  color: theme.custom.colors.icon,\n                }}\n              />\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n      <div style={{ position: \"relative\", height: 200 }}>\n        <ScrollBarImpl height=\"100%\">\n          <div style={{ height: \"100%\" }}>\n            <div>\n              <Nfts\n                localSelection={[]}\n                rounded\n                onSelect={(nft: Nft) => {\n                  sendMessage(\"NFT Sticker\", \"nft-sticker\", {\n                    mint: nft.mint || \"\",\n                  });\n                  setAboveMessagePlugin({\n                    type: \"\",\n                    metadata: {},\n                  });\n                  setOpenPlugin(\"\");\n                  setPluginMenuOpen(false);\n                }}\n              />\n            </div>\n          </div>\n        </ScrollBarImpl>\n      </div>\n    </div>\n  );\n};\n","import { styles } from \"@coral-xyz/themes\";\n\nexport const useStyles = styles((theme) => ({\n  horizontalCenter: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  smallTitle: {\n    color: theme.custom.colors.smallTextColor,\n    fontWeight: 600,\n  },\n  text: {\n    color: theme.custom.colors.fontColor2,\n  },\n  contactIconOuter: {\n    background: theme.custom.colors.textBorder,\n  },\n  noContactBanner: {\n    paddingTop: 12,\n    paddingBottom: 12,\n    background: (props: any) =>\n      props.type === \"danger\"\n        ? theme.custom.colors.negativeBackground\n        : theme.custom.colors.background,\n  },\n  strongText: {\n    color: theme.custom.colors.fontColor2,\n    fontWeight: 600,\n    fontSize: 14,\n  },\n}));\n","export * from \"./components/ChatRoom\";\n","export const PLUGIN_HEIGHT_PERCENTAGE = 40;\n","export function base64ToArrayBuffer(base64: string) {\n  base64 = base64.replace(/^data:([^;]+);base64,/gim, \"\");\n  const binary = atob(base64);\n  const len = binary.length;\n  const buffer = new ArrayBuffer(len);\n  const view = new Uint8Array(buffer);\n  for (let i = 0; i < len; i++) {\n    view[i] = binary.charCodeAt(i);\n  }\n  return buffer;\n}\n","export default {\n  version: \"0.1.0\",\n  name: \"secure_transfer\",\n  instructions: [\n    {\n      name: \"setupSecureTransfer\",\n      accounts: [\n        {\n          name: \"authority\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"secureTransfer\",\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: \"send\",\n      accounts: [\n        {\n          name: \"sender\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"secureTransfer\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"escrow\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"receiver\",\n          type: \"publicKey\",\n        },\n        {\n          name: \"amount\",\n          type: \"u64\",\n        },\n        {\n          name: \"handshake\",\n          type: {\n            defined: \"Handshake\",\n          },\n        },\n      ],\n    },\n    {\n      name: \"redeem\",\n      accounts: [\n        {\n          name: \"sender\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"receiver\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"escrow\",\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"counter\",\n          type: \"u64\",\n        },\n      ],\n    },\n    {\n      name: \"accept\",\n      accounts: [\n        {\n          name: \"receiver\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"escrow\",\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"sender\",\n          type: \"publicKey\",\n        },\n        {\n          name: \"counter\",\n          type: \"u64\",\n        },\n      ],\n    },\n    {\n      name: \"confirm\",\n      accounts: [\n        {\n          name: \"sender\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"receiver\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"escrow\",\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"counter\",\n          type: \"u64\",\n        },\n      ],\n    },\n    {\n      name: \"cancel\",\n      accounts: [\n        {\n          name: \"authority\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"secureTransfer\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"escrow\",\n          isMut: true,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"receiver\",\n          type: \"publicKey\",\n        },\n        {\n          name: \"counter\",\n          type: \"u64\",\n        },\n      ],\n    },\n  ],\n  accounts: [\n    {\n      name: \"SecureTransfer\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"counter\",\n            type: \"u64\",\n          },\n          {\n            name: \"bump\",\n            type: \"u8\",\n          },\n        ],\n      },\n    },\n    {\n      name: \"Escrow\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"amount\",\n            type: \"u64\",\n          },\n          {\n            name: \"bump\",\n            type: \"u8\",\n          },\n          {\n            name: \"sender\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"receiver\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"threeWayState\",\n            type: {\n              option: {\n                defined: \"ThreeWayState\",\n              },\n            },\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: \"Handshake\",\n      type: {\n        kind: \"enum\",\n        variants: [\n          {\n            name: \"TwoWay\",\n          },\n          {\n            name: \"ThreeWay\",\n          },\n        ],\n      },\n    },\n    {\n      name: \"ErrorCode\",\n      type: {\n        kind: \"enum\",\n        variants: [\n          {\n            name: \"Overflow\",\n          },\n          {\n            name: \"CantAcceptTwoWayHandshake\",\n          },\n          {\n            name: \"CantAcceptAlreadyAcceptedHandshake\",\n          },\n          {\n            name: \"CantRedeemThreeWayHandshake\",\n          },\n          {\n            name: \"CantConfirmPendingThreeWayHandshake\",\n          },\n          {\n            name: \"CantConfirmTwoWayHandshake\",\n          },\n        ],\n      },\n    },\n    {\n      name: \"ThreeWayState\",\n      type: {\n        kind: \"enum\",\n        variants: [\n          {\n            name: \"Pending\",\n          },\n          {\n            name: \"Accepted\",\n          },\n        ],\n      },\n    },\n  ],\n};\n","import type { BackgroundClient } from \"@coral-xyz/common\";\nimport {\n  BACKEND_API_URL,\n  confirmTransaction,\n  UI_RPC_METHOD_SOLANA_SIGN_AND_SEND_TRANSACTION,\n} from \"@coral-xyz/common\";\nimport type { AnchorProvider, Provider } from \"@project-serum/anchor\";\nimport { BN, Program } from \"@project-serum/anchor\";\nimport { findProgramAddressSync } from \"@project-serum/anchor/dist/cjs/utils/pubkey\";\nimport type { Connection, Transaction } from \"@solana/web3.js\";\nimport {\n  Keypair,\n  LAMPORTS_PER_SOL,\n  PublicKey,\n  SystemProgram,\n} from \"@solana/web3.js\";\nimport bs58 from \"bs58\";\n\nimport type { SecureTransfer } from \"./types/SecureTransfer\";\nimport IDL from \"./IDL\";\n\nconst SECURE_TRANSFER_PROGRAM_ID =\n  \"A1jvYLpetPZrMJksEM4RTmg8zZVQFT3WKv3K26S9yzqZ\";\n\nconst findEscrowAddress = (sender, receiver, counter, program) =>\n  findProgramAddressSync(\n    [\n      sender.toBuffer(),\n      receiver.toBuffer(),\n      counter.toArrayLike(Buffer, \"le\", 8),\n    ],\n    program.programId\n  );\n\nexport const getOrSetupSecureTransferAcc = async (\n  program: Program<SecureTransfer>,\n  senderPublicKey: PublicKey,\n  connection: Connection,\n  backgroundClient: BackgroundClient\n) => {\n  let secureTransferState;\n  const secureTransferAddress = findProgramAddressSync(\n    [new PublicKey(senderPublicKey).toBuffer()],\n    program.programId\n  );\n  try {\n    secureTransferState = await program.account.secureTransfer.fetch(\n      secureTransferAddress[0]\n    );\n  } catch (e) {\n    console.error(e);\n    const sendTx = await program.methods\n      .setupSecureTransfer()\n      .accounts({\n        secureTransfer: secureTransferAddress[0],\n        authority: new PublicKey(senderPublicKey),\n        systemProgram: SystemProgram.programId,\n      })\n      .transaction();\n    await sendAndConfirmTransaction(\n      backgroundClient,\n      connection,\n      sendTx,\n      senderPublicKey.toString()\n    );\n  }\n  return secureTransferState?.counter || new BN(0);\n};\n\nexport const createEscrow = async (\n  provider: AnchorProvider,\n  backgroundClient: BackgroundClient,\n  connection: Connection,\n  transferAmount: number,\n  senderPublicKey: PublicKey,\n  receiverPubkey: PublicKey\n) => {\n  const program = secureTransferProgram(provider);\n  const counter = await getOrSetupSecureTransferAcc(\n    program,\n    senderPublicKey,\n    connection,\n    backgroundClient\n  );\n  const secureTransferAddress = findProgramAddressSync(\n    [new PublicKey(senderPublicKey).toBuffer()],\n    program.programId\n  );\n  const escrow = findEscrowAddress(\n    senderPublicKey,\n    receiverPubkey,\n    counter || new BN(0),\n    program\n  )[0];\n\n  const sendTx = await program.methods\n    .send(receiverPubkey, new BN(transferAmount * LAMPORTS_PER_SOL), {\n      twoWay: {},\n    })\n    .accounts({\n      secureTransfer: secureTransferAddress[0],\n      escrow,\n      sender: senderPublicKey,\n      systemProgram: SystemProgram.programId,\n    })\n    .transaction();\n\n  const txSignature = await sendAndConfirmTransaction(\n    backgroundClient,\n    connection,\n    sendTx,\n    senderPublicKey.toString()\n  );\n  // TODO: If the API gets missed here we should store the txn somewhere to keep polling\n  // and lazily store in our DB\n  return {\n    signature: txSignature,\n    counter: counter.toString(),\n    escrow: escrow.toString(),\n  };\n};\n\nconst sendAndConfirmTransaction = async (\n  backgroundClient: BackgroundClient,\n  connection: Connection,\n  sendTx: Transaction,\n  publicKey: string\n) => {\n  const { blockhash } = await connection.getLatestBlockhash(\"confirmed\");\n  sendTx.recentBlockhash = blockhash;\n  sendTx.feePayer = new PublicKey(publicKey);\n  const signature = await backgroundClient.request({\n    method: UI_RPC_METHOD_SOLANA_SIGN_AND_SEND_TRANSACTION,\n    params: [\n      bs58.encode(sendTx.serialize({ requireAllSignatures: false })),\n      publicKey,\n    ],\n  });\n  await confirmTransaction(connection, signature, \"confirmed\");\n  return signature;\n};\n\nexport const getSecureTransferState = async (\n  provider: Provider,\n  escrowAccountAddress: string\n) => {\n  const program = secureTransferProgram(provider);\n  try {\n    const escrow = await program.account.escrow.fetch(\n      new PublicKey(escrowAccountAddress)\n    );\n    if (escrow === null) {\n      return null;\n    } else {\n      return {\n        amount: escrow.amount.toString(),\n        sender: escrow.sender.toString(),\n        receiver: escrow.receiver.toString(),\n      };\n    }\n  } catch (e) {\n    return null;\n  }\n};\n\nexport async function redeem(\n  provider: Provider,\n  backgroundClient: BackgroundClient,\n  connection: Connection,\n  receiverPubkey: PublicKey,\n  senderPubkey: PublicKey,\n  escrow: PublicKey,\n  counter: number\n) {\n  const program = secureTransferProgram(provider);\n  const redeemTx = await program.methods\n    .redeem(new BN(counter))\n    .accounts({\n      escrow,\n      sender: senderPubkey,\n      receiver: receiverPubkey,\n    })\n    .transaction();\n\n  const txSignature = await sendAndConfirmTransaction(\n    backgroundClient,\n    connection,\n    redeemTx,\n    receiverPubkey.toString()\n  );\n  return txSignature;\n}\n\nexport async function cancel(\n  provider: Provider,\n  backgroundClient: BackgroundClient,\n  connection: Connection,\n  receiverPubkey: PublicKey,\n  senderPubkey: PublicKey,\n  escrow: PublicKey,\n  counter: number\n) {\n  const program = secureTransferProgram(provider);\n  const secureTransferAddress = findProgramAddressSync(\n    [senderPubkey.toBuffer()],\n    program.programId\n  );\n  const cancelTx = await program.methods\n    .cancel(receiverPubkey, new BN(counter))\n    .accounts({\n      authority: senderPubkey,\n      escrow,\n      secureTransfer: secureTransferAddress[0],\n    })\n    .transaction();\n\n  const txSignature = await sendAndConfirmTransaction(\n    backgroundClient,\n    connection,\n    cancelTx,\n    senderPubkey.toString()\n  );\n\n  return txSignature;\n}\n\nexport function secureTransferProgram(\n  provider: Provider\n): Program<SecureTransfer> {\n  return new Program<SecureTransfer>(\n    <SecureTransfer>IDL,\n    SECURE_TRANSFER_PROGRAM_ID,\n    provider\n  );\n}\n","import {\n  MESSAGING_COMMUNICATION_FETCH,\n  MESSAGING_COMMUNICATION_FETCH_RESPONSE,\n  MESSAGING_COMMUNICATION_PUSH,\n} from \"@coral-xyz/common\";\n\nimport { IFRAME_HOSTED } from \"./config\";\n\nexport class ParentCommunicationManager {\n  private static instance: ParentCommunicationManager;\n  private counter = 0;\n  private parentUrl?: string;\n  private pendingResponses: {\n    [counter: number]: { resolve: any; reject: any };\n  };\n  private nativePush?: (props: any) => {};\n  private nativePop?: () => {};\n\n  private constructor() {\n    if (IFRAME_HOSTED) {\n      window.addEventListener(\n        \"message\",\n        (event) => {\n          if (event.origin !== this.parentUrl) {\n            return;\n          }\n          if (event.data.type === MESSAGING_COMMUNICATION_FETCH_RESPONSE) {\n            console.log(\"response got\");\n            console.log(event.data);\n            if (event.data.payload.success) {\n              this.pendingResponses[event.data.payload.counter]?.resolve({\n                json: () => event.data.payload.data,\n              });\n            } else {\n              this.pendingResponses[event.data.payload.counter]?.reject();\n            }\n          }\n        },\n        false\n      );\n    }\n    this.pendingResponses = {};\n  }\n\n  public setParentUrl(parentUrl: string) {\n    this.parentUrl = parentUrl;\n  }\n\n  public setNativePush(push: any) {\n    this.nativePush = push;\n  }\n\n  public setNativePop(pop: any) {\n    this.nativePop = pop;\n  }\n\n  public static getInstance() {\n    if (!this.instance) {\n      this.instance = new ParentCommunicationManager();\n    }\n    return this.instance;\n  }\n\n  fetch(url: string, args?: any): Promise<{ json: () => any }> {\n    if (IFRAME_HOSTED) {\n      return new Promise((resolve, reject) => {\n        const counter = this.counter++;\n        window.parent.postMessage(\n          {\n            type: MESSAGING_COMMUNICATION_FETCH,\n            payload: {\n              url,\n              args,\n              counter,\n            },\n          },\n          \"*\"\n        );\n        this.pendingResponses[counter] = { resolve, reject };\n      });\n    } else {\n      return fetch(url, args);\n    }\n  }\n\n  pop() {\n    this.nativePop?.();\n  }\n\n  push(props: {\n    title: string;\n    componentId: string;\n    componentProps: any;\n    pushAboveRoot?: boolean;\n  }) {\n    if (IFRAME_HOSTED) {\n      window.parent.postMessage(\n        {\n          type: MESSAGING_COMMUNICATION_PUSH,\n          payload: props,\n        },\n        \"*\"\n      );\n    } else {\n      this.nativePush?.(props);\n    }\n  }\n}\n","import { ChatRoom } from \"@coral-xyz/chat-sdk\";\nimport { updateFriendshipIfExists } from \"@coral-xyz/db\";\nimport { useFriendship, useUpdateFriendships } from \"@coral-xyz/recoil\";\n\nexport const ChatScreen = ({\n  userId,\n  uuid,\n  username,\n  isDarkMode,\n}: {\n  isDarkMode: boolean;\n  userId: string;\n  uuid: string;\n  username: string;\n}) => {\n  const friendshipValue = useFriendship({ userId });\n  const setFriendshipValue = useUpdateFriendships();\n\n  if (!friendshipValue || !friendshipValue.id) {\n    console.error(`Friendship not found with user ${userId} or jwt not found`);\n    return <div />;\n  }\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n      }}\n    >\n      <ChatRoom\n        type=\"individual\"\n        remoteUsername={username}\n        username=\"\"\n        roomId={friendshipValue.id?.toString()}\n        userId={uuid}\n        areFriends={friendshipValue.areFriends}\n        requested={friendshipValue.requested}\n        remoteUserId={userId}\n        blocked={friendshipValue.blocked}\n        remoteRequested={friendshipValue.remoteRequested}\n        spam={friendshipValue.spam}\n        setRequested={(updatedValue: boolean) => {\n          if (!friendshipValue.remoteRequested && !friendshipValue.areFriends)\n            setFriendshipValue({\n              userId: userId,\n              friendshipValue: {\n                requested: updatedValue,\n              },\n            });\n          else if (!friendshipValue.areFriends) {\n            updateFriendshipIfExists(uuid, userId, {\n              requested: 0,\n              areFriends: 1,\n            });\n\n            setFriendshipValue({\n              userId: userId,\n              friendshipValue: {\n                areFriends: updatedValue,\n                remoteRequested: false,\n                requested: false,\n              },\n            });\n          }\n        }}\n        setSpam={(updatedValue: boolean) =>\n          setFriendshipValue({\n            userId: userId,\n            friendshipValue: {\n              spam: updatedValue,\n            },\n          })\n        }\n        setBlocked={(updatedValue: boolean) =>\n          setFriendshipValue({\n            userId: userId,\n            friendshipValue: {\n              blocked: updatedValue,\n            },\n          })\n        }\n        isDarkMode={isDarkMode}\n      />\n    </div>\n  );\n};\n","import { EmptyState } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport ChatBubbleIcon from \"@mui/icons-material/ChatBubble\";\n\nimport { ParentCommunicationManager } from \"../ParentCommunicationManager\";\n\nexport const EmptyRequests = () => {\n  const theme = useCustomTheme();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        flexGrow: 1,\n      }}\n    >\n      <EmptyState\n        icon={(props: any) => <ChatBubbleIcon {...props} />}\n        title={\"No Requests\"}\n        subtitle={\"You have no message requests\"}\n        buttonText={\"Go Back\"}\n        onClick={() => ParentCommunicationManager.getInstance().pop()}\n        contentStyle={{\n          color: theme.custom.colors.secondary,\n        }}\n      />\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport type {\n  CollectionChatData,\n  EnrichedInboxDb,\n  RemoteUserData,\n} from \"@coral-xyz/common\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { BubbleTopLabel, EmptyState, SearchBox } from \"@coral-xyz/react-common\";\nimport {\n  useFriendships,\n  useGroupCollections,\n  useRequestsCount,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport ChatBubbleIcon from \"@mui/icons-material/ChatBubble\";\n\nimport { ParentCommunicationManager } from \"../ParentCommunicationManager\";\n\nimport { MessageList } from \"./MessageList\";\nimport { MessagesSkeleton } from \"./MessagesSkeleton\";\nimport { useStyles } from \"./styles\";\nimport { UserList } from \"./UserList\";\n\nlet debouncedTimer: ReturnType<typeof setTimeout>;\n\nexport function Inbox() {\n  return <InboxInner />;\n}\n\nexport function InboxInner() {\n  const classes = useStyles();\n  const user = useUser();\n  const { uuid } = user;\n  const activeChats = useFriendships({ uuid });\n  const requestCount = useRequestsCount({ uuid });\n  const groupCollections = useGroupCollections({ uuid });\n  const [searchResults, setSearchResults] = useState<RemoteUserData[]>([]);\n  const [searchFilter, setSearchFilter] = useState(\"\");\n\n  const getDefaultChats = () => {\n    return groupCollections.filter((x) => x.name && x.image) || [];\n  };\n\n  const allChats: (\n    | { chatType: \"individual\"; chatProps: EnrichedInboxDb }\n    | { chatType: \"collection\"; chatProps: CollectionChatData }\n  )[] = [\n    ...getDefaultChats().map((x) => ({ chatProps: x, chatType: \"collection\" })),\n    ...(activeChats || []).map((x) => ({\n      chatProps: x,\n      chatType: \"individual\",\n    })),\n  ];\n\n  const searchedUsersDistinct = searchResults.filter(\n    (result) =>\n      !allChats\n        ?.map((x) =>\n          x.chatType === \"collection\"\n            ? x.chatProps.name\n            : x.chatProps.remoteUsername\n        )\n        .includes(result.username)\n  );\n\n  const debouncedInit = (prefix: string) => {\n    clearTimeout(debouncedTimer);\n    debouncedTimer = setTimeout(async () => {\n      await handleContactSearch(prefix);\n    }, 250);\n  };\n\n  const handleContactSearch = async (searchFilter: string) => {\n    if (searchFilter.length > 1) {\n      const response = await ParentCommunicationManager.getInstance().fetch(\n        `${BACKEND_API_URL}/users?usernamePrefix=${searchFilter}`\n      );\n      const json = await response.json();\n      setSearchResults(\n        json.users.sort((a, b) =>\n          a.username.length < b.username.length ? -1 : 1\n        ) || []\n      );\n    } else {\n      setSearchResults([]);\n    }\n  };\n\n  useEffect(() => {\n    setSearchFilter(\"\");\n  }, [uuid]);\n\n  return (\n    <div\n      className={classes.container}\n      style={{\n        marginTop: \"8px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <SearchBox\n        searchFilter={searchFilter}\n        setSearchFilter={setSearchFilter}\n        onChange={async (prefix: string) => {\n          debouncedInit(prefix);\n        }}\n      />\n      {!allChats || !allChats.length ? <MessagesSkeleton /> : null}\n      {allChats &&\n      allChats.length !== 0 &&\n      (allChats.filter((x) =>\n        (x.chatType === \"individual\"\n          ? x.chatProps.remoteUsername || \"\"\n          : x.chatProps.name\n        )?.includes(searchFilter)\n      ).length > 0 ||\n        requestCount > 0) ? (\n          <>\n            {searchFilter.length >= 3 ? (\n              <BubbleTopLabel text=\"Your friends\" />\n          ) : null}\n            <div style={{ paddingBottom: \"16px\" }}>\n              <MessageList\n                requestCount={searchFilter.length < 3 ? requestCount : 0}\n                activeChats={allChats.filter((x) => {\n                const displayName =\n                  x.chatType === \"individual\"\n                    ? x.chatProps.remoteUsername\n                    : x.chatProps.name;\n                if (displayName?.includes(searchFilter)) {\n                  return true;\n                }\n                if (\n                  x.chatType === \"individual\" &&\n                  x.chatProps.public_keys\n                    ?.map((x) => x.publicKey)\n                    ?.includes(searchFilter)\n                ) {\n                  return true;\n                }\n                return false;\n              })}\n            />\n            </div>\n          </>\n      ) : null}\n      {searchFilter.length >= 3 && searchedUsersDistinct.length !== 0 ? (\n        <>\n          <BubbleTopLabel text=\"Other people\" />\n          <UserList\n            users={searchedUsersDistinct}\n            setMembers={setSearchResults}\n          />\n        </>\n      ) : null}\n      {allChats &&\n      allChats.length !== 0 &&\n      searchFilter.length < 3 &&\n      requestCount === 0 &&\n      allChats.length === 0 ? (\n        <div\n          style={{\n            flexGrow: 1,\n            justifyContent: \"center\",\n            flexDirection: \"column\",\n            display: \"flex\",\n            paddingBottom: 50,\n          }}\n        >\n          {\" \"}\n          <EmptyState\n            icon={(props: any) => <ChatBubbleIcon {...props} />}\n            title=\"No messages\"\n            subtitle=\"Search for someone to send a message!\"\n          />\n        </div>\n      ) : null}\n    </div>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\nimport type {\n  CollectionChatData,\n  EnrichedInboxDb,\n  SubscriptionType,\n} from \"@coral-xyz/common\";\nimport {\n  BACKPACK_TEAM,\n  NAV_COMPONENT_MESSAGE_CHAT,\n  NAV_COMPONENT_MESSAGE_GROUP_CHAT,\n  NAV_COMPONENT_MESSAGE_PROFILE,\n  NAV_COMPONENT_MESSAGE_REQUESTS,\n  parseMessage,\n} from \"@coral-xyz/common\";\nimport {\n  BackpackStaffIcon,\n  isFirstLastListItemStyle,\n  LocalImage,\n} from \"@coral-xyz/react-common\";\nimport { useDecodedSearchParams } from \"@coral-xyz/recoil\";\nimport { useUsersMetadata } from \"@coral-xyz/tamagui\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport MarkChatUnreadIcon from \"@mui/icons-material/MarkChatUnread\";\nimport VerifiedIcon from \"@mui/icons-material/Verified\";\nimport { List, ListItem } from \"@mui/material\";\n\nimport { ParentCommunicationManager } from \"../ParentCommunicationManager\";\n\nimport { useStyles } from \"./styles\";\n\nexport const MessageList = ({\n  activeChats,\n  requestCount = 0,\n  toRoot = true,\n}: {\n  activeChats: (\n    | { chatType: \"individual\"; chatProps: EnrichedInboxDb }\n    | { chatType: \"collection\"; chatProps: CollectionChatData }\n  )[];\n  requestCount?: number;\n  toRoot?: boolean;\n}) => {\n  const theme = useCustomTheme();\n\n  const sortedChats = activeChats.sort(\n    (a, b) =>\n      new Date(\n        (b.chatType === \"collection\"\n          ? b.chatProps.lastMessageTimestamp\n          : b.chatProps.last_message_timestamp) ?? 0\n      ).getTime() -\n      new Date(\n        (a.chatType === \"collection\"\n          ? a.chatProps.lastMessageTimestamp\n          : a.chatProps.last_message_timestamp) ?? 0\n      ).getTime()\n  );\n\n  return (\n    <List\n      style={{\n        paddingTop: 0,\n        paddingBottom: 0,\n        borderRadius: \"14px\",\n        border: `${theme.custom.colors.borderFull}`,\n      }}\n    >\n      {requestCount > 0 ? (\n        <RequestsChatItem\n          requestCount={requestCount}\n          isFirst\n          isLast={activeChats?.length === 0}\n        />\n      ) : null}\n      {sortedChats?.map((activeChat, index) => (\n        <ChatListItem\n          toRoot={toRoot}\n          type={activeChat.chatType}\n          image={\n            activeChat.chatType === \"individual\"\n              ? activeChat.chatProps.remoteUserImage!\n              : activeChat.chatProps.image!\n          }\n          userId={\n            activeChat.chatType === \"individual\"\n              ? activeChat.chatProps.remoteUserId!\n              : \"\"\n          }\n          name={\n            activeChat.chatType === \"individual\"\n              ? activeChat.chatProps.remoteUsername!\n              : activeChat.chatProps.name!\n          }\n          id={\n            activeChat.chatType === \"individual\"\n              ? activeChat.chatProps.remoteUserId\n              : activeChat.chatProps.collectionId\n          }\n          message={\n            activeChat.chatType === \"individual\"\n              ? activeChat.chatProps.last_message!\n              : activeChat.chatProps.lastMessage!\n          }\n          timestamp={\n            activeChat.chatType === \"individual\"\n              ? activeChat.chatProps.last_message_timestamp || \"\"\n              : activeChat.chatProps.lastMessageTimestamp || \"\"\n          }\n          isFirst={requestCount === 0 ? index === 0 : false}\n          isLast={index === activeChats?.length - 1}\n          isUnread={\n            activeChat.chatType === \"individual\"\n              ? activeChat.chatProps.unread\n                ? true\n                : false\n              : activeChat.chatProps.lastMessageUuid !==\n                activeChat.chatProps.lastReadMessage\n          }\n        />\n      ))}\n    </List>\n  );\n};\n\nexport function ChatListItem({\n  type,\n  image,\n  name,\n  message,\n  timestamp,\n  isFirst,\n  isLast,\n  id,\n  isUnread,\n  toRoot,\n  userId,\n}: {\n  type: SubscriptionType;\n  image: string;\n  name: string;\n  message: string;\n  timestamp: string;\n  isFirst: boolean;\n  isLast: boolean;\n  id: string;\n  isUnread: boolean;\n  toRoot: boolean;\n  userId: string;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const { props }: any = useDecodedSearchParams();\n  const parts = parseMessage(message || \"\");\n  const pathname = useLocation().pathname;\n  const users: any = useUsersMetadata({\n    remoteUserIds: parts.filter((x) => x.type === \"tag\").map((x) => x.value),\n  });\n  const printText = parts\n    .map((x) => (x.type === \"tag\" ? users[x.value]?.username : x.value))\n    .join(\"\");\n\n  let messagePreview = \"\";\n  if (printText) {\n    messagePreview =\n      printText.length > 25 ? printText.substring(0, 22) + \"...\" : printText;\n  }\n\n  function formatAMPM(date: Date) {\n    let hours = date.getHours();\n    let minutes: string | number = date.getMinutes();\n    let ampm = hours >= 12 ? \"pm\" : \"am\";\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    return hours + \":\" + minutes + \" \" + ampm;\n  }\n\n  return (\n    <ListItem\n      button\n      disableRipple\n      onClick={() => {\n        ParentCommunicationManager.getInstance().push({\n          title: type === \"individual\" ? `@${name}` : name,\n          componentId:\n            type === \"individual\"\n              ? NAV_COMPONENT_MESSAGE_CHAT\n              : NAV_COMPONENT_MESSAGE_GROUP_CHAT,\n          componentProps: {\n            userId: type === \"individual\" ? id : undefined,\n            username: type === \"individual\" ? name : undefined,\n            id: id,\n            fromInbox: true,\n            image,\n          },\n          pushAboveRoot: toRoot,\n        });\n      }}\n      style={{\n        padding: \"10px\",\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        display: \"flex\",\n        height: \"72px\",\n        backgroundColor:\n          (pathname === \"/messages/chat\" && props.userId === id) ||\n          (pathname === \"/messages/groupchat\" && props.id === id)\n            ? theme.custom.colors.bg4\n            : isUnread\n            ? theme.custom.colors.unreadBackground\n            : theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div\n          style={{ flex: 1, display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <div style={{ display: \"flex\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n              }}\n            >\n              <UserIcon\n                onClick={() => {\n                  if (type === \"collection\") {\n                    return;\n                  }\n                  ParentCommunicationManager.getInstance().push({\n                    title: `@${name}`,\n                    componentId: NAV_COMPONENT_MESSAGE_PROFILE,\n                    componentProps: {\n                      userId: id,\n                    },\n\n                    pushAboveRoot: toRoot,\n                  });\n                }}\n                image={image}\n              />\n            </div>\n            <div>\n              <div\n                className={classes.userTextSmall}\n                style={{\n                  display: \"flex\",\n                  fontWeight: isUnread ? 700 : 600,\n                  color: isUnread\n                    ? theme.custom.colors.fontColor\n                    : theme.custom.colors.smallTextColor,\n                }}\n              >\n                <div>{type === \"individual\" ? `@${name}` : name}</div>\n                {id === \"backpack-chat\" ? (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    <VerifiedIcon\n                      style={{\n                        fontSize: 14,\n                        marginLeft: 3,\n                        color: theme.custom.colors.verified,\n                      }}\n                    />\n                  </div>\n                ) : null}\n                {BACKPACK_TEAM.includes(userId) ? <BackpackStaffIcon /> : null}\n              </div>\n              <div\n                className={classes.userTextSmall}\n                style={{\n                  wordBreak: \"break-all\",\n                  fontWeight: 500,\n                  color: isUnread\n                    ? theme.custom.colors.fontColor\n                    : theme.custom.colors.smallTextColor,\n                }}\n              >\n                {messagePreview}\n              </div>\n            </div>\n          </div>\n          <div\n            className={classes.timestamp}\n            style={{\n              textAlign: \"right\",\n              minWidth: \"63px\",\n              fontWeight: isUnread ? 700 : 500,\n              color: isUnread\n                ? theme.custom.colors.fontColor\n                : theme.custom.colors.smallTextColor,\n            }}\n          >\n            {formatAMPM(new Date(timestamp))}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n}\n\nexport function RequestsChatItem({\n  requestCount,\n  isFirst,\n  isLast,\n}: {\n  requestCount: number;\n  isFirst: boolean;\n  isLast: boolean;\n}) {\n  const classes = useStyles();\n  const theme = useCustomTheme();\n\n  return (\n    <ListItem\n      button\n      disableRipple\n      onClick={() => {\n        ParentCommunicationManager.getInstance().push({\n          title: `Requests`,\n          componentId: NAV_COMPONENT_MESSAGE_REQUESTS,\n          componentProps: {},\n          pushAboveRoot: true,\n        });\n      }}\n      style={{\n        padding: \"10px\",\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\",\n        display: \"flex\",\n        height: \"80px\",\n        backgroundColor: theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div\n          style={{ flex: 1, display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <div style={{ display: \"flex\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  width: 40,\n                  height: 40,\n                  padding: 10,\n                  background: theme.custom.colors.background,\n                  borderRadius: 20,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  marginRight: 8,\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    flexDirection: \"column\",\n                  }}\n                >\n                  <MarkChatUnreadIcon\n                    style={{ color: theme.custom.colors.icon, width: 18 }}\n                  />\n                </div>\n              </div>\n            </div>\n            <div>\n              <div\n                className={classes.userTextSmall}\n                style={{ fontWeight: 600 }}\n              >\n                Message requests\n              </div>\n              <div className={classes.userTextSmall}>\n                {requestCount === 1 ? \"1 person\" : `${requestCount} people`} you\n                may know\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n}\n\nfunction UserIcon({ image }: any) {\n  const classes = useStyles();\n  return (\n    <LocalImage\n      size={40}\n      style={{ width: 40, height: 40 }}\n      src={image}\n      className={classes.iconCircularBig}\n    />\n  );\n}\n","import { isFirstLastListItemStyle } from \"@coral-xyz/react-common\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport { List, ListItem, Skeleton } from \"@mui/material\";\n\nexport function MessagesSkeleton() {\n  const theme = useCustomTheme();\n\n  return (\n    <>\n      <List\n        style={{\n          paddingTop: 0,\n          paddingBottom: 0,\n          borderRadius: \"14px\",\n          border: `${theme.custom.colors.borderFull}`,\n        }}\n      >\n        <MessageSkeleton isFirst={true} isLast={false} />\n        <MessageSkeleton isFirst={false} isLast={false} />\n        <MessageSkeleton isFirst={false} isLast={false} />\n        <MessageSkeleton isFirst={false} isLast={true} />\n      </List>\n    </>\n  );\n}\n\nfunction MessageSkeleton({ isFirst, isLast }: any) {\n  const theme = useCustomTheme();\n  return (\n    <ListItem\n      button\n      disableRipple\n      onClick={() => {}}\n      style={{\n        paddingLeft: \"12px\",\n        paddingRight: \"12px\",\n        paddingTop: \"10px\",\n        paddingBottom: \"10px\",\n        display: \"flex\",\n        height: \"68px\",\n        backgroundColor: theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n      }}\n    >\n      <div\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ width: 40 }}>\n          <Skeleton variant=\"circular\" width={40} height={40} />\n        </div>\n        <div style={{ marginLeft: \"5px\", width: \"100%\" }}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Skeleton width=\"40%\" height={20} style={{ marginTop: \"-6px\" }} />\n            <Skeleton width={30} height={20} style={{ marginTop: \"-6px\" }} />\n          </div>\n          <Skeleton width=\"70%\" height={20} style={{ marginTop: \"-6px\" }} />\n        </div>\n      </div>\n    </ListItem>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  BACKEND_API_URL,\n  NAV_COMPONENT_MESSAGE_CHAT,\n  sendFriendRequest,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport {\n  Loading,\n  LocalImage,\n  MessageBubbleIcon,\n  PrimaryButton,\n} from \"@coral-xyz/react-common\";\nimport { useNavigation } from \"@coral-xyz/recoil\";\nimport { useUsersMetadata } from \"@coral-xyz/tamagui\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\nimport ContentCopy from \"@mui/icons-material/ContentCopy\";\nimport LockIcon from \"@mui/icons-material/Lock\";\nimport VerifiedIcon from \"@mui/icons-material/Verified\";\nimport { Button, IconButton, Tooltip } from \"@mui/material\";\n\nimport { ParentCommunicationManager } from \"../ParentCommunicationManager\";\n\nimport { useStyles } from \"./styles\";\n\nasync function getActiveWalletsForUser(\n  username: string\n): Promise<{ blockchain: string; publicKey: string }[]> {\n  const res = await fetch(`${BACKEND_API_URL}/users/${username}`);\n  const json = await res.json();\n  return json.publicKeys;\n}\n\nexport const ProfileScreen = ({ userId }: { userId: string }) => {\n  const [friendship, setFriendship] = useState(false);\n  const [requestSent, setRequestSent] = useState(false);\n  const [user, setUser] = useState<{\n    username?: string;\n    image?: string;\n    id?: string;\n  }>({});\n  const [userWallets, setUserWallets] = useState<\n    { blockchain: string; publicKey: string }[]\n  >([]);\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n  const theme = useCustomTheme();\n  const userMetadata = useUsersMetadata({ remoteUserIds: [userId] });\n  const { push } = useNavigation();\n\n  async function getChatRoom() {\n    const res = await ParentCommunicationManager.getInstance().fetch(\n      `${BACKEND_API_URL}/friends?userId=${userId}`\n    );\n    const json = await res.json();\n    if (json.user) {\n      setFriendship(json.are_friends);\n      setUser(json.user);\n      setRequestSent(json.request_sent);\n    }\n  }\n\n  const send = async (sendRequest: boolean) => {\n    await sendFriendRequest({\n      to: userId,\n      sendRequest,\n    });\n    setRequestSent(sendRequest);\n  };\n\n  useEffect(() => {\n    getChatRoom();\n  }, []);\n\n  useEffect(() => {\n    if (!user.username) {\n      return;\n    }\n\n    getActiveWalletsForUser(user.username)\n      .then(setUserWallets)\n      .catch(console.error)\n      .finally(() => setLoading(false));\n  }, [user.username]);\n\n  if (loading) {\n    return (\n      <div style={{ height: \"100vh\" }}>\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        padding: 16,\n      }}\n    >\n      {userWallets.length > 0 ? (\n        <div\n          style={{\n            flex: 0.5,\n            marginTop: -16,\n            display: \"flex\",\n            justifyContent: \"center\",\n            gap: 8,\n          }}\n        >\n          {userWallets.map((w) => (\n            <PrimaryNetworkWallet\n              key={w.blockchain}\n              blockchain={w.blockchain}\n              publicKey={w.publicKey}\n              title=\"Copy address\"\n            />\n          ))}\n        </div>\n      ) : null}\n      <div>\n        <div className={classes.horizontalCenter}>\n          <div className={classes.topImageOuter}>\n            <LocalImage\n              size={150}\n              className={classes.topImage}\n              src={userMetadata[userId]?.image}\n              style={{ width: 150, height: 150 }}\n            />\n          </div>\n        </div>\n        <br />\n        <div className={classes.horizontalCenter}>\n          <div style={{ marginRight: 25 }}>\n            <IconButton\n              size=\"large\"\n              className={classes.icon}\n              onClick={async () => {\n                push({\n                  title: `@${user.username}`,\n                  componentId: NAV_COMPONENT_MESSAGE_CHAT,\n                  componentProps: {\n                    userId: user.id,\n                    username: user.username,\n                  },\n                });\n              }}\n            >\n              <MessageBubbleIcon\n                style={{ padding: 2, height: 21 }}\n                fill={theme.custom.colors.fontColor}\n              />\n            </IconButton>\n            <div\n              className={classes.smallText}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: 8,\n              }}\n            >\n              Message\n            </div>\n          </div>\n          <div>\n            <IconButton\n              style={{ cursor: \"not-allowed\" }}\n              size=\"large\"\n              className={classes.icon}\n            >\n              <ArrowUpwardIcon\n                style={{ height: 21, color: theme.custom.colors.fontColor }}\n              />\n            </IconButton>\n            <div\n              className={classes.smallText}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                marginTop: 8,\n              }}\n            >\n              Send\n            </div>\n          </div>\n        </div>\n        <br />\n        {friendship ? (\n          <ContactSection\n            icon={<VerifiedIcon style={{ color: theme.custom.colors.icon }} />}\n            title=\"Connected\"\n            subtitle={`You and @${user.username} are mutual friends`}\n          />\n        ) : null}\n        {!friendship && requestSent ? (\n          <ContactSection\n            icon={<LockIcon style={{ color: theme.custom.colors.icon }} />}\n            title=\"Friend pending request\"\n            subtitle=\"You can still send messages and interact\"\n          />\n        ) : null}\n        {!friendship && !requestSent ? (\n          <ContactSection\n            icon={<LockIcon style={{ color: theme.custom.colors.icon }} />}\n            title=\"This is not a friend\"\n            subtitle=\"Only add friends you know and trust\"\n          />\n        ) : null}\n      </div>\n      <div>\n        {!friendship && !requestSent ? (\n          <PrimaryButton\n            label=\"Request to add friend\"\n            onClick={() => send(true)}\n          />\n        ) : null}\n        {!friendship && requestSent ? (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <PrimaryButton\n              label=\"Cancel Pending Request\"\n              style={{ margin: 3 }}\n              onClick={() => send(false)}\n            />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nfunction PrimaryNetworkWallet({\n  blockchain,\n  publicKey,\n  title,\n}: {\n  blockchain: string;\n  publicKey: string;\n  title: string;\n}) {\n  const theme = useCustomTheme();\n  const [open, setOpen] = useState<boolean | undefined>(undefined);\n\n  const icon =\n    blockchain === \"solana\" ? (\n      <img style={{ height: 10 }} src=\"/solana.png\" />\n    ) : blockchain === \"ethereum\" ? (\n      <img style={{ height: 12 }} src=\"/ethereum.png\" />\n    ) : null;\n\n  return (\n    <Tooltip title={open ? \"Copied!\" : title} open={open}>\n      <Button\n        disableElevation\n        disableRipple\n        style={{\n          background: theme.custom.colors.nav,\n          borderRadius: 15,\n          color: theme.custom.colors.fontColor3,\n          fontWeight: 600,\n          fontSize: 12,\n          padding: \"4px 10px\",\n          height: \"fit-content\",\n          textTransform: \"none\",\n        }}\n        onClick={async () => {\n          await navigator.clipboard.writeText(publicKey);\n          setOpen(true);\n          setTimeout(() => setOpen(undefined), 2000);\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            gap: 4,\n          }}\n        >\n          {icon}\n          {walletAddressDisplay(publicKey)}\n          <ContentCopy sx={{ color: theme.custom.colors.icon, fontSize: 14 }} />\n        </div>\n      </Button>\n    </Tooltip>\n  );\n}\n\nfunction ContactSection({\n  icon,\n  title,\n  subtitle,\n}: {\n  icon: any;\n  title: string;\n  subtitle: string;\n}) {\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.horizontalCenter} style={{ marginBottom: 16 }}>\n        <IconButton disabled className={classes.contactIconOuter} size=\"large\">\n          {\" \"}\n          {icon}{\" \"}\n        </IconButton>\n      </div>\n      <div className={classes.horizontalCenter} style={{ marginBottom: 16 }}>\n        <div className={classes.smallTitle}>{title}</div>\n      </div>\n      <div className={classes.horizontalCenter}>\n        <div\n          className={classes.smallSubTitle}\n          style={{ padding: 10, textAlign: \"center\" }}\n        >\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useRequests } from \"@coral-xyz/db\";\nimport { useUser } from \"@coral-xyz/recoil\";\n\nimport { EmptyRequests } from \"./EmptyRequests\";\nimport { MessageList } from \"./MessageList\";\nimport { useStyles } from \"./styles\";\n\nexport const RequestsScreen = () => {\n  const { uuid } = useUser();\n  const activeChats = useRequests(uuid) || [];\n  const classes = useStyles();\n\n  return (\n    <div\n      className={classes.container}\n      style={{ display: \"flex\", flexDirection: \"column\" }}\n    >\n      <div\n        className={classes.smallTitle2}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          margin: 15,\n        }}\n      >\n        These are not from your friends. Click into a message to reply or view\n        their profile.\n      </div>\n      {activeChats.length !== 0 ? <MessageList\n        toRoot={false}\n        activeChats={activeChats.map((x) => ({\n            chatType: \"individual\",\n            chatProps: x,\n          }))}\n        /> : null}\n      {activeChats.length === 0 ? <EmptyRequests /> : null}\n    </div>\n  );\n};\n","import type { CSSProperties, MouseEvent } from \"react\";\nimport type { RemoteUserData } from \"@coral-xyz/common\";\nimport {\n  BACKPACK_TEAM,\n  NAV_COMPONENT_MESSAGE_PROFILE,\n  sendFriendRequest,\n  unFriend,\n  usernameDisplay,\n  walletAddressDisplay,\n} from \"@coral-xyz/common\";\nimport { updateFriendshipIfExists } from \"@coral-xyz/db\";\nimport {\n  BackpackStaffIcon,\n  isFirstLastListItemStyle,\n  LocalImage,\n  UserAction,\n} from \"@coral-xyz/react-common\";\nimport {\n  useNavigation,\n  useUpdateFriendships,\n  useUser,\n} from \"@coral-xyz/recoil\";\nimport { SignalingManager } from \"@coral-xyz/tamagui\";\nimport { useCustomTheme } from \"@coral-xyz/themes\";\nimport VerifiedIcon from \"@mui/icons-material/Verified\";\nimport { List, ListItem } from \"@mui/material\";\n\nimport { useStyles } from \"./styles\";\n\nexport const UserList = ({\n  users,\n  setMembers,\n  style,\n  itemStyle,\n}: {\n  users: RemoteUserData[];\n  setMembers?: React.Dispatch<React.SetStateAction<RemoteUserData[]>>;\n  style?: CSSProperties;\n  itemStyle?: CSSProperties;\n}) => {\n  const theme = useCustomTheme();\n\n  return (\n    <List\n      style={{\n        paddingTop: 0,\n        paddingBottom: 0,\n        borderRadius: \"14px\",\n        border: `${theme.custom.colors.borderFull}`,\n        ...style,\n      }}\n    >\n      {users.map((user, index) => (\n        <UserListItem\n          key={index}\n          user={user}\n          isFirst={index === 0}\n          isLast={index === users.length - 1}\n          setMembers={setMembers}\n          style={itemStyle}\n        />\n      ))}\n    </List>\n  );\n};\n\nfunction UserListItem({\n  user,\n  isFirst,\n  isLast,\n  setMembers,\n  style,\n}: {\n  user: RemoteUserData;\n  isFirst: boolean;\n  isLast: boolean;\n  setMembers?: React.Dispatch<React.SetStateAction<RemoteUserData[]>>;\n  style?: CSSProperties;\n}) {\n  const theme = useCustomTheme();\n  const { push } = useNavigation();\n  const classes = useStyles();\n  const { uuid } = useUser();\n  const setFriendshipValue = useUpdateFriendships();\n\n  const onUnfriend = async (ev: MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    await unFriend({ to: user.id });\n    await updateFriendshipIfExists(uuid, user.id, {\n      areFriends: 0,\n      requested: 0,\n    });\n    setFriendshipValue({\n      userId: user.id,\n      friendshipValue: {\n        requested: false,\n        areFriends: false,\n      },\n    });\n    setMembers?.((members) =>\n      members.map((m) => {\n        if (m.id === user.id) {\n          return {\n            ...m,\n            areFriends: false,\n            requested: false,\n            remoteRequested: false,\n          };\n        }\n        return m;\n      })\n    );\n    SignalingManager.getInstance().onUpdateRecoil({\n      type: \"friendship\",\n    });\n  };\n\n  const onCancelRequest = async (ev: MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    await sendFriendRequest({ to: user.id, sendRequest: false });\n    await updateFriendshipIfExists(uuid, user.id, {\n      requested: 0,\n    });\n\n    setFriendshipValue({\n      userId: user.id,\n      friendshipValue: {\n        requested: false,\n      },\n    });\n    setMembers?.((members) =>\n      members.map((m) => {\n        if (m.id === user.id) {\n          return {\n            ...m,\n            requested: false,\n          };\n        }\n        return m;\n      })\n    );\n    SignalingManager.getInstance().onUpdateRecoil({\n      type: \"friendship\",\n    });\n  };\n\n  const onAccept = async (ev: MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    await sendFriendRequest({ to: user.id, sendRequest: true });\n    await updateFriendshipIfExists(uuid, user.id, {\n      requested: 0,\n      areFriends: 1,\n    });\n\n    setFriendshipValue({\n      userId: user.id,\n      friendshipValue: {\n        requested: false,\n        areFriends: true,\n      },\n    });\n    setMembers?.((members) =>\n      members.map((m) => {\n        if (m.id === user.id) {\n          return {\n            ...m,\n            requested: false,\n            remoteRequested: false,\n            areFriends: true,\n          };\n        }\n        return m;\n      })\n    );\n    SignalingManager.getInstance().onUpdateRecoil({\n      type: \"friendship\",\n    });\n  };\n\n  const onDecline = async (ev: MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    await sendFriendRequest({ to: user.id, sendRequest: false });\n    await updateFriendshipIfExists(uuid, user.id, {\n      requested: 0,\n      areFriends: 0,\n      remoteRequested: 0,\n    });\n\n    setFriendshipValue({\n      userId: user.id,\n      friendshipValue: {\n        requested: false,\n        areFriends: false,\n        remoteRequested: false,\n      },\n    });\n    setMembers?.((members) =>\n      members.map((m) => {\n        if (m.id === user.id) {\n          return {\n            ...m,\n            requested: false,\n            remoteRequested: false,\n            areFriends: false,\n          };\n        }\n        return m;\n      })\n    );\n    SignalingManager.getInstance().onUpdateRecoil({\n      type: \"friendship\",\n    });\n  };\n\n  const onSendRequest = async (ev: MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    await sendFriendRequest({ to: user.id, sendRequest: true });\n    await updateFriendshipIfExists(uuid, user.id, {\n      requested: 1,\n    });\n\n    setFriendshipValue({\n      userId: user.id,\n      friendshipValue: {\n        requested: true,\n      },\n    });\n    setMembers?.((members) =>\n      members.map((m) => {\n        if (m.id === user.id) {\n          return {\n            ...m,\n            requested: true,\n          };\n        }\n        return m;\n      })\n    );\n    SignalingManager.getInstance().onUpdateRecoil({\n      type: \"friendship\",\n    });\n  };\n\n  return (\n    <ListItem\n      button\n      disableRipple\n      onClick={() => {\n        push({\n          title: `@${user.username}`,\n          componentId: NAV_COMPONENT_MESSAGE_PROFILE,\n          componentProps: {\n            userId: user.id,\n          },\n        });\n      }}\n      style={{\n        paddingLeft: \"12px\",\n        paddingRight: \"12px\",\n        paddingTop: \"8px\",\n        paddingBottom: \"8px\",\n        display: \"flex\",\n        height: \"48px\",\n        backgroundColor: theme.custom.colors.nav,\n        borderBottom: isLast\n          ? undefined\n          : `solid 1pt ${theme.custom.colors.border}`,\n        ...isFirstLastListItemStyle(isFirst, isLast, 12),\n        ...style,\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div\n          style={{\n            flex: 1,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          <div style={{ display: \"flex\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n              }}\n            >\n              <UserIcon image={user.image} />\n            </div>\n            <div className={classes.userText} style={{ display: \"flex\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                {usernameDisplay(user.username, 15)}{\" \"}\n                {user.searchedSolPubKey ? (\n                  <> ({walletAddressDisplay(user.searchedSolPubKey, 2)})</>\n                ) : (\n                  \"\"\n                )}{\" \"}\n                {user.searchedEthPubKey ? (\n                  <>({walletAddressDisplay(user.searchedEthPubKey, 2)})</>\n                ) : (\n                  \"\"\n                )}\n              </div>\n              {BACKPACK_TEAM.includes(user.id) ? <BackpackStaffIcon /> : null}\n            </div>\n          </div>\n          <div>\n            {user.areFriends ? (\n              <UserAction text=\"Unfriend\" onClick={onUnfriend} />\n            ) : user.requested ? (\n              <UserAction text=\"Cancel Request\" onClick={onCancelRequest} />\n            ) : user.remoteRequested ? (\n              <div style={{ display: \"flex\", gap: 12 }}>\n                <UserAction text=\"Decline\" onClick={onDecline} />\n                <UserAction\n                  style={{ color: theme.custom.colors.blue }}\n                  text=\"Accept\"\n                  onClick={onAccept}\n                />\n              </div>\n            ) : (\n              <UserAction text=\"Send Request\" onClick={onSendRequest} />\n            )}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n}\n\nfunction UserIcon({ image }: any) {\n  const classes = useStyles();\n  return (\n    <LocalImage\n      size={32}\n      src={image}\n      className={classes.iconCircular}\n      style={{ width: 32, height: 32 }}\n    />\n  );\n}\n","export * from \"./ChatScreen\";\nexport * from \"./Inbox\";\nexport * from \"./ProfileScreen\";\nexport * from \"./RequestsScreen\";\nexport * from \"./UserList\";\n","import { styles } from \"@coral-xyz/themes\";\n\nexport const useStyles = styles((theme) => ({\n  searchField: {\n    marginTop: \"0px\",\n    marginBottom: \"16px\",\n    width: \"inherit\",\n    display: \"flex\",\n    \"& .MuiOutlinedInput-root\": {\n      \"& input\": {\n        paddingTop: 0,\n        paddingBottom: 0,\n      },\n      \"& fieldset\": {\n        border: `${theme.custom.colors.borderFull} !important`,\n      },\n    },\n  },\n  icon: {\n    background: theme.custom.colors.textBackground,\n  },\n  iconInner: {\n    background: theme.custom.colors.fontColor,\n  },\n  topImageOuter: {\n    width: 150,\n    height: 150,\n    border: `solid 3px ${theme.custom.colors.avatarIconBackground}`,\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n    overflow: \"hidden\",\n  },\n  topImage: {\n    width: 150,\n  },\n  horizontalCenter: {\n    display: \"flex\",\n    justifyContent: \"center\",\n  },\n  container: {\n    marginLeft: \"16px\",\n    marginRight: \"16px\",\n    height: \"100%\",\n  },\n  roundBtn: {\n    marginLeft: 8,\n    borderRadius: 20,\n    width: 20,\n    height: 20,\n    cursor: \"pointer\",\n    background: \"#FFFFFF\",\n    border: \"2px solid #F0F0F2\",\n    fontSize: 10,\n  },\n  add: {\n    width: 17,\n    paddingBottom: 6,\n    paddingRight: 1,\n  },\n  iconCircular: {\n    width: \"32px\",\n    height: \"32px\",\n    borderRadius: \"50%\",\n    marginRight: \"8px\",\n    color: theme.custom.colors.positive,\n  },\n  iconCircularBig: {\n    width: \"40px\",\n    height: \"40px\",\n    borderRadius: \"20px\",\n    marginRight: \"8px\",\n    color: theme.custom.colors.positive,\n  },\n  hoverParent: {\n    \"&:hover $hoverChild, & .Mui-focused $hoverChild\": {\n      visibility: \"visible\",\n    },\n  },\n  hoverChild: {\n    visibility: \"hidden\",\n  },\n  text: {\n    color: theme.custom.colors.fontColor2,\n  },\n  smallText: {\n    fontSize: 12,\n    color: theme.custom.colors.fontColor2,\n  },\n  userText: {\n    fontSize: 16,\n    marginTop: 4,\n    color: theme.custom.colors.fontColor2,\n  },\n  userTextSmall: {\n    fontSize: 14,\n    color: theme.custom.colors.fontColor2,\n  },\n  userRequestText: {\n    color: theme.custom.colors.textPlaceholder,\n  },\n  timestamp: {\n    fontSize: 14,\n    color: theme.custom.colors.fontColor2,\n  },\n  smallTitle: {\n    color: theme.custom.colors.smallTextColor,\n    fontWeight: 600,\n  },\n  smallTitle2: {\n    color: theme.custom.colors.smallTextColor,\n    fontWeight: 500,\n    fontSize: 16,\n  },\n  smallSubTitle: {\n    color: theme.custom.colors.smallTextColor,\n    fontWeight: 500,\n  },\n  contactIconOuter: {\n    \"&:disabled\": {\n      background: theme.custom.colors.textBorder,\n    },\n  },\n}));\n","export const IFRAME_HOSTED = process.env.REACT_APP_IFRAME_HOSTED || false;\n","export * from \"./components\";\nexport { ParentCommunicationManager } from \"./ParentCommunicationManager\";\n","import { Suspense, useEffect } from \"react\";\nimport { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { RecoilSync } from \"@coral-xyz/db\";\nimport {\n  friendships,\n  groupCollections,\n  recentNotifications,\n  requestCount,\n  roomChats,\n  unreadCount,\n  useAuthenticatedUser,\n  useRecentNotifications,\n  useUpdateUsers\n} from \"@coral-xyz/recoil\";\nimport { useRecoilCallback, useSetRecoilState } from \"recoil\";\nimport { getAuthHeader } from \"./getAuthHeader\";\nimport {\n  BackgroundChatsSync,\n  refreshGroupsAndFriendships,\n  SignalingManager\n} from \"./\";\nconst AuthenticatedSync = () => {\n  const authenticatedUser = useAuthenticatedUser();\n  if (authenticatedUser) {\n    return <>\n      <ChatSync uuid={authenticatedUser.uuid} jwt={authenticatedUser.jwt} />\n      <DbRecoilSync uuid={authenticatedUser.uuid} />\n    </>;\n  }\n  return null;\n};\nconst ChatSync = ({ uuid, jwt }) => {\n  useEffect(() => {\n    (async () => {\n      await Promise.all([\n        refreshGroupsAndFriendships(uuid, jwt).then(\n          async () => await BackgroundChatsSync.getInstance().updateUuid(uuid)\n        ),\n        SignalingManager.getInstance().updateUuid(uuid, jwt)\n      ]);\n    })();\n  }, [uuid, jwt]);\n  return null;\n};\nconst DbRecoilSync = ({ uuid }) => {\n  const updateChats = useUpdateChats();\n  const updateNotifications = useUpdateNotifications();\n  const updateUsers = useUpdateUsers();\n  const authenticatedUser = useAuthenticatedUser();\n  const setFriendshipsValue = useSetRecoilState(friendships({ uuid }));\n  const setRequestCountValue = useSetRecoilState(requestCount({ uuid }));\n  const setGroupCollectionsValue = useSetRecoilState(\n    groupCollections({ uuid })\n  );\n  const setUnreadCount = useSetRecoilState(unreadCount);\n  const updateUnread = async () => {\n    const response = await fetch(\n      `${BACKEND_API_URL}/notifications/unreadCount`,\n      {\n        method: \"GET\",\n        headers: {\n          ...getAuthHeader(authenticatedUser == null ? void 0 : authenticatedUser.jwt)\n        }\n      }\n    );\n    try {\n      const json = await response.json();\n      setUnreadCount(json.unreadCount || 0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  const getGroupedRooms = (chats) => {\n    const roomMap = {};\n    chats.forEach((chat) => {\n      var _a, _b;\n      const room = chat.room;\n      if (!roomMap[room]) {\n        roomMap[room] = {\n          room: chat.room,\n          type: chat.type,\n          messages: [chat]\n        };\n      } else {\n        (_b = (_a = roomMap[room]) == null ? void 0 : _a.messages) == null ? void 0 : _b.push(chat);\n      }\n    });\n    return Object.keys(roomMap).map((roomId) => ({\n      room: roomMap[roomId].room,\n      type: roomMap[roomId].type,\n      messages: roomMap[roomId].messages\n    }));\n  };\n  const sync = async (uuid2) => {\n    const activeChats = await RecoilSync.getInstance().getActiveChats(uuid2);\n    setFriendshipsValue(activeChats);\n    const activeGroups = await RecoilSync.getInstance().getActiveGroups(uuid2);\n    setGroupCollectionsValue(activeGroups);\n    const requestCount2 = await RecoilSync.getInstance().getRequestCount(uuid2);\n    setRequestCountValue(requestCount2);\n    const allMessages = await RecoilSync.getInstance().getAllChats(uuid2);\n    const groups = getGroupedRooms(allMessages);\n    groups.forEach((group) => {\n      updateChats({\n        uuid: uuid2,\n        room: group.room,\n        type: group.type,\n        chats: group.messages\n      });\n    });\n    const users = await RecoilSync.getInstance().getAllUsers(uuid2);\n    const usersMap = {};\n    users.forEach((user) => usersMap[user.uuid] = user);\n    updateUsers({ users: usersMap, uuid: uuid2 });\n    RecoilSync.getInstance().refreshUsersMetadata(uuid2);\n    updateUnread();\n  };\n  useEffect(() => {\n    (async () => {\n      await sync(uuid);\n    })();\n  }, [uuid]);\n  useEffect(() => {\n    SignalingManager.getInstance().onUpdateRecoil = async (props) => {\n      switch (props.type) {\n        case \"friendship\":\n          const activeChats = await RecoilSync.getInstance().getActiveChats(\n            uuid\n          );\n          setFriendshipsValue(activeChats);\n          break;\n        case \"collection\":\n          const activeGroups = await RecoilSync.getInstance().getActiveGroups(\n            uuid\n          );\n          setGroupCollectionsValue(activeGroups);\n          break;\n        case \"chat\":\n          updateChats({\n            uuid: props.payload.uuid,\n            room: props.payload.room,\n            type: props.payload.type,\n            chats: props.payload.chats,\n            clear: props.payload.clear\n          });\n          break;\n        case \"add-notifications\":\n          setUnreadCount((x) => x + 1);\n          updateNotifications({\n            uuid: props.payload.uuid,\n            notificationPayload: props.payload\n          });\n      }\n    };\n  }, [uuid]);\n  return <Suspense fallback={null}><NotificationsWrapper uuid={uuid} /></Suspense>;\n};\nfunction NotificationsWrapper({ uuid }) {\n  const _notifications = useRecentNotifications({\n    limit: 50,\n    offset: 0,\n    uuid\n  });\n  return null;\n}\nconst useUpdateNotifications = () => useRecoilCallback(\n  ({ set, snapshot }) => async ({\n    uuid,\n    notificationPayload\n  }) => {\n    const currentNotifications = snapshot.getLoadable(\n      recentNotifications({\n        limit: 50,\n        offset: 0,\n        uuid\n      })\n    );\n    set(recentNotifications({ limit: 50, offset: 0, uuid }), [\n      {\n        ...notificationPayload,\n        timestamp: new Date(notificationPayload.timestamp).getTime()\n      },\n      ...currentNotifications.valueMaybe() ?? []\n    ]);\n  }\n);\nconst useUpdateChats = () => useRecoilCallback(\n  ({ set, snapshot }) => async ({\n    uuid,\n    room,\n    type,\n    chats,\n    clear\n  }) => {\n    const currentChats = snapshot.getLoadable(\n      roomChats({ uuid, room, type })\n    );\n    const allChats = merge(clear ? [] : currentChats.valueMaybe(), chats);\n    set(roomChats({ uuid, room, type }), allChats);\n  }\n);\nconst merge = (originalChats, updatedChats) => {\n  if (!originalChats) {\n    return updatedChats.sort((a, b) => a.created_at < b.created_at ? -1 : 1);\n  }\n  const chatMapping = {};\n  originalChats.forEach(\n    (chat) => chatMapping[chat.client_generated_uuid] = chat\n  );\n  updatedChats.forEach(\n    (chat) => chatMapping[chat.client_generated_uuid] = chat\n  );\n  return Object.keys(chatMapping).map((client_generated_uuid) => chatMapping[client_generated_uuid]).sort((a, b) => a.created_at < b.created_at ? -1 : 1);\n};\nexport {\n  AuthenticatedSync,\n  ChatSync,\n  DbRecoilSync,\n  useUpdateChats,\n  useUpdateNotifications\n};\n//# sourceMappingURL=AuthenticatedSync.js.map\n","import { latestReceivedMessage, RecoilSync } from \"@coral-xyz/db\";\nimport { refreshChatsFor } from \"./refreshChatsFor\";\nclass BackgroundChatsSync {\n  constructor() {\n  }\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new BackgroundChatsSync();\n    }\n    return this.instance;\n  }\n  async updateUuid(uuid) {\n    const activeChats = await RecoilSync.getInstance().getActiveChats(uuid);\n    const activeGroups = await RecoilSync.getInstance().getActiveGroups(uuid);\n    activeChats.forEach(async (activeChat) => {\n      const lastMessage = await latestReceivedMessage(\n        uuid,\n        activeChat.friendshipId.toString(),\n        \"individual\"\n      );\n      if (activeChat.last_message_client_uuid !== (lastMessage == null ? void 0 : lastMessage.client_generated_uuid)) {\n        refreshChatsFor(uuid, activeChat.friendshipId.toString(), \"individual\");\n      }\n    });\n    activeGroups.forEach(async (activeChat) => {\n      const lastMessage = await latestReceivedMessage(\n        uuid,\n        activeChat.collectionId,\n        \"collection\"\n      );\n      if (activeChat.lastMessageUuid !== (lastMessage == null ? void 0 : lastMessage.client_generated_uuid)) {\n        refreshChatsFor(uuid, activeChat.collectionId, \"collection\", \"\", \"\");\n      }\n    });\n  }\n}\nexport {\n  BackgroundChatsSync\n};\n//# sourceMappingURL=BackgroundChatsSync.js.map\n","import {\n  CHAT_MESSAGES,\n  DELETE_MESSAGE,\n  EXECUTE_BARTER,\n  NOTIFICATION_ADD,\n  REALTIME_WS_URL,\n  UPDATE_ACTIVE_BARTER,\n  WS_READY\n} from \"@coral-xyz/common\";\nimport EventEmitter from \"eventemitter3\";\nconst SIGNALING_CONNECTED = \"SIGNALING_CONNECTED\";\nconst RECONNECTING = \"RECONNECTING\";\nclass Signaling extends EventEmitter {\n  constructor(uuid, jwt) {\n    super();\n    this.destroyed = false;\n    this.bufferedMessages = [];\n    this.state = \"disconnected\";\n    this.uuid = uuid;\n    this.jwt = jwt;\n    this.initWs();\n  }\n  async initWs() {\n    try {\n      const ws = new WebSocket(`${REALTIME_WS_URL}?jwt=${this.jwt}`);\n      ws.addEventListener(\"open\", () => {\n        this.state = \"connected\";\n        this.bufferedMessages.forEach((x) => this.send(x));\n        this.bufferedMessages = [];\n      });\n      ws.addEventListener(\"message\", (event) => {\n        this.handleMessage(event.data);\n      });\n      ws.addEventListener(\"close\", () => {\n        this.state = \"disconnected\";\n        if (!this.destroyed) {\n          this.emit(RECONNECTING);\n          setTimeout(() => {\n            if (!this.destroyed) {\n              this.initWs();\n            }\n          }, 3e3);\n        }\n      });\n      this.ws = ws;\n    } catch (e) {\n      console.error(\"Error while creating ws connection\");\n      console.error(e);\n    }\n  }\n  handleMessage(data) {\n    try {\n      const message = JSON.parse(data);\n      switch (message.type) {\n        case CHAT_MESSAGES:\n          this.emit(CHAT_MESSAGES, message.payload);\n          break;\n        case UPDATE_ACTIVE_BARTER:\n          this.emit(UPDATE_ACTIVE_BARTER, message.payload);\n          break;\n        case EXECUTE_BARTER:\n          this.emit(EXECUTE_BARTER, message.payload);\n          break;\n        case WS_READY:\n          this.emit(SIGNALING_CONNECTED);\n          break;\n        case NOTIFICATION_ADD:\n          this.emit(NOTIFICATION_ADD, message.payload);\n          break;\n        case DELETE_MESSAGE:\n          this.emit(DELETE_MESSAGE, message.payload);\n          break;\n        default:\n          console.error(`Invalid type of message found ${data}`);\n      }\n    } catch (e) {\n      console.log(`Could not handle data from server ${data}, error: ${e}`);\n    }\n  }\n  destroy() {\n    var _a;\n    this.destroyed = true;\n    (_a = this.ws) == null ? void 0 : _a.close();\n  }\n  send(message) {\n    if (this.state === \"disconnected\") {\n      this.bufferedMessages.push(message);\n      return;\n    }\n    this.ws.send(\n      JSON.stringify({\n        ...message\n      })\n    );\n  }\n}\nexport {\n  RECONNECTING,\n  SIGNALING_CONNECTED,\n  Signaling\n};\n//# sourceMappingURL=Signaling.js.map\n","import {\n  CHAT_MESSAGES,\n  DELETE_MESSAGE,\n  EXECUTE_BARTER,\n  NOTIFICATION_ADD,\n  SUBSCRIBE,\n  UPDATE_ACTIVE_BARTER,\n  WS_READY\n} from \"@coral-xyz/common\";\nimport {\n  bulkAddChats,\n  createDefaultFriendship,\n  createOrUpdateCollection,\n  deleteChat,\n  getFriendshipByRoom,\n  updateFriendship,\n  updateLastRead\n} from \"@coral-xyz/db\";\nimport { getSanitizedTitle } from \"./getSanitizedTitle\";\nimport { RECONNECTING, Signaling } from \"./Signaling\";\nconst DEBOUNCE_INTERVAL_MS = 500;\nclass SignalingManager {\n  constructor() {\n    this.uuid = \"\";\n    this.onUpdateRecoil = (props) => {\n    };\n    this.postSubscribes = /* @__PURE__ */ new Set();\n  }\n  onBarterUpdate(updatedParams) {\n  }\n  onBarterExecute(props) {\n  }\n  updateUuid(uuid, jwt) {\n    var _a;\n    (_a = this.signaling) == null ? void 0 : _a.destroy();\n    this.signaling = new Signaling(uuid, jwt);\n    this.uuid = uuid;\n    this.initHandlers();\n    this.updateLastReadTimeout = {};\n  }\n  initHandlers() {\n    var _a, _b, _c, _d, _e, _f, _g;\n    (_a = this.signaling) == null ? void 0 : _a.on(\n      CHAT_MESSAGES,\n      async (payload) => {\n        if (payload.messages && payload.messages[0]) {\n          this.onUpdateRecoil({\n            type: \"chat\",\n            payload: {\n              room: payload.messages[0].room,\n              type: payload.messages[0].type,\n              uuid: this.uuid,\n              chats: payload.messages.map((chat) => ({\n                ...chat,\n                direction: this.uuid === chat.uuid ? \"send\" : \"recv\",\n                received: true,\n                from_http_server: 0\n              }))\n            }\n          });\n        }\n        await bulkAddChats(\n          this.uuid,\n          payload.messages.map((chat) => ({\n            ...chat,\n            direction: this.uuid === chat.uuid ? \"send\" : \"recv\",\n            received: true,\n            from_http_server: 0\n          }))\n        );\n        for (const message of payload.messages) {\n          if (message.type === \"individual\") {\n            const friendship = await getFriendshipByRoom(\n              this.uuid,\n              parseInt(message.room)\n            );\n            if (friendship == null ? void 0 : friendship.remoteUserId) {\n              await updateFriendship(this.uuid, friendship == null ? void 0 : friendship.remoteUserId, {\n                last_message_sender: message.uuid,\n                last_message: getSanitizedTitle(message),\n                last_message_timestamp: (/* @__PURE__ */ new Date()).toISOString(),\n                unread: message.uuid === this.uuid ? 0 : 1,\n                remoteInteracted: 1\n              });\n              this.onUpdateRecoil({\n                type: \"friendship\"\n              });\n            } else {\n              if (message.uuid !== this.uuid) {\n                await createDefaultFriendship(\n                  this.uuid,\n                  message.uuid,\n                  {\n                    last_message_sender: message.uuid,\n                    last_message_timestamp: (/* @__PURE__ */ new Date()).toISOString(),\n                    last_message: getSanitizedTitle(message),\n                    last_message_client_uuid: message.uuid\n                  },\n                  {\n                    remoteInteracted: 1\n                  }\n                );\n              }\n              this.onUpdateRecoil({\n                type: \"friendship\"\n              });\n            }\n          } else {\n            await createOrUpdateCollection(this.uuid, {\n              collectionId: message.room,\n              lastMessage: message.message,\n              lastMessageUuid: message.client_generated_uuid,\n              lastMessageTimestamp: (/* @__PURE__ */ new Date()).toISOString()\n            });\n            this.onUpdateRecoil({\n              type: \"collection\"\n            });\n          }\n        }\n      }\n    );\n    (_b = this.signaling) == null ? void 0 : _b.on(NOTIFICATION_ADD, (payload) => {\n      this.onUpdateRecoil({\n        type: \"add-notifications\",\n        payload\n      });\n    });\n    (_c = this.signaling) == null ? void 0 : _c.on(UPDATE_ACTIVE_BARTER, (payload) => {\n      this.onBarterUpdate(payload);\n    });\n    (_d = this.signaling) == null ? void 0 : _d.on(EXECUTE_BARTER, (payload) => {\n      this.onBarterExecute(payload);\n    });\n    (_e = this.signaling) == null ? void 0 : _e.on(\n      DELETE_MESSAGE,\n      async (payload) => {\n        const updatedChat = await deleteChat(\n          this.uuid,\n          payload.client_generated_uuid\n        );\n        if (updatedChat) {\n          this.onUpdateRecoil({\n            type: \"chat\",\n            payload: {\n              room: payload.room,\n              type: payload.type,\n              uuid: this.uuid,\n              chats: [updatedChat]\n            }\n          });\n        }\n      }\n    );\n    (_f = this.signaling) == null ? void 0 : _f.on(WS_READY, () => {\n      this.postSubscribes.forEach(({ room, type, mint, publicKey }) => {\n        this.send({\n          type: SUBSCRIBE,\n          payload: {\n            room,\n            type,\n            mint,\n            publicKey\n          }\n        });\n      });\n    });\n    (_g = this.signaling) == null ? void 0 : _g.on(RECONNECTING, () => {\n    });\n  }\n  debouncedUpdateLastRead(latestMessage, publicKey, mint) {\n    if (latestMessage) {\n      if (this.updateLastReadTimeout[latestMessage.room]) {\n        window.clearTimeout(this.updateLastReadTimeout[latestMessage.room]);\n      }\n      this.updateLastReadTimeout[latestMessage.room] = window.setTimeout(\n        async () => {\n          await updateLastRead(\n            this.uuid,\n            latestMessage.client_generated_uuid,\n            latestMessage.room,\n            latestMessage.type,\n            latestMessage.uuid,\n            publicKey,\n            mint\n          );\n          if (latestMessage.type === \"collection\") {\n            this.onUpdateRecoil({\n              type: \"collection\"\n            });\n          } else {\n            this.onUpdateRecoil({\n              type: \"friendship\"\n            });\n          }\n        },\n        DEBOUNCE_INTERVAL_MS\n      );\n    }\n  }\n  static getInstance() {\n    if (!this.instance) {\n      this.instance = new SignalingManager();\n    }\n    return this.instance;\n  }\n  async send(message) {\n    var _a;\n    (_a = this.signaling) == null ? void 0 : _a.send(message);\n    if (message.type === CHAT_MESSAGES) {\n      this.onUpdateRecoil({\n        type: \"chat\",\n        payload: {\n          room: message.payload.room,\n          type: message.payload.type,\n          uuid: this.uuid,\n          chats: message.payload.messages.map((m) => ({\n            ...m,\n            direction: \"send\",\n            from_http_server: 0,\n            created_at: (/* @__PURE__ */ new Date()).getTime().toString(),\n            uuid: this.uuid,\n            room: message.payload.room,\n            type: message.payload.type\n          }))\n        }\n      });\n      bulkAddChats(\n        this.uuid,\n        message.payload.messages.map((m) => ({\n          ...m,\n          direction: \"send\",\n          from_http_server: 0,\n          created_at: (/* @__PURE__ */ new Date()).getTime().toString(),\n          uuid: this.uuid,\n          room: message.payload.room,\n          type: message.payload.type\n        }))\n      );\n      message.payload.messages.forEach(async (m) => {\n        if (message.payload.type === \"individual\") {\n          const friendship = await getFriendshipByRoom(\n            this.uuid,\n            parseInt(message.payload.room)\n          );\n          if (friendship == null ? void 0 : friendship.remoteUserId) {\n            await updateFriendship(this.uuid, friendship == null ? void 0 : friendship.remoteUserId, {\n              last_message_sender: this.uuid,\n              last_message: getSanitizedTitle(m),\n              last_message_timestamp: (/* @__PURE__ */ new Date()).toISOString(),\n              unread: 0\n            });\n            this.onUpdateRecoil({\n              type: \"friendship\"\n            });\n          }\n        } else {\n          createOrUpdateCollection(this.uuid, {\n            collectionId: message.payload.room,\n            lastReadMessage: m.client_generated_uuid,\n            lastMessageUuid: m.client_generated_uuid,\n            lastMessage: getSanitizedTitle(m),\n            lastMessageTimestamp: (/* @__PURE__ */ new Date()).toISOString()\n          });\n        }\n      });\n    }\n    if (message.type === SUBSCRIBE) {\n      this.postSubscribes.add({\n        room: message.payload.room,\n        type: message.payload.type,\n        mint: message.payload.mint || \"\",\n        publicKey: message.payload.publicKey || \"\"\n      });\n    }\n    if (message.type === DELETE_MESSAGE) {\n      const updatedChat = await deleteChat(\n        this.uuid,\n        message.payload.client_generated_uuid\n      );\n      if (updatedChat) {\n        this.onUpdateRecoil({\n          type: \"chat\",\n          payload: {\n            room: message.payload.room,\n            type: message.payload.type,\n            uuid: this.uuid,\n            chats: [updatedChat]\n          }\n        });\n      }\n    }\n  }\n}\nexport {\n  SignalingManager\n};\n//# sourceMappingURL=SignalingManager.js.map\n","import { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { bulkAddChats, oldestReceivedMessage } from \"@coral-xyz/db\";\nimport { getAuthHeader } from \"./getAuthHeader\";\nimport { SignalingManager } from \"./SignalingManager\";\nasync function makeBackendApiRequest(endpoint, options) {\n  return fetch(`${BACKEND_API_URL}/${endpoint}`, {\n    ...options,\n    method: options.method || \"GET\",\n    headers: {\n      ...getAuthHeader(options.jwt)\n    }\n  }).then((res) => res.json());\n}\nconst fetchMoreChatsFor = async (uuid, room, type, nftMint, publicKey, jwt) => {\n  const oldestMessage = await oldestReceivedMessage(uuid, room, type);\n  const timestampBefore = (oldestMessage == null ? void 0 : oldestMessage.created_at) && !isNaN(parseInt(oldestMessage == null ? void 0 : oldestMessage.created_at)) ? oldestMessage == null ? void 0 : oldestMessage.created_at : (/* @__PURE__ */ new Date()).getTime();\n  const params = [\n    `room=${room}`,\n    `type=${type}`,\n    `limit=40`,\n    `timestampBefore=${timestampBefore}`,\n    `mint=${nftMint}`,\n    `publicKey=${publicKey}`\n  ];\n  const qs = params.join(\"&\");\n  try {\n    const json = await makeBackendApiRequest(`chat?${qs}`, {\n      method: \"GET\",\n      jwt\n    });\n    const chats = json.chats;\n    SignalingManager.getInstance().onUpdateRecoil({\n      type: \"chat\",\n      payload: {\n        uuid,\n        room,\n        type,\n        chats: chats.map((chat) => ({\n          ...chat,\n          direction: uuid === chat.uuid ? \"send\" : \"recv\",\n          received: true,\n          from_http_server: 1\n        }))\n      }\n    });\n    await bulkAddChats(\n      uuid,\n      chats.map((chat) => ({\n        ...chat,\n        direction: uuid === chat.uuid ? \"send\" : \"recv\",\n        received: true,\n        from_http_server: 1\n      }))\n    );\n  } catch (e) {\n    console.log(\"Error found :(\");\n    console.log(JSON.stringify(e));\n  }\n};\nexport {\n  fetchMoreChatsFor\n};\n//# sourceMappingURL=fetchMoreChatsFor.js.map\n","const getAuthHeader = (jwt) => {\n  if (jwt) {\n    return {\n      Authorization: `Bearer ${jwt}`\n    };\n  }\n  return {};\n};\nexport {\n  getAuthHeader\n};\n//# sourceMappingURL=getAuthHeader.js.map\n","const getSanitizedTitle = (message) => {\n  return message.message_kind === \"gif\" ? \"GIF\" : message.message_kind === \"secure-transfer\" ? \"Secure Transfer\" : message.message_kind === \"media\" ? \"Media\" : message.message;\n};\nexport {\n  getSanitizedTitle\n};\n//# sourceMappingURL=getSanitizedTitle.js.map\n","import { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport {\n  bulkAddChats,\n  clearChats,\n  latestReceivedMessage,\n  resetUpdateTimestamp\n} from \"@coral-xyz/db\";\nimport { getAuthHeader } from \"./getAuthHeader\";\nimport { SignalingManager } from \"./SignalingManager\";\nconst refreshChatsFor = async (uuid, room, type, nftMint, publicKey, jwt) => {\n  const lastMessage = await latestReceivedMessage(uuid, room, type);\n  const response = await fetch(\n    `${BACKEND_API_URL}/chat?room=${room}&type=${type}&limit=40&timestampAfter=${(lastMessage == null ? void 0 : lastMessage.created_at) && !isNaN(new Date(parseInt(lastMessage == null ? void 0 : lastMessage.created_at)).getTime()) ? new Date(parseInt(lastMessage == null ? void 0 : lastMessage.created_at)).getTime() : 0}&mint=${nftMint}&publicKey=${publicKey}`,\n    {\n      method: \"GET\",\n      headers: {\n        ...getAuthHeader(jwt)\n      }\n    }\n  );\n  const json = await response.json();\n  const chats = (json == null ? void 0 : json.chats) || [];\n  if (chats.length >= 40) {\n    await resetUpdateTimestamp(uuid, room);\n  }\n  if (chats.length >= 40) {\n    SignalingManager.getInstance().onUpdateRecoil({\n      type: \"chat\",\n      payload: {\n        uuid,\n        type,\n        room,\n        clear: true,\n        chats: chats.map((chat) => ({\n          ...chat,\n          direction: uuid === chat.uuid ? \"send\" : \"recv\",\n          received: true,\n          from_http_server: 1\n        }))\n      }\n    });\n  } else {\n    SignalingManager.getInstance().onUpdateRecoil({\n      type: \"chat\",\n      payload: {\n        uuid,\n        type,\n        room,\n        chats: chats.map((chat) => ({\n          ...chat,\n          direction: uuid === chat.uuid ? \"send\" : \"recv\",\n          received: true,\n          from_http_server: 1\n        }))\n      }\n    });\n  }\n  if (chats.length >= 40) {\n    await clearChats(uuid, room, type);\n  }\n  await bulkAddChats(\n    uuid,\n    chats.map((chat) => ({\n      ...chat,\n      direction: uuid === chat.uuid ? \"send\" : \"recv\",\n      received: true,\n      from_http_server: 1\n    }))\n  );\n};\nexport {\n  refreshChatsFor\n};\n//# sourceMappingURL=refreshChatsFor.js.map\n","import { refreshFriendships, refreshGroups } from \"@coral-xyz/db\";\nimport { SignalingManager } from \"./SignalingManager\";\nconst refreshGroupsAndFriendships = async (uuid, jwt) => {\n  try {\n    await Promise.all([\n      refreshFriendships(uuid, jwt),\n      refreshGroups(uuid, jwt)\n    ]);\n  } catch (e) {\n    console.error(\"Error while refreshing friendships and groups\");\n    console.error(e);\n  }\n  SignalingManager.getInstance().onUpdateRecoil({\n    type: \"friendship\"\n  });\n  SignalingManager.getInstance().onUpdateRecoil({\n    type: \"collection\"\n  });\n};\nexport {\n  refreshGroupsAndFriendships\n};\n//# sourceMappingURL=refreshGroupsAndFriendships.js.map\n","import { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport { bulkAddChats, latestReceivedMessage } from \"@coral-xyz/db\";\nimport { getAuthHeader } from \"./getAuthHeader\";\nimport { SignalingManager } from \"./SignalingManager\";\nconst refreshIndividualChatsFor = async (uuid, room, type, clientGeneratedUuid, nftMint, publicKey, jwt) => {\n  const lastMessage = await latestReceivedMessage(uuid, room, type);\n  const response = await fetch(\n    `${BACKEND_API_URL}/chat?room=${room}&type=${type}&limit=40&timestampAfter=${(lastMessage == null ? void 0 : lastMessage.created_at) && !isNaN(new Date(parseInt(lastMessage == null ? void 0 : lastMessage.created_at)).getTime()) ? new Date(parseInt(lastMessage == null ? void 0 : lastMessage.created_at)).getTime() : 0}&mint=${nftMint}&publicKey=${publicKey}&clientGeneratedUuid=${clientGeneratedUuid}`,\n    {\n      method: \"GET\",\n      headers: {\n        ...getAuthHeader(jwt)\n      }\n    }\n  );\n  const json = await response.json();\n  const chats = (json == null ? void 0 : json.chats) || [];\n  SignalingManager.getInstance().onUpdateRecoil({\n    type: \"chat\",\n    payload: {\n      uuid,\n      room,\n      type,\n      chats: chats.map((chat) => ({\n        ...chat,\n        direction: uuid === chat.uuid ? \"send\" : \"recv\",\n        received: true,\n        from_http_server: 1\n      }))\n    }\n  });\n  await bulkAddChats(\n    uuid,\n    chats.map((chat) => ({\n      ...chat,\n      direction: uuid === chat.uuid ? \"send\" : \"recv\",\n      received: true,\n      from_http_server: 1\n    }))\n  );\n};\nexport {\n  refreshIndividualChatsFor\n};\n//# sourceMappingURL=refreshIndividualChatsFor.js.map\n","import { BACKEND_API_URL } from \"@coral-xyz/common\";\nimport {\n  bulkAddChats,\n  latestReceivedUpdate,\n  processMessageUpdates\n} from \"@coral-xyz/db\";\nimport { getAuthHeader } from \"./getAuthHeader\";\nimport { SignalingManager } from \"./SignalingManager\";\nconst refreshUpdatesFor = async (uuid, room, type, nftMint, publicKey, jwt) => {\n  const lastUpdate = await latestReceivedUpdate(uuid, room.toString(), type);\n  const response = await fetch(\n    `${BACKEND_API_URL}/chat/updates?room=${room}&type=${type}&lastSeenUpdate=${(lastUpdate == null ? void 0 : lastUpdate.last_received_update_id) || 0}&mint=${nftMint}&publicKey=${publicKey}&updatesSinceTimestamp=${(lastUpdate == null ? void 0 : lastUpdate.last_local_reset_time) || 0}`,\n    {\n      method: \"GET\",\n      headers: {\n        ...getAuthHeader(jwt)\n      }\n    }\n  );\n  const json = await response.json();\n  const updates = (json == null ? void 0 : json.updates) || [];\n  const processedUpdates = await processMessageUpdates(uuid, updates);\n  SignalingManager.getInstance().onUpdateRecoil({\n    type: \"chat\",\n    payload: {\n      uuid,\n      room,\n      type,\n      chats: processedUpdates.map((chat) => ({\n        ...chat,\n        direction: uuid === chat.uuid ? \"send\" : \"recv\"\n      }))\n    }\n  });\n  await bulkAddChats(\n    uuid,\n    processedUpdates.map((chat) => ({\n      ...chat,\n      direction: uuid === chat.uuid ? \"send\" : \"recv\"\n    }))\n  );\n};\nexport {\n  refreshUpdatesFor\n};\n//# sourceMappingURL=refreshUpdatesFor.js.map\n","import { NEW_COLORS } from \"@coral-xyz/common\";\nimport { useChats, useUser } from \"@coral-xyz/recoil\";\nimport { useUsersMetadata } from \"./useUsersMetadata\";\nconst useChatsWithMetadata = ({\n  room,\n  type\n}) => {\n  const { uuid } = useUser();\n  const chats = useChats({ uuid, room, type });\n  const userIds = (chats == null ? void 0 : chats.map((chat) => chat.uuid)) || [];\n  chats == null ? void 0 : chats.forEach((chat) => {\n    const taggedUserIds = getAllUserIdsInMessage(chat.message);\n    if (chat.parent_message_author_uuid) {\n      userIds.push(chat.parent_message_author_uuid);\n    }\n    taggedUserIds.forEach((x) => userIds.push(x));\n  });\n  const uniqueUserIds = userIds.filter((x, index) => userIds.indexOf(x) === index).filter((x) => x);\n  const users = useUsersMetadata({ remoteUserIds: uniqueUserIds });\n  const colorIndexMap = /* @__PURE__ */ new Map();\n  if (uniqueUserIds.length === 2) {\n    const [userId1, userId2] = uniqueUserIds;\n    if (haveSameColor(users[userId1], users[userId2])) {\n      const newColorIndex = (users[userId1].colorIndex + 1) % NEW_COLORS.length;\n      colorIndexMap.set(userId2, newColorIndex);\n    }\n  }\n  return {\n    chats: chats.map((chat) => {\n      var _a, _b, _c, _d, _e;\n      return {\n        ...chat,\n        image: ((_a = users[chat.uuid]) == null ? void 0 : _a.image) || \"\",\n        username: ((_b = users[chat.uuid]) == null ? void 0 : _b.username) || \"\",\n        color: (_c = users[chat.uuid]) == null ? void 0 : _c.color,\n        colorIndex: colorIndexMap.get(chat.uuid) || ((_d = users[chat.uuid]) == null ? void 0 : _d.colorIndex),\n        parent_message_author_username: (_e = users[chat.parent_message_author_uuid]) == null ? void 0 : _e.username\n      };\n    }),\n    usersMetadata: users\n  };\n};\nfunction haveSameColor(user1, user2) {\n  return user1 && user2 && user1.colorIndex === user2.colorIndex;\n}\nfunction getAllUserIdsInMessage(message) {\n  const userIds = [];\n  for (let i = 0; i < message.length; i++) {\n    if (message[i] === \"<\" && message[i + 1] === \"@\") {\n      while (i < message.length && message[i] !== \"|\") {\n        i++;\n      }\n      i++;\n      i++;\n      let userId = \"\";\n      while (i < message.length && message[i] !== \">\") {\n        userId += message[i];\n        i++;\n      }\n      if (i !== message.length) {\n        userIds.push(userId);\n      }\n    }\n  }\n  return userIds;\n}\nexport {\n  useChatsWithMetadata\n};\n//# sourceMappingURL=useChatsWithMetadata.js.map\n","import { useEffect } from \"react\";\nimport {\n  BACKEND_API_URL,\n  getRandomColor,\n  getRandomColorIndex\n} from \"@coral-xyz/common\";\nimport { bulkAddUsers } from \"@coral-xyz/db\";\nimport { remoteUsersMetadata, useUser } from \"@coral-xyz/recoil\";\nimport { useRecoilState } from \"recoil\";\nfunction useUserMetadata({ remoteUserId }) {\n  const { uuid } = useUser();\n  const [userMetadata, setUserMetadata] = useRecoilState(\n    remoteUsersMetadata({ remoteUserId, uuid })\n  );\n  const refreshUserMetadata = async () => {\n    try {\n      const response = await fetch(`${BACKEND_API_URL}/users/metadata`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          uuids: [remoteUserId]\n        })\n      });\n      const json = await response.json();\n      const color = getRandomColor();\n      const colorIndex = getRandomColorIndex();\n      setUserMetadata({\n        username: json.users[0].username,\n        image: json.users[0].image,\n        loading: false,\n        color,\n        colorIndex\n      });\n      bulkAddUsers(uuid, [\n        {\n          uuid: remoteUserId,\n          username: json.users[0].username,\n          image: json.users[0].image,\n          color,\n          colorIndex\n        }\n      ]);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  useEffect(() => {\n    if (remoteUserId && !userMetadata.username) {\n      refreshUserMetadata();\n    }\n  }, [userMetadata, remoteUserId]);\n  return userMetadata;\n}\nexport {\n  useUserMetadata\n};\n//# sourceMappingURL=useUserMetadata.js.map\n","import { useEffect, useState } from \"react\";\nimport { refreshUsers } from \"@coral-xyz/db\";\nimport { useUpdateUsers, useUser, useUserMetadataMap } from \"@coral-xyz/recoil\";\nfunction useUsersMetadata({\n  remoteUserIds\n}) {\n  const { uuid } = useUser();\n  const [existingUsers, setExistingUsers] = useState([]);\n  const usersMetadata = useUserMetadataMap({ remoteUserIds, uuid });\n  const updateUsers = useUpdateUsers();\n  const sync = async () => {\n    const newIds = remoteUserIds.filter(\n      (x) => !Object.keys(usersMetadata).includes(x)\n    );\n    if (newIds.length) {\n      const newUsersMetadata = await refreshUsers(uuid, newIds);\n      if (newUsersMetadata) {\n        const newUsersMetadataMap = {};\n        newUsersMetadata == null ? void 0 : newUsersMetadata.forEach((x) => newUsersMetadataMap[x.uuid] = x);\n        await updateUsers({ uuid, users: newUsersMetadataMap });\n      }\n    }\n  };\n  useEffect(() => {\n    if (JSON.stringify(remoteUserIds) === JSON.stringify(existingUsers)) {\n      return;\n    }\n    setExistingUsers(remoteUserIds);\n    sync();\n  }, [remoteUserIds, existingUsers]);\n  return usersMetadata;\n}\nexport {\n  useUsersMetadata\n};\n//# sourceMappingURL=useUsersMetadata.js.map\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":""}